00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 8:18:46 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 000021EE             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 00002276             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 000023CF             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 0000228D             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 000023CF             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 0000230E            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 10BA                109          BRA     END
000010F8                           110  
000010F8  43F9 00002348            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 10AA                114          BRA     END
00001108                           115  
00001108  43F9 0000236E            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 109A                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  244B                     124          MOVE.L  A3,A2               *Set current address to start address
0000111A  1A3C 0000                125          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000111E                           126  
0000111E                           127  RSTEP                               *RSTEP: 
0000111E  381A                     128          MOVE.W  (A2)+,D4
00001120  340A                     129          MOVE.W  A2,D2
00001122  5542                     130          SUBQ.W  #2,D2
00001124                           131          
00001124  48E7 0400                132          MOVEM.L D5,-(SP)
00001128  1A3C 0000                133          MOVE.B  #0,D5
0000112C  4EB9 0000117A            134          JSR     HEXOUT              *Run printing operation for HEX address
00001132  4CDF 0020                135          MOVEM.L (SP)+,D5
00001136                           136          
00001136  43F9 000023A9            137          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000113C  103C 000E                138          MOVE.B  #14,D0
00001140  4E4F                     139          TRAP    #15
00001142                           140          
00001142  48E7 7F0F                141          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001146  4EB9 0000136C            142          JSR     DISASM              *Run disassembly for current machine code
0000114C  4CDF F0FE                143          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001150                           144          
00001150  5205                     145          ADDQ.B  #1,D5       *Increment counter by 1
00001152  BA3C 0020                146          CMP.B   #32,D5      *Check if we reached 32 lines
00001156  6700 0016                147          BEQ     RPAUSE      *Branch to pausing code
0000115A                           148          
0000115A  43F9 000023A2            149          LEA     LB,A1       *Print line break
00001160  103C 000E                150          MOVE.B  #14,D0      
00001164  4E4F                     151          TRAP    #15
00001166                           152          
00001166                           153  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001166  B9CA                     154          CMP.L   A2,A4       *Check if we reached the end address
00001168  6D00 1018                155          BLT     DSEOF       *End loop if so
0000116C  60B0                     156          BRA     RSTEP       *Or else continue the loop
0000116E                           157          
0000116E                           158  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000116E  1A3C 0000                159          MOVE.B  #0,D5       * Reset D5 counter
00001172  103C 0005                160          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001176  4E4F                     161          TRAP    #15         * Only used for waiting for user to hit ENTER
00001178  60EC                     162          BRA     RCONT       *Continue with READLN loop
0000117A                           163  
0000117A                           164  *--------------------------------------------------------------------------------------------------
0000117A                           165  
0000117A                           166  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000117A  103C 0006                167          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000117E  163C 0008                168          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001182                           169          
00001182                           170  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001182  E99A                     171          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001184  2202                     172          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001186  0281 0000000F            173          ANDI.L  #$F,D1      * Filter to the right four bits
0000118C  B23C 000A                174          CMP.B   #10,D1      *Distinguish between number and letter
00001190  6D00 000A                175          BLT     HNUM        *Branch to number handling, or continue to letter handling
00001194                           176          
00001194                           177  HHEX                        *HHEX: Handle letters from HEXOUT for loop
00001194  0601 0037                178          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001198  6000 0006                179          BRA     HSTEP2      *Branch to step 2 of the iteration
0000119C                           180  
0000119C                           181  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
0000119C  0601 0030                182          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A0                           183  
000011A0                           184  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011A0  5303                     185          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011A2                           186          
000011A2  B205                     187          CMP.B   D5,D1
000011A4  6700 0004                188          BEQ     HSKIP2
000011A8                           189          
000011A8  4E4F                     190          TRAP #15            *Will print the ASCII value stored in D1
000011AA  0C03 0000                191  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011AE  6700 0010                192          BEQ     HDONE       *End loop if done
000011B2                           193          
000011B2  B23C 0030                194          CMP.B   #48,D1
000011B6  6700 0006                195          BEQ     HSKIP3
000011BA                           196          
000011BA  1A3C 0000                197          MOVE.B  #0,D5
000011BE                           198          
000011BE  60C2                     199  HSKIP3  BRA     HSTEP       *Or else continue loop
000011C0                           200          
000011C0  4E75                     201  HDONE   RTS
000011C2                           202  
000011C2                           203  
000011C2                           204  *--------------------------------------------------------------------------------------------------
000011C2                           205  
000011C2  103C 000E                206  SIZE    MOVE.B  #14,D0
000011C6  BA3C 0000                207          CMP.B   #%00,D5
000011CA  6700 001E                208          BEQ     SIZEB
000011CE  BA3C 0001                209          CMP.B   #%01,D5
000011D2  6700 0020                210          BEQ     SIZEW
000011D6  BA3C 0002                211          CMP.B   #%10,D5
000011DA  6700 0022                212          BEQ     SIZEL
000011DE  BA3C 0003                213          CMP.B   #%11,D5
000011E2  6700 0010                214          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011E6  6000 0022                215          BRA     SRET
000011EA                           216          
000011EA  43F9 000023FF            217  SIZEB   LEA     MODEB,A1
000011F0  6000 0016                218          BRA     SDONE
000011F4                           219  
000011F4  43F9 00002402            220  SIZEW   LEA     MODEW,A1
000011FA  6000 000C                221          BRA     SDONE
000011FE                           222  
000011FE  43F9 00002405            223  SIZEL   LEA     MODEL,A1
00001204  6000 0002                224          BRA     SDONE
00001208                           225  
00001208  4E4F                     226  SDONE   TRAP    #15
0000120A                           227  
0000120A  4E75                     228  SRET    RTS
0000120C                           229  
0000120C                           230  *-----------------------------------------------------------------------------------
0000120C                           231  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           232  *uses d1, d0, and a1
0000120C                           233  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           234  *uses d1, d0, and a1
0000120C                           235  ADDRMODEALL
0000120C                           236  *comparisons
0000120C  B67C 0000                237  AM000   CMP     #%000,D3
00001210  6600 001A                238          BNE     AM001
00001214  43F9 0000240A            239          LEA     VALD,A1
0000121A  4E4F                     240          TRAP    #15
0000121C  1206                     241          MOVE.B  D6,D1       *moving ea num to d1 to print
0000121E  103C 0003                242          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001222  4E4F                     243          TRAP    #15         *printing register number
00001224  103C 000E                244          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001228  6000 013C                245          BRA     AMEND
0000122C                           246  
0000122C                           247          
0000122C  B67C 0001                248  AM001   CMP     #%001,D3
00001230  6600 0022                249          BNE     AM010
00001234  BA7C 0000                250          CMP     #00,D5
00001238  6700 0F1A                251          BEQ     DSERR
0000123C  43F9 00002408            252          LEA     VALA,A1
00001242  4E4F                     253          TRAP    #15
00001244  1206                     254          MOVE.B  D6,D1       *moving ea num to d1 to print
00001246  103C 0003                255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124A  4E4F                     256          TRAP    #15         *printing register number
0000124C  103C 000E                257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001250  6000 0114                258          BRA     AMEND
00001254                           259  
00001254  B67C 0002                260  AM010   CMP     #%010,D3
00001258  6600 002A                261          BNE     AM011
0000125C  43F9 00002414            262          LEA     OPENPTR,A1
00001262  4E4F                     263          TRAP    #15
00001264  43F9 00002408            264          LEA     VALA,A1
0000126A  4E4F                     265          TRAP    #15
0000126C  1206                     266          MOVE.B  D6,D1       *moving ea num to d1 to print
0000126E  103C 0003                267          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001272  4E4F                     268          TRAP    #15         *printing register number
00001274  103C 000E                269          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001278  43F9 00002419            270          LEA     CLOSEPTR,A1
0000127E  4E4F                     271          TRAP    #15
00001280  6000 00E4                272          BRA     AMEND
00001284                           273  
00001284  B67C 0003                274  AM011   CMP     #%011,D3
00001288  6600 002A                275          BNE     AM100
0000128C  43F9 00002414            276          LEA     OPENPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  43F9 00002408            278          LEA     VALA,A1
0000129A  4E4F                     279          TRAP    #15
0000129C  1206                     280          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129E  103C 0003                281          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012A2  4E4F                     282          TRAP    #15         *printing register number
000012A4  103C 000E                283          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A8  43F9 0000241B            284          LEA     CLOSEIPTR,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  6000 00B4                286          BRA     AMEND
000012B4                           287  
000012B4  B67C 0004                288  AM100   CMP     #%100,D3
000012B8  6600 002A                289          BNE     AM111
000012BC  43F9 00002416            290          LEA     OPENDPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  43F9 00002408            292          LEA     VALA,A1
000012CA  4E4F                     293          TRAP    #15
000012CC  1206                     294          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CE  103C 0003                295          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012D2  4E4F                     296          TRAP    #15         *printing register number
000012D4  103C 000E                297          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D8  43F9 00002419            298          LEA     CLOSEPTR,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  6000 0084                300          BRA     AMEND
000012E4                           301  
000012E4  B67C 0007                302  AM111   CMP     #%111,D3
000012E8  6600 0E6A                303          BNE     DSERR
000012EC  BC7C 0000                304          CMP     #%000,D6
000012F0  6600 0020                305          BNE     AM111001
000012F4  43F9 00002420            306          LEA     DOLLAR,A1
000012FA  4E4F                     307          TRAP    #15
000012FC  341A                     308          MOVE.W  (A2)+,D2
000012FE  48E7 0400                309          MOVEM.L D5,-(SP)    
00001302  1A3C 0030                310          MOVE.B  #48,D5
00001306  4EB8 117A                311          JSR     HEXOUT
0000130A  4CDF 0020                312          MOVEM.L (SP)+,D5
0000130E  6000 0056                313          BRA     AMEND
00001312                           314          
00001312                           315  AM111001
00001312  BC7C 0001                316          CMP     #%001,D6
00001316  6600 0020                317          BNE     AM111100
0000131A  43F9 00002420            318          LEA     DOLLAR,A1
00001320  4E4F                     319          TRAP    #15
00001322  241A                     320          MOVE.L  (A2)+,D2
00001324  48E7 0400                321          MOVEM.L D5,-(SP)
00001328  1A3C 0030                322          MOVE.B  #48,D5
0000132C  4EB8 117A                323          JSR     HEXOUT
00001330  4CDF 0020                324          MOVEM.L (SP)+,D5
00001334  6000 0030                325          BRA     AMEND
00001338                           326          
00001338                           327  AM111100
00001338  BC7C 0004                328          CMP     #%100,D6
0000133C  6600 0E16                329          BNE     DSERR
00001340  43F9 0000240C            330          LEA     VALN,A1
00001346  4E4F                     331          TRAP    #15
00001348  341A                     332          MOVE.W  (A2)+,D2
0000134A  48E7 0400                333          MOVEM.L D5,-(SP)    
0000134E  103C 0003                334          MOVE.B  #3,D0
00001352  3202                     335          MOVE.W  D2,D1
00001354  4E4F                     336          TRAP    #15
00001356  103C 000E                337          MOVE.B  #14,D0
0000135A  4CDF 0020                338          MOVEM.L (SP)+,D5
0000135E  323C 0000                339          MOVE.W  #0,D1
00001362  6000 0002                340          BRA     AMEND
00001366                           341          
00001366  103C 000E                342  AMEND   MOVE.B  #14,D0
0000136A  4E75                     343          RTS
0000136C                           344  
0000136C                           345  *--------------------------------------------------------------------------------------------------
0000136C                           346  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000136C                           347  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000136C                           348  
0000136C                           349  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000136C                           350  
0000136C                           351  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000136C                           352  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000136C                           353  
0000136C                           354  DISASM                      *DISASM: Disassemble a machine code
0000136C  E34C                     355          LSL.W   #1,D4       * Tier 0 binary search
0000136E  6500 0010                356          BCS     DS1
00001372  6000 0002                357          BRA     DS0
00001376                           358  
00001376                           359  *DS Tier 1 ----------------------------------------------------------------------------------------
00001376                           360  
00001376                           361  DS0                         *DS0: Tier 1 binary search for 0 side
00001376  E34C                     362          LSL.W   #1,D4       
00001378  6500 018A                363          BCS     DS01
0000137C  6000 000C                364          BRA     DS00
00001380                           365  
00001380                           366  DS1                         *DS1: Tier 1 binary search for 1 side
00001380  E34C                     367          LSL.W   #1,D4       
00001382  6500 0194                368          BCS     DS11
00001386  6000 0186                369          BRA     DS10
0000138A                           370  
0000138A                           371  DS00                        *DS00: Disassembly processing for 00 prefix
0000138A  E55C                     372          ROL.W   #2,D4       
0000138C  1A04                     373          MOVE.B  D4,D5
0000138E  0205 0003                374          ANDI.B  #%11,D5
00001392  0C05 0000                375          CMPI.B  #%00,D5
00001396  6700 0006                376          BEQ     DAND
0000139A  6000 00A2                377          BRA     DMOVE2
0000139E                           378  
0000139E  E95C                     379  DAND    ROL.W   #4,D4
000013A0  1A04                     380          MOVE.B  D4,D5
000013A2  0205 0002                381          ANDI.B  #%0010,D5
000013A6  0C05 0002                382          CMPI.B  #%0010,D5
000013AA  6600 0DB8                383          BNE     DSERRINS
000013AE                           384          
000013AE  E55C                     385          ROL.W   #2,D4
000013B0  1A04                     386          MOVE.B  D4,D5
000013B2  0205 0007                387          ANDI.B  #%111,D5
000013B6                           388          
000013B6  E75C                     389          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013B8  1604                     390          MOVE.B  D4,D3           ; Move the byte in D4 to D5
000013BA  0203 0007                391          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
000013BE                           392          
000013BE  E75C                     393          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013C0  1C04                     394          MOVE.B  D4,D6           ; Move the byte in D4 to D5
000013C2  0206 0007                395          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
000013C6                           396          
000013C6  43F9 0000240A            397          LEA     VALD,A1         ; Load effective address of Dn
000013CC  4E4F                     398          TRAP    #15             ; Print Dn
000013CE  1E05                     399          MOVE.B  D5,D7           ; Store the register number for later use
000013D0                           400  
000013D0                           401          
000013D0  BA3C 0000                402          CMP.B   #%000,D5        ; Compare with byte size
000013D4  6700 0016                403          BEQ     DANDB
000013D8  BA3C 0001                404          CMP.B   #%001,D5        ; Compare with word size
000013DC  6700 0022                405          BEQ     DANDW
000013E0  BA3C 0002                406          CMP.B   #%010,D5        ; Compare with long size
000013E4  6700 002E                407          BEQ     DANDL
000013E8                           408          
000013E8  6000 0D96                409          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013EC                           410  
000013EC  43F9 0000243B            411  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F2  4E4F                     412          TRAP    #15             ; Print ANDM string
000013F4  43F9 000023FF            413          LEA     MODEB,A1        ; Load effective address of MODEB string
000013FA  4E4F                     414          TRAP    #15             ; Print MODEB string
000013FC  6000 002A                415          BRA     DANDA           ; Branch to addressing mode parsing
00001400                           416  
00001400  43F9 0000243B            417  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001406  4E4F                     418          TRAP    #15             ; Print ANDM string
00001408  43F9 00002402            419          LEA     MODEW,A1        ; Load effective address of MODEW string
0000140E  4E4F                     420          TRAP    #15             ; Print MODEW string
00001410  6000 0016                421          BRA     DANDA           ; Branch to addressing mode parsing
00001414                           422  
00001414  43F9 0000243B            423  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000141A  4E4F                     424          TRAP    #15             ; Print ANDM string
0000141C  43F9 00002405            425          LEA     MODEL,A1        ; Load effective address of MODEL string
00001422  4E4F                     426          TRAP    #15             ; Print MODEL string
00001424  6000 0002                427          BRA     DANDA           ; Branch to addressing mode parsing
00001428                           428  
00001428  43F9 000023B5            429  DANDA   LEA     SM5,A1
0000142E  4E4F                     430          TRAP    #15
00001430                           431  
00001430  0204 0007                432          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001434  1C04                     433          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001436                           434  
00001436  4EB8 120C                435          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
0000143A                           436  
0000143A  6000 0D44                437          BRA     DSEND                 
0000143E                           438  
0000143E                           439  
0000143E                           440          
0000143E                           441  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
0000143E  4E71                     442  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001440                           443          *size in d5 from above processing
00001440  43F9 0000242A            444          LEA     MOVEM,A1
00001446  4E4F                     445          TRAP    #15
00001448                           446                  
00001448                           447          *dest reg to d7
00001448  E75C                     448          ROL.W   #3,D4
0000144A  1E04                     449          MOVE.B  D4,D7
0000144C  CE3C 0007                450          AND.B   #%111,D7
00001450                           451          
00001450                           452          *dest mode to d3: An means MOVEA
00001450  E75C                     453          ROL.W   #3,D4
00001452  1604                     454          MOVE.B  D4,D3
00001454  C63C 0007                455          AND.B   #%111,D3
00001458  3C43                     456          MOVE.W  D3,A6
0000145A                           457          
0000145A  B67C 0001                458          CMP     #%001,D3
0000145E  6700 0082                459          BEQ     DMOVEA
00001462                           460  MOVECONT
00001462                           461  *printing size then first addressing moode, then comma
00001462                           462  *size is different for move
00001462  103C 000E                463  MSIZE   MOVE.B  #14,D0
00001466  BA3C 0001                464          CMP.B   #%01,D5
0000146A  6700 001E                465          BEQ     MSIZEB
0000146E  BA3C 0003                466          CMP.B   #%11,D5
00001472  6700 0020                467          BEQ     MSIZEW
00001476  BA3C 0002                468          CMP.B   #%10,D5
0000147A  6700 0022                469          BEQ     MSIZEL
0000147E  BA3C 0003                470          CMP.B   #%11,D5
00001482  6700 0010                471          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001486  6000 0CCC                472          BRA     DSERR
0000148A                           473          
0000148A  43F9 000023FF            474  MSIZEB  LEA     MODEB,A1
00001490  6000 0016                475          BRA     MSDONE
00001494                           476  
00001494  43F9 00002402            477  MSIZEW  LEA     MODEW,A1
0000149A  6000 000C                478          BRA     MSDONE
0000149E                           479  
0000149E  43F9 00002405            480  MSIZEL  LEA     MODEL,A1
000014A4  6000 0002                481          BRA     MSDONE
000014A8                           482  
000014A8  4E4F                     483  MSDONE  TRAP    #15
000014AA                           484  
000014AA  43F9 000023AC            485          LEA     SM3,A1
000014B0  4E4F                     486          TRAP    #15
000014B2                           487          
000014B2                           488          *source mode to d3
000014B2  E75C                     489          ROL.W   #3,D4
000014B4  1604                     490          MOVE.B  D4,D3
000014B6  C63C 0007                491          AND.B   #%111,D3
000014BA                           492          
000014BA                           493          *source reg to d6
000014BA  E75C                     494          ROL.W   #3,D4
000014BC  1C04                     495          MOVE.B  D4,D6
000014BE  CC3C 0007                496          AND.B   #%111,D6
000014C2                           497          
000014C2  4EB8 120C                498          JSR     ADDRMODEALL
000014C6  B67C 0001                499          CMP     #%001,D3
000014CA  6700 002C                500          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014CE  43F9 0000241E            501          LEA     COMMA,A1
000014D4  4E4F                     502          TRAP    #15
000014D6  1C07                     503          MOVE.B  D7,D6
000014D8  360E                     504          MOVE.W  A6,D3
000014DA  4EB8 120C                505          JSR     ADDRMODEALL
000014DE  6000 0CA0                506          BRA     DSEND
000014E2                           507  
000014E2  4E71                     508  DMOVEA  NOP
000014E4  BA7C 0001                509          CMP     #%01,D5     *if size is byte, err
000014E8  6700 0C6A                510          BEQ     DSERR
000014EC  43F9 00002408            511          LEA     VALA,A1        *else, print A and return
000014F2  4E4F                     512          TRAP    #15
000014F4  6000 FF6C                513          BRA     MOVECONT
000014F8                           514  
000014F8                           515  MOVEERRCHECK
000014F8  BA7C 0001                516          CMP     #%01,D5
000014FC  6700 0C56                517          BEQ     DSERR
00001500  6000 0C7E                518          BRA     DSEND
00001504                           519  
00001504                           520          
00001504                           521  
00001504                           522  *DS Tier 2 ----------------------------------------------------------------------------------------
00001504                           523  
00001504                           524  DS01                        *DS01: Tier 2 binary search for 01 side
00001504  E34C                     525          LSL.W   #1,D4
00001506  6500 0024                526          BCS     DS011
0000150A  6000 0016                527          BRA     DS010
0000150E                           528  
0000150E                           529  DS10                        *DS10: Tier 2 binary search for 10 side
0000150E  E34C                     530          LSL.W   #1,D4
00001510  6500 002E                531          BCS     DS101
00001514  6000 0020                532          BRA     DS100
00001518                           533  
00001518                           534  DS11                        *DS11: Tier 2 binary search for 11 side
00001518  E34C                     535          LSL.W   #1,D4
0000151A  6500 0038                536          BCS     DS111
0000151E  6000 002A                537          BRA     DS110
00001522                           538  
00001522                           539  *DS Tier 3 ----------------------------------------------------------------------------------------
00001522                           540  
00001522                           541  DS010                       *DS010: Tier 3 binary search for 010 side
00001522  E34C                     542          LSL.W   #1,D4
00001524  6500 0552                543          BCS     DS0101
00001528  6000 0034                544          BRA     DS0100
0000152C                           545  
0000152C                           546  DS011                       *DS011: Tier 3 binary search for 011 side
0000152C  E34C                     547          LSL.W   #1,D4
0000152E  6500 0736                548          BCS     DS0111
00001532  6000 05BE                549          BRA     DS0110
00001536                           550  
00001536                           551  DS100                       *DS100: Tier 3 binary search for 100 side
00001536  E34C                     552          LSL.W   #1,D4
00001538  6500 0872                553          BCS     DS1001
0000153C  6000 0792                554          BRA     DS1000
00001540                           555  
00001540                           556  DS101                       *DS101: Tier 3 binary search for 101 side
00001540  E34C                     557          LSL.W   #1,D4
00001542  6500 0900                558          BCS     DS1011
00001546  6000 08F6                559          BRA     DS1010
0000154A                           560  
0000154A                           561  DS110                       *DS110: Tier 3 binary search for 110 side
0000154A  E34C                     562          LSL.W   #1,D4
0000154C  6500 0902                563          BCS     DS1101
00001550  6000 08F8                564          BRA     DS1100
00001554                           565  
00001554                           566  DS111                       *DS111: Tier 3 binary search for 111 side
00001554  E34C                     567          LSL.W   #1,D4
00001556  6500 0BF6                568          BCS     DS1111
0000155A  6000 09DC                569          BRA     DS1110
0000155E                           570  
0000155E                           571  *DS Tier 4 ----------------------------------------------------------------------------------------
0000155E                           572  
0000155E                           573  DS0100                      *DS0100: Processing for 0100 prefix
0000155E  0C44 E710                574          CMPI.W  #%1110011100010000,D4
00001562  6700 0042                575          BEQ     DNOP
00001566  0C44 E750                576          CMPI.W  #%1110011101010000,D4
0000156A  6700 022C                577          BEQ     DRTS
0000156E                           578          
0000156E  3404                     579          MOVE.W  D4,D2
00001570  0242 1C00                580          ANDI.W  #%0001110000000000,D2
00001574  0C42 1C00                581          CMPI.W  #%0001110000000000,D2
00001578  6700 022A                582          BEQ     DLEA
0000157C                           583          
0000157C  3404                     584          MOVE.W  D4,D2
0000157E  0242 B800                585          ANDI.W  #%1011100000000000,D2
00001582  0C42 8800                586          CMPI.W  #%1000100000000000,D2
00001586  6700 032A                587          BEQ     DMOVEM
0000158A                           588          
0000158A  E95C                     589          ROL.W   #4,D4
0000158C  1404                     590          MOVE.B  D4,D2
0000158E  0202 000F                591          ANDI.B  #%1111,D2
00001592                           592          
00001592  B43C 000E                593          CMP.B   #%1110,D2
00001596  6700 014A                594          BEQ     DJSR
0000159A                           595          
0000159A  B43C 0006                596          CMP.B   #%0110,D2
0000159E  6700 0012                597          BEQ     DNOT
000015A2                           598          
000015A2  6000 0BC0                599          BRA     DSERRINS
000015A6                           600  
000015A6  43F9 00002426            601  DNOP    LEA     NOPM,A1
000015AC  4E4F                     602          TRAP    #15
000015AE  6000 0BD0                603          BRA     DSEND
000015B2                           604          
000015B2  E55C                     605  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015B4  1A04                     606          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015B6  0205 0003                607          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015BA                           608  
000015BA  BA3C 0000                609          CMP.B   #%00,D5         ; compare with byte size
000015BE  6700 0016                610          BEQ     DNOTB
000015C2  BA3C 0001                611          CMP.B   #%01,D5         ; compare with word size
000015C6  6700 0022                612          BEQ     DNOTW
000015CA  BA3C 0002                613          CMP.B   #%10,D5         ; compare with long size
000015CE  6700 002E                614          BEQ     DNOTL
000015D2                           615          
000015D2  6000 0BAC                616          BRA     DSEND           ; branch to DSEND in case of invalid code
000015D6                           617  
000015D6  43F9 00002442            618  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015DC  4E4F                     619          TRAP    #15             ; print NOTM string
000015DE  43F9 000023FF            620          LEA     MODEB,A1        ; load effective address of MODEB string
000015E4  4E4F                     621          TRAP    #15             ; print MODEB string
000015E6  6000 002A                622          BRA     DNOTA           ; branch to addressing mode parsing
000015EA                           623  
000015EA  43F9 00002442            624  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
000015F0  4E4F                     625          TRAP    #15             ; print NOTM string
000015F2  43F9 00002402            626          LEA     MODEW,A1        ; load effective address of MODEW string
000015F8  4E4F                     627          TRAP    #15             ; print MODEW string
000015FA  6000 0016                628          BRA     DNOTA           ; branch to addressing mode parsing
000015FE                           629  
000015FE  43F9 00002442            630  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001604  4E4F                     631          TRAP    #15             ; print NOTM string
00001606  43F9 00002405            632          LEA     MODEL,A1        ; load effective address of MODEL string
0000160C  4E4F                     633          TRAP    #15             ; print MODEL string
0000160E  6000 0002                634          BRA     DNOTA           ; branch to addressing mode parsing
00001612                           635  
00001612  ED5C                     636  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001614  1204                     637          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001616  0201 003F                638          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000161A                           639  
0000161A                           640          ; Now process addressing mode and register based on the value in D1
0000161A                           641  
0000161A  1A01                     642          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000161C  0205 0007                643          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001620  6700 0026                644          BEQ     DREG            ; If it is direct register mode
00001624  BA3C 0002                645          CMP.B   #%010,D5        ; Compare with An
00001628  6700 0036                646          BEQ     ADREG
0000162C  BA3C 0003                647          CMP.B   #%011,D5        ; Compare with (An)+
00001630  6700 0046                648          BEQ     ADREGP
00001634  BA3C 0004                649          CMP.B   #%100,D5        ; Compare with -(An)
00001638  6700 005E                650          BEQ     MADREG
0000163C  BA3C 0007                651          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001640  6700 007E                652          BEQ     EXT
00001644                           653              
00001644  6000 0B3A                654          BRA     DSEND
00001648                           655  
00001648  1C01                     656  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000164A  0206 0007                657          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
0000164E  DC39 0000240A            658          ADD.B   VALD,D6         ; Convert register number to ASCII
00001654  43F9 0000240A            659          LEA     VALD,A1         ; Load effective address of Dn
0000165A  4E4F                     660          TRAP    #15             ; Print Dn
0000165C  6000 0B22                661          BRA     DSEND
00001660                           662  
00001660  1C01                     663  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001662  0206 0007                664          ANDI.B  #%111,D6
00001666  DC39 00002408            665          ADD.B   VALA,D6
0000166C  43F9 00002408            666          LEA     VALA,A1
00001672  4E4F                     667          TRAP    #15
00001674  6000 0B0A                668          BRA     DSEND
00001678                           669  
00001678  1C01                     670  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
0000167A  0206 0007                671          ANDI.B  #%111,D6
0000167E  DC39 00002408            672          ADD.B   VALA,D6
00001684  43F9 00002408            673          LEA     VALA,A1
0000168A  4E4F                     674          TRAP    #15
0000168C  43F9 0000241B            675          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001692  4E4F                     676          TRAP    #15             ; Print )+
00001694  6000 0AEA                677          BRA     DSEND
00001698                           678  
00001698  1C01                     679  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
0000169A  0206 0007                680          ANDI.B  #%111,D6
0000169E  DC39 00002408            681          ADD.B   VALA,D6
000016A4  43F9 00002416            682          LEA     OPENDPTR,A1     ; Load effective address of -(
000016AA  4E4F                     683          TRAP    #15             ; Print -(
000016AC  43F9 00002408            684          LEA     VALA,A1
000016B2  4E4F                     685          TRAP    #15
000016B4  43F9 00002419            686          LEA     CLOSEPTR,A1     ; Load effective address of )
000016BA  4E4F                     687          TRAP    #15             ; Print )
000016BC  6000 0AC2                688          BRA     DSEND
000016C0                           689  
000016C0  1C01                     690  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016C2  0206 0001                691          ANDI.B  #%1,D6
000016C6  6700 000E                692          BEQ     EXTW
000016CA  43F9 0000240C            693          LEA     VALN,A1         ; Load effective address of #
000016D0  4E4F                     694          TRAP    #15             ; Print #
000016D2  6000 0AAC                695          BRA     DSEND
000016D6                           696  
000016D6  43F9 0000240E            697  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016DC  4E4F                     698          TRAP    #15             ; Print 0
000016DE  6000 0AA0                699          BRA     DSEND
000016E2                           700  
000016E2                           701          
000016E2  E55C                     702  DJSR    ROL.W   #2,D4
000016E4  1404                     703          MOVE.B  D4,D2
000016E6  0202 0007                704          ANDI.B  #%111,D2
000016EA  0C02 0002                705          CMPI.B  #%10,D2
000016EE  6600 0A64                706          BNE     DSERR
000016F2                           707          
000016F2  43F9 00002467            708          LEA     JSRM,A1
000016F8  4E4F                     709          TRAP    #15
000016FA                           710          
000016FA  43F9 000023C2            711          LEA     SM7,A1
00001700  4E4F                     712          TRAP    #15
00001702                           713  
00001702  E75C                     714          ROL.W   #3,D4       * [D2] address mode
00001704  1404                     715          MOVE.B  D4,D2
00001706  0202 0007                716          ANDI.B  #%111,D2
0000170A                           717          
0000170A  E75C                     718          ROL.W   #3,D4       * [D1] address register
0000170C  1204                     719          MOVE.B  D4,D1
0000170E  0201 0007                720          ANDI.B  #%111,D1
00001712                           721          
00001712  0C02 0002                722          CMPI.B  #%010,D2
00001716  6700 001E                723          BEQ     DJSR_REG
0000171A                           724          
0000171A  0C02 0007                725          CMPI.B  #%111,D2
0000171E  6600 0A34                726          BNE     DSERR
00001722                           727          
00001722  0C01 0000                728          CMPI.B  #%000,D1
00001726  6700 0034                729          BEQ     DJSR_CUSW
0000172A                           730          
0000172A  0C01 0001                731          CMPI.B  #%001,D1
0000172E  6700 004A                732          BEQ     DJSR_CUSL
00001732                           733          
00001732  6000 0A4C                734          BRA     DSEND
00001736                           735          
00001736                           736          
00001736                           737          
00001736                           738  DJSR_REG        
00001736  43F9 00002414            739          LEA     OPENPTR,A1
0000173C  4E4F                     740          TRAP    #15
0000173E                           741          
0000173E  43F9 00002408            742          LEA     VALA,A1
00001744  4E4F                     743          TRAP    #15
00001746                           744          
00001746  103C 0003                745          MOVE.B  #3,D0
0000174A  4E4F                     746          TRAP    #15
0000174C  103C 000E                747          MOVE.B  #14,D0
00001750                           748          
00001750  43F9 00002419            749          LEA     CLOSEPTR,A1
00001756  4E4F                     750          TRAP    #15
00001758                           751          
00001758  6000 0A26                752          BRA     DSEND
0000175C                           753  
0000175C                           754          
0000175C                           755  DJSR_CUSW
0000175C  43F9 00002420            756          LEA     DOLLAR,A1
00001762  4E4F                     757          TRAP    #15
00001764  341A                     758          MOVE.W  (A2)+,D2
00001766  48E7 0400                759          MOVEM.L D5,-(SP)
0000176A  1A3C 0030                760          MOVE.B  #48,D5
0000176E  4EB8 117A                761          JSR     HEXOUT
00001772  4CDF 0020                762          MOVEM.L (SP)+,D5
00001776  6000 0A08                763          BRA     DSEND
0000177A                           764  
0000177A                           765  DJSR_CUSL
0000177A  43F9 00002420            766          LEA     DOLLAR,A1
00001780  4E4F                     767          TRAP    #15
00001782  241A                     768          MOVE.L  (A2)+,D2
00001784  48E7 0400                769          MOVEM.L D5,-(SP)
00001788  1A3C 0030                770          MOVE.B  #48,D5
0000178C  4EB8 117A                771          JSR     HEXOUT
00001790  4CDF 0020                772          MOVEM.L (SP)+,D5
00001794  6000 09EA                773          BRA     DSEND
00001798                           774          
00001798  43F9 0000246B            775  DRTS    LEA     RTSM,A1
0000179E  4E4F                     776          TRAP    #15
000017A0  6000 09DE                777          BRA     DSEND
000017A4                           778          
000017A4                           779          
000017A4                           780  DLEA    *printing
000017A4  43F9 00002437            781          LEA     LEAM,A1
000017AA  4E4F                     782          TRAP    #15
000017AC  43F9 000023C2            783          LEA     SM7,A1
000017B2  4E4F                     784          TRAP    #15
000017B4                           785          
000017B4                           786          *shifting out 111
000017B4  E75C                     787          ROL.W   #3,D4
000017B6                           788          
000017B6                           789          *getting destination register
000017B6  E75C                     790          ROL.W   #3,D4
000017B8  1404                     791          MOVE.B  D4,D2
000017BA  0202 0007                792          ANDI.B  #%111,D2
000017BE                           793          
000017BE                           794          *getting ea mode
000017BE  E75C                     795          ROL.W   #3,D4
000017C0  1604                     796          MOVE.B  D4,D3
000017C2  0203 0007                797          ANDI.B  #%111,D3
000017C6                           798          
000017C6  B63C 0002                799          CMP.B   #%010,D3
000017CA  6700 000E                800          BEQ     DLEAP
000017CE                           801          
000017CE  B63C 0007                802          CMP.B   #%111,D3
000017D2  6700 0006                803          BEQ     DLEAP
000017D6                           804          
000017D6  6000 099C                805          BRA     DSERREA
000017DA                           806          
000017DA                           807          *getting ea reg
000017DA  E75C                     808  DLEAP   ROL.W   #3,D4
000017DC  1C04                     809          MOVE.B  D4,D6
000017DE  0206 0007                810          ANDI.B  #%111,D6
000017E2                           811          
000017E2                           812          *printing
000017E2  4EB8 120C                813          JSR     ADDRMODEALL
000017E6                           814          
000017E6  43F9 0000241E            815          LEA     COMMA,A1
000017EC  4E4F                     816          TRAP    #15
000017EE  43F9 00002408            817          LEA     VALA,A1
000017F4  4E4F                     818          TRAP    #15
000017F6  103C 0003                819          MOVE.B  #3,D0
000017FA  1202                     820          MOVE.B  D2,D1
000017FC  4E4F                     821          TRAP    #15
000017FE  103C 000E                822          MOVE.B  #14,D0
00001802                           823          
00001802  6000 097C                824          BRA DSEND
00001806                           825          
00001806                           826  JSR010
00001806  B63C 0002                827          CMP.B   #%010,D3
0000180A  6600 002A                828          BNE     JSR111
0000180E  43F9 00002414            829          LEA     OPENPTR,A1
00001814  4E4F                     830          TRAP    #15
00001816  43F9 00002408            831          LEA     VALA,A1
0000181C  4E4F                     832          TRAP    #15
0000181E  103C 0003                833          MOVE.B  #3,D0
00001822  1206                     834          MOVE.B  D6,D1
00001824  4E4F                     835          TRAP    #15
00001826  103C 000E                836          MOVE.B  #14,D0
0000182A  43F9 00002419            837          LEA     CLOSEPTR,A1
00001830  4E4F                     838          TRAP    #15
00001832  6000 005E                839          BRA     JSRPRINT2
00001836                           840  JSR111
00001836  B63C 0007                841          CMP.B   #%111,D3
0000183A  6600 0918                842          BNE     DSERR
0000183E  BC3C 0000                843          CMP.B   #%000,D6
00001842  6600 0024                844          BNE     JSR111001
00001846  43F9 00002420            845          LEA     DOLLAR,A1
0000184C  4E4F                     846          TRAP    #15
0000184E  341A                     847          MOVE.W  (A2)+,D2
00001850  48E7 0400                848          MOVEM.L D5,-(SP)    
00001854  1A3C 0030                849          MOVE.B  #48,D5
00001858  4EB8 117A                850          JSR     HEXOUT
0000185C  4CDF 0020                851          MOVEM.L (SP)+,D5
00001860  103C 000E                852          MOVE.B  #14,D0
00001864  6000 002C                853          BRA     JSRPRINT2
00001868                           854          
00001868                           855  JSR111001
00001868  BC3C 0001                856          CMP.B   #%001,D6
0000186C  6600 08E6                857          BNE     DSERR
00001870  43F9 00002420            858          LEA     DOLLAR,A1
00001876  4E4F                     859          TRAP    #15
00001878  241A                     860          MOVE.L  (A2)+,D2
0000187A  48E7 0400                861          MOVEM.L D5,-(SP)
0000187E  1A3C 0030                862          MOVE.B  #48,D5
00001882  4EB8 117A                863          JSR     HEXOUT
00001886  4CDF 0020                864          MOVEM.L (SP)+,D5
0000188A  103C 000E                865          MOVE.B  #14,D0
0000188E  6000 0002                866          BRA     JSRPRINT2
00001892                           867          
00001892                           868  JSRPRINT2
00001892  43F9 0000241E            869          LEA     COMMA,A1
00001898  4E4F                     870          TRAP    #15
0000189A  43F9 00002408            871          LEA     VALA,A1
000018A0  4E4F                     872          TRAP    #15
000018A2  103C 0003                873          MOVE.B  #3,D0
000018A6  3207                     874          MOVE.W  D7,D1
000018A8  4E4F                     875          TRAP    #15
000018AA  103C 000E                876          MOVE.B  #14,D0
000018AE                           877          
000018AE  6000 08D0                878          BRA     DSEND
000018B2                           879          
000018B2                           880          
000018B2                           881  DMOVEM
000018B2                           882  *printing movem
000018B2  43F9 0000242A            883          LEA     MOVEM,A1
000018B8  4E4F                     884          TRAP    #15
000018BA  43F9 00002412            885          LEA     VALM,A1
000018C0  4E4F                     886          TRAP    #15
000018C2                           887          
000018C2                           888  *parsing initial bits
000018C2  E55C                     889          ROL.W   #2,D4
000018C4  1E04                     890          MOVE.B  D4,D7
000018C6  0207 0001                891          ANDI.B  #%1,D7      *getting dr field
000018CA                           892          
000018CA  E95C                     893          ROL.W   #4,D4
000018CC  1A04                     894          MOVE.B  D4,D5
000018CE  0205 0001                895          ANDI.B  #1,D5       *getting size field
000018D2                           896          
000018D2                           897          *printing size
000018D2  BA7C 0000                898          CMP     #0,D5
000018D6  6600 000E                899          BNE     MOVEML
000018DA  43F9 00002402            900          LEA     MODEW,A1
000018E0  4E4F                     901          TRAP    #15
000018E2  6000 000A                902          BRA     MOVEMEA
000018E6                           903  MOVEML        
000018E6  43F9 00002405            904          LEA     MODEL,A1
000018EC  4E4F                     905          TRAP    #15
000018EE                           906          
000018EE                           907  MOVEMEA   
000018EE  43F9 000023AC            908          LEA     SM3,A1
000018F4  4E4F                     909          TRAP    #15
000018F6                           910          
000018F6  E75C                     911          ROL.W   #3,D4       *mode bits
000018F8  1604                     912          MOVE.B  D4,D3
000018FA  0203 0007                913          ANDI.B  #%111,D3
000018FE  E75C                     914          ROL.W   #3,D4       *register bits
00001900  1C04                     915          MOVE.B  D4,D6
00001902  0206 0007                916          ANDI.B  #%111,D6
00001906                           917          
00001906  BE3C 0001                918          CMP.B   #1,D7
0000190A  6600 000E                919          BNE     MOVEMEB
0000190E                           920          
0000190E  4EB8 120C                921          JSR     ADDRMODEALL
00001912                           922          
00001912  43F9 0000241E            923          LEA     COMMA,A1
00001918  4E4F                     924          TRAP    #15
0000191A                           925          
0000191A  341A                     926  MOVEMEB MOVE.W  (A2)+,D2
0000191C                           927          
0000191C  48E7 0100                928          MOVEM.L D7,-(SP)
00001920                           929          
00001920  B63C 0004                930          CMP.B   #%100,D3
00001924  6700 000E                931          BEQ     MOVEMEB1
00001928                           932          
00001928  3E02                     933          MOVE.W  D2,D7
0000192A  0247 FF00                934          ANDI.W  #$FF00,D7
0000192E  E04F                     935          LSR.W   #8,D7
00001930  6000 0008                936          BRA     MOVEMEB2
00001934                           937          
00001934                           938  MOVEMEB1 
00001934  3E02                     939          MOVE.W  D2,D7
00001936  0247 00FF                940          ANDI.W  #$FF,D7
0000193A                           941          
0000193A                           942  MOVEMEB2
0000193A                           943  
0000193A  4EB9 00001A32            944          JSR     MOVEMLOOP
00001940  4CDF 0080                945          MOVEM.L (SP)+,D7
00001944  103C 0037                946          MOVE.B  #55,D0
00001948  B83C 0008                947          CMP.B   #8,D4
0000194C  6C00 0040                948          BGE     MOVEM3
00001950  103C 000E                949          MOVE.B  #14,D0
00001954                           950          
00001954  43F9 00002408            951  MOVEM2  LEA     VALA,A1
0000195A  4E4F                     952          TRAP    #15
0000195C                           953          
0000195C  103C 0003                954          MOVE.B  #3,D0
00001960  1204                     955          MOVE.B  D4,D1
00001962  4E4F                     956          TRAP    #15
00001964  103C 000E                957          MOVE.B  #14,D0
00001968                           958          
00001968  BA3C 0001                959          CMP.B   #1,D5
0000196C  6700 0020                960          BEQ     MOVEM3
00001970                           961          
00001970  43F9 00002424            962          LEA     DASH,A1
00001976  4E4F                     963          TRAP    #15
00001978  D205                     964          ADD.B   D5,D1
0000197A  5301                     965          SUBQ.B  #1,D1
0000197C                           966          
0000197C  43F9 00002408            967          LEA     VALA,A1
00001982  4E4F                     968          TRAP    #15
00001984  103C 0003                969          MOVE.B  #3,D0
00001988  4E4F                     970          TRAP    #15
0000198A  103C 000E                971          MOVE.B  #14,D0
0000198E                           972          
0000198E  48E7 0100                973  MOVEM3  MOVEM.L D7,-(SP)
00001992  3E02                     974          MOVE.W  D2,D7
00001994                           975          
00001994  B63C 0004                976          CMP.B   #%100,D3
00001998  6700 000A                977          BEQ     MOVEM31
0000199C                           978          
0000199C  0247 00FF                979          ANDI.W  #$FF,D7
000019A0  6000 0008                980          BRA     MOVEM32
000019A4                           981          
000019A4                           982  MOVEM31 
000019A4  0247 FF00                983          ANDI.W  #$FF00,D7
000019A8  E04F                     984          LSR.W   #8,D7
000019AA                           985  
000019AA  4EB9 00001A32            986  MOVEM32 JSR     MOVEMLOOP
000019B0  4CDF 0080                987          MOVEM.L (SP)+,D7
000019B4                           988          
000019B4  B03C 0037                989          CMP.B   #55,D0
000019B8  6700 0016                990          BEQ     MOVEM4
000019BC                           991          
000019BC  B83C 0008                992          CMP.B   #8,D4
000019C0  6C00 0054                993          BGE     MOVEM5
000019C4                           994          
000019C4  103C 000E                995          MOVE.B  #14,D0
000019C8  43F9 00002422            996          LEA     SLASH,A1
000019CE  4E4F                     997          TRAP    #15
000019D0                           998  
000019D0  103C 000E                999  MOVEM4  MOVE.B  #14,D0
000019D4  B83C 0008               1000          CMP.B   #8,D4
000019D8  6C00 003C               1001          BGE     MOVEM5
000019DC                          1002          
000019DC  43F9 0000240A           1003          LEA     VALD,A1
000019E2  4E4F                    1004          TRAP    #15
000019E4                          1005          
000019E4  103C 0003               1006          MOVE.B  #3,D0
000019E8  1204                    1007          MOVE.B  D4,D1
000019EA  4E4F                    1008          TRAP    #15
000019EC  103C 000E               1009          MOVE.B  #14,D0
000019F0                          1010          
000019F0  BA3C 0001               1011          CMP.B   #1,D5
000019F4  6700 0020               1012          BEQ     MOVEM5
000019F8                          1013          
000019F8  43F9 00002424           1014          LEA     DASH,A1
000019FE  4E4F                    1015          TRAP    #15
00001A00  D205                    1016          ADD.B   D5,D1
00001A02  5301                    1017          SUBQ.B  #1,D1
00001A04                          1018          
00001A04  43F9 0000240A           1019          LEA     VALD,A1
00001A0A  4E4F                    1020          TRAP    #15
00001A0C  103C 0003               1021          MOVE.B  #3,D0
00001A10  4E4F                    1022          TRAP    #15
00001A12  103C 000E               1023          MOVE.B  #14,D0
00001A16                          1024          
00001A16                          1025          
00001A16                          1026  
00001A16  103C 000E               1027  MOVEM5  MOVE.B  #14,D0
00001A1A                          1028          
00001A1A  BE3C 0001               1029          CMP.B   #1,D7
00001A1E  6700 0760               1030          BEQ     DSEND
00001A22                          1031          
00001A22  43F9 0000241E           1032          LEA     COMMA,A1
00001A28  4E4F                    1033          TRAP    #15
00001A2A                          1034          
00001A2A  4EB8 120C               1035          JSR     ADDRMODEALL
00001A2E                          1036          
00001A2E  6000 0750               1037          BRA     DSEND
00001A32                          1038  
00001A32                          1039  MOVEMLOOP
00001A32  1A3C 0000               1040          MOVE.B  #0,D5
00001A36  183C 0000               1041          MOVE.B  #0,D4
00001A3A                          1042          
00001A3A                          1043  MOVEMSTEP
00001A3A  B63C 0004               1044          CMP.B   #%100,D3
00001A3E  6700 0014               1045          BEQ     MOVEMSHIFTL
00001A42  6000 0018               1046          BRA     MOVEMSHIFTR
00001A46                          1047  MOVEMSTEP1
00001A46  0C05 0000               1048          CMPI.B  #0,D5
00001A4A  6E00 0026               1049          BGT     MOVEMLOOPDONE
00001A4E  5204                    1050          ADDQ.B  #1,D4
00001A50  6000 0012               1051          BRA     MOVEMSTEP2
00001A54                          1052  
00001A54                          1053  MOVEMSHIFTL
00001A54  E30F                    1054          LSL.B   #1,D7
00001A56  6500 0016               1055          BCS     MOVEMLOOPINC
00001A5A  60EA                    1056          BRA     MOVEMSTEP1
00001A5C                          1057  
00001A5C                          1058  MOVEMSHIFTR
00001A5C  E20F                    1059          LSR.B   #1,D7
00001A5E  6500 000E               1060          BCS     MOVEMLOOPINC
00001A62  60E2                    1061          BRA     MOVEMSTEP1
00001A64                          1062  
00001A64                          1063  MOVEMSTEP2
00001A64  B83C 0008               1064          CMP.B   #8,D4
00001A68  6DD0                    1065          BLT     MOVEMSTEP
00001A6A  6000 0006               1066          BRA     MOVEMLOOPDONE
00001A6E                          1067  
00001A6E                          1068  MOVEMLOOPINC
00001A6E  5205                    1069          ADDQ.B  #1,D5
00001A70  60F2                    1070          BRA     MOVEMSTEP2
00001A72                          1071  
00001A72                          1072  MOVEMLOOPDONE
00001A72  4E75                    1073          RTS
00001A74                          1074          
00001A74                          1075          
00001A74                          1076  MOVEMLOOPSINGLEAR
00001A74                          1077          
00001A74                          1078          
00001A74  6000 070A               1079          BRA     DSEND
00001A78                          1080  
00001A78                          1081  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A78                          1082  
00001A78  4E71                    1083  DS0101  NOP
00001A7A                          1084          
00001A7A  4E71                    1085  DADDQ   NOP
00001A7C  43F9 0000242F           1086          LEA     ADDM,A1
00001A82  4E4F                    1087          TRAP    #15
00001A84  43F9 00002410           1088          LEA     VALQ,A1
00001A8A  4E4F                    1089          TRAP    #15
00001A8C                          1090          
00001A8C                          1091          *parsing data to d1
00001A8C  E75C                    1092          ROL.W   #3,D4
00001A8E  1204                    1093          MOVE.B  D4,D1
00001A90  C23C 0007               1094          AND.B   #%111,D1
00001A94                          1095          
00001A94                          1096          *ensuring next bit is 0
00001A94  E35C                    1097          ROL.W   #1,D4
00001A96  1A04                    1098          MOVE.B  D4,D5
00001A98  CA3C 0001               1099          AND.B   #%1,D5
00001A9C  BA7C 0000               1100          CMP     #0,D5
00001AA0  6600 06B2               1101          BNE     DSERR
00001AA4                          1102          
00001AA4                          1103          *parsing and printing size
00001AA4  E55C                    1104          ROL.W   #2,D4
00001AA6  1A04                    1105          MOVE.B  D4,D5
00001AA8  CA3C 0003               1106          AND.B   #%11,D5
00001AAC  4EB8 11C2               1107          JSR     SIZE
00001AB0  43F9 000023B0           1108          LEA     SM4,A1
00001AB6  4E4F                    1109          TRAP    #15
00001AB8                          1110          
00001AB8                          1111          *parsing effective address information
00001AB8                          1112          *mode:
00001AB8  E75C                    1113          ROL.W   #3,D4
00001ABA  1604                    1114          MOVE.B  D4,D3
00001ABC  C63C 0007               1115          AND.B   #%111,D3
00001AC0                          1116          
00001AC0                          1117          *register:
00001AC0  E71C                    1118          ROL.B   #3,D4
00001AC2  1C04                    1119          MOVE.B  D4,D6
00001AC4  CC3C 0007               1120          AND.B   #%111,D6
00001AC8                          1121          
00001AC8                          1122          *printing data
00001AC8  43F9 0000240C           1123          LEA     VALN,A1
00001ACE  4E4F                    1124          TRAP    #15
00001AD0  103C 0003               1125          MOVE.B  #3,D0
00001AD4  4E4F                    1126          TRAP    #15
00001AD6  103C 000E               1127          MOVE.B  #14,D0
00001ADA  43F9 0000241E           1128          LEA     COMMA,A1
00001AE0  4E4F                    1129          TRAP    #15
00001AE2                          1130          
00001AE2  B67C 0004               1131          CMP     #%100,D3
00001AE6  6700 066C               1132          BEQ     DSERR
00001AEA  4EB8 120C               1133          JSR     ADDRMODEALL
00001AEE                          1134          
00001AEE  6000 0690               1135          BRA     DSEND
00001AF2                          1136          
00001AF2                          1137  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AF2                          1138  
00001AF2                          1139  DS0110  
00001AF2  E95C                    1140          ROL.W   #4,D4   *Get next 4 bits
00001AF4  1404                    1141          MOVE.B  D4,D2   *Copy to D2
00001AF6  0202 000F               1142          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001AFA                          1143          
00001AFA  B43C 0000               1144          CMP.B   #%0000,D2   *BRA
00001AFE  6700 001E               1145          BEQ     DBRA
00001B02                          1146          
00001B02  B43C 000E               1147          CMP.B   #%1110,D2   *BGT   
00001B06  6700 00A2               1148          BEQ     DBGT
00001B0A                          1149          
00001B0A  B43C 000F               1150          CMP.B   #%1111,D2   *BLE   
00001B0E  6700 00D6               1151          BEQ     DBLE
00001B12                          1152          
00001B12  B43C 0007               1153          CMP.B   #%0111,D2   *BEQ   
00001B16  6700 010E               1154          BEQ     DBEQ
00001B1A                          1155          
00001B1A  6000 0648               1156          BRA     DSERRINS
00001B1E                          1157          
00001B1E  43F9 0000246F           1158  DBRA    LEA     BRAM,A1
00001B24  4E4F                    1159          TRAP    #15
00001B26                          1160          
00001B26  43F9 000023C2           1161          LEA     SM7,A1
00001B2C  4E4F                    1162          TRAP    #15
00001B2E                          1163  
00001B2E  E15C                    1164          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B30  1204                    1165          MOVE.B  D4,D1
00001B32  0281 00001100           1166          ANDI.L  #$1100,D1
00001B38                          1167          
00001B38  0C01 0000               1168          CMPI.B  #%00000000,D1
00001B3C  6700 0028               1169          BEQ     DBRA_16BIT      * Word
00001B40                          1170          
00001B40  0C01 00FF               1171          CMPI.B  #%11111111,D1
00001B44  6700 0042               1172          BEQ     DBRA_32BIT      * Long
00001B48                          1173          
00001B48                          1174          * 8 Bit Displacement
00001B48  43F9 00002420           1175          LEA     DOLLAR,A1
00001B4E  4E4F                    1176          TRAP    #15
00001B50                          1177          
00001B50  341A                    1178          MOVE.W  (A2)+,D2
00001B52  D441                    1179          ADD.W   D1,D2
00001B54  5842                    1180          ADD.W   #4,D2   *unsure   
00001B56  1A3C 0030               1181          MOVE.B  #48,D5
00001B5A  4EB8 117A               1182          JSR     HEXOUT
00001B5E  6000 0620               1183          BRA     DSEND
00001B62                          1184  
00001B62                          1185          *Displacement is put in D1      
00001B62                          1186          
00001B62                          1187          
00001B62  6000 061C               1188          BRA     DSEND
00001B66                          1189          
00001B66                          1190  DBRA_16BIT
00001B66  43F9 00002420           1191          LEA     DOLLAR,A1
00001B6C  4E4F                    1192          TRAP    #15
00001B6E  341A                    1193          MOVE.W  (A2)+,D2
00001B70  D44A                    1194          ADD.W   A2,D2
00001B72  5542                    1195          SUB.W   #2,D2   *unsure
00001B74  48E7 0400               1196          MOVEM.L D5,-(SP)    
00001B78  1A3C 0030               1197          MOVE.B  #48,D5
00001B7C  4EB8 117A               1198          JSR     HEXOUT
00001B80  4CDF 0020               1199          MOVEM.L (SP)+,D5
00001B84  6000 05FA               1200          BRA     DSEND
00001B88                          1201  
00001B88                          1202  DBRA_32BIT
00001B88  43F9 00002420           1203          LEA     DOLLAR,A1
00001B8E  4E4F                    1204          TRAP    #15
00001B90  241A                    1205          MOVE.L  (A2)+,D2
00001B92  D48A                    1206          ADD.L   A2,D2
00001B94  5582                    1207          SUB.L   #2,D2   *unsure
00001B96  48E7 0400               1208          MOVEM.L D5,-(SP)
00001B9A  1A3C 0030               1209          MOVE.B  #48,D5
00001B9E  4EB8 117A               1210          JSR     HEXOUT
00001BA2  4CDF 0020               1211          MOVEM.L (SP)+,D5
00001BA6  6000 05D8               1212          BRA     DSEND
00001BAA                          1213          
00001BAA                          1214          
00001BAA                          1215          
00001BAA  43F9 0000245B           1216  DBGT    LEA     BGTM,A1
00001BB0  4E4F                    1217          TRAP    #15
00001BB2                          1218          
00001BB2  43F9 000023C2           1219          LEA     SM7,A1
00001BB8  4E4F                    1220          TRAP    #15
00001BBA                          1221          
00001BBA  E15C                    1222          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BBC  1204                    1223          MOVE.B  D4,D1
00001BBE  0241 00FF               1224          ANDI.W  #%0000000011111111,D1
00001BC2                          1225          
00001BC2  0C01 0000               1226          CMPI.B  #%00000000,D1
00001BC6  679E                    1227          BEQ     DBRA_16BIT      * Word
00001BC8                          1228          
00001BC8  0C01 00FF               1229          CMPI.B  #%11111111,D1
00001BCC  67BA                    1230          BEQ     DBRA_32BIT      * Long
00001BCE                          1231          
00001BCE  43F9 00002420           1232          LEA     DOLLAR,A1
00001BD4  4E4F                    1233          TRAP    #15
00001BD6                          1234      
00001BD6  340A                    1235          MOVE.W  A2,D2
00001BD8  D441                    1236          ADD.W   D1,D2
00001BDA                          1237    
00001BDA  1A3C 0030               1238          MOVE.B  #48,D5
00001BDE  4EB8 117A               1239          JSR     HEXOUT
00001BE2  6000 059C               1240          BRA     DSEND
00001BE6                          1241  
00001BE6  43F9 0000245F           1242  DBLE    LEA     BLEM,A1
00001BEC  4E4F                    1243          TRAP    #15
00001BEE                          1244          
00001BEE  43F9 000023C2           1245          LEA     SM7,A1
00001BF4  4E4F                    1246          TRAP    #15
00001BF6                          1247          
00001BF6  E15C                    1248          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BF8  1204                    1249          MOVE.B  D4,D1
00001BFA  0241 00FF               1250          ANDI.W  #%0000000011111111,D1
00001BFE                          1251          
00001BFE  0C01 0000               1252          CMPI.B  #%00000000,D1
00001C02  6700 FF62               1253          BEQ     DBRA_16BIT      * Word
00001C06                          1254          
00001C06  0C01 00FF               1255          CMPI.B  #%11111111,D1
00001C0A  6700 FF7C               1256          BEQ     DBRA_32BIT      * Long
00001C0E                          1257          
00001C0E  43F9 00002420           1258          LEA     DOLLAR,A1
00001C14  4E4F                    1259          TRAP    #15
00001C16                          1260          
00001C16  340A                    1261          MOVE.W  A2,D2
00001C18  D441                    1262          ADD.W   D1,D2
00001C1A                          1263   
00001C1A  1A3C 0030               1264          MOVE.B  #48,D5
00001C1E  4EB8 117A               1265          JSR     HEXOUT
00001C22                          1266          
00001C22  6000 055C               1267          BRA     DSEND
00001C26                          1268  
00001C26  43F9 00002463           1269  DBEQ    LEA     BEQM,A1
00001C2C  4E4F                    1270          TRAP    #15
00001C2E                          1271          
00001C2E  43F9 000023C2           1272          LEA     SM7,A1
00001C34  4E4F                    1273          TRAP    #15
00001C36                          1274          
00001C36  E15C                    1275          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C38  1204                    1276          MOVE.B  D4,D1
00001C3A  0241 00FF               1277          ANDI.W  #%0000000011111111,D1
00001C3E                          1278          
00001C3E  0C01 0000               1279          CMPI.B  #%00000000,D1
00001C42  6700 FF22               1280          BEQ     DBRA_16BIT      * Word
00001C46                          1281          
00001C46  0C01 00FF               1282          CMPI.B  #%11111111,D1
00001C4A  6700 FF3C               1283          BEQ     DBRA_32BIT      * Long
00001C4E                          1284          
00001C4E  43F9 00002420           1285          LEA     DOLLAR,A1
00001C54  4E4F                    1286          TRAP    #15
00001C56                          1287  
00001C56  340A                    1288          MOVE.W  A2,D2
00001C58  D441                    1289          ADD.W   D1,D2
00001C5A                          1290   
00001C5A  1A3C 0030               1291          MOVE.B  #48,D5
00001C5E  4EB8 117A               1292          JSR     HEXOUT
00001C62                          1293          
00001C62  6000 051C               1294          BRA     DSEND
00001C66                          1295  
00001C66                          1296  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C66                          1297  
00001C66  4E71                    1298  DS0111  NOP
00001C68                          1299          
00001C68  4E71                    1300  DMOVEQ  NOP
00001C6A  43F9 0000242A           1301          LEA     MOVEM,A1
00001C70  4E4F                    1302          TRAP    #15
00001C72  43F9 00002410           1303          LEA     VALQ,A1
00001C78  4E4F                    1304          TRAP    #15
00001C7A  43F9 000023AC           1305          LEA     SM3,A1
00001C80  4E4F                    1306          TRAP    #15
00001C82                          1307          
00001C82                          1308          *getting register number
00001C82  E75C                    1309          ROL.W   #3,D4
00001C84  1A04                    1310          MOVE.B  D4,D5
00001C86  CA3C 0007               1311          AND.B   #%111,D5
00001C8A                          1312          
00001C8A                          1313          *throwing error if next digit not 0
00001C8A  E35C                    1314          ROL.W   #1,D4
00001C8C  1C04                    1315          MOVE.B  D4,D6
00001C8E  CC3C 0001               1316          AND.B   #%1,D6
00001C92  BC3C 0000               1317          CMP.B   #0,D6
00001C96  6600 04BC               1318          BNE     DSERR
00001C9A                          1319          
00001C9A                          1320          *getting data and printing information
00001C9A  E15C                    1321          ROL.W   #8,D4
00001C9C  1204                    1322          MOVE.B  D4,D1
00001C9E  C23C 00FF               1323          AND.B   #%11111111,D1
00001CA2  43F9 0000240C           1324          LEA     VALN,A1
00001CA8  4E4F                    1325          TRAP    #15
00001CAA  103C 0003               1326          MOVE.B  #3,D0
00001CAE  4E4F                    1327          TRAP    #15
00001CB0  103C 000E               1328          MOVE.B  #14,D0
00001CB4  43F9 0000241E           1329          LEA     COMMA,A1
00001CBA  4E4F                    1330          TRAP    #15
00001CBC  43F9 0000240A           1331          LEA     VALD,A1
00001CC2  4E4F                    1332          TRAP    #15
00001CC4  103C 0003               1333          MOVE.B  #3,D0
00001CC8  3205                    1334          MOVE.W  D5,D1
00001CCA  4E4F                    1335          TRAP    #15
00001CCC                          1336          
00001CCC  6000 04B2               1337          BRA     DSEND
00001CD0                          1338          
00001CD0                          1339  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001CD0                          1340  
00001CD0  4E71                    1341  DS1000  NOP
00001CD2                          1342          
00001CD2  E75C                    1343  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001CD4  1A04                    1344          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CD6  0205 0007               1345          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CDA  1C05                    1346          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001CDC                          1347  
00001CDC  E75C                    1348          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001CDE  1A04                    1349          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CE0  0205 0007               1350          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CE4  1E05                    1351          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001CE6  BA3C 0000               1352          CMP.B   #%000,D5        ; Compare with byte size
00001CEA  6700 0016               1353          BEQ     DORB
00001CEE  BA3C 0001               1354          CMP.B   #%001,D5        ; Compare with word size
00001CF2  6700 0022               1355          BEQ     DORW
00001CF6  BA3C 0002               1356          CMP.B   #%010,D5        ; Compare with long size
00001CFA  6700 002E               1357          BEQ     DORL
00001CFE                          1358  
00001CFE  6000 0480               1359          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001D02                          1360  
00001D02  43F9 0000243F           1361  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001D08  4E4F                    1362          TRAP    #15             ; Print ORM string
00001D0A  43F9 000023FF           1363          LEA     MODEB,A1        ; Load effective address of MODEB string
00001D10  4E4F                    1364          TRAP    #15             ; Print MODEB string
00001D12  6000 002A               1365          BRA     DORA            ; Branch to addressing mode parsing
00001D16                          1366  
00001D16  43F9 0000243F           1367  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001D1C  4E4F                    1368          TRAP    #15             ; Print ORM string
00001D1E  43F9 00002402           1369          LEA     MODEW,A1        ; Load effective address of MODEW string
00001D24  4E4F                    1370          TRAP    #15             ; Print MODEW string
00001D26  6000 0016               1371          BRA     DORA            ; Branch to addressing mode parsing
00001D2A                          1372  
00001D2A  43F9 0000243F           1373  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001D30  4E4F                    1374          TRAP    #15             ; Print ORM string
00001D32  43F9 00002405           1375          LEA     MODEL,A1        ; Load effective address of MODEL string
00001D38  4E4F                    1376          TRAP    #15             ; Print MODEL string
00001D3A  6000 0002               1377          BRA     DORA            ; Branch to addressing mode parsing
00001D3E                          1378  
00001D3E  43F9 000023B0           1379  DORA    LEA     SM4,A1
00001D44  4E4F                    1380          TRAP    #15
00001D46  ED5C                    1381          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001D48  1A04                    1382          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D4A  0205 0038               1383          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001D4E  E61D                    1384          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001D50  1605                    1385          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001D52  0204 0007               1386          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001D56  1C04                    1387          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001D58                          1388  
00001D58  BE3C 0004               1389          CMP.B   #%100,D7        ; Compare opmode with '100'
00001D5C  6D00 0006               1390          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001D60  6000 002A               1391          BRA     DORAD           ; Else, branch to DORAD
00001D64                          1392  
00001D64  4EB8 120C               1393  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D68  103C 000E               1394          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001D6C  43F9 0000241E           1395          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D72  4E4F                    1396          TRAP    #15             ; Print comma
00001D74  43F9 0000240A           1397          LEA     VALD,A1
00001D7A  4E4F                    1398          TRAP    #15
00001D7C  1206                    1399          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D7E  103C 0003               1400          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D82  4E4F                    1401          TRAP    #15             ; Print register number
00001D84  103C 000E               1402          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D88  6000 03F6               1403          BRA     DSEND           ; Branch to DSEND
00001D8C                          1404  
00001D8C  1206                    1405  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D8E  103C 0003               1406          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D92  4E4F                    1407          TRAP    #15             ; Print register number
00001D94  103C 000E               1408          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D98  43F9 0000241E           1409          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D9E  4E4F                    1410          TRAP    #15             ; Print comma
00001DA0  4EB8 120C               1411          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001DA4  103C 000E               1412          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001DA8  6000 03D6               1413          BRA     DSEND           ; Branch to DSEND                 
00001DAC                          1414  
00001DAC                          1415  
00001DAC                          1416  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001DAC                          1417  
00001DAC  4E71                    1418  DS1001  NOP
00001DAE  4E71                    1419  DSUB    NOP
00001DB0                          1420  *print sub
00001DB0  43F9 00002433           1421          LEA     SUBM,A1
00001DB6  4E4F                    1422          TRAP    #15
00001DB8                          1423  
00001DB8                          1424  *parse dn reg: 3 bits
00001DB8                          1425  *number of the data register involved
00001DB8                          1426  *nums 0-7, paired with below
00001DB8  E75C                    1427          ROL.W   #3,D4       *dn reg num in d1
00001DBA  1E04                    1428          MOVE.B  D4,D7
00001DBC  0207 0007               1429          ANDI.B  #%111,D7
00001DC0                          1430          
00001DC0  3C47                    1431          MOVE.W  D7,A6       *temporary for storage
00001DC2                          1432  
00001DC2                          1433  *parse opmode: 3 bits
00001DC2                          1434  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001DC2                          1435  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001DC2                          1436  *invalid: 111, 011
00001DC2                          1437  *parse first digit separately
00001DC2  E35C                    1438          ROL.W   #1,D4       *addressing mode in d2
00001DC4  1E04                    1439          MOVE.B  D4,D7
00001DC6  0207 0001               1440          ANDI.B  #%1,D7
00001DCA                          1441          
00001DCA                          1442  *parsing next two digits of size
00001DCA  E55C                    1443          ROL.W   #2,D4       *size in d5
00001DCC  1A04                    1444          MOVE.B  D4,D5
00001DCE  0205 0003               1445          ANDI.B  #%11,D5
00001DD2  4EB8 11C2               1446          JSR     SIZE
00001DD6  43F9 000023C2           1447          LEA     SM7,A1
00001DDC  4E4F                    1448          TRAP    #15
00001DDE                          1449          
00001DDE                          1450  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001DDE  BE3C 0000               1451          CMP.B   #%0,D7       *if 1, then register info printed last
00001DE2  6700 0026               1452          BEQ     DSUBEA      *branch to ea before register
00001DE6                          1453          
00001DE6                          1454  *printing register information
00001DE6                          1455  DSUBPRNTREG
00001DE6  43F9 0000240A           1456          LEA     VALD,A1
00001DEC  4E4F                    1457          TRAP    #15
00001DEE  320E                    1458          MOVE.W  A6,D1       *retrieving a6 register data
00001DF0  103C 0003               1459          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001DF4  4E4F                    1460          TRAP    #15         *printing register number
00001DF6  103C 000E               1461          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001DFA  BE3C 0000               1462          CMP.B   #%0,D7      *if info finished printing
00001DFE  6700 0380               1463          BEQ     DSEND      *branch to end
00001E02  43F9 0000241E           1464          LEA     COMMA,A1
00001E08  4E4F                    1465          TRAP    #15
00001E0A                          1466  
00001E0A                          1467          
00001E0A                          1468  * parse ea mode: 3 bits
00001E0A                          1469  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001E0A                          1470  *address reg direct not allowed for .B operations
00001E0A                          1471  *no invalid
00001E0A                          1472  DSUBEA
00001E0A  E75C                    1473          ROL.W   #3,D4       *ea mode
00001E0C  1604                    1474          MOVE.B  D4,D3
00001E0E  0203 0007               1475          ANDI.B  #%111,D3
00001E12                          1476  
00001E12                          1477  *parse ea reg: 3 bits
00001E12                          1478  *no invalid: paired with opmode below (nums 0-7)
00001E12                          1479  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001E12  E75C                    1480          ROL.W   #3,D4       *ea mode
00001E14  1C04                    1481          MOVE.B  D4,D6
00001E16  0206 0007               1482          ANDI.B  #%111,D6
00001E1A                          1483          
00001E1A  2803                    1484          MOVE.L  D3,D4   *temporarily using D4 
00001E1C                          1485          
00001E1C                          1486  *comparisons
00001E1C  B67C 0004               1487          CMP     #%100,D3
00001E20  6700 0332               1488          BEQ     DSERR
00001E24  4EB8 120C               1489          JSR     ADDRMODEALL
00001E28  BE3C 0001               1490          CMP.B   #%1,D7      *if info printed
00001E2C  6700 0352               1491          BEQ     DSEND       *end
00001E30  43F9 0000241E           1492          LEA     COMMA,A1
00001E36  4E4F                    1493          TRAP    #15
00001E38  60AC                    1494          BRA     DSUBPRNTREG *check d6 for size of data
00001E3A                          1495  *then take data from d4 and print (?)
00001E3A                          1496  
00001E3A  6000 0344               1497          BRA     DSEND
00001E3E                          1498  
00001E3E                          1499  
00001E3E                          1500  
00001E3E  4E71                    1501  DS1010  NOP
00001E40  6000 0322               1502          BRA     DSERRINS
00001E44                          1503  
00001E44                          1504          
00001E44                          1505  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E44                          1506  
00001E44  4E71                    1507  DS1011  NOP
00001E46  6000 031C               1508          BRA     DSERRINS
00001E4A                          1509          
00001E4A                          1510  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E4A                          1511  
00001E4A  4E71                    1512  DS1100  NOP
00001E4C  6000 0316               1513          BRA     DSERRINS
00001E50                          1514          
00001E50                          1515  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E50                          1516  
00001E50  4E71                    1517  DS1101  NOP
00001E52                          1518  
00001E52  4E71                    1519  DADD    NOP
00001E54  43F9 0000242F           1520          LEA     ADDM,A1
00001E5A  4E4F                    1521          TRAP    #15
00001E5C                          1522          
00001E5C                          1523          *parse dn reg: 3 bits
00001E5C                          1524  *number of the data register involved
00001E5C                          1525  *nums 0-7, paired with below
00001E5C  E75C                    1526          ROL.W   #3,D4       *dn reg num in d7
00001E5E  1E04                    1527          MOVE.B  D4,D7
00001E60  0207 0007               1528          ANDI.B  #%111,D7
00001E64                          1529          
00001E64  3C47                    1530          MOVE.W  D7,A6
00001E66                          1531  
00001E66                          1532  *parse opmode: 3 bits
00001E66                          1533  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001E66                          1534  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001E66                          1535  *invalid: 111, 011
00001E66                          1536  *parse first digit separately
00001E66  E35C                    1537          ROL.W   #1,D4       *addressing mode in d2
00001E68  1E04                    1538          MOVE.B  D4,D7
00001E6A  0207 0001               1539          ANDI.B  #%1,D7
00001E6E                          1540          
00001E6E                          1541  *parsing next two digits of size
00001E6E  E55C                    1542          ROL.W   #2,D4       *size in d5
00001E70  1A04                    1543          MOVE.B  D4,D5
00001E72  0205 0003               1544          ANDI.B  #%11,D5
00001E76  BA3C 0003               1545          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001E7A  6700 007C               1546          BEQ     DADDA
00001E7E  4EB8 11C2               1547          JSR     SIZE
00001E82  43F9 000023B5           1548          LEA     SM5,A1
00001E88  4E4F                    1549          TRAP    #15
00001E8A                          1550          
00001E8A                          1551  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001E8A  BE3C 0000               1552          CMP.B   #%0,D7       *if 0, then register info printed last
00001E8E  6700 002E               1553          BEQ     DADDEA      *branch to ea before register
00001E92                          1554          
00001E92                          1555  *printing register information
00001E92                          1556  DADDPRNTREG
00001E92  BA3C 0003               1557          CMP.B   #%11,D5
00001E96  6700 0058               1558          BEQ     PRINTA
00001E9A  43F9 0000240A           1559          LEA     VALD,A1
00001EA0                          1560  ADDCONT
00001EA0  4E4F                    1561          TRAP    #15
00001EA2  320E                    1562          MOVE.W  A6,D1       *moving reg num to d1 to print
00001EA4  103C 0003               1563          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001EA8  4E4F                    1564          TRAP    #15         *printing register number
00001EAA  103C 000E               1565          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001EAE  BE3C 0000               1566          CMP.B   #%0,D7      *if info finished printing
00001EB2  6700 02CC               1567          BEQ     DSEND      *branch to end
00001EB6  43F9 0000241E           1568          LEA     COMMA,A1
00001EBC  4E4F                    1569          TRAP    #15
00001EBE                          1570  
00001EBE                          1571          
00001EBE                          1572  * parse ea mode: 3 bits
00001EBE                          1573  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001EBE                          1574  *address reg direct not allowed for .B operations
00001EBE                          1575  *no invalid
00001EBE                          1576  DADDEA
00001EBE  E75C                    1577          ROL.W   #3,D4       *ea mode
00001EC0  1604                    1578          MOVE.B  D4,D3
00001EC2  0203 0007               1579          ANDI.B  #%111,D3
00001EC6                          1580  
00001EC6                          1581  *parse ea reg: 3 bits
00001EC6                          1582  *no invalid: paired with opmode below (nums 0-7)
00001EC6                          1583  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001EC6  E75C                    1584          ROL.W   #3,D4       *ea mode
00001EC8  1C04                    1585          MOVE.B  D4,D6
00001ECA  0206 0007               1586          ANDI.B  #%111,D6
00001ECE                          1587          
00001ECE                          1588  *comparisons
00001ECE  B67C 0004               1589          CMP     #%100,D3
00001ED2  6700 005A               1590          BEQ     ADDDATACHECK
00001ED6                          1591  DATACHECKCONT
00001ED6  4EB8 120C               1592          JSR     ADDRMODEALL
00001EDA  BE3C 0001               1593          CMP.B   #%1,D7      *if info printed
00001EDE  6700 02A0               1594          BEQ     DSEND       *end
00001EE2  43F9 0000241E           1595          LEA     COMMA,A1
00001EE8  4E4F                    1596          TRAP    #15
00001EEA  60A6                    1597          BRA     DADDPRNTREG 
00001EEC                          1598  
00001EEC  6000 0292               1599          BRA     DSEND
00001EF0                          1600          
00001EF0  43F9 00002408           1601  PRINTA  LEA     VALA,A1
00001EF6  60A8                    1602          BRA     ADDCONT
00001EF8                          1603  
00001EF8                          1604          
00001EF8  4E71                    1605  DADDA   NOP
00001EFA  43F9 00002408           1606          LEA     VALA,A1
00001F00  4E4F                    1607          TRAP    #15
00001F02  BE3C 0000               1608          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001F06  6600 000C               1609          BNE     ADDAL
00001F0A  43F9 00002402           1610          LEA     MODEW,A1
00001F10  6000 000C               1611          BRA     ADDSIZEEND
00001F14  43F9 00002405           1612  ADDAL   LEA     MODEL,A1
00001F1A  6000 0002               1613          BRA     ADDSIZEEND
00001F1E                          1614  ADDSIZEEND
00001F1E  4E4F                    1615          TRAP    #15
00001F20  43F9 000023C2           1616          LEA     SM7,A1
00001F26  4E4F                    1617          TRAP    #15
00001F28  1E3C 0000               1618          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001F2C  6090                    1619          BRA     DADDEA
00001F2E                          1620  ADDDATACHECK
00001F2E  BA3C 0003               1621          CMP.B   #%11,D5
00001F32  6700 0220               1622          BEQ     DSERR
00001F36  609E                    1623          BRA     DATACHECKCONT
00001F38                          1624          
00001F38                          1625          
00001F38                          1626  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F38                          1627  
00001F38                          1628  DS1110
00001F38  E75C                    1629          ROL.W   #3,D4           * [D2] Reading count
00001F3A  1404                    1630          MOVE.B  D4,D2
00001F3C  0202 0007               1631          ANDI.B  #%111,D2
00001F40                          1632          
00001F40  E35C                    1633          ROL.W   #1,D4           * [D3] Reading direction
00001F42  1604                    1634          MOVE.B  D4,D3
00001F44  0203 0001               1635          ANDI.B  #%1,D3
00001F48                          1636          
00001F48  E55C                    1637          ROL.W   #2,D4           * [D5] Reading size
00001F4A  1A04                    1638          MOVE.B  D4,D5
00001F4C  0205 0003               1639          ANDI.B  #%11,D5
00001F50                          1640          
00001F50  BA3C 0003               1641          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001F54  6700 00F0               1642          BEQ     DS1110MEM
00001F58                          1643          
00001F58  E35C                    1644          ROL.W   #1,D4           * [D6] Reading count mode
00001F5A  1C04                    1645          MOVE.B  D4,D6
00001F5C  0206 0001               1646          ANDI.B  #%1,D6
00001F60                          1647          
00001F60  E55C                    1648          ROL.W   #2,D4           * [D7] reading type of shift
00001F62  1E04                    1649          MOVE.B  D4,D7
00001F64  0207 0003               1650          ANDI.B  #%11,D7
00001F68                          1651          
00001F68  E75C                    1652          ROL.W   #3,D4           * [D1] reading register
00001F6A  1204                    1653          MOVE.B  D4,D1
00001F6C  0201 0007               1654          ANDI.B  #%111,D1
00001F70                          1655          
00001F70  BE3C 0001               1656          CMP.B   #%01,D7   *Determine shift type
00001F74  6700 008E               1657          BEQ     DLS
00001F78  BE3C 0000               1658          CMP.B   #%00,D7
00001F7C  6700 0092               1659          BEQ     DAS
00001F80  BE3C 0003               1660          CMP.B   #%11,D7
00001F84  6700 0096               1661          BEQ     DRO
00001F88                          1662          
00001F88  6000 01F6               1663          BRA     DSEND               *Fallback in case of invalid code
00001F8C                          1664          
00001F8C  48E7 FFFF               1665  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001F90  4EB9 00002028           1666          JSR     DS1110SIDE
00001F96  4CDF FFFF               1667          MOVEM.L (SP)+,A0-A7/D0-D7
00001F9A                          1668          
00001F9A  48E7 FFFF               1669          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001F9E  4EB8 11C2               1670          JSR     SIZE
00001FA2  4CDF FFFF               1671          MOVEM.L (SP)+,A0-A7/D0-D7
00001FA6                          1672          
00001FA6  103C 000E               1673          MOVE.B  #14,D0
00001FAA  43F9 000023B5           1674          LEA     SM5,A1
00001FB0  4E4F                    1675          TRAP    #15
00001FB2                          1676          
00001FB2  BA3C 0003               1677          CMP.B   #%11,D5
00001FB6  6700 00B4               1678          BEQ     DS1110MEMA
00001FBA                          1679          
00001FBA  BC3C 0001               1680          CMP.B   #%1,D6
00001FBE  6700 003A               1681          BEQ     DS1110_REG_D
00001FC2  6000 002C               1682          BRA     DS1110_REG_I
00001FC6                          1683          
00001FC6  1C01                    1684  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001FC8                          1685          
00001FC8  103C 0003               1686          MOVE.B  #3,D0
00001FCC  1202                    1687          MOVE.B  D2,D1
00001FCE  4E4F                    1688          TRAP    #15
00001FD0                          1689          
00001FD0  103C 000E               1690          MOVE.B  #14,D0
00001FD4  43F9 0000241E           1691          LEA     COMMA,A1
00001FDA  4E4F                    1692          TRAP    #15
00001FDC                          1693          
00001FDC  43F9 0000240A           1694          LEA     VALD,A1
00001FE2  4E4F                    1695          TRAP    #15
00001FE4                          1696          
00001FE4  103C 0003               1697          MOVE.B  #3,D0
00001FE8  1206                    1698          MOVE.B  D6,D1
00001FEA  4E4F                    1699          TRAP    #15
00001FEC                          1700          
00001FEC  6000 0192               1701          BRA     DSEND
00001FF0                          1702          
00001FF0                          1703  DS1110_REG_I
00001FF0  43F9 0000240C           1704          LEA     VALN,A1
00001FF6  4E4F                    1705          TRAP    #15
00001FF8  60CC                    1706          BRA     DS1110B
00001FFA                          1707  
00001FFA                          1708  DS1110_REG_D
00001FFA  43F9 0000240A           1709          LEA     VALD,A1
00002000  4E4F                    1710          TRAP    #15
00002002  60C2                    1711          BRA     DS1110B       
00002004                          1712          
00002004  43F9 00002446           1713  DLS     LEA     LSM,A1
0000200A  4E4F                    1714          TRAP    #15
0000200C  6000 FF7E               1715          BRA     DS1110A
00002010                          1716          
00002010  43F9 0000244D           1717  DAS     LEA     ASM,A1
00002016  4E4F                    1718          TRAP    #15
00002018  6000 FF72               1719          BRA     DS1110A
0000201C                          1720          
0000201C  43F9 00002454           1721  DRO     LEA     ROM,A1
00002022  4E4F                    1722          TRAP    #15
00002024  6000 FF66               1723          BRA     DS1110A
00002028                          1724          
00002028                          1725  DS1110SIDE
00002028  103C 0006               1726          MOVE.B  #6,D0
0000202C  B63C 0001               1727          CMP.B   #1,D3
00002030  6700 000C               1728          BEQ     DS1110LSIDE
00002034  123C 0052               1729          MOVE.B  #82,D1
00002038  4E4F                    1730          TRAP    #15
0000203A  6000 0008               1731          BRA     DS1110SIDEEND
0000203E                          1732  
0000203E                          1733  DS1110LSIDE
0000203E  123C 004C               1734          MOVE.B  #76,D1
00002042  4E4F                    1735          TRAP    #15
00002044                          1736          
00002044                          1737  DS1110SIDEEND
00002044  4E75                    1738          RTS 
00002046                          1739  
00002046                          1740  DS1110MEM
00002046                          1741                                  * Shift type is instead stored in D2
00002046                          1742          
00002046  E75C                    1743          ROL.W   #3,D4           * [D6] Reading address mode
00002048  1C04                    1744          MOVE.B  D4,D6
0000204A  0206 0007               1745          ANDI.B  #%111,D6
0000204E                          1746          
0000204E  E75C                    1747          ROL.W   #3,D4           * [D1] Reading address register
00002050  1204                    1748          MOVE.B  D4,D1
00002052  0201 0007               1749          ANDI.B  #%111,D1
00002056                          1750          
00002056  B43C 0001               1751          CMP.B   #%01,D2
0000205A  67A8                    1752          BEQ     DLS
0000205C  B43C 0000               1753          CMP.B   #%00,D2
00002060  67AE                    1754          BEQ     DAS
00002062  B43C 0003               1755          CMP.B   #%11,D2
00002066  67B4                    1756          BEQ     DRO
00002068  6000 0116               1757          BRA     DSEND
0000206C                          1758          
0000206C                          1759          
0000206C                          1760  DS1110MEMA
0000206C                          1761          
0000206C  BC3C 0002               1762          CMP.B   #%010,D6
00002070  6700 002E               1763          BEQ     DS1110MEM_REG
00002074  BC3C 0003               1764          CMP.B   #%011,D6
00002078  6700 004C               1765          BEQ     DS1110MEM_INC
0000207C  BC3C 0004               1766          CMP.B   #%100,D6
00002080  6700 006A               1767          BEQ     DS1110MEM_DEC
00002084                          1768          
00002084  BC3C 0007               1769          CMP.B   #%111,D6
00002088  6600 00CA               1770          BNE     DSERR
0000208C                          1771          
0000208C  B23C 0000               1772          CMP.B   #%000,D1
00002090  6700 0080               1773          BEQ     DS1110MEM_CUSW
00002094  B23C 0001               1774          CMP.B   #%001,D1
00002098  6700 0096               1775          BEQ     DS1110MEM_CUSL
0000209C                          1776          
0000209C  6000 00E2               1777          BRA     DSEND
000020A0                          1778  
000020A0                          1779  DS1110MEM_REG
000020A0  43F9 00002414           1780          LEA     OPENPTR,A1
000020A6  4E4F                    1781          TRAP    #15
000020A8                          1782          
000020A8  43F9 00002408           1783          LEA     VALA,A1
000020AE  4E4F                    1784          TRAP    #15
000020B0                          1785          
000020B0  103C 0003               1786          MOVE.B  #3,D0
000020B4  4E4F                    1787          TRAP    #15
000020B6  103C 000E               1788          MOVE.B  #14,D0
000020BA                          1789          
000020BA  43F9 00002419           1790          LEA     CLOSEPTR,A1
000020C0  4E4F                    1791          TRAP    #15
000020C2                          1792          
000020C2  6000 00BC               1793          BRA     DSEND
000020C6                          1794  
000020C6                          1795  DS1110MEM_INC
000020C6  43F9 00002414           1796          LEA     OPENPTR,A1
000020CC  4E4F                    1797          TRAP    #15
000020CE                          1798          
000020CE  43F9 00002408           1799          LEA     VALA,A1
000020D4  4E4F                    1800          TRAP    #15
000020D6                          1801          
000020D6  103C 0003               1802          MOVE.B  #3,D0
000020DA  4E4F                    1803          TRAP    #15
000020DC  103C 000E               1804          MOVE.B  #14,D0
000020E0                          1805          
000020E0  43F9 0000241B           1806          LEA     CLOSEIPTR,A1
000020E6  4E4F                    1807          TRAP    #15
000020E8                          1808          
000020E8  6000 0096               1809          BRA     DSEND
000020EC                          1810  
000020EC                          1811  DS1110MEM_DEC
000020EC  43F9 00002416           1812          LEA     OPENDPTR,A1
000020F2  4E4F                    1813          TRAP    #15
000020F4                          1814          
000020F4  43F9 00002408           1815          LEA     VALA,A1
000020FA  4E4F                    1816          TRAP    #15
000020FC                          1817          
000020FC  103C 0003               1818          MOVE.B  #3,D0
00002100  4E4F                    1819          TRAP    #15
00002102  103C 000E               1820          MOVE.B  #14,D0
00002106                          1821          
00002106  43F9 00002419           1822          LEA     CLOSEPTR,A1
0000210C  4E4F                    1823          TRAP    #15
0000210E                          1824          
0000210E  6000 0070               1825          BRA     DSEND
00002112                          1826          
00002112                          1827  DS1110MEM_CUSW
00002112  43F9 00002420           1828          LEA     DOLLAR,A1
00002118  4E4F                    1829          TRAP    #15
0000211A  341A                    1830          MOVE.W  (A2)+,D2
0000211C  48E7 0400               1831          MOVEM.L D5,-(SP)
00002120  1A3C 0030               1832          MOVE.B  #48,D5
00002124  4EB8 117A               1833          JSR     HEXOUT
00002128  4CDF 0020               1834          MOVEM.L (SP)+,D5
0000212C  6000 0052               1835          BRA     DSEND
00002130                          1836          
00002130                          1837  DS1110MEM_CUSL
00002130  43F9 00002420           1838          LEA     DOLLAR,A1
00002136  4E4F                    1839          TRAP    #15
00002138  241A                    1840          MOVE.L  (A2)+,D2
0000213A  48E7 0400               1841          MOVEM.L D5,-(SP)
0000213E  1A3C 0030               1842          MOVE.B  #48,D5
00002142  4EB8 117A               1843          JSR     HEXOUT
00002146  4CDF 0020               1844          MOVEM.L (SP)+,D5
0000214A  6000 0034               1845          BRA     DSEND
0000214E                          1846          
0000214E                          1847  
0000214E                          1848  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000214E                          1849  
0000214E  4E71                    1850  DS1111  NOP
00002150  6000 002E               1851          BRA     DSEND
00002154                          1852  
00002154                          1853  *DS Final
00002154                          1854  *--------------------------------------------------------------------------------------------------
00002154                          1855  
00002154  103C 000E               1856  DSERR   MOVE.B  #14,D0
00002158  43F9 000023D1           1857          LEA     ERRM,A1
0000215E  4E4F                    1858          TRAP    #15
00002160  6000 001E               1859          BRA     DSEND
00002164                          1860          
00002164                          1861  DSERRINS
00002164  103C 000E               1862          MOVE.B  #14,D0
00002168  43F9 000023D9           1863          LEA     ERRMINS,A1
0000216E  4E4F                    1864          TRAP    #15
00002170  6000 000E               1865          BRA     DSEND
00002174                          1866  
00002174                          1867  DSERREA
00002174  103C 000E               1868          MOVE.B  #14,D0
00002178  43F9 000023DA           1869          LEA     ERRMEA,A1
0000217E  4E4F                    1870          TRAP    #15
00002180                          1871  
00002180  4E75                    1872  DSEND   RTS
00002182                          1873  
00002182  43F9 000023A2           1874  DSEOF   LEA     LB,A1
00002188  103C 000E               1875          MOVE.B  #14,D0
0000218C  4E4F                    1876          TRAP    #15
0000218E                          1877          
0000218E  43F9 000022A4           1878          LEA     REST,A1
00002194  103C 000E               1879          MOVE.B  #14,D0
00002198  4E4F                    1880          TRAP    #15
0000219A                          1881          
0000219A  103C 0005               1882          MOVE.B  #5,D0
0000219E  4E4F                    1883          TRAP    #15
000021A0                          1884          
000021A0  B23C 0059               1885          CMP.B   #89,D1
000021A4  6700 EE5A               1886          BEQ     START
000021A8  B23C 0079               1887          CMP.B   #121,D1
000021AC  6700 EE52               1888          BEQ     START
000021B0                          1889  
000021B0  43F9 000023A2           1890  END     LEA     LB,A1
000021B6  103C 000E               1891          MOVE.B  #14,D0
000021BA  4E4F                    1892          TRAP    #15
000021BC                          1893          
000021BC  43F9 000023A2           1894          LEA     LB,A1
000021C2  103C 000E               1895          MOVE.B  #14,D0
000021C6  4E4F                    1896          TRAP    #15
000021C8                          1897          
000021C8  43F9 000022C1           1898          LEA     ENDMSG,A1
000021CE  103C 000E               1899          MOVE.B  #14,D0
000021D2  4E4F                    1900          TRAP    #15
000021D4                          1901          
000021D4  43F9 000022E9           1902          LEA     AUTHOR,A1
000021DA  4E4F                    1903          TRAP    #15
000021DC                          1904          
000021DC  43F9 000023A2           1905          LEA     LB,A1
000021E2  103C 000E               1906          MOVE.B  #14,D0
000021E6  4E4F                    1907          TRAP    #15
000021E8                          1908          
000021E8  103C 0009               1909          MOVE.B  #9,D0
000021EC  4E4F                    1910          TRAP    #15
000021EE                          1911  
000021EE                          1912  *Initialized Variables
000021EE                          1913  *--------------------------------------------------------------------------------------------------
000021EE                          1914  
000021EE  =0000000D               1915  CR      EQU     $0D
000021EE  =0000000A               1916  LF      EQU     $0A
000021EE  =00000009               1917  HT      EQU     $09
000021EE                          1918  
000021EE= 54 68 69 73 20 69 ...   1919  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002276= 45 6E 74 65 72 20 ...   1920  ASTART  DC.B    'Enter start address: $',0
0000228D= 45 6E 74 65 72 20 ...   1921  AEND    DC.B    'Enter end address:   $',0
000022A4= 52 65 73 74 61 72 ...   1922  REST    DC.B    'Restart Disassembler (y/n)? ',0
000022C1= 54 68 61 6E 6B 20 ...   1923  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000022E9= 4D 61 64 65 20 62 ...   1924  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000230E                          1925  
0000230E= 45 52 52 4F 52 3A ...   1926  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002348= 45 52 52 4F 52 3A ...   1927  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000236E= 45 52 52 4F 52 3A ...   1928  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000023A2                          1929  
000023A2= 0D 0A 00                1930  LB      DC.B    CR,LF,0
000023A5                          1931  
000023A5= 09 00                   1932  HTM     DC.B    HT,0
000023A7                          1933  
000023A7= 20 00                   1934  SM1     DC.B    ' ',0
000023A9= 20 20 00                1935  SM2     DC.B    '  ',0
000023AC= 20 20 20 00             1936  SM3     DC.B    '   ',0
000023B0= 20 20 20 20 00          1937  SM4     DC.B    '    ',0
000023B5= 20 20 20 20 20 00       1938  SM5     DC.B    '     ',0
000023BB= 20 20 20 20 20 20 00    1939  SM6     DC.B    '      ',0
000023C2= 20 20 20 20 20 20 ...   1940  SM7     DC.B    '       ',0
000023CA                          1941  
000023CA= 54 45 53 54 00          1942  TESTM   DC.B    'TEST',0
000023CF                          1943  
000023CF= 00                      1944  NOTH    DC.B    '',0
000023D0= 00                      1945  NOTH2   DC.B    '',0
000023D1                          1946  
000023D1= 20 2A 45 52 52 4F ...   1947  ERRM    DC.B    ' *ERROR',0
000023D9= 00                      1948  ERRMINS DC.B    '',0
000023DA= 20 2A 45 52 52 4F ...   1949  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
000023FF                          1950  
000023FF= 2E 42 00                1951  MODEB   DC.B    '.B',0
00002402= 2E 57 00                1952  MODEW   DC.B    '.W',0
00002405= 2E 4C 00                1953  MODEL   DC.B    '.L',0
00002408                          1954  
00002408= 41 00                   1955  VALA    DC.B    'A',0
0000240A= 44 00                   1956  VALD    DC.B    'D',0
0000240C= 23 00                   1957  VALN    DC.B    '#',0
0000240E= 30 00                   1958  VAL0    DC.B    '0',0
00002410= 51 00                   1959  VALQ    DC.B    'Q',0
00002412= 4D 00                   1960  VALM    DC.B    'M',0
00002414                          1961  
00002414= 28 00                   1962  OPENPTR     DC.B    '(',0
00002416= 2D 28 00                1963  OPENDPTR    DC.B    '-(',0
00002419                          1964  
00002419= 29 00                   1965  CLOSEPTR    DC.B    ')',0
0000241B= 29 2B 00                1966  CLOSEIPTR   DC.B    ')+',0
0000241E                          1967  
0000241E= 2C 00                   1968  COMMA   DC.B    ',',0
00002420= 24 00                   1969  DOLLAR  DC.B    '$',0
00002422= 2F 00                   1970  SLASH   DC.B    '/',0
00002424= 2D 00                   1971  DASH    DC.B    '-',0
00002426                          1972  
00002426= 4E 4F 50 00             1973  NOPM    DC.B    'NOP',0
0000242A                          1974  
0000242A= 4D 4F 56 45 00          1975  MOVEM   DC.B    'MOVE',0
0000242F                          1976  
0000242F= 41 44 44 00             1977  ADDM    DC.B    'ADD',0
00002433                          1978  
00002433= 53 55 42 00             1979  SUBM    DC.B    'SUB',0
00002437                          1980  
00002437= 4C 45 41 00             1981  LEAM    DC.B    'LEA',0
0000243B                          1982  
0000243B= 41 4E 44 00             1983  ANDM    DC.B    'AND',0
0000243F= 4F 52 00                1984  ORM     DC.B    'OR',0
00002442= 4E 4F 54 00             1985  NOTM    DC.B    'NOT',0
00002446                          1986  
00002446= 4C 53 00                1987  LSM    DC.B    'LS',0
00002449= 4C 53 52 00             1988  LSRM    DC.B    'LSR',0
0000244D= 41 53 00                1989  ASM    DC.B    'AS',0
00002450= 41 53 52 00             1990  ASRM    DC.B    'ASR',0
00002454                          1991  
00002454= 52 4F 00                1992  ROM    DC.B    'RO',0
00002457= 52 4F 52 00             1993  RORM    DC.B    'ROR',0
0000245B                          1994  
0000245B= 42 47 54 00             1995  BGTM    DC.B    'BGT',0
0000245F= 42 4C 45 00             1996  BLEM    DC.B    'BLE',0
00002463= 42 45 51 00             1997  BEQM    DC.B    'BEQ',0
00002467                          1998  
00002467= 4A 53 52 00             1999  JSRM    DC.B    'JSR',0
0000246B= 52 54 53 00             2000  RTSM    DC.B    'RTS',0
0000246F                          2001  
0000246F= 42 52 41 00             2002  BRAM    DC.B    'BRA',0
00002473                          2003  
00002473                          2004  
00002473                          2005      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1F14
ADDCONT             1EA0
ADDDATACHECK        1F2E
ADDM                242F
ADDRMODEALL         120C
ADDSIZEEND          1F1E
ADREG               1660
ADREGP              1678
AEND                228D
AM000               120C
AM001               122C
AM010               1254
AM011               1284
AM100               12B4
AM111               12E4
AM111001            1312
AM111100            1338
AMEND               1366
ANDM                243B
ASM                 244D
ASRM                2450
ASTART              2276
AUTHOR              22E9
BEQM                2463
BGTM                245B
BLEM                245F
BRAM                246F
CLOSEIPTR           241B
CLOSEPTR            2419
COMMA               241E
CR                  D
DADD                1E52
DADDA               1EF8
DADDEA              1EBE
DADDPRNTREG         1E92
DADDQ               1A7A
DAND                139E
DANDA               1428
DANDB               13EC
DANDL               1414
DANDW               1400
DAS                 2010
DASH                2424
DATACHECKCONT       1ED6
DBEQ                1C26
DBGT                1BAA
DBLE                1BE6
DBRA                1B1E
DBRA_16BIT          1B66
DBRA_32BIT          1B88
DISASM              136C
DJSR                16E2
DJSR_CUSL           177A
DJSR_CUSW           175C
DJSR_REG            1736
DLEA                17A4
DLEAP               17DA
DLS                 2004
DMOVE2              143E
DMOVEA              14E2
DMOVEM              18B2
DMOVEQ              1C68
DNOP                15A6
DNOT                15B2
DNOTA               1612
DNOTB               15D6
DNOTL               15FE
DNOTW               15EA
DOLLAR              2420
DOR                 1CD2
DORA                1D3E
DORAD               1D8C
DORAE               1D64
DORB                1D02
DORL                1D2A
DORW                1D16
DREG                1648
DRO                 201C
DRTS                1798
DS0                 1376
DS00                138A
DS01                1504
DS010               1522
DS0100              155E
DS0101              1A78
DS011               152C
DS0110              1AF2
DS0111              1C66
DS1                 1380
DS10                150E
DS100               1536
DS1000              1CD0
DS1001              1DAC
DS101               1540
DS1010              1E3E
DS1011              1E44
DS11                1518
DS110               154A
DS1100              1E4A
DS1101              1E50
DS111               1554
DS1110              1F38
DS1110A             1F8C
DS1110B             1FC6
DS1110LSIDE         203E
DS1110MEM           2046
DS1110MEMA          206C
DS1110MEM_CUSL      2130
DS1110MEM_CUSW      2112
DS1110MEM_DEC       20EC
DS1110MEM_INC       20C6
DS1110MEM_REG       20A0
DS1110SIDE          2028
DS1110SIDEEND       2044
DS1110_REG_D        1FFA
DS1110_REG_I        1FF0
DS1111              214E
DSEND               2180
DSEOF               2182
DSERR               2154
DSERREA             2174
DSERRINS            2164
DSUB                1DAE
DSUBEA              1E0A
DSUBPRNTREG         1DE6
END                 21B0
ENDMSG              22C1
ERRM                23D1
ERRMEA              23DA
ERRMINS             23D9
EXT                 16C0
EXTW                16D6
HDONE               11C0
HEXOUT              117A
HHEX                1194
HNUM                119C
HSKIP2              11AA
HSKIP3              11BE
HSTEP               1182
HSTEP2              11A0
HT                  9
HTM                 23A5
INTRO               21EE
JSR010              1806
JSR111              1836
JSR111001           1868
JSRM                2467
JSRPRINT2           1892
LB                  23A2
LEAM                2437
LF                  A
LSM                 2446
LSRM                2449
MADREG              1698
MODEB               23FF
MODEL               2405
MODEW               2402
MOVECONT            1462
MOVEERRCHECK        14F8
MOVEM               242A
MOVEM2              1954
MOVEM3              198E
MOVEM31             19A4
MOVEM32             19AA
MOVEM4              19D0
MOVEM5              1A16
MOVEMEA             18EE
MOVEMEB             191A
MOVEMEB1            1934
MOVEMEB2            193A
MOVEML              18E6
MOVEMLOOP           1A32
MOVEMLOOPDONE       1A72
MOVEMLOOPINC        1A6E
MOVEMLOOPSINGLEAR   1A74
MOVEMSHIFTL         1A54
MOVEMSHIFTR         1A5C
MOVEMSTEP           1A3A
MOVEMSTEP1          1A46
MOVEMSTEP2          1A64
MSDONE              14A8
MSIZE               1462
MSIZEB              148A
MSIZEL              149E
MSIZEW              1494
NOPM                2426
NOTH                23CF
NOTH2               23D0
NOTM                2442
OPENDPTR            2416
OPENPTR             2414
ORM                 243F
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1EF0
PSTEP               108E
PSTEP2              10BE
RCONT               1166
READLN              1118
REST                22A4
ROM                 2454
RORM                2457
RPAUSE              116E
RSTEP               111E
RTSM                246B
SDONE               1208
SIZE                11C2
SIZEB               11EA
SIZEL               11FE
SIZEW               11F4
SLASH               2422
SM1                 23A7
SM2                 23A9
SM3                 23AC
SM4                 23B0
SM5                 23B5
SM6                 23BB
SM7                 23C2
SRET                120A
START               1000
STARTER             0
SUBM                2433
TEST                102A
TESTM               23CA
VAL0                240E
VALA                2408
VALD                240A
VALM                2412
VALN                240C
VALQ                2410
VERR1               10E8
VERR1M              230E
VERR2               10F8
VERR2M              2348
VERR3               1108
VERR3M              236E
VINPUT              10DE
