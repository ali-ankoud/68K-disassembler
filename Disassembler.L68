00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/29/2023 7:22:06 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: Ben Schipunov contribution to the disassembler
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000                            14  
00001000  43F9 0000175A             15          LEA     INTRO,A1    *Intro text
00001006  103C 000E                 16          MOVE.B  #14,D0
0000100A  4E4F                      17          TRAP    #15
0000100C                            18          
0000100C  43F9 000017E2             19          LEA     ASTART,A1   *Input prompt text #1
00001012  4E4F                      20          TRAP    #15
00001014                            21  
00001014  103C 0002                 22          MOVE.B  #2,D0       *String prompt #1
00001018  4E4F                      23          TRAP    #15
0000101A                            24          
0000101A  B27C 0008                 25          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000101E  6E00 00B2                 26          BGT     VERR3
00001022                            27          
00001022  4EB9 00001050             28          JSR     PARSE       *Parse string #1
00001028                            29          
00001028                            30  
00001028  2641                      31          MOVE.L  D1,A3
0000102A                            32          
0000102A  43F9 000017F9             33          LEA     AEND,A1     *Input prompt text #2
00001030  103C 000E                 34          MOVE.B  #14,D0
00001034  4E4F                      35          TRAP    #15
00001036                            36          
00001036  103C 0002                 37          MOVE.B  #2,D0       *String prompt #2
0000103A  4E4F                      38          TRAP    #15
0000103C                            39          
0000103C  B27C 0008                 40          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001040  6E00 0090                 41          BGT     VERR3
00001044                            42          
00001044  4EB9 00001050             43          JSR     PARSE       *Parse string #2
0000104A                            44          
0000104A  2841                      45          MOVE.L  D1,A4
0000104C                            46          
0000104C  6000 005A                 47          BRA     VINPUT      *Verify inputs
00001050                            48          
00001050                            49  *--------------------------------------------------------------------------------------------------
00001050                            50  
00001050                            51  PARSE                       *PARSE: Initialize variables involved in parsing
00001050  123C 0000                 52          MOVE.B  #0,D1       * [D1] parse output
00001054  143C 0008                 53          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
00001058                            54          
00001058                            55  PSTEP                       *PSTEP: Step in parsing for loop
00001058  1019                      56          MOVE.B  (A1)+,D0    *Read next byte from A1
0000105A  B03C 0000                 57          CMP.B   #0,D0       *Check if reached end of string input
0000105E  6700 0046                 58          BEQ     PDONE       *Break the for loop if reached end
00001062  E989                      59          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
00001064  B03C 003A                 60          CMP.B   #58,D0      *Distinguish between letter and number
00001068  6D00 001A                 61          BLT     PNUM        *Handle number
0000106C                            62  
0000106C  0400 0037                 63  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
00001070  0C00 000F                 64          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
00001074  6E00 0006                 65          BGT     PCAPS       *Handle lowercase
00001078  6000 000E                 66          BRA     PSTEP2
0000107C                            67       
0000107C  0400 0020                 68  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
00001080  6000 0006                 69          BRA     PSTEP2
00001084                            70  
00001084  0400 0030                 71  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
00001088                            72          
00001088  0C00 000F                 73  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
0000108C  6E00 0034                 74          BGT     VERR2
00001090  0C00 0000                 75          CMPI.B   #0,D0
00001094  6D00 002C                 76          BLT     VERR2
00001098  D280                      77          ADD.L   D0,D1       *Append hex char to parse output
0000109A  5302                      78          SUBQ.B  #1,D2       *Decrement the counter
0000109C  0C02 0000                 79          CMPI.B   #0,D2      *Compare if we reached max count
000010A0  6700 0004                 80          BEQ     PDONE       *Complete parsing
000010A4  60B2                      81          BRA     PSTEP       *Or else continue loop
000010A6                            82  
000010A6  4E75                      83  PDONE   RTS
000010A8                            84  
000010A8                            85  *--------------------------------------------------------------------------------------------------
000010A8                            86  
000010A8  B9CB                      87  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010AA  6D00 0006                 88          BLT     VERR1
000010AE  6000 0032                 89          BRA     READLN
000010B2                            90  
000010B2  43F9 00001810             91  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010B8  103C 000E                 92          MOVE.B  #14,D0
000010BC  4E4F                      93          TRAP    #15
000010BE  6000 0694                 94          BRA     END
000010C2                            95  
000010C2  43F9 0000184A             96  VERR2   LEA     VERR2M,A1   *Throw range error
000010C8  103C 000E                 97          MOVE.B  #14,D0
000010CC  4E4F                      98          TRAP    #15
000010CE  6000 0684                 99          BRA     END
000010D2                           100  
000010D2  43F9 00001870            101  VERR3   LEA     VERR3M,A1   *Throw length error
000010D8  103C 000E                102          MOVE.B  #14,D0
000010DC  4E4F                     103          TRAP    #15
000010DE  6000 0674                104          BRA     END
000010E2                           105          
000010E2                           106  *--------------------------------------------------------------------------------------------------
000010E2                           107  
000010E2                           108  READLN                              *READLN: Start READLN for loop
000010E2  244B                     109          MOVE.L  A3,A2               *Set current address to start address
000010E4  1A3C 0000                110          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
000010E8                           111  
000010E8                           112  RSTEP                               *RSTEP: 
000010E8  381A                     113          MOVE.W  (A2)+,D4
000010EA  340A                     114          MOVE.W  A2,D2
000010EC  5542                     115          SUBQ.W  #2,D2
000010EE                           116          
000010EE  48E7 0400                117          MOVEM.L D5,-(SP)
000010F2  1A3C 0000                118          MOVE.B  #0,D5
000010F6  4EB9 00001144            119          JSR     HEXOUT              *Run printing operation for HEX address
000010FC  4CDF 0020                120          MOVEM.L (SP)+,D5
00001100                           121          
00001100  43F9 000018AB            122          LEA     SM2,A1              *Horizontal tab indent after printing hex
00001106  103C 000E                123          MOVE.B  #14,D0
0000110A  4E4F                     124          TRAP    #15
0000110C                           125          
0000110C  48E7 7F0F                126          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001110  4EB9 000011D6            127          JSR     DISASM              *Run disassembly for current machine code
00001116  4CDF F0FE                128          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
0000111A                           129          
0000111A  5205                     130          ADDQ.B  #1,D5       *Increment counter by 1
0000111C  BA3C 0020                131          CMP.B   #32,D5      *Check if we reached 32 lines
00001120  6700 0016                132          BEQ     RPAUSE      *Branch to pausing code
00001124                           133          
00001124  43F9 000018A4            134          LEA     LB,A1       *Print line break
0000112A  103C 000E                135          MOVE.B  #14,D0      
0000112E  4E4F                     136          TRAP    #15
00001130                           137          
00001130                           138  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001130  B9CA                     139          CMP.L   A2,A4       *Check if we reached the end address
00001132  6D00 0620                140          BLT     END         *End loop if so
00001136  60B0                     141          BRA     RSTEP       *Or else continue the loop
00001138                           142          
00001138                           143  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
00001138  1A3C 0000                144          MOVE.B  #0,D5       * Reset D5 counter
0000113C  103C 0005                145          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001140  4E4F                     146          TRAP    #15         * Only used for waiting for user to hit ENTER
00001142  60EC                     147          BRA     RCONT       *Continue with READLN loop
00001144                           148  
00001144                           149  *--------------------------------------------------------------------------------------------------
00001144                           150  
00001144                           151  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
00001144  103C 0006                152          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
00001148  163C 0008                153          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
0000114C                           154          
0000114C                           155  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
0000114C  E99A                     156          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
0000114E  2202                     157          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001150  0281 0000000F            158          ANDI.L  #$F,D1      * Filter to the right four bits
00001156  B23C 000A                159          CMP.B   #10,D1      *Distinguish between number and letter
0000115A  6D00 000A                160          BLT     HNUM        *Branch to number handling, or continue to letter handling
0000115E                           161          
0000115E                           162  HHEX                        *HHEX: Handle letters from HEXOUT for loop
0000115E  0601 0037                163          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001162  6000 0006                164          BRA     HSTEP2      *Branch to step 2 of the iteration
00001166                           165  
00001166                           166  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
00001166  0601 0030                167          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
0000116A                           168  
0000116A                           169  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
0000116A  5303                     170          SUBQ.B  #1,D3       *Decrement counter for longword tracking
0000116C                           171          
0000116C  B205                     172          CMP.B   D5,D1
0000116E  6700 0004                173          BEQ     HSKIP2
00001172                           174          
00001172  4E4F                     175          TRAP #15            *Will print the ASCII value stored in D1
00001174  0C03 0000                176  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
00001178  6700 0010                177          BEQ     HDONE       *End loop if done
0000117C                           178          
0000117C  B23C 0030                179          CMP.B   #48,D1
00001180  6700 0006                180          BEQ     HSKIP3
00001184                           181          
00001184  1A3C 0000                182          MOVE.B  #0,D5
00001188                           183          
00001188  60C2                     184  HSKIP3  BRA     HSTEP       *Or else continue loop
0000118A                           185          
0000118A  4E75                     186  HDONE   RTS
0000118C                           187  
0000118C                           188  
0000118C                           189  *--------------------------------------------------------------------------------------------------
0000118C                           190  
0000118C  103C 000E                191  SIZE    MOVE.B  #14,D0
00001190  BA3C 0000                192          CMP.B   #%00,D5
00001194  6700 001E                193          BEQ     SIZEB
00001198  BA3C 0001                194          CMP.B   #%01,D5
0000119C  6700 0020                195          BEQ     SIZEW
000011A0  BA3C 0002                196          CMP.B   #%10,D5
000011A4  6700 0022                197          BEQ     SIZEL
000011A8  BA3C 0003                198          CMP.B   #%11,D5
000011AC  6700 0010                199          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011B0  6000 0022                200          BRA     SRET
000011B4                           201          
000011B4  43F9 000018DA            202  SIZEB   LEA     MODEB,A1
000011BA  6000 0016                203          BRA     SDONE
000011BE                           204  
000011BE  43F9 000018DD            205  SIZEW   LEA     MODEW,A1
000011C4  6000 000C                206          BRA     SDONE
000011C8                           207  
000011C8  43F9 000018E0            208  SIZEL   LEA     MODEL,A1
000011CE  6000 0002                209          BRA     SDONE
000011D2                           210  
000011D2  4E4F                     211  SDONE   TRAP    #15
000011D4                           212  
000011D4  4E75                     213  SRET    RTS
000011D6                           214  
000011D6                           215  *--------------------------------------------------------------------------------------------------
000011D6                           216  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
000011D6                           217  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
000011D6                           218  
000011D6                           219  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
000011D6                           220  
000011D6                           221  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
000011D6                           222  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
000011D6                           223  
000011D6                           224  DISASM                      *DISASM: Disassemble a machine code
000011D6  E34C                     225          LSL.W   #1,D4       * Tier 0 binary search
000011D8  6500 0010                226          BCS     DS1
000011DC  6000 0002                227          BRA     DS0
000011E0                           228  
000011E0                           229  *DS Tier 1 ----------------------------------------------------------------------------------------
000011E0                           230  
000011E0                           231  DS0                         *DS0: Tier 1 binary search for 0 side
000011E0  E34C                     232          LSL.W   #1,D4       
000011E2  6500 002A                233          BCS     DS01
000011E6  6000 000C                234          BRA     DS00
000011EA                           235  
000011EA                           236  DS1                         *DS1: Tier 1 binary search for 1 side
000011EA  E34C                     237          LSL.W   #1,D4       
000011EC  6500 0034                238          BCS     DS11
000011F0  6000 0026                239          BRA     DS10
000011F4                           240  
000011F4                           241  DS00                        *DS00: Disassembly processing for 00 prefix
000011F4  E55C                     242          ROL.W   #2,D4       
000011F6  3A04                     243          MOVE.W  D4,D5
000011F8  0204 0003                244          ANDI.B  #%11,D4
000011FC  0C04 0000                245          CMPI.B  #%00,D4
00001200  6700 0006                246          BEQ     DAND
00001204  6000 054C                247          BRA     DSEND
00001208                           248  
00001208  4E71                     249  DAND    NOP                 *DAND: Disassembly function serving DAND        
0000120A                           250          
0000120A  4E71                     251  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000120C                           252          
0000120C                           253  
0000120C  4E71                     254  DMOVEA  NOP
0000120E                           255  
0000120E                           256  *DS Tier 2 ----------------------------------------------------------------------------------------
0000120E                           257  
0000120E                           258  DS01                        *DS01: Tier 2 binary search for 01 side
0000120E  E34C                     259          LSL.W   #1,D4
00001210  6500 0024                260          BCS     DS011
00001214  6000 0016                261          BRA     DS010
00001218                           262  
00001218                           263  DS10                        *DS10: Tier 2 binary search for 10 side
00001218  E34C                     264          LSL.W   #1,D4
0000121A  6500 002E                265          BCS     DS101
0000121E  6000 0020                266          BRA     DS100
00001222                           267  
00001222                           268  DS11                        *DS11: Tier 2 binary search for 11 side
00001222  E34C                     269          LSL.W   #1,D4
00001224  6500 0038                270          BCS     DS111
00001228  6000 002A                271          BRA     DS110
0000122C                           272  
0000122C                           273  *DS Tier 3 ----------------------------------------------------------------------------------------
0000122C                           274  
0000122C                           275  DS010                       *DS010: Tier 3 binary search for 010 side
0000122C  E34C                     276          LSL.W   #1,D4
0000122E  6500 0138                277          BCS     DS0101
00001232  6000 0034                278          BRA     DS0100
00001236                           279  
00001236                           280  DS011                       *DS011: Tier 3 binary search for 011 side
00001236  E34C                     281          LSL.W   #1,D4
00001238  6500 02AE                282          BCS     DS0111
0000123C  6000 0136                283          BRA     DS0110
00001240                           284  
00001240                           285  DS100                       *DS100: Tier 3 binary search for 100 side
00001240  E34C                     286          LSL.W   #1,D4
00001242  6500 02BC                287          BCS     DS1001
00001246  6000 02AC                288          BRA     DS1000
0000124A                           289  
0000124A                           290  DS101                       *DS101: Tier 3 binary search for 101 side
0000124A  E34C                     291          LSL.W   #1,D4
0000124C  6500 02C4                292          BCS     DS1011
00001250  6000 02BA                293          BRA     DS1010
00001254                           294  
00001254                           295  DS110                       *DS110: Tier 3 binary search for 110 side
00001254  E34C                     296          LSL.W   #1,D4
00001256  6500 02C6                297          BCS     DS1101
0000125A  6000 02BC                298          BRA     DS1100
0000125E                           299  
0000125E                           300  DS111                       *DS111: Tier 3 binary search for 111 side
0000125E  E34C                     301          LSL.W   #1,D4
00001260  6500 04DE                302          BCS     DS1111
00001264  6000 02C4                303          BRA     DS1110
00001268                           304  
00001268                           305  *DS Tier 4 ----------------------------------------------------------------------------------------
00001268                           306  
00001268                           307  DS0100                      *DS0100: Processing for 0100 prefix
00001268  0C44 E710                308          CMPI.W  #%1110011100010000,D4
0000126C  6700 0026                309          BEQ     DNOP
00001270  0C44 E750                310          CMPI.W  #%1110011101010000,D4
00001274  6700 00E6                311          BEQ     DRTS
00001278                           312          
00001278  E95C                     313          ROL.W   #4,D4
0000127A  1404                     314          MOVE.B  D4,D2
0000127C  0202 000F                315          ANDI.B  #%1111,D2
00001280                           316          
00001280  B43C 000E                317          CMP.B   #%1110,D2
00001284  6700 0020                318          BEQ     DJSR
00001288                           319          
00001288  B43C 0006                320          CMP.B   #%0110,D2
0000128C  6700 0012                321          BEQ     DNOT
00001290                           322          
00001290  6000 04C0                323          BRA     DSEND
00001294                           324  
00001294  43F9 000018F9            325  DNOP    LEA     NOPM,A1
0000129A  4E4F                     326          TRAP    #15
0000129C  6000 04B4                327          BRA     DSEND
000012A0                           328          
000012A0  4E71                     329  DNOT    NOP
000012A2  6000 04AE                330          BRA     DSEND
000012A6                           331          
000012A6  E55C                     332  DJSR    ROL.W   #2,D4
000012A8  1404                     333          MOVE.B  D4,D2
000012AA  0202 0007                334          ANDI.B  #%111,D2
000012AE  0C02 0002                335          CMPI.B  #%10,D2
000012B2  6600 0492                336          BNE     DSERR
000012B6                           337          
000012B6  43F9 0000193A            338          LEA     JSRM,A1
000012BC  4E4F                     339          TRAP    #15
000012BE                           340          
000012BE  43F9 000018C4            341          LEA     SM7,A1
000012C4  4E4F                     342          TRAP    #15
000012C6                           343  
000012C6  E75C                     344          ROL.W   #3,D4       * [D2] address mode
000012C8  1404                     345          MOVE.B  D4,D2
000012CA  0202 0007                346          ANDI.B  #%111,D2
000012CE                           347          
000012CE  E75C                     348          ROL.W   #3,D4       * [D1] address register
000012D0  1204                     349          MOVE.B  D4,D1
000012D2  0201 0007                350          ANDI.B  #%111,D1
000012D6                           351          
000012D6  0C02 0002                352          CMPI.B  #%010,D2
000012DA  6700 001E                353          BEQ     DJSR_REG
000012DE                           354          
000012DE  0C02 0007                355          CMPI.B  #%111,D2
000012E2  6600 0462                356          BNE     DSERR
000012E6                           357          
000012E6  0C01 0000                358          CMPI.B  #%000,D1
000012EA  6700 0034                359          BEQ     DJSR_CUSW
000012EE                           360          
000012EE  0C01 0001                361          CMPI.B  #%001,D1
000012F2  6700 004A                362          BEQ     DJSR_CUSL
000012F6                           363          
000012F6  6000 045A                364          BRA     DSEND
000012FA                           365          
000012FA                           366          
000012FA                           367          
000012FA                           368  DJSR_REG        
000012FA  43F9 000018EB            369          LEA     OPENPTR,A1
00001300  4E4F                     370          TRAP    #15
00001302                           371          
00001302  43F9 000018E3            372          LEA     VALA,A1
00001308  4E4F                     373          TRAP    #15
0000130A                           374          
0000130A  103C 0003                375          MOVE.B  #3,D0
0000130E  4E4F                     376          TRAP    #15
00001310  103C 000E                377          MOVE.B  #14,D0
00001314                           378          
00001314  43F9 000018F0            379          LEA     CLOSEPTR,A1
0000131A  4E4F                     380          TRAP    #15
0000131C                           381          
0000131C  6000 0434                382          BRA     DSEND
00001320                           383  
00001320                           384          
00001320                           385  DJSR_CUSW
00001320  43F9 000018F7            386          LEA     DOLLAR,A1
00001326  4E4F                     387          TRAP    #15
00001328  341A                     388          MOVE.W  (A2)+,D2
0000132A  48E7 0400                389          MOVEM.L D5,-(SP)
0000132E  1A3C 0030                390          MOVE.B  #48,D5
00001332  4EB8 1144                391          JSR     HEXOUT
00001336  4CDF 0020                392          MOVEM.L (SP)+,D5
0000133A  6000 0416                393          BRA     DSEND
0000133E                           394  
0000133E                           395  DJSR_CUSL
0000133E  43F9 000018F7            396          LEA     DOLLAR,A1
00001344  4E4F                     397          TRAP    #15
00001346  241A                     398          MOVE.L  (A2)+,D2
00001348  48E7 0400                399          MOVEM.L D5,-(SP)
0000134C  1A3C 0030                400          MOVE.B  #48,D5
00001350  4EB8 1144                401          JSR     HEXOUT
00001354  4CDF 0020                402          MOVEM.L (SP)+,D5
00001358  6000 03F8                403          BRA     DSEND
0000135C                           404          
0000135C  43F9 0000193E            405  DRTS    LEA     RTSM,A1
00001362  4E4F                     406          TRAP    #15
00001364  6000 03EC                407          BRA     DSEND
00001368                           408  
00001368                           409  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001368                           410  
00001368  4E71                     411  DS0101  NOP
0000136A  6000 03E6                412          BRA     DSEND
0000136E                           413          
0000136E  4E71                     414  DADDQ   NOP
00001370  6000 03E0                415          BRA     DSEND
00001374                           416          
00001374                           417  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001374                           418  
00001374                           419  DS0110  
00001374  E95C                     420          ROL.W   #4,D4   *Get next 4 bits
00001376  1404                     421          MOVE.B  D4,D2   *Copy to D2
00001378  0202 000F                422          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
0000137C                           423          
0000137C  B43C 0000                424          CMP.B   #%0000,D2   *BRA
00001380  6700 001E                425          BEQ     DBRA
00001384                           426          
00001384  B43C 000E                427          CMP.B   #%1110,D2   *BGT   
00001388  6700 00A2                428          BEQ     DBGT
0000138C                           429          
0000138C  B43C 000F                430          CMP.B   #%1111,D2   *BLE   
00001390  6700 00D6                431          BEQ     DBLE
00001394                           432          
00001394  B43C 0007                433          CMP.B   #%0111,D2   *BEQ   
00001398  6700 010E                434          BEQ     DBEQ
0000139C                           435          
0000139C  6000 03B4                436          BRA     DSEND
000013A0                           437          
000013A0  43F9 00001942            438  DBRA    LEA     BRAM,A1
000013A6  4E4F                     439          TRAP    #15
000013A8                           440          
000013A8  43F9 000018C4            441          LEA     SM7,A1
000013AE  4E4F                     442          TRAP    #15
000013B0                           443  
000013B0  E15C                     444          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000013B2  1204                     445          MOVE.B  D4,D1
000013B4  0281 00001100            446          ANDI.L  #$1100,D1
000013BA                           447          
000013BA  0C01 0000                448          CMPI.B  #%00000000,D1
000013BE  6700 0028                449          BEQ     DBRA_16BIT      * Word
000013C2                           450          
000013C2  0C01 00FF                451          CMPI.B  #%11111111,D1
000013C6  6700 0042                452          BEQ     DBRA_32BIT      * Long
000013CA                           453          
000013CA                           454          * 8 Bit Displacement
000013CA  43F9 000018F7            455          LEA     DOLLAR,A1
000013D0  4E4F                     456          TRAP    #15
000013D2                           457          
000013D2  341A                     458          MOVE.W  (A2)+,D2
000013D4  D441                     459          ADD.W   D1,D2
000013D6  5842                     460          ADD.W   #4,D2   *unsure   
000013D8  1A3C 0030                461          MOVE.B  #48,D5
000013DC  4EB8 1144                462          JSR     HEXOUT
000013E0  6000 0370                463          BRA     DSEND
000013E4                           464  
000013E4                           465          *Displacement is put in D1      
000013E4                           466          
000013E4                           467          
000013E4  6000 036C                468          BRA     DSEND
000013E8                           469          
000013E8                           470  DBRA_16BIT
000013E8  43F9 000018F7            471          LEA     DOLLAR,A1
000013EE  4E4F                     472          TRAP    #15
000013F0  341A                     473          MOVE.W  (A2)+,D2
000013F2  D44A                     474          ADD.W   A2,D2
000013F4  5542                     475          SUB.W   #2,D2   *unsure
000013F6  48E7 0400                476          MOVEM.L D5,-(SP)    
000013FA  1A3C 0030                477          MOVE.B  #48,D5
000013FE  4EB8 1144                478          JSR     HEXOUT
00001402  4CDF 0020                479          MOVEM.L (SP)+,D5
00001406  6000 034A                480          BRA     DSEND
0000140A                           481  
0000140A                           482  DBRA_32BIT
0000140A  43F9 000018F7            483          LEA     DOLLAR,A1
00001410  4E4F                     484          TRAP    #15
00001412  241A                     485          MOVE.L  (A2)+,D2
00001414  D48A                     486          ADD.L   A2,D2
00001416  5582                     487          SUB.L   #2,D2   *unsure
00001418  48E7 0400                488          MOVEM.L D5,-(SP)
0000141C  1A3C 0030                489          MOVE.B  #48,D5
00001420  4EB8 1144                490          JSR     HEXOUT
00001424  4CDF 0020                491          MOVEM.L (SP)+,D5
00001428  6000 0328                492          BRA     DSEND
0000142C                           493          
0000142C                           494          
0000142C                           495          
0000142C  43F9 0000192E            496  DBGT    LEA     BGTM,A1
00001432  4E4F                     497          TRAP    #15
00001434                           498          
00001434  43F9 000018C4            499          LEA     SM7,A1
0000143A  4E4F                     500          TRAP    #15
0000143C                           501          
0000143C  E15C                     502          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000143E  1204                     503          MOVE.B  D4,D1
00001440  0241 00FF                504          ANDI.W  #%0000000011111111,D1
00001444                           505          
00001444  0C01 0000                506          CMPI.B  #%00000000,D1
00001448  679E                     507          BEQ     DBRA_16BIT      * Word
0000144A                           508          
0000144A  0C01 00FF                509          CMPI.B  #%11111111,D1
0000144E  67BA                     510          BEQ     DBRA_32BIT      * Long
00001450                           511          
00001450  43F9 000018F7            512          LEA     DOLLAR,A1
00001456  4E4F                     513          TRAP    #15
00001458                           514      
00001458  340A                     515          MOVE.W  A2,D2
0000145A  D441                     516          ADD.W   D1,D2
0000145C                           517    
0000145C  1A3C 0030                518          MOVE.B  #48,D5
00001460  4EB8 1144                519          JSR     HEXOUT
00001464  6000 02EC                520          BRA     DSEND
00001468                           521  
00001468  43F9 00001932            522  DBLE    LEA     BLEM,A1
0000146E  4E4F                     523          TRAP    #15
00001470                           524          
00001470  43F9 000018C4            525          LEA     SM7,A1
00001476  4E4F                     526          TRAP    #15
00001478                           527          
00001478  E15C                     528          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000147A  1204                     529          MOVE.B  D4,D1
0000147C  0241 00FF                530          ANDI.W  #%0000000011111111,D1
00001480                           531          
00001480  0C01 0000                532          CMPI.B  #%00000000,D1
00001484  6700 FF62                533          BEQ     DBRA_16BIT      * Word
00001488                           534          
00001488  0C01 00FF                535          CMPI.B  #%11111111,D1
0000148C  6700 FF7C                536          BEQ     DBRA_32BIT      * Long
00001490                           537          
00001490  43F9 000018F7            538          LEA     DOLLAR,A1
00001496  4E4F                     539          TRAP    #15
00001498                           540          
00001498  340A                     541          MOVE.W  A2,D2
0000149A  D441                     542          ADD.W   D1,D2
0000149C                           543   
0000149C  1A3C 0030                544          MOVE.B  #48,D5
000014A0  4EB8 1144                545          JSR     HEXOUT
000014A4                           546          
000014A4  6000 02AC                547          BRA     DSEND
000014A8                           548  
000014A8  43F9 00001936            549  DBEQ    LEA     BEQM,A1
000014AE  4E4F                     550          TRAP    #15
000014B0                           551          
000014B0  43F9 000018C4            552          LEA     SM7,A1
000014B6  4E4F                     553          TRAP    #15
000014B8                           554          
000014B8  E15C                     555          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000014BA  1204                     556          MOVE.B  D4,D1
000014BC  0241 00FF                557          ANDI.W  #%0000000011111111,D1
000014C0                           558          
000014C0  0C01 0000                559          CMPI.B  #%00000000,D1
000014C4  6700 FF22                560          BEQ     DBRA_16BIT      * Word
000014C8                           561          
000014C8  0C01 00FF                562          CMPI.B  #%11111111,D1
000014CC  6700 FF3C                563          BEQ     DBRA_32BIT      * Long
000014D0                           564          
000014D0  43F9 000018F7            565          LEA     DOLLAR,A1
000014D6  4E4F                     566          TRAP    #15
000014D8                           567  
000014D8  340A                     568          MOVE.W  A2,D2
000014DA  D441                     569          ADD.W   D1,D2
000014DC                           570   
000014DC  1A3C 0030                571          MOVE.B  #48,D5
000014E0  4EB8 1144                572          JSR     HEXOUT
000014E4                           573          
000014E4  6000 026C                574          BRA     DSEND
000014E8                           575  
000014E8                           576  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000014E8                           577  
000014E8  4E71                     578  DS0111  NOP
000014EA  6000 0266                579          BRA     DSEND
000014EE                           580          
000014EE  4E71                     581  DMOVEQ  NOP
000014F0  6000 0260                582          BRA     DSEND
000014F4                           583          
000014F4                           584  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000014F4                           585  
000014F4  4E71                     586  DS1000  NOP
000014F6  6000 025A                587          BRA     DSEND
000014FA                           588          
000014FA  4E71                     589  DOR     NOP
000014FC  6000 0254                590          BRA     DSEND
00001500                           591          
00001500                           592  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001500                           593  
00001500  4E71                     594  DS1001  NOP
00001502  6000 024E                595          BRA     DSEND
00001506                           596          
00001506  4E71                     597  DSUB    NOP
00001508  6000 0248                598          BRA     DSEND
0000150C                           599          
0000150C                           600  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000150C                           601  
0000150C  4E71                     602  DS1010  NOP
0000150E  6000 0242                603          BRA     DSEND
00001512                           604          
00001512                           605  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001512                           606  
00001512  4E71                     607  DS1011  NOP
00001514  6000 023C                608          BRA     DSEND
00001518                           609          
00001518                           610  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001518                           611  
00001518  4E71                     612  DS1100  NOP
0000151A  6000 0236                613          BRA     DSEND
0000151E                           614          
0000151E                           615  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000151E                           616  
0000151E  4E71                     617  DS1101  NOP
00001520  6000 0230                618          BRA     DSEND
00001524                           619          
00001524  4E71                     620  DADDA   NOP
00001526  6000 022A                621          BRA     DSEND
0000152A                           622          
0000152A                           623  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000152A                           624  
0000152A                           625  DS1110
0000152A  E75C                     626          ROL.W   #3,D4           * [D2] Reading count
0000152C  1404                     627          MOVE.B  D4,D2
0000152E  0202 0007                628          ANDI.B  #%111,D2
00001532                           629          
00001532  E35C                     630          ROL.W   #1,D4           * [D3] Reading direction
00001534  1604                     631          MOVE.B  D4,D3
00001536  0203 0001                632          ANDI.B  #%1,D3
0000153A                           633          
0000153A  E55C                     634          ROL.W   #2,D4           * [D5] Reading size
0000153C  1A04                     635          MOVE.B  D4,D5
0000153E  0205 0003                636          ANDI.B  #%11,D5
00001542                           637          
00001542  BA3C 0003                638          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001546  6700 00F0                639          BEQ     DS1110MEM
0000154A                           640          
0000154A  E35C                     641          ROL.W   #1,D4           * [D6] Reading count mode
0000154C  1C04                     642          MOVE.B  D4,D6
0000154E  0206 0001                643          ANDI.B  #%1,D6
00001552                           644          
00001552  E55C                     645          ROL.W   #2,D4           * [D7] reading type of shift
00001554  1E04                     646          MOVE.B  D4,D7
00001556  0207 0003                647          ANDI.B  #%11,D7
0000155A                           648          
0000155A  E75C                     649          ROL.W   #3,D4           * [D1] reading register
0000155C  1204                     650          MOVE.B  D4,D1
0000155E  0201 0007                651          ANDI.B  #%111,D1
00001562                           652          
00001562  BE3C 0001                653          CMP.B   #%01,D7   *Determine shift type
00001566  6700 008E                654          BEQ     DLS
0000156A  BE3C 0000                655          CMP.B   #%00,D7
0000156E  6700 0092                656          BEQ     DAS
00001572  BE3C 0003                657          CMP.B   #%11,D7
00001576  6700 0096                658          BEQ     DRO
0000157A                           659          
0000157A  6000 01D6                660          BRA     DSEND               *Fallback in case of invalid code
0000157E                           661          
0000157E  48E7 FFFF                662  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001582  4EB9 0000161A            663          JSR     DS1110SIDE
00001588  4CDF FFFF                664          MOVEM.L (SP)+,A0-A7/D0-D7
0000158C                           665          
0000158C  48E7 FFFF                666          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001590  4EB8 118C                667          JSR     SIZE
00001594  4CDF FFFF                668          MOVEM.L (SP)+,A0-A7/D0-D7
00001598                           669          
00001598  103C 000E                670          MOVE.B  #14,D0
0000159C  43F9 000018B7            671          LEA     SM5,A1
000015A2  4E4F                     672          TRAP    #15
000015A4                           673          
000015A4  BA3C 0003                674          CMP.B   #%11,D5
000015A8  6700 00B4                675          BEQ     DS1110MEMA
000015AC                           676          
000015AC  BC3C 0001                677          CMP.B   #%1,D6
000015B0  6700 003A                678          BEQ     DS1110_REG_D
000015B4  6000 002C                679          BRA     DS1110_REG_I
000015B8                           680          
000015B8  1C01                     681  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
000015BA                           682          
000015BA  103C 0003                683          MOVE.B  #3,D0
000015BE  1202                     684          MOVE.B  D2,D1
000015C0  4E4F                     685          TRAP    #15
000015C2                           686          
000015C2  103C 000E                687          MOVE.B  #14,D0
000015C6  43F9 000018F5            688          LEA     COMMA,A1
000015CC  4E4F                     689          TRAP    #15
000015CE                           690          
000015CE  43F9 000018E5            691          LEA     VALD,A1
000015D4  4E4F                     692          TRAP    #15
000015D6                           693          
000015D6  103C 0003                694          MOVE.B  #3,D0
000015DA  1206                     695          MOVE.B  D6,D1
000015DC  4E4F                     696          TRAP    #15
000015DE                           697          
000015DE  6000 0172                698          BRA     DSEND
000015E2                           699          
000015E2                           700  DS1110_REG_I
000015E2  43F9 000018E7            701          LEA     VALN,A1
000015E8  4E4F                     702          TRAP    #15
000015EA  60CC                     703          BRA     DS1110B
000015EC                           704  
000015EC                           705  DS1110_REG_D
000015EC  43F9 000018E5            706          LEA     VALD,A1
000015F2  4E4F                     707          TRAP    #15
000015F4  60C2                     708          BRA     DS1110B       
000015F6                           709          
000015F6  43F9 00001919            710  DLS     LEA     LSM,A1
000015FC  4E4F                     711          TRAP    #15
000015FE  6000 FF7E                712          BRA     DS1110A
00001602                           713          
00001602  43F9 00001920            714  DAS     LEA     ASM,A1
00001608  4E4F                     715          TRAP    #15
0000160A  6000 FF72                716          BRA     DS1110A
0000160E                           717          
0000160E  43F9 00001927            718  DRO     LEA     ROM,A1
00001614  4E4F                     719          TRAP    #15
00001616  6000 FF66                720          BRA     DS1110A
0000161A                           721          
0000161A                           722  DS1110SIDE
0000161A  103C 0006                723          MOVE.B  #6,D0
0000161E  B63C 0001                724          CMP.B   #1,D3
00001622  6700 000C                725          BEQ     DS1110LSIDE
00001626  123C 0052                726          MOVE.B  #82,D1
0000162A  4E4F                     727          TRAP    #15
0000162C  6000 0008                728          BRA     DS1110SIDEEND
00001630                           729  
00001630                           730  DS1110LSIDE
00001630  123C 004C                731          MOVE.B  #76,D1
00001634  4E4F                     732          TRAP    #15
00001636                           733          
00001636                           734  DS1110SIDEEND
00001636  4E75                     735          RTS 
00001638                           736  
00001638                           737  DS1110MEM
00001638                           738                                  * Shift type is instead stored in D2
00001638                           739          
00001638  E75C                     740          ROL.W   #3,D4           * [D6] Reading address mode
0000163A  1C04                     741          MOVE.B  D4,D6
0000163C  0206 0007                742          ANDI.B  #%111,D6
00001640                           743          
00001640  E75C                     744          ROL.W   #3,D4           * [D1] Reading address register
00001642  1204                     745          MOVE.B  D4,D1
00001644  0201 0007                746          ANDI.B  #%111,D1
00001648                           747          
00001648  B43C 0001                748          CMP.B   #%01,D2
0000164C  67A8                     749          BEQ     DLS
0000164E  B43C 0000                750          CMP.B   #%00,D2
00001652  67AE                     751          BEQ     DAS
00001654  B43C 0003                752          CMP.B   #%11,D2
00001658  67B4                     753          BEQ     DRO
0000165A  6000 00F6                754          BRA     DSEND
0000165E                           755          
0000165E                           756          
0000165E                           757  DS1110MEMA
0000165E                           758          
0000165E  BC3C 0002                759          CMP.B   #%010,D6
00001662  6700 002E                760          BEQ     DS1110MEM_REG
00001666  BC3C 0003                761          CMP.B   #%011,D6
0000166A  6700 004C                762          BEQ     DS1110MEM_INC
0000166E  BC3C 0004                763          CMP.B   #%100,D6
00001672  6700 006A                764          BEQ     DS1110MEM_DEC
00001676                           765          
00001676  BC3C 0007                766          CMP.B   #%111,D6
0000167A  6600 00CA                767          BNE     DSERR
0000167E                           768          
0000167E  B23C 0000                769          CMP.B   #%000,D1
00001682  6700 0080                770          BEQ     DS1110MEM_CUSW
00001686  B23C 0001                771          CMP.B   #%001,D1
0000168A  6700 0096                772          BEQ     DS1110MEM_CUSL
0000168E                           773          
0000168E  6000 00C2                774          BRA     DSEND
00001692                           775  
00001692                           776  DS1110MEM_REG
00001692  43F9 000018EB            777          LEA     OPENPTR,A1
00001698  4E4F                     778          TRAP    #15
0000169A                           779          
0000169A  43F9 000018E3            780          LEA     VALA,A1
000016A0  4E4F                     781          TRAP    #15
000016A2                           782          
000016A2  103C 0003                783          MOVE.B  #3,D0
000016A6  4E4F                     784          TRAP    #15
000016A8  103C 000E                785          MOVE.B  #14,D0
000016AC                           786          
000016AC  43F9 000018F0            787          LEA     CLOSEPTR,A1
000016B2  4E4F                     788          TRAP    #15
000016B4                           789          
000016B4  6000 009C                790          BRA     DSEND
000016B8                           791  
000016B8                           792  DS1110MEM_INC
000016B8  43F9 000018EB            793          LEA     OPENPTR,A1
000016BE  4E4F                     794          TRAP    #15
000016C0                           795          
000016C0  43F9 000018E3            796          LEA     VALA,A1
000016C6  4E4F                     797          TRAP    #15
000016C8                           798          
000016C8  103C 0003                799          MOVE.B  #3,D0
000016CC  4E4F                     800          TRAP    #15
000016CE  103C 000E                801          MOVE.B  #14,D0
000016D2                           802          
000016D2  43F9 000018F2            803          LEA     CLOSEIPTR,A1
000016D8  4E4F                     804          TRAP    #15
000016DA                           805          
000016DA  6000 0076                806          BRA     DSEND
000016DE                           807  
000016DE                           808  DS1110MEM_DEC
000016DE  43F9 000018ED            809          LEA     OPENDPTR,A1
000016E4  4E4F                     810          TRAP    #15
000016E6                           811          
000016E6  43F9 000018E3            812          LEA     VALA,A1
000016EC  4E4F                     813          TRAP    #15
000016EE                           814          
000016EE  103C 0003                815          MOVE.B  #3,D0
000016F2  4E4F                     816          TRAP    #15
000016F4  103C 000E                817          MOVE.B  #14,D0
000016F8                           818          
000016F8  43F9 000018F0            819          LEA     CLOSEPTR,A1
000016FE  4E4F                     820          TRAP    #15
00001700                           821          
00001700  6000 0050                822          BRA     DSEND
00001704                           823          
00001704                           824  DS1110MEM_CUSW
00001704  43F9 000018F7            825          LEA     DOLLAR,A1
0000170A  4E4F                     826          TRAP    #15
0000170C  341A                     827          MOVE.W  (A2)+,D2
0000170E  48E7 0400                828          MOVEM.L D5,-(SP)
00001712  1A3C 0030                829          MOVE.B  #48,D5
00001716  4EB8 1144                830          JSR     HEXOUT
0000171A  4CDF 0020                831          MOVEM.L (SP)+,D5
0000171E  6000 0032                832          BRA     DSEND
00001722                           833          
00001722                           834  DS1110MEM_CUSL
00001722  43F9 000018F7            835          LEA     DOLLAR,A1
00001728  4E4F                     836          TRAP    #15
0000172A  241A                     837          MOVE.L  (A2)+,D2
0000172C  48E7 0400                838          MOVEM.L D5,-(SP)
00001730  1A3C 0030                839          MOVE.B  #48,D5
00001734  4EB8 1144                840          JSR     HEXOUT
00001738  4CDF 0020                841          MOVEM.L (SP)+,D5
0000173C  6000 0014                842          BRA     DSEND
00001740                           843          
00001740                           844  
00001740                           845  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001740                           846  
00001740  4E71                     847  DS1111  NOP
00001742  6000 000E                848          BRA     DSEND
00001746                           849  
00001746                           850  *DS Final
00001746                           851  *--------------------------------------------------------------------------------------------------
00001746                           852  
00001746  103C 000E                853  DSERR   MOVE.B  #14,D0
0000174A  43F9 000018D1            854          LEA     ERRM,A1
00001750  4E4F                     855          TRAP    #15
00001752                           856  
00001752  4E75                     857  DSEND   RTS
00001754                           858  
00001754  103C 0009                859  END     MOVE.B  #9,D0
00001758  4E4F                     860          TRAP    #15
0000175A                           861  
0000175A                           862  *Initialized Variables
0000175A                           863  *--------------------------------------------------------------------------------------------------
0000175A                           864  
0000175A  =0000000D                865  CR      EQU     $0D
0000175A  =0000000A                866  LF      EQU     $0A
0000175A  =00000009                867  HT      EQU     $09
0000175A                           868  
0000175A= 54 68 69 73 20 69 ...    869  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000017E2= 45 6E 74 65 72 20 ...    870  ASTART  DC.B    'Enter start address: $',0
000017F9= 45 6E 74 65 72 20 ...    871  AEND    DC.B    'Enter end address:   $',0
00001810                           872  
00001810= 45 52 52 4F 52 3A ...    873  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
0000184A= 45 52 52 4F 52 3A ...    874  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
00001870= 45 52 52 4F 52 3A ...    875  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000018A4                           876  
000018A4= 0D 0A 00                 877  LB      DC.B    CR,LF,0
000018A7                           878  
000018A7= 09 00                    879  HTM     DC.B    HT,0
000018A9                           880  
000018A9= 20 00                    881  SM1     DC.B    ' ',0
000018AB= 20 20 00                 882  SM2     DC.B    '  ',0
000018AE= 20 20 20 00              883  SM3     DC.B    '   ',0
000018B2= 20 20 20 20 00           884  SM4     DC.B    '    ',0
000018B7= 20 20 20 20 20 00        885  SM5     DC.B    '     ',0
000018BD= 20 20 20 20 20 20 00     886  SM6     DC.B    '      ',0
000018C4= 20 20 20 20 20 20 ...    887  SM7     DC.B    '       ',0
000018CC                           888  
000018CC= 54 45 53 54 00           889  TESTM   DC.B    'TEST',0
000018D1                           890  
000018D1= 20 20 2A 45 52 52 ...    891  ERRM    DC.B    '  *ERROR',0
000018DA                           892  
000018DA= 2E 42 00                 893  MODEB   DC.B    '.B',0
000018DD= 2E 57 00                 894  MODEW   DC.B    '.W',0
000018E0= 2E 4C 00                 895  MODEL   DC.B    '.L',0
000018E3                           896  
000018E3= 41 00                    897  VALA    DC.B    'A',0
000018E5= 44 00                    898  VALD    DC.B    'D',0
000018E7= 23 00                    899  VALN    DC.B    '#',0
000018E9= 30 00                    900  VAL0    DC.B    '0',0
000018EB                           901  
000018EB= 28 00                    902  OPENPTR     DC.B    '(',0
000018ED= 2D 28 00                 903  OPENDPTR    DC.B    '-(',0
000018F0                           904  
000018F0= 29 00                    905  CLOSEPTR    DC.B    ')',0
000018F2= 29 2B 00                 906  CLOSEIPTR   DC.B    ')+',0
000018F5                           907  
000018F5= 2C 00                    908  COMMA   DC.B    ',',0
000018F7= 24 00                    909  DOLLAR  DC.B    '$',0
000018F9                           910  
000018F9= 4E 4F 50 00              911  NOPM    DC.B    'NOP',0
000018FD                           912  
000018FD= 4D 4F 56 45 00           913  MOVEM   DC.B    'MOVE',0
00001902                           914  
00001902= 41 44 44 00              915  ADDM    DC.B    'ADD',0
00001906                           916  
00001906= 53 55 42 00              917  SUBM    DC.B    'SUB',0
0000190A                           918  
0000190A= 4C 45 41 00              919  LEAM    DC.B    'LEA',0
0000190E                           920  
0000190E= 41 4E 44 00              921  ANDM    DC.B    'AND',0
00001912= 4F 52 00                 922  ORM     DC.B    'OR',0
00001915= 4E 4F 54 00              923  NOTM    DC.B    'NOT',0
00001919                           924  
00001919= 4C 53 00                 925  LSM    DC.B    'LS',0
0000191C= 4C 53 52 00              926  LSRM    DC.B    'LSR',0
00001920= 41 53 00                 927  ASM    DC.B    'AS',0
00001923= 41 53 52 00              928  ASRM    DC.B    'ASR',0
00001927                           929  
00001927= 52 4F 00                 930  ROM    DC.B    'RO',0
0000192A= 52 4F 52 00              931  RORM    DC.B    'ROR',0
0000192E                           932  
0000192E= 42 47 54 00              933  BGTM    DC.B    'BGT',0
00001932= 42 4C 45 00              934  BLEM    DC.B    'BLE',0
00001936= 42 45 51 00              935  BEQM    DC.B    'BEQ',0
0000193A                           936  
0000193A= 4A 53 52 00              937  JSRM    DC.B    'JSR',0
0000193E= 52 54 53 00              938  RTSM    DC.B    'RTS',0
00001942                           939  
00001942= 42 52 41 00              940  BRAM    DC.B    'BRA',0
00001946                           941  
00001946                           942  
00001946                           943      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDM                1902
AEND                17F9
ANDM                190E
ASM                 1920
ASRM                1923
ASTART              17E2
BEQM                1936
BGTM                192E
BLEM                1932
BRAM                1942
CLOSEIPTR           18F2
CLOSEPTR            18F0
COMMA               18F5
CR                  D
DADDA               1524
DADDQ               136E
DAND                1208
DAS                 1602
DBEQ                14A8
DBGT                142C
DBLE                1468
DBRA                13A0
DBRA_16BIT          13E8
DBRA_32BIT          140A
DISASM              11D6
DJSR                12A6
DJSR_CUSL           133E
DJSR_CUSW           1320
DJSR_REG            12FA
DLS                 15F6
DMOVE2              120A
DMOVEA              120C
DMOVEQ              14EE
DNOP                1294
DNOT                12A0
DOLLAR              18F7
DOR                 14FA
DRO                 160E
DRTS                135C
DS0                 11E0
DS00                11F4
DS01                120E
DS010               122C
DS0100              1268
DS0101              1368
DS011               1236
DS0110              1374
DS0111              14E8
DS1                 11EA
DS10                1218
DS100               1240
DS1000              14F4
DS1001              1500
DS101               124A
DS1010              150C
DS1011              1512
DS11                1222
DS110               1254
DS1100              1518
DS1101              151E
DS111               125E
DS1110              152A
DS1110A             157E
DS1110B             15B8
DS1110LSIDE         1630
DS1110MEM           1638
DS1110MEMA          165E
DS1110MEM_CUSL      1722
DS1110MEM_CUSW      1704
DS1110MEM_DEC       16DE
DS1110MEM_INC       16B8
DS1110MEM_REG       1692
DS1110SIDE          161A
DS1110SIDEEND       1636
DS1110_REG_D        15EC
DS1110_REG_I        15E2
DS1111              1740
DSEND               1752
DSERR               1746
DSUB                1506
END                 1754
ERRM                18D1
HDONE               118A
HEXOUT              1144
HHEX                115E
HNUM                1166
HSKIP2              1174
HSKIP3              1188
HSTEP               114C
HSTEP2              116A
HT                  9
HTM                 18A7
INTRO               175A
JSRM                193A
LB                  18A4
LEAM                190A
LF                  A
LSM                 1919
LSRM                191C
MODEB               18DA
MODEL               18E0
MODEW               18DD
MOVEM               18FD
NOPM                18F9
NOTM                1915
OPENDPTR            18ED
OPENPTR             18EB
ORM                 1912
PARSE               1050
PCAPS               107C
PDONE               10A6
PHEX                106C
PNUM                1084
PSTEP               1058
PSTEP2              1088
RCONT               1130
READLN              10E2
ROM                 1927
RORM                192A
RPAUSE              1138
RSTEP               10E8
RTSM                193E
SDONE               11D2
SIZE                118C
SIZEB               11B4
SIZEL               11C8
SIZEW               11BE
SM1                 18A9
SM2                 18AB
SM3                 18AE
SM4                 18B2
SM5                 18B7
SM6                 18BD
SM7                 18C4
SRET                11D4
START               1000
STARTER             0
SUBM                1906
TESTM               18CC
VAL0                18E9
VALA                18E3
VALD                18E5
VALN                18E7
VERR1               10B2
VERR1M              1810
VERR2               10C2
VERR2M              184A
VERR3               10D2
VERR3M              1870
VINPUT              10A8
