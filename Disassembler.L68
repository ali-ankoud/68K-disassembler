00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 5:16:54 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 0000203A             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 000020C2             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 0000221B             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 000020D9             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 0000221B             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 0000215A            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 0F06                109          BRA     END
000010F8                           110  
000010F8  43F9 00002194            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 0EF6                114          BRA     END
00001108                           115  
00001108  43F9 000021BA            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 0EE6                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  244B                     124          MOVE.L  A3,A2               *Set current address to start address
0000111A  1A3C 0000                125          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000111E                           126  
0000111E                           127  RSTEP                               *RSTEP: 
0000111E  381A                     128          MOVE.W  (A2)+,D4
00001120  340A                     129          MOVE.W  A2,D2
00001122  5542                     130          SUBQ.W  #2,D2
00001124                           131          
00001124  48E7 0400                132          MOVEM.L D5,-(SP)
00001128  1A3C 0000                133          MOVE.B  #0,D5
0000112C  4EB9 0000117A            134          JSR     HEXOUT              *Run printing operation for HEX address
00001132  4CDF 0020                135          MOVEM.L (SP)+,D5
00001136                           136          
00001136  43F9 000021F5            137          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000113C  103C 000E                138          MOVE.B  #14,D0
00001140  4E4F                     139          TRAP    #15
00001142                           140          
00001142  48E7 7F0F                141          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001146  4EB9 0000136C            142          JSR     DISASM              *Run disassembly for current machine code
0000114C  4CDF F0FE                143          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001150                           144          
00001150  5205                     145          ADDQ.B  #1,D5       *Increment counter by 1
00001152  BA3C 0020                146          CMP.B   #32,D5      *Check if we reached 32 lines
00001156  6700 0016                147          BEQ     RPAUSE      *Branch to pausing code
0000115A                           148          
0000115A  43F9 000021EE            149          LEA     LB,A1       *Print line break
00001160  103C 000E                150          MOVE.B  #14,D0      
00001164  4E4F                     151          TRAP    #15
00001166                           152          
00001166                           153  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001166  B9CA                     154          CMP.L   A2,A4       *Check if we reached the end address
00001168  6D00 0E64                155          BLT     DSEOF       *End loop if so
0000116C  60B0                     156          BRA     RSTEP       *Or else continue the loop
0000116E                           157          
0000116E                           158  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000116E  1A3C 0000                159          MOVE.B  #0,D5       * Reset D5 counter
00001172  103C 0005                160          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001176  4E4F                     161          TRAP    #15         * Only used for waiting for user to hit ENTER
00001178  60EC                     162          BRA     RCONT       *Continue with READLN loop
0000117A                           163  
0000117A                           164  *--------------------------------------------------------------------------------------------------
0000117A                           165  
0000117A                           166  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000117A  103C 0006                167          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000117E  163C 0008                168          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001182                           169          
00001182                           170  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001182  E99A                     171          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001184  2202                     172          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001186  0281 0000000F            173          ANDI.L  #$F,D1      * Filter to the right four bits
0000118C  B23C 000A                174          CMP.B   #10,D1      *Distinguish between number and letter
00001190  6D00 000A                175          BLT     HNUM        *Branch to number handling, or continue to letter handling
00001194                           176          
00001194                           177  HHEX                        *HHEX: Handle letters from HEXOUT for loop
00001194  0601 0037                178          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001198  6000 0006                179          BRA     HSTEP2      *Branch to step 2 of the iteration
0000119C                           180  
0000119C                           181  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
0000119C  0601 0030                182          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A0                           183  
000011A0                           184  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011A0  5303                     185          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011A2                           186          
000011A2  B205                     187          CMP.B   D5,D1
000011A4  6700 0004                188          BEQ     HSKIP2
000011A8                           189          
000011A8  4E4F                     190          TRAP #15            *Will print the ASCII value stored in D1
000011AA  0C03 0000                191  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011AE  6700 0010                192          BEQ     HDONE       *End loop if done
000011B2                           193          
000011B2  B23C 0030                194          CMP.B   #48,D1
000011B6  6700 0006                195          BEQ     HSKIP3
000011BA                           196          
000011BA  1A3C 0000                197          MOVE.B  #0,D5
000011BE                           198          
000011BE  60C2                     199  HSKIP3  BRA     HSTEP       *Or else continue loop
000011C0                           200          
000011C0  4E75                     201  HDONE   RTS
000011C2                           202  
000011C2                           203  
000011C2                           204  *--------------------------------------------------------------------------------------------------
000011C2                           205  
000011C2  103C 000E                206  SIZE    MOVE.B  #14,D0
000011C6  BA3C 0000                207          CMP.B   #%00,D5
000011CA  6700 001E                208          BEQ     SIZEB
000011CE  BA3C 0001                209          CMP.B   #%01,D5
000011D2  6700 0020                210          BEQ     SIZEW
000011D6  BA3C 0002                211          CMP.B   #%10,D5
000011DA  6700 0022                212          BEQ     SIZEL
000011DE  BA3C 0003                213          CMP.B   #%11,D5
000011E2  6700 0010                214          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011E6  6000 0022                215          BRA     SRET
000011EA                           216          
000011EA  43F9 0000224B            217  SIZEB   LEA     MODEB,A1
000011F0  6000 0016                218          BRA     SDONE
000011F4                           219  
000011F4  43F9 0000224E            220  SIZEW   LEA     MODEW,A1
000011FA  6000 000C                221          BRA     SDONE
000011FE                           222  
000011FE  43F9 00002251            223  SIZEL   LEA     MODEL,A1
00001204  6000 0002                224          BRA     SDONE
00001208                           225  
00001208  4E4F                     226  SDONE   TRAP    #15
0000120A                           227  
0000120A  4E75                     228  SRET    RTS
0000120C                           229  
0000120C                           230  *-----------------------------------------------------------------------------------
0000120C                           231  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           232  *uses d1, d0, and a1
0000120C                           233  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           234  *uses d1, d0, and a1
0000120C                           235  ADDRMODEALL
0000120C                           236  *comparisons
0000120C  B67C 0000                237  AM000   CMP     #%000,D3
00001210  6600 001A                238          BNE     AM001
00001214  43F9 00002256            239          LEA     VALD,A1
0000121A  4E4F                     240          TRAP    #15
0000121C  1206                     241          MOVE.B  D6,D1       *moving ea num to d1 to print
0000121E  103C 0003                242          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001222  4E4F                     243          TRAP    #15         *printing register number
00001224  103C 000E                244          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001228  6000 013C                245          BRA     AMEND
0000122C                           246  
0000122C                           247          
0000122C  B67C 0001                248  AM001   CMP     #%001,D3
00001230  6600 0022                249          BNE     AM010
00001234  BA7C 0000                250          CMP     #00,D5
00001238  6700 0D66                251          BEQ     DSERR
0000123C  43F9 00002254            252          LEA     VALA,A1
00001242  4E4F                     253          TRAP    #15
00001244  1206                     254          MOVE.B  D6,D1       *moving ea num to d1 to print
00001246  103C 0003                255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124A  4E4F                     256          TRAP    #15         *printing register number
0000124C  103C 000E                257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001250  6000 0114                258          BRA     AMEND
00001254                           259  
00001254  B67C 0002                260  AM010   CMP     #%010,D3
00001258  6600 002A                261          BNE     AM011
0000125C  43F9 0000225E            262          LEA     OPENPTR,A1
00001262  4E4F                     263          TRAP    #15
00001264  43F9 00002254            264          LEA     VALA,A1
0000126A  4E4F                     265          TRAP    #15
0000126C  1206                     266          MOVE.B  D6,D1       *moving ea num to d1 to print
0000126E  103C 0003                267          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001272  4E4F                     268          TRAP    #15         *printing register number
00001274  103C 000E                269          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001278  43F9 00002263            270          LEA     CLOSEPTR,A1
0000127E  4E4F                     271          TRAP    #15
00001280  6000 00E4                272          BRA     AMEND
00001284                           273  
00001284  B67C 0003                274  AM011   CMP     #%011,D3
00001288  6600 002A                275          BNE     AM100
0000128C  43F9 0000225E            276          LEA     OPENPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  43F9 00002254            278          LEA     VALA,A1
0000129A  4E4F                     279          TRAP    #15
0000129C  1206                     280          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129E  103C 0003                281          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012A2  4E4F                     282          TRAP    #15         *printing register number
000012A4  103C 000E                283          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A8  43F9 00002265            284          LEA     CLOSEIPTR,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  6000 00B4                286          BRA     AMEND
000012B4                           287  
000012B4  B67C 0004                288  AM100   CMP     #%100,D3
000012B8  6600 002A                289          BNE     AM111
000012BC  43F9 00002260            290          LEA     OPENDPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  43F9 00002254            292          LEA     VALA,A1
000012CA  4E4F                     293          TRAP    #15
000012CC  1206                     294          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CE  103C 0003                295          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012D2  4E4F                     296          TRAP    #15         *printing register number
000012D4  103C 000E                297          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D8  43F9 00002263            298          LEA     CLOSEPTR,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  6000 0084                300          BRA     AMEND
000012E4                           301  
000012E4  B67C 0007                302  AM111   CMP     #%111,D3
000012E8  6600 0CB6                303          BNE     DSERR
000012EC  BC7C 0000                304          CMP     #%000,D6
000012F0  6600 0020                305          BNE     AM111001
000012F4  43F9 0000226A            306          LEA     DOLLAR,A1
000012FA  4E4F                     307          TRAP    #15
000012FC  341A                     308          MOVE.W  (A2)+,D2
000012FE  48E7 0400                309          MOVEM.L D5,-(SP)    
00001302  1A3C 0030                310          MOVE.B  #48,D5
00001306  4EB8 117A                311          JSR     HEXOUT
0000130A  4CDF 0020                312          MOVEM.L (SP)+,D5
0000130E  6000 0056                313          BRA     AMEND
00001312                           314          
00001312                           315  AM111001
00001312  BC7C 0001                316          CMP     #%001,D6
00001316  6600 0020                317          BNE     AM111100
0000131A  43F9 0000226A            318          LEA     DOLLAR,A1
00001320  4E4F                     319          TRAP    #15
00001322  241A                     320          MOVE.L  (A2)+,D2
00001324  48E7 0400                321          MOVEM.L D5,-(SP)
00001328  1A3C 0030                322          MOVE.B  #48,D5
0000132C  4EB8 117A                323          JSR     HEXOUT
00001330  4CDF 0020                324          MOVEM.L (SP)+,D5
00001334  6000 0030                325          BRA     AMEND
00001338                           326          
00001338                           327  AM111100
00001338  BC7C 0004                328          CMP     #%100,D6
0000133C  6600 0C62                329          BNE     DSERR
00001340  43F9 00002258            330          LEA     VALN,A1
00001346  4E4F                     331          TRAP    #15
00001348  341A                     332          MOVE.W  (A2)+,D2
0000134A  48E7 0400                333          MOVEM.L D5,-(SP)    
0000134E  1A3C 0030                334          MOVE.B  #48,D5
00001352  103C 0003                335          MOVE.B  #3,D0
00001356  1202                     336          MOVE.B  D2,D1
00001358  4E4F                     337          TRAP    #15
0000135A  103C 000E                338          MOVE.B  #14,D0
0000135E  4CDF 0020                339          MOVEM.L (SP)+,D5
00001362  6000 0002                340          BRA     AMEND
00001366                           341          
00001366  103C 000E                342  AMEND   MOVE.B  #14,D0
0000136A  4E75                     343          RTS
0000136C                           344  
0000136C                           345  *--------------------------------------------------------------------------------------------------
0000136C                           346  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000136C                           347  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000136C                           348  
0000136C                           349  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000136C                           350  
0000136C                           351  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000136C                           352  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000136C                           353  
0000136C                           354  DISASM                      *DISASM: Disassemble a machine code
0000136C  E34C                     355          LSL.W   #1,D4       * Tier 0 binary search
0000136E  6500 0010                356          BCS     DS1
00001372  6000 0002                357          BRA     DS0
00001376                           358  
00001376                           359  *DS Tier 1 ----------------------------------------------------------------------------------------
00001376                           360  
00001376                           361  DS0                         *DS0: Tier 1 binary search for 0 side
00001376  E34C                     362          LSL.W   #1,D4       
00001378  6500 01BA                363          BCS     DS01
0000137C  6000 000C                364          BRA     DS00
00001380                           365  
00001380                           366  DS1                         *DS1: Tier 1 binary search for 1 side
00001380  E34C                     367          LSL.W   #1,D4       
00001382  6500 01C4                368          BCS     DS11
00001386  6000 01B6                369          BRA     DS10
0000138A                           370  
0000138A                           371  DS00                        *DS00: Disassembly processing for 00 prefix
0000138A  E55C                     372          ROL.W   #2,D4       
0000138C  1A04                     373          MOVE.B  D4,D5
0000138E  0205 0003                374          ANDI.B  #%11,D5
00001392  0C05 0000                375          CMPI.B  #%00,D5
00001396  6700 0006                376          BEQ     DAND
0000139A  6000 00D2                377          BRA     DMOVE2
0000139E                           378  
0000139E  E95C                     379  DAND    ROL.W   #4,D4
000013A0  1A04                     380          MOVE.B  D4,D5
000013A2  0205 0002                381          ANDI.B  #%0010,D5
000013A6  0C05 0002                382          CMPI.B  #%0010,D5
000013AA  6600 0C04                383          BNE     DSERRINS
000013AE                           384          
000013AE  E55C                     385          ROL.W   #2,D4
000013B0  1A04                     386          MOVE.B  D4,D5
000013B2  0205 0007                387          ANDI.B  #%111,D5
000013B6                           388          
000013B6  E75C                     389          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013B8  1604                     390          MOVE.B  D4,D3           ; Move the byte in D4 to D5
000013BA  0203 0007                391          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
000013BE                           392          
000013BE  E75C                     393          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013C0  1C04                     394          MOVE.B  D4,D6           ; Move the byte in D4 to D5
000013C2  0206 0007                395          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
000013C6                           396          
000013C6  43F9 00002256            397          LEA     VALD,A1         ; Load effective address of Dn
000013CC  4E4F                     398          TRAP    #15             ; Print Dn
000013CE  1E05                     399          MOVE.B  D5,D7           ; Store the register number for later use
000013D0                           400  
000013D0                           401          
000013D0  BA3C 0000                402          CMP.B   #%000,D5        ; Compare with byte size
000013D4  6700 0016                403          BEQ     DANDB
000013D8  BA3C 0001                404          CMP.B   #%001,D5        ; Compare with word size
000013DC  6700 0022                405          BEQ     DANDW
000013E0  BA3C 0002                406          CMP.B   #%010,D5        ; Compare with long size
000013E4  6700 002E                407          BEQ     DANDL
000013E8                           408          
000013E8  6000 0BE2                409          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013EC                           410  
000013EC  43F9 00002281            411  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F2  4E4F                     412          TRAP    #15             ; Print ANDM string
000013F4  43F9 0000224B            413          LEA     MODEB,A1        ; Load effective address of MODEB string
000013FA  4E4F                     414          TRAP    #15             ; Print MODEB string
000013FC  6000 002A                415          BRA     DANDA           ; Branch to addressing mode parsing
00001400                           416  
00001400  43F9 00002281            417  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001406  4E4F                     418          TRAP    #15             ; Print ANDM string
00001408  43F9 0000224E            419          LEA     MODEW,A1        ; Load effective address of MODEW string
0000140E  4E4F                     420          TRAP    #15             ; Print MODEW string
00001410  6000 0016                421          BRA     DANDA           ; Branch to addressing mode parsing
00001414                           422  
00001414  43F9 00002281            423  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000141A  4E4F                     424          TRAP    #15             ; Print ANDM string
0000141C  43F9 00002251            425          LEA     MODEL,A1        ; Load effective address of MODEL string
00001422  4E4F                     426          TRAP    #15             ; Print MODEL string
00001424  6000 0002                427          BRA     DANDA           ; Branch to addressing mode parsing
00001428                           428  
00001428  43F9 00002201            429  DANDA   LEA     SM5,A1
0000142E  4E4F                     430          TRAP    #15
00001430                           431          
00001430  0204 0007                432          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001434  D839 00002256            433          ADD.B   VALD,D4         ; Convert register number to ASCII
0000143A  43F9 00002256            434          LEA     VALD,A1         ; Load effective address of Dn
00001440  4E4F                     435          TRAP    #15             ; Print Dn
00001442                           436  
00001442  BC3C 0000                437          CMP.B   #%000,D6        ; Compare mode with Dn
00001446  6700 0B84                438          BEQ     DSEND
0000144A  BC3C 0007                439          CMP.B   #%111,D6        ; Compare mode with (xxx).W or (xxx).L
0000144E  6700 0B7C                440          BEQ     DSEND
00001452  BC3C 0002                441          CMP.B   #%010,D6        ; Compare mode with (An)
00001456  6700 0B74                442          BEQ     DSEND
0000145A  BC3C 0003                443          CMP.B   #%011,D6        ; Compare mode with (An)+
0000145E  6700 0B6C                444          BEQ     DSEND
00001462  BC3C 0004                445          CMP.B   #%100,D6        ; Compare mode with -(An)
00001466  6700 0B64                446          BEQ     DSEND
0000146A                           447          
0000146A  6000 0B60                448          BRA     DSEND
0000146E                           449  
0000146E                           450          
0000146E                           451  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
0000146E  4E71                     452  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001470                           453          *size in d5 from above processing
00001470  43F9 00002270            454          LEA     MOVEM,A1
00001476  4E4F                     455          TRAP    #15
00001478                           456                  
00001478                           457          *dest reg to d7
00001478  E75C                     458          ROL.W   #3,D4
0000147A  1E04                     459          MOVE.B  D4,D7
0000147C  CE3C 0007                460          AND.B   #%111,D7
00001480                           461          
00001480                           462          *dest mode to d3: An means MOVEA
00001480  E75C                     463          ROL.W   #3,D4
00001482  1604                     464          MOVE.B  D4,D3
00001484  C63C 0007                465          AND.B   #%111,D3
00001488  3C43                     466          MOVE.W  D3,A6
0000148A                           467          
0000148A  B67C 0001                468          CMP     #%001,D3
0000148E  6700 0082                469          BEQ     DMOVEA
00001492                           470  MOVECONT
00001492                           471  *printing size then first addressing moode, then comma
00001492                           472  *size is different for move
00001492  103C 000E                473  MSIZE   MOVE.B  #14,D0
00001496  BA3C 0001                474          CMP.B   #%01,D5
0000149A  6700 001E                475          BEQ     MSIZEB
0000149E  BA3C 0003                476          CMP.B   #%11,D5
000014A2  6700 0020                477          BEQ     MSIZEW
000014A6  BA3C 0002                478          CMP.B   #%10,D5
000014AA  6700 0022                479          BEQ     MSIZEL
000014AE  BA3C 0003                480          CMP.B   #%11,D5
000014B2  6700 0010                481          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014B6  6000 0AE8                482          BRA     DSERR
000014BA                           483          
000014BA  43F9 0000224B            484  MSIZEB  LEA     MODEB,A1
000014C0  6000 0016                485          BRA     MSDONE
000014C4                           486  
000014C4  43F9 0000224E            487  MSIZEW  LEA     MODEW,A1
000014CA  6000 000C                488          BRA     MSDONE
000014CE                           489  
000014CE  43F9 00002251            490  MSIZEL  LEA     MODEL,A1
000014D4  6000 0002                491          BRA     MSDONE
000014D8                           492  
000014D8  4E4F                     493  MSDONE  TRAP    #15
000014DA                           494  
000014DA  43F9 0000220E            495          LEA     SM7,A1
000014E0  4E4F                     496          TRAP    #15
000014E2                           497          
000014E2                           498          *source mode to d3
000014E2  E75C                     499          ROL.W   #3,D4
000014E4  1604                     500          MOVE.B  D4,D3
000014E6  C63C 0007                501          AND.B   #%111,D3
000014EA                           502          
000014EA                           503          *source reg to d6
000014EA  E75C                     504          ROL.W   #3,D4
000014EC  1C04                     505          MOVE.B  D4,D6
000014EE  CC3C 0007                506          AND.B   #%111,D6
000014F2                           507          
000014F2  4EB8 120C                508          JSR     ADDRMODEALL
000014F6  B67C 0001                509          CMP     #%001,D3
000014FA  6700 002C                510          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014FE  43F9 00002268            511          LEA     COMMA,A1
00001504  4E4F                     512          TRAP    #15
00001506  1C07                     513          MOVE.B  D7,D6
00001508  360E                     514          MOVE.W  A6,D3
0000150A  4EB8 120C                515          JSR     ADDRMODEALL
0000150E  6000 0ABC                516          BRA     DSEND
00001512                           517  
00001512  4E71                     518  DMOVEA  NOP
00001514  BA7C 0001                519          CMP     #%01,D5     *if size is byte, err
00001518  6700 0A86                520          BEQ     DSERR
0000151C  43F9 00002254            521          LEA     VALA,A1        *else, print A and return
00001522  4E4F                     522          TRAP    #15
00001524  6000 FF6C                523          BRA     MOVECONT
00001528                           524  
00001528                           525  MOVEERRCHECK
00001528  BA7C 0001                526          CMP     #%01,D5
0000152C  6700 0A72                527          BEQ     DSERR
00001530  6000 0A9A                528          BRA     DSEND
00001534                           529  
00001534                           530          
00001534                           531  
00001534                           532  *DS Tier 2 ----------------------------------------------------------------------------------------
00001534                           533  
00001534                           534  DS01                        *DS01: Tier 2 binary search for 01 side
00001534  E34C                     535          LSL.W   #1,D4
00001536  6500 0024                536          BCS     DS011
0000153A  6000 0016                537          BRA     DS010
0000153E                           538  
0000153E                           539  DS10                        *DS10: Tier 2 binary search for 10 side
0000153E  E34C                     540          LSL.W   #1,D4
00001540  6500 002E                541          BCS     DS101
00001544  6000 0020                542          BRA     DS100
00001548                           543  
00001548                           544  DS11                        *DS11: Tier 2 binary search for 11 side
00001548  E34C                     545          LSL.W   #1,D4
0000154A  6500 0038                546          BCS     DS111
0000154E  6000 002A                547          BRA     DS110
00001552                           548  
00001552                           549  *DS Tier 3 ----------------------------------------------------------------------------------------
00001552                           550  
00001552                           551  DS010                       *DS010: Tier 3 binary search for 010 side
00001552  E34C                     552          LSL.W   #1,D4
00001554  6500 037E                553          BCS     DS0101
00001558  6000 0034                554          BRA     DS0100
0000155C                           555  
0000155C                           556  DS011                       *DS011: Tier 3 binary search for 011 side
0000155C  E34C                     557          LSL.W   #1,D4
0000155E  6500 0562                558          BCS     DS0111
00001562  6000 03EA                559          BRA     DS0110
00001566                           560  
00001566                           561  DS100                       *DS100: Tier 3 binary search for 100 side
00001566  E34C                     562          LSL.W   #1,D4
00001568  6500 068E                563          BCS     DS1001
0000156C  6000 05BE                564          BRA     DS1000
00001570                           565  
00001570                           566  DS101                       *DS101: Tier 3 binary search for 101 side
00001570  E34C                     567          LSL.W   #1,D4
00001572  6500 071C                568          BCS     DS1011
00001576  6000 0712                569          BRA     DS1010
0000157A                           570  
0000157A                           571  DS110                       *DS110: Tier 3 binary search for 110 side
0000157A  E34C                     572          LSL.W   #1,D4
0000157C  6500 071E                573          BCS     DS1101
00001580  6000 0714                574          BRA     DS1100
00001584                           575  
00001584                           576  DS111                       *DS111: Tier 3 binary search for 111 side
00001584  E34C                     577          LSL.W   #1,D4
00001586  6500 0A12                578          BCS     DS1111
0000158A  6000 07F8                579          BRA     DS1110
0000158E                           580  
0000158E                           581  *DS Tier 4 ----------------------------------------------------------------------------------------
0000158E                           582  
0000158E                           583  DS0100                      *DS0100: Processing for 0100 prefix
0000158E  0C44 E710                584          CMPI.W  #%1110011100010000,D4
00001592  6700 0034                585          BEQ     DNOP
00001596  0C44 E750                586          CMPI.W  #%1110011101010000,D4
0000159A  6700 021E                587          BEQ     DRTS
0000159E                           588          
0000159E  3404                     589          MOVE.W  D4,D2
000015A0  0242 1C00                590          ANDI.W  #%0001110000000000,D2
000015A4  0C42 1C00                591          CMPI.W  #%0001110000000000,D2
000015A8  6700 021C                592          BEQ     DLEA
000015AC                           593          
000015AC  E95C                     594          ROL.W   #4,D4
000015AE  1404                     595          MOVE.B  D4,D2
000015B0  0202 000F                596          ANDI.B  #%1111,D2
000015B4                           597          
000015B4  B43C 000E                598          CMP.B   #%1110,D2
000015B8  6700 014A                599          BEQ     DJSR
000015BC                           600          
000015BC  B43C 0006                601          CMP.B   #%0110,D2
000015C0  6700 0012                602          BEQ     DNOT
000015C4                           603          
000015C4  6000 09EA                604          BRA     DSERRINS
000015C8                           605  
000015C8  43F9 0000226C            606  DNOP    LEA     NOPM,A1
000015CE  4E4F                     607          TRAP    #15
000015D0  6000 09FA                608          BRA     DSEND
000015D4                           609          
000015D4  E55C                     610  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015D6  1A04                     611          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015D8  0205 0003                612          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015DC                           613  
000015DC  BA3C 0000                614          CMP.B   #%00,D5         ; compare with byte size
000015E0  6700 0016                615          BEQ     DNOTB
000015E4  BA3C 0001                616          CMP.B   #%01,D5         ; compare with word size
000015E8  6700 0022                617          BEQ     DNOTW
000015EC  BA3C 0002                618          CMP.B   #%10,D5         ; compare with long size
000015F0  6700 002E                619          BEQ     DNOTL
000015F4                           620          
000015F4  6000 09D6                621          BRA     DSEND           ; branch to DSEND in case of invalid code
000015F8                           622  
000015F8  43F9 00002288            623  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015FE  4E4F                     624          TRAP    #15             ; print NOTM string
00001600  43F9 0000224B            625          LEA     MODEB,A1        ; load effective address of MODEB string
00001606  4E4F                     626          TRAP    #15             ; print MODEB string
00001608  6000 002A                627          BRA     DNOTA           ; branch to addressing mode parsing
0000160C                           628  
0000160C  43F9 00002288            629  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001612  4E4F                     630          TRAP    #15             ; print NOTM string
00001614  43F9 0000224E            631          LEA     MODEW,A1        ; load effective address of MODEW string
0000161A  4E4F                     632          TRAP    #15             ; print MODEW string
0000161C  6000 0016                633          BRA     DNOTA           ; branch to addressing mode parsing
00001620                           634  
00001620  43F9 00002288            635  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001626  4E4F                     636          TRAP    #15             ; print NOTM string
00001628  43F9 00002251            637          LEA     MODEL,A1        ; load effective address of MODEL string
0000162E  4E4F                     638          TRAP    #15             ; print MODEL string
00001630  6000 0002                639          BRA     DNOTA           ; branch to addressing mode parsing
00001634                           640  
00001634  ED5C                     641  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001636  1204                     642          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001638  0201 003F                643          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000163C                           644  
0000163C                           645          ; Now process addressing mode and register based on the value in D1
0000163C                           646  
0000163C  1A01                     647          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000163E  0205 0007                648          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001642  6700 0026                649          BEQ     DREG            ; If it is direct register mode
00001646  BA3C 0002                650          CMP.B   #%010,D5        ; Compare with An
0000164A  6700 0036                651          BEQ     ADREG
0000164E  BA3C 0003                652          CMP.B   #%011,D5        ; Compare with (An)+
00001652  6700 0046                653          BEQ     ADREGP
00001656  BA3C 0004                654          CMP.B   #%100,D5        ; Compare with -(An)
0000165A  6700 005E                655          BEQ     MADREG
0000165E  BA3C 0007                656          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001662  6700 007E                657          BEQ     EXT
00001666                           658              
00001666  6000 0964                659          BRA     DSEND
0000166A                           660  
0000166A  1C01                     661  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000166C  0206 0007                662          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
00001670  DC39 00002256            663          ADD.B   VALD,D6         ; Convert register number to ASCII
00001676  43F9 00002256            664          LEA     VALD,A1         ; Load effective address of Dn
0000167C  4E4F                     665          TRAP    #15             ; Print Dn
0000167E  6000 094C                666          BRA     DSEND
00001682                           667  
00001682  1C01                     668  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001684  0206 0007                669          ANDI.B  #%111,D6
00001688  DC39 00002254            670          ADD.B   VALA,D6
0000168E  43F9 00002254            671          LEA     VALA,A1
00001694  4E4F                     672          TRAP    #15
00001696  6000 0934                673          BRA     DSEND
0000169A                           674  
0000169A  1C01                     675  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
0000169C  0206 0007                676          ANDI.B  #%111,D6
000016A0  DC39 00002254            677          ADD.B   VALA,D6
000016A6  43F9 00002254            678          LEA     VALA,A1
000016AC  4E4F                     679          TRAP    #15
000016AE  43F9 00002265            680          LEA     CLOSEIPTR,A1    ; Load effective address of )+
000016B4  4E4F                     681          TRAP    #15             ; Print )+
000016B6  6000 0914                682          BRA     DSEND
000016BA                           683  
000016BA  1C01                     684  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
000016BC  0206 0007                685          ANDI.B  #%111,D6
000016C0  DC39 00002254            686          ADD.B   VALA,D6
000016C6  43F9 00002260            687          LEA     OPENDPTR,A1     ; Load effective address of -(
000016CC  4E4F                     688          TRAP    #15             ; Print -(
000016CE  43F9 00002254            689          LEA     VALA,A1
000016D4  4E4F                     690          TRAP    #15
000016D6  43F9 00002263            691          LEA     CLOSEPTR,A1     ; Load effective address of )
000016DC  4E4F                     692          TRAP    #15             ; Print )
000016DE  6000 08EC                693          BRA     DSEND
000016E2                           694  
000016E2  1C01                     695  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016E4  0206 0001                696          ANDI.B  #%1,D6
000016E8  6700 000E                697          BEQ     EXTW
000016EC  43F9 00002258            698          LEA     VALN,A1         ; Load effective address of #
000016F2  4E4F                     699          TRAP    #15             ; Print #
000016F4  6000 08D6                700          BRA     DSEND
000016F8                           701  
000016F8  43F9 0000225A            702  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016FE  4E4F                     703          TRAP    #15             ; Print 0
00001700  6000 08CA                704          BRA     DSEND
00001704                           705  
00001704                           706          
00001704  E55C                     707  DJSR    ROL.W   #2,D4
00001706  1404                     708          MOVE.B  D4,D2
00001708  0202 0007                709          ANDI.B  #%111,D2
0000170C  0C02 0002                710          CMPI.B  #%10,D2
00001710  6600 088E                711          BNE     DSERR
00001714                           712          
00001714  43F9 000022AD            713          LEA     JSRM,A1
0000171A  4E4F                     714          TRAP    #15
0000171C                           715          
0000171C  43F9 0000220E            716          LEA     SM7,A1
00001722  4E4F                     717          TRAP    #15
00001724                           718  
00001724  E75C                     719          ROL.W   #3,D4       * [D2] address mode
00001726  1404                     720          MOVE.B  D4,D2
00001728  0202 0007                721          ANDI.B  #%111,D2
0000172C                           722          
0000172C  E75C                     723          ROL.W   #3,D4       * [D1] address register
0000172E  1204                     724          MOVE.B  D4,D1
00001730  0201 0007                725          ANDI.B  #%111,D1
00001734                           726          
00001734  0C02 0002                727          CMPI.B  #%010,D2
00001738  6700 001E                728          BEQ     DJSR_REG
0000173C                           729          
0000173C  0C02 0007                730          CMPI.B  #%111,D2
00001740  6600 085E                731          BNE     DSERR
00001744                           732          
00001744  0C01 0000                733          CMPI.B  #%000,D1
00001748  6700 0034                734          BEQ     DJSR_CUSW
0000174C                           735          
0000174C  0C01 0001                736          CMPI.B  #%001,D1
00001750  6700 004A                737          BEQ     DJSR_CUSL
00001754                           738          
00001754  6000 0876                739          BRA     DSEND
00001758                           740          
00001758                           741          
00001758                           742          
00001758                           743  DJSR_REG        
00001758  43F9 0000225E            744          LEA     OPENPTR,A1
0000175E  4E4F                     745          TRAP    #15
00001760                           746          
00001760  43F9 00002254            747          LEA     VALA,A1
00001766  4E4F                     748          TRAP    #15
00001768                           749          
00001768  103C 0003                750          MOVE.B  #3,D0
0000176C  4E4F                     751          TRAP    #15
0000176E  103C 000E                752          MOVE.B  #14,D0
00001772                           753          
00001772  43F9 00002263            754          LEA     CLOSEPTR,A1
00001778  4E4F                     755          TRAP    #15
0000177A                           756          
0000177A  6000 0850                757          BRA     DSEND
0000177E                           758  
0000177E                           759          
0000177E                           760  DJSR_CUSW
0000177E  43F9 0000226A            761          LEA     DOLLAR,A1
00001784  4E4F                     762          TRAP    #15
00001786  341A                     763          MOVE.W  (A2)+,D2
00001788  48E7 0400                764          MOVEM.L D5,-(SP)
0000178C  1A3C 0030                765          MOVE.B  #48,D5
00001790  4EB8 117A                766          JSR     HEXOUT
00001794  4CDF 0020                767          MOVEM.L (SP)+,D5
00001798  6000 0832                768          BRA     DSEND
0000179C                           769  
0000179C                           770  DJSR_CUSL
0000179C  43F9 0000226A            771          LEA     DOLLAR,A1
000017A2  4E4F                     772          TRAP    #15
000017A4  241A                     773          MOVE.L  (A2)+,D2
000017A6  48E7 0400                774          MOVEM.L D5,-(SP)
000017AA  1A3C 0030                775          MOVE.B  #48,D5
000017AE  4EB8 117A                776          JSR     HEXOUT
000017B2  4CDF 0020                777          MOVEM.L (SP)+,D5
000017B6  6000 0814                778          BRA     DSEND
000017BA                           779          
000017BA  43F9 000022B1            780  DRTS    LEA     RTSM,A1
000017C0  4E4F                     781          TRAP    #15
000017C2  6000 0808                782          BRA     DSEND
000017C6                           783          
000017C6                           784          
000017C6                           785  DLEA    *printing
000017C6  43F9 0000227D            786          LEA     LEAM,A1
000017CC  4E4F                     787          TRAP    #15
000017CE  43F9 0000220E            788          LEA     SM7,A1
000017D4  4E4F                     789          TRAP    #15
000017D6                           790          
000017D6                           791          *shifting out 111
000017D6  E75C                     792          ROL.W   #3,D4
000017D8                           793          
000017D8                           794          *getting destination register
000017D8  E75C                     795          ROL.W   #3,D4
000017DA  1404                     796          MOVE.B  D4,D2
000017DC  0202 0007                797          ANDI.B  #%111,D2
000017E0                           798          
000017E0                           799          *getting ea mode
000017E0  E75C                     800          ROL.W   #3,D4
000017E2  1604                     801          MOVE.B  D4,D3
000017E4  0203 0007                802          ANDI.B  #%111,D3
000017E8                           803          
000017E8  B63C 0002                804          CMP.B   #%010,D3
000017EC  6700 000E                805          BEQ     DLEAP
000017F0                           806          
000017F0  B63C 0007                807          CMP.B   #%111,D3
000017F4  6700 0006                808          BEQ     DLEAP
000017F8                           809          
000017F8  6000 07C6                810          BRA     DSERREA
000017FC                           811          
000017FC                           812          *getting ea reg
000017FC  E75C                     813  DLEAP   ROL.W   #3,D4
000017FE  1C04                     814          MOVE.B  D4,D6
00001800  0206 0007                815          ANDI.B  #%111,D6
00001804                           816          
00001804                           817          *printing
00001804  4EB8 120C                818          JSR     ADDRMODEALL
00001808                           819          
00001808  43F9 00002268            820          LEA     COMMA,A1
0000180E  4E4F                     821          TRAP    #15
00001810  43F9 00002254            822          LEA     VALA,A1
00001816  4E4F                     823          TRAP    #15
00001818  103C 0003                824          MOVE.B  #3,D0
0000181C  1202                     825          MOVE.B  D2,D1
0000181E  4E4F                     826          TRAP    #15
00001820  103C 000E                827          MOVE.B  #14,D0
00001824                           828          
00001824  6000 07A6                829          BRA DSEND
00001828                           830          
00001828                           831  JSR010
00001828  B63C 0002                832          CMP.B   #%010,D3
0000182C  6600 002A                833          BNE     JSR111
00001830  43F9 0000225E            834          LEA     OPENPTR,A1
00001836  4E4F                     835          TRAP    #15
00001838  43F9 00002254            836          LEA     VALA,A1
0000183E  4E4F                     837          TRAP    #15
00001840  103C 0003                838          MOVE.B  #3,D0
00001844  1206                     839          MOVE.B  D6,D1
00001846  4E4F                     840          TRAP    #15
00001848  103C 000E                841          MOVE.B  #14,D0
0000184C  43F9 00002263            842          LEA     CLOSEPTR,A1
00001852  4E4F                     843          TRAP    #15
00001854  6000 005E                844          BRA     JSRPRINT2
00001858                           845  JSR111
00001858  B63C 0007                846          CMP.B   #%111,D3
0000185C  6600 0742                847          BNE     DSERR
00001860  BC3C 0000                848          CMP.B   #%000,D6
00001864  6600 0024                849          BNE     JSR111001
00001868  43F9 0000226A            850          LEA     DOLLAR,A1
0000186E  4E4F                     851          TRAP    #15
00001870  341A                     852          MOVE.W  (A2)+,D2
00001872  48E7 0400                853          MOVEM.L D5,-(SP)    
00001876  1A3C 0030                854          MOVE.B  #48,D5
0000187A  4EB8 117A                855          JSR     HEXOUT
0000187E  4CDF 0020                856          MOVEM.L (SP)+,D5
00001882  103C 000E                857          MOVE.B  #14,D0
00001886  6000 002C                858          BRA     JSRPRINT2
0000188A                           859          
0000188A                           860  JSR111001
0000188A  BC3C 0001                861          CMP.B   #%001,D6
0000188E  6600 0710                862          BNE     DSERR
00001892  43F9 0000226A            863          LEA     DOLLAR,A1
00001898  4E4F                     864          TRAP    #15
0000189A  241A                     865          MOVE.L  (A2)+,D2
0000189C  48E7 0400                866          MOVEM.L D5,-(SP)
000018A0  1A3C 0030                867          MOVE.B  #48,D5
000018A4  4EB8 117A                868          JSR     HEXOUT
000018A8  4CDF 0020                869          MOVEM.L (SP)+,D5
000018AC  103C 000E                870          MOVE.B  #14,D0
000018B0  6000 0002                871          BRA     JSRPRINT2
000018B4                           872          
000018B4                           873  JSRPRINT2
000018B4  43F9 00002268            874          LEA     COMMA,A1
000018BA  4E4F                     875          TRAP    #15
000018BC  43F9 00002254            876          LEA     VALA,A1
000018C2  4E4F                     877          TRAP    #15
000018C4  103C 0003                878          MOVE.B  #3,D0
000018C8  3207                     879          MOVE.W  D7,D1
000018CA  4E4F                     880          TRAP    #15
000018CC  103C 000E                881          MOVE.B  #14,D0
000018D0                           882          
000018D0  6000 06FA                883          BRA     DSEND
000018D4                           884          
000018D4                           885  
000018D4                           886  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000018D4                           887  
000018D4  4E71                     888  DS0101  NOP
000018D6                           889          
000018D6  4E71                     890  DADDQ   NOP
000018D8  43F9 00002275            891          LEA     ADDM,A1
000018DE  4E4F                     892          TRAP    #15
000018E0  43F9 0000225C            893          LEA     VALQ,A1
000018E6  4E4F                     894          TRAP    #15
000018E8                           895          
000018E8                           896          *parsing data to d1
000018E8  E75C                     897          ROL.W   #3,D4
000018EA  1204                     898          MOVE.B  D4,D1
000018EC  C23C 0007                899          AND.B   #%111,D1
000018F0                           900          
000018F0                           901          *ensuring next bit is 0
000018F0  E35C                     902          ROL.W   #1,D4
000018F2  1A04                     903          MOVE.B  D4,D5
000018F4  CA3C 0001                904          AND.B   #%1,D5
000018F8  BA7C 0000                905          CMP     #0,D5
000018FC  6600 06A2                906          BNE     DSERR
00001900                           907          
00001900                           908          *parsing and printing size
00001900  E55C                     909          ROL.W   #2,D4
00001902  1A04                     910          MOVE.B  D4,D5
00001904  CA3C 0003                911          AND.B   #%11,D5
00001908  4EB8 11C2                912          JSR     SIZE
0000190C  43F9 0000220E            913          LEA     SM7,A1
00001912  4E4F                     914          TRAP    #15
00001914                           915          
00001914                           916          *parsing effective address information
00001914                           917          *mode:
00001914  E75C                     918          ROL.W   #3,D4
00001916  1604                     919          MOVE.B  D4,D3
00001918  C63C 0007                920          AND.B   #%111,D3
0000191C                           921          
0000191C                           922          *register:
0000191C  E71C                     923          ROL.B   #3,D4
0000191E  1C04                     924          MOVE.B  D4,D6
00001920  CC3C 0007                925          AND.B   #%111,D6
00001924                           926          
00001924                           927          *printing data
00001924  43F9 00002258            928          LEA     VALN,A1
0000192A  4E4F                     929          TRAP    #15
0000192C  103C 0003                930          MOVE.B  #3,D0
00001930  4E4F                     931          TRAP    #15
00001932  103C 000E                932          MOVE.B  #14,D0
00001936  43F9 00002268            933          LEA     COMMA,A1
0000193C  4E4F                     934          TRAP    #15
0000193E                           935          
0000193E  B67C 0004                936          CMP     #%100,D3
00001942  6700 065C                937          BEQ     DSERR
00001946  4EB8 120C                938          JSR     ADDRMODEALL
0000194A                           939          
0000194A  6000 0680                940          BRA     DSEND
0000194E                           941          
0000194E                           942  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000194E                           943  
0000194E                           944  DS0110  
0000194E  E95C                     945          ROL.W   #4,D4   *Get next 4 bits
00001950  1404                     946          MOVE.B  D4,D2   *Copy to D2
00001952  0202 000F                947          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001956                           948          
00001956  B43C 0000                949          CMP.B   #%0000,D2   *BRA
0000195A  6700 001E                950          BEQ     DBRA
0000195E                           951          
0000195E  B43C 000E                952          CMP.B   #%1110,D2   *BGT   
00001962  6700 00A2                953          BEQ     DBGT
00001966                           954          
00001966  B43C 000F                955          CMP.B   #%1111,D2   *BLE   
0000196A  6700 00D6                956          BEQ     DBLE
0000196E                           957          
0000196E  B43C 0007                958          CMP.B   #%0111,D2   *BEQ   
00001972  6700 010E                959          BEQ     DBEQ
00001976                           960          
00001976  6000 0638                961          BRA     DSERRINS
0000197A                           962          
0000197A  43F9 000022B5            963  DBRA    LEA     BRAM,A1
00001980  4E4F                     964          TRAP    #15
00001982                           965          
00001982  43F9 0000220E            966          LEA     SM7,A1
00001988  4E4F                     967          TRAP    #15
0000198A                           968  
0000198A  E15C                     969          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000198C  1204                     970          MOVE.B  D4,D1
0000198E  0281 00001100            971          ANDI.L  #$1100,D1
00001994                           972          
00001994  0C01 0000                973          CMPI.B  #%00000000,D1
00001998  6700 0028                974          BEQ     DBRA_16BIT      * Word
0000199C                           975          
0000199C  0C01 00FF                976          CMPI.B  #%11111111,D1
000019A0  6700 0042                977          BEQ     DBRA_32BIT      * Long
000019A4                           978          
000019A4                           979          * 8 Bit Displacement
000019A4  43F9 0000226A            980          LEA     DOLLAR,A1
000019AA  4E4F                     981          TRAP    #15
000019AC                           982          
000019AC  341A                     983          MOVE.W  (A2)+,D2
000019AE  D441                     984          ADD.W   D1,D2
000019B0  5842                     985          ADD.W   #4,D2   *unsure   
000019B2  1A3C 0030                986          MOVE.B  #48,D5
000019B6  4EB8 117A                987          JSR     HEXOUT
000019BA  6000 0610                988          BRA     DSEND
000019BE                           989  
000019BE                           990          *Displacement is put in D1      
000019BE                           991          
000019BE                           992          
000019BE  6000 060C                993          BRA     DSEND
000019C2                           994          
000019C2                           995  DBRA_16BIT
000019C2  43F9 0000226A            996          LEA     DOLLAR,A1
000019C8  4E4F                     997          TRAP    #15
000019CA  341A                     998          MOVE.W  (A2)+,D2
000019CC  D44A                     999          ADD.W   A2,D2
000019CE  5542                    1000          SUB.W   #2,D2   *unsure
000019D0  48E7 0400               1001          MOVEM.L D5,-(SP)    
000019D4  1A3C 0030               1002          MOVE.B  #48,D5
000019D8  4EB8 117A               1003          JSR     HEXOUT
000019DC  4CDF 0020               1004          MOVEM.L (SP)+,D5
000019E0  6000 05EA               1005          BRA     DSEND
000019E4                          1006  
000019E4                          1007  DBRA_32BIT
000019E4  43F9 0000226A           1008          LEA     DOLLAR,A1
000019EA  4E4F                    1009          TRAP    #15
000019EC  241A                    1010          MOVE.L  (A2)+,D2
000019EE  D48A                    1011          ADD.L   A2,D2
000019F0  5582                    1012          SUB.L   #2,D2   *unsure
000019F2  48E7 0400               1013          MOVEM.L D5,-(SP)
000019F6  1A3C 0030               1014          MOVE.B  #48,D5
000019FA  4EB8 117A               1015          JSR     HEXOUT
000019FE  4CDF 0020               1016          MOVEM.L (SP)+,D5
00001A02  6000 05C8               1017          BRA     DSEND
00001A06                          1018          
00001A06                          1019          
00001A06                          1020          
00001A06  43F9 000022A1           1021  DBGT    LEA     BGTM,A1
00001A0C  4E4F                    1022          TRAP    #15
00001A0E                          1023          
00001A0E  43F9 0000220E           1024          LEA     SM7,A1
00001A14  4E4F                    1025          TRAP    #15
00001A16                          1026          
00001A16  E15C                    1027          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A18  1204                    1028          MOVE.B  D4,D1
00001A1A  0241 00FF               1029          ANDI.W  #%0000000011111111,D1
00001A1E                          1030          
00001A1E  0C01 0000               1031          CMPI.B  #%00000000,D1
00001A22  679E                    1032          BEQ     DBRA_16BIT      * Word
00001A24                          1033          
00001A24  0C01 00FF               1034          CMPI.B  #%11111111,D1
00001A28  67BA                    1035          BEQ     DBRA_32BIT      * Long
00001A2A                          1036          
00001A2A  43F9 0000226A           1037          LEA     DOLLAR,A1
00001A30  4E4F                    1038          TRAP    #15
00001A32                          1039      
00001A32  340A                    1040          MOVE.W  A2,D2
00001A34  D441                    1041          ADD.W   D1,D2
00001A36                          1042    
00001A36  1A3C 0030               1043          MOVE.B  #48,D5
00001A3A  4EB8 117A               1044          JSR     HEXOUT
00001A3E  6000 058C               1045          BRA     DSEND
00001A42                          1046  
00001A42  43F9 000022A5           1047  DBLE    LEA     BLEM,A1
00001A48  4E4F                    1048          TRAP    #15
00001A4A                          1049          
00001A4A  43F9 0000220E           1050          LEA     SM7,A1
00001A50  4E4F                    1051          TRAP    #15
00001A52                          1052          
00001A52  E15C                    1053          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A54  1204                    1054          MOVE.B  D4,D1
00001A56  0241 00FF               1055          ANDI.W  #%0000000011111111,D1
00001A5A                          1056          
00001A5A  0C01 0000               1057          CMPI.B  #%00000000,D1
00001A5E  6700 FF62               1058          BEQ     DBRA_16BIT      * Word
00001A62                          1059          
00001A62  0C01 00FF               1060          CMPI.B  #%11111111,D1
00001A66  6700 FF7C               1061          BEQ     DBRA_32BIT      * Long
00001A6A                          1062          
00001A6A  43F9 0000226A           1063          LEA     DOLLAR,A1
00001A70  4E4F                    1064          TRAP    #15
00001A72                          1065          
00001A72  340A                    1066          MOVE.W  A2,D2
00001A74  D441                    1067          ADD.W   D1,D2
00001A76                          1068   
00001A76  1A3C 0030               1069          MOVE.B  #48,D5
00001A7A  4EB8 117A               1070          JSR     HEXOUT
00001A7E                          1071          
00001A7E  6000 054C               1072          BRA     DSEND
00001A82                          1073  
00001A82  43F9 000022A9           1074  DBEQ    LEA     BEQM,A1
00001A88  4E4F                    1075          TRAP    #15
00001A8A                          1076          
00001A8A  43F9 0000220E           1077          LEA     SM7,A1
00001A90  4E4F                    1078          TRAP    #15
00001A92                          1079          
00001A92  E15C                    1080          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A94  1204                    1081          MOVE.B  D4,D1
00001A96  0241 00FF               1082          ANDI.W  #%0000000011111111,D1
00001A9A                          1083          
00001A9A  0C01 0000               1084          CMPI.B  #%00000000,D1
00001A9E  6700 FF22               1085          BEQ     DBRA_16BIT      * Word
00001AA2                          1086          
00001AA2  0C01 00FF               1087          CMPI.B  #%11111111,D1
00001AA6  6700 FF3C               1088          BEQ     DBRA_32BIT      * Long
00001AAA                          1089          
00001AAA  43F9 0000226A           1090          LEA     DOLLAR,A1
00001AB0  4E4F                    1091          TRAP    #15
00001AB2                          1092  
00001AB2  340A                    1093          MOVE.W  A2,D2
00001AB4  D441                    1094          ADD.W   D1,D2
00001AB6                          1095   
00001AB6  1A3C 0030               1096          MOVE.B  #48,D5
00001ABA  4EB8 117A               1097          JSR     HEXOUT
00001ABE                          1098          
00001ABE  6000 050C               1099          BRA     DSEND
00001AC2                          1100  
00001AC2                          1101  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AC2                          1102  
00001AC2  4E71                    1103  DS0111  NOP
00001AC4                          1104          
00001AC4  4E71                    1105  DMOVEQ  NOP
00001AC6  43F9 00002270           1106          LEA     MOVEM,A1
00001ACC  4E4F                    1107          TRAP    #15
00001ACE  43F9 0000225C           1108          LEA     VALQ,A1
00001AD4  4E4F                    1109          TRAP    #15
00001AD6  43F9 0000220E           1110          LEA     SM7,A1
00001ADC  4E4F                    1111          TRAP    #15
00001ADE                          1112          
00001ADE                          1113          *getting register number
00001ADE  E75C                    1114          ROL.W   #3,D4
00001AE0  1A04                    1115          MOVE.B  D4,D5
00001AE2  CA3C 0007               1116          AND.B   #%111,D5
00001AE6                          1117          
00001AE6                          1118          *throwing error if next digit not 0
00001AE6  E35C                    1119          ROL.W   #1,D4
00001AE8  1C04                    1120          MOVE.B  D4,D6
00001AEA  CC3C 0001               1121          AND.B   #%1,D6
00001AEE  BC3C 0000               1122          CMP.B   #0,D6
00001AF2  6600 04AC               1123          BNE     DSERR
00001AF6                          1124          
00001AF6                          1125          *getting data and printing information
00001AF6  E15C                    1126          ROL.W   #8,D4
00001AF8  1204                    1127          MOVE.B  D4,D1
00001AFA  C23C 00FF               1128          AND.B   #%11111111,D1
00001AFE  43F9 00002258           1129          LEA     VALN,A1
00001B04  4E4F                    1130          TRAP    #15
00001B06  103C 0003               1131          MOVE.B  #3,D0
00001B0A  4E4F                    1132          TRAP    #15
00001B0C  103C 000E               1133          MOVE.B  #14,D0
00001B10  43F9 00002268           1134          LEA     COMMA,A1
00001B16  4E4F                    1135          TRAP    #15
00001B18  43F9 00002256           1136          LEA     VALD,A1
00001B1E  4E4F                    1137          TRAP    #15
00001B20  103C 0003               1138          MOVE.B  #3,D0
00001B24  3205                    1139          MOVE.W  D5,D1
00001B26  4E4F                    1140          TRAP    #15
00001B28                          1141          
00001B28  6000 04A2               1142          BRA     DSEND
00001B2C                          1143          
00001B2C                          1144  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B2C                          1145  
00001B2C  4E71                    1146  DS1000  NOP
00001B2E                          1147          
00001B2E  E75C                    1148  DOR     ROL.W   #3,D4           ; shift D4 left by 3 bits to get register number
00001B30  1A04                    1149          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B32  0205 0007               1150          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B36  DA39 00002256           1151          ADD.B   VALD,D5         ; Convert register number to ASCII
00001B3C  43F9 00002256           1152          LEA     VALD,A1         ; Load effective address of Dn
00001B42  4E4F                    1153          TRAP    #15             ; Print Dn
00001B44  1E05                    1154          MOVE.B  D5,D7           ; Store the register number for later use
00001B46                          1155  
00001B46  E75C                    1156          ROL.W   #3,D4           ; shift D4 left by 3 bits to get opmode
00001B48  1A04                    1157          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B4A  0205 0007               1158          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B4E  BA3C 0000               1159          CMP.B   #%000,D5        ; compare with byte size
00001B52  6700 0016               1160          BEQ     DORB
00001B56  BA3C 0001               1161          CMP.B   #%001,D5        ; compare with word size
00001B5A  6700 0022               1162          BEQ     DORW
00001B5E  BA3C 0002               1163          CMP.B   #%010,D5        ; compare with long size
00001B62  6700 002E               1164          BEQ     DORL
00001B66                          1165          
00001B66  6000 0464               1166          BRA     DSEND           ; branch to DSEND in case of invalid code
00001B6A                          1167  
00001B6A  43F9 00002285           1168  DORB    LEA     ORM,A1          ; load effective address of ORM string
00001B70  4E4F                    1169          TRAP    #15             ; print ORM string
00001B72  43F9 0000224B           1170          LEA     MODEB,A1        ; load effective address of MODEB string
00001B78  4E4F                    1171          TRAP    #15             ; print MODEB string
00001B7A  6000 002A               1172          BRA     DORA           ; branch to addressing mode parsing
00001B7E                          1173  
00001B7E  43F9 00002285           1174  DORW    LEA     ORM,A1          ; load effective address of ORM string
00001B84  4E4F                    1175          TRAP    #15             ; print ORM string
00001B86  43F9 0000224E           1176          LEA     MODEW,A1        ; load effective address of MODEW string
00001B8C  4E4F                    1177          TRAP    #15             ; print MODEW string
00001B8E  6000 0016               1178          BRA     DORA           ; branch to addressing mode parsing
00001B92                          1179  
00001B92  43F9 00002285           1180  DORL    LEA     ORM,A1          ; load effective address of ORM string
00001B98  4E4F                    1181          TRAP    #15             ; print ORM string
00001B9A  43F9 00002251           1182          LEA     MODEL,A1        ; load effective address of MODEL string
00001BA0  4E4F                    1183          TRAP    #15             ; print MODEL string
00001BA2  6000 0002               1184          BRA     DORA           ; branch to addressing mode parsing
00001BA6                          1185  
00001BA6  ED5C                    1186  DORA    ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001BA8                          1187  
00001BA8  1A04                    1188          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001BAA  0205 0038               1189          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001BAE  E61D                    1190          ROR.B   #3,D5           ; shift D5 right by 3 bits to get mode
00001BB0  43F9 000021F8           1191          LEA     SM3,A1          ; load effective address of SM3 string
00001BB6  4E4F                    1192          TRAP    #15             ; print space
00001BB8  1C05                    1193          MOVE.B  D5,D6           ; store mode in D6 for further checks
00001BBA                          1194  
00001BBA  0204 0007               1195          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001BBE  D839 00002256           1196          ADD.B   VALD,D4         ; convert register number to ASCII
00001BC4  43F9 00002256           1197          LEA     VALD,A1         ; load effective address of Dn
00001BCA  4E4F                    1198          TRAP    #15             ; print Dn
00001BCC                          1199  
00001BCC  BC3C 0000               1200          CMP.B   #%000,D6        ; compare mode with Dn
00001BD0  6700 03FA               1201          BEQ     DSEND
00001BD4  BC3C 0002               1202          CMP.B   #%010,D6        ; compare mode with (An)
00001BD8  6700 03F2               1203          BEQ     DSEND
00001BDC  BC3C 0003               1204          CMP.B   #%011,D6        ; compare mode with (An)+
00001BE0  6700 03EA               1205          BEQ     DSEND
00001BE4  BC3C 0004               1206          CMP.B   #%100,D6        ; compare mode with -(An)
00001BE8  6700 03E2               1207          BEQ     DSEND
00001BEC  BC3C 0007               1208          CMP.B   #%111,D6        ; compare mode with (xxx).W or (xxx).L
00001BF0  6700 03DA               1209          BEQ     DSEND
00001BF4  6000 03D6               1210          BRA     DSEND           ; branch to DSEND in case of invalid code
00001BF8                          1211  
00001BF8                          1212  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BF8                          1213  
00001BF8  4E71                    1214  DS1001  NOP
00001BFA  4E71                    1215  DSUB    NOP
00001BFC                          1216  *print sub
00001BFC  43F9 00002279           1217          LEA     SUBM,A1
00001C02  4E4F                    1218          TRAP    #15
00001C04                          1219  
00001C04                          1220  *parse dn reg: 3 bits
00001C04                          1221  *number of the data register involved
00001C04                          1222  *nums 0-7, paired with below
00001C04  E75C                    1223          ROL.W   #3,D4       *dn reg num in d1
00001C06  1E04                    1224          MOVE.B  D4,D7
00001C08  0207 0007               1225          ANDI.B  #%111,D7
00001C0C                          1226          
00001C0C  3C47                    1227          MOVE.W  D7,A6       *temporary for storage
00001C0E                          1228  
00001C0E                          1229  *parse opmode: 3 bits
00001C0E                          1230  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C0E                          1231  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C0E                          1232  *invalid: 111, 011
00001C0E                          1233  *parse first digit separately
00001C0E  E35C                    1234          ROL.W   #1,D4       *addressing mode in d2
00001C10  1E04                    1235          MOVE.B  D4,D7
00001C12  0207 0001               1236          ANDI.B  #%1,D7
00001C16                          1237          
00001C16                          1238  *parsing next two digits of size
00001C16  E55C                    1239          ROL.W   #2,D4       *size in d5
00001C18  1A04                    1240          MOVE.B  D4,D5
00001C1A  0205 0003               1241          ANDI.B  #%11,D5
00001C1E  4EB8 11C2               1242          JSR     SIZE
00001C22  43F9 0000220E           1243          LEA     SM7,A1
00001C28  4E4F                    1244          TRAP    #15
00001C2A                          1245          
00001C2A                          1246  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C2A  BE3C 0000               1247          CMP.B   #%0,D7       *if 1, then register info printed last
00001C2E  6700 0026               1248          BEQ     DSUBEA      *branch to ea before register
00001C32                          1249          
00001C32                          1250  *printing register information
00001C32                          1251  DSUBPRNTREG
00001C32  43F9 00002256           1252          LEA     VALD,A1
00001C38  4E4F                    1253          TRAP    #15
00001C3A  320E                    1254          MOVE.W  A6,D1       *retrieving a6 register data
00001C3C  103C 0003               1255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C40  4E4F                    1256          TRAP    #15         *printing register number
00001C42  103C 000E               1257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C46  BE3C 0000               1258          CMP.B   #%0,D7      *if info finished printing
00001C4A  6700 0380               1259          BEQ     DSEND      *branch to end
00001C4E  43F9 00002268           1260          LEA     COMMA,A1
00001C54  4E4F                    1261          TRAP    #15
00001C56                          1262  
00001C56                          1263          
00001C56                          1264  * parse ea mode: 3 bits
00001C56                          1265  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C56                          1266  *address reg direct not allowed for .B operations
00001C56                          1267  *no invalid
00001C56                          1268  DSUBEA
00001C56  E75C                    1269          ROL.W   #3,D4       *ea mode
00001C58  1604                    1270          MOVE.B  D4,D3
00001C5A  0203 0007               1271          ANDI.B  #%111,D3
00001C5E                          1272  
00001C5E                          1273  *parse ea reg: 3 bits
00001C5E                          1274  *no invalid: paired with opmode below (nums 0-7)
00001C5E                          1275  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001C5E  E75C                    1276          ROL.W   #3,D4       *ea mode
00001C60  1C04                    1277          MOVE.B  D4,D6
00001C62  0206 0007               1278          ANDI.B  #%111,D6
00001C66                          1279          
00001C66  2803                    1280          MOVE.L  D3,D4   *temporarily using D4 
00001C68                          1281          
00001C68                          1282  *comparisons
00001C68  B67C 0004               1283          CMP     #%100,D3
00001C6C  6700 0332               1284          BEQ     DSERR
00001C70  4EB8 120C               1285          JSR     ADDRMODEALL
00001C74  BE3C 0001               1286          CMP.B   #%1,D7      *if info printed
00001C78  6700 0352               1287          BEQ     DSEND       *end
00001C7C  43F9 00002268           1288          LEA     COMMA,A1
00001C82  4E4F                    1289          TRAP    #15
00001C84  60AC                    1290          BRA     DSUBPRNTREG *check d6 for size of data
00001C86                          1291  *then take data from d4 and print (?)
00001C86                          1292  
00001C86  6000 0344               1293          BRA     DSEND
00001C8A                          1294  
00001C8A                          1295  
00001C8A                          1296  
00001C8A  4E71                    1297  DS1010  NOP
00001C8C  6000 0322               1298          BRA     DSERRINS
00001C90                          1299  
00001C90                          1300          
00001C90                          1301  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C90                          1302  
00001C90  4E71                    1303  DS1011  NOP
00001C92  6000 031C               1304          BRA     DSERRINS
00001C96                          1305          
00001C96                          1306  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C96                          1307  
00001C96  4E71                    1308  DS1100  NOP
00001C98  6000 0316               1309          BRA     DSERRINS
00001C9C                          1310          
00001C9C                          1311  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C9C                          1312  
00001C9C  4E71                    1313  DS1101  NOP
00001C9E                          1314  
00001C9E  4E71                    1315  DADD    NOP
00001CA0  43F9 00002275           1316          LEA     ADDM,A1
00001CA6  4E4F                    1317          TRAP    #15
00001CA8                          1318          
00001CA8                          1319          *parse dn reg: 3 bits
00001CA8                          1320  *number of the data register involved
00001CA8                          1321  *nums 0-7, paired with below
00001CA8  E75C                    1322          ROL.W   #3,D4       *dn reg num in d7
00001CAA  1E04                    1323          MOVE.B  D4,D7
00001CAC  0207 0007               1324          ANDI.B  #%111,D7
00001CB0                          1325          
00001CB0  3C47                    1326          MOVE.W  D7,A6
00001CB2                          1327  
00001CB2                          1328  *parse opmode: 3 bits
00001CB2                          1329  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001CB2                          1330  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001CB2                          1331  *invalid: 111, 011
00001CB2                          1332  *parse first digit separately
00001CB2  E35C                    1333          ROL.W   #1,D4       *addressing mode in d2
00001CB4  1E04                    1334          MOVE.B  D4,D7
00001CB6  0207 0001               1335          ANDI.B  #%1,D7
00001CBA                          1336          
00001CBA                          1337  *parsing next two digits of size
00001CBA  E55C                    1338          ROL.W   #2,D4       *size in d5
00001CBC  1A04                    1339          MOVE.B  D4,D5
00001CBE  0205 0003               1340          ANDI.B  #%11,D5
00001CC2  BA3C 0003               1341          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001CC6  6700 007C               1342          BEQ     DADDA
00001CCA  4EB8 11C2               1343          JSR     SIZE
00001CCE  43F9 0000220E           1344          LEA     SM7,A1
00001CD4  4E4F                    1345          TRAP    #15
00001CD6                          1346          
00001CD6                          1347  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001CD6  BE3C 0000               1348          CMP.B   #%0,D7       *if 0, then register info printed last
00001CDA  6700 002E               1349          BEQ     DADDEA      *branch to ea before register
00001CDE                          1350          
00001CDE                          1351  *printing register information
00001CDE                          1352  DADDPRNTREG
00001CDE  BA3C 0003               1353          CMP.B   #%11,D5
00001CE2  6700 0058               1354          BEQ     PRINTA
00001CE6  43F9 00002256           1355          LEA     VALD,A1
00001CEC                          1356  ADDCONT
00001CEC  4E4F                    1357          TRAP    #15
00001CEE  320E                    1358          MOVE.W  A6,D1       *moving reg num to d1 to print
00001CF0  103C 0003               1359          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001CF4  4E4F                    1360          TRAP    #15         *printing register number
00001CF6  103C 000E               1361          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001CFA  BE3C 0000               1362          CMP.B   #%0,D7      *if info finished printing
00001CFE  6700 02CC               1363          BEQ     DSEND      *branch to end
00001D02  43F9 00002268           1364          LEA     COMMA,A1
00001D08  4E4F                    1365          TRAP    #15
00001D0A                          1366  
00001D0A                          1367          
00001D0A                          1368  * parse ea mode: 3 bits
00001D0A                          1369  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001D0A                          1370  *address reg direct not allowed for .B operations
00001D0A                          1371  *no invalid
00001D0A                          1372  DADDEA
00001D0A  E75C                    1373          ROL.W   #3,D4       *ea mode
00001D0C  1604                    1374          MOVE.B  D4,D3
00001D0E  0203 0007               1375          ANDI.B  #%111,D3
00001D12                          1376  
00001D12                          1377  *parse ea reg: 3 bits
00001D12                          1378  *no invalid: paired with opmode below (nums 0-7)
00001D12                          1379  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001D12  E75C                    1380          ROL.W   #3,D4       *ea mode
00001D14  1C04                    1381          MOVE.B  D4,D6
00001D16  0206 0007               1382          ANDI.B  #%111,D6
00001D1A                          1383          
00001D1A                          1384  *comparisons
00001D1A  B67C 0004               1385          CMP     #%100,D3
00001D1E  6700 005A               1386          BEQ     ADDDATACHECK
00001D22                          1387  DATACHECKCONT
00001D22  4EB8 120C               1388          JSR     ADDRMODEALL
00001D26  BE3C 0001               1389          CMP.B   #%1,D7      *if info printed
00001D2A  6700 02A0               1390          BEQ     DSEND       *end
00001D2E  43F9 00002268           1391          LEA     COMMA,A1
00001D34  4E4F                    1392          TRAP    #15
00001D36  60A6                    1393          BRA     DADDPRNTREG 
00001D38                          1394  
00001D38  6000 0292               1395          BRA     DSEND
00001D3C                          1396          
00001D3C  43F9 00002254           1397  PRINTA  LEA     VALA,A1
00001D42  60A8                    1398          BRA     ADDCONT
00001D44                          1399  
00001D44                          1400          
00001D44  4E71                    1401  DADDA   NOP
00001D46  43F9 00002254           1402          LEA     VALA,A1
00001D4C  4E4F                    1403          TRAP    #15
00001D4E  BE3C 0000               1404          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001D52  6600 000C               1405          BNE     ADDAL
00001D56  43F9 0000224E           1406          LEA     MODEW,A1
00001D5C  6000 000C               1407          BRA     ADDSIZEEND
00001D60  43F9 00002251           1408  ADDAL   LEA     MODEL,A1
00001D66  6000 0002               1409          BRA     ADDSIZEEND
00001D6A                          1410  ADDSIZEEND
00001D6A  4E4F                    1411          TRAP    #15
00001D6C  43F9 0000220E           1412          LEA     SM7,A1
00001D72  4E4F                    1413          TRAP    #15
00001D74  1E3C 0000               1414          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D78  6090                    1415          BRA     DADDEA
00001D7A                          1416  ADDDATACHECK
00001D7A  BA3C 0003               1417          CMP.B   #%11,D5
00001D7E  6700 0220               1418          BEQ     DSERR
00001D82  609E                    1419          BRA     DATACHECKCONT
00001D84                          1420          
00001D84                          1421          
00001D84                          1422  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D84                          1423  
00001D84                          1424  DS1110
00001D84  E75C                    1425          ROL.W   #3,D4           * [D2] Reading count
00001D86  1404                    1426          MOVE.B  D4,D2
00001D88  0202 0007               1427          ANDI.B  #%111,D2
00001D8C                          1428          
00001D8C  E35C                    1429          ROL.W   #1,D4           * [D3] Reading direction
00001D8E  1604                    1430          MOVE.B  D4,D3
00001D90  0203 0001               1431          ANDI.B  #%1,D3
00001D94                          1432          
00001D94  E55C                    1433          ROL.W   #2,D4           * [D5] Reading size
00001D96  1A04                    1434          MOVE.B  D4,D5
00001D98  0205 0003               1435          ANDI.B  #%11,D5
00001D9C                          1436          
00001D9C  BA3C 0003               1437          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001DA0  6700 00F0               1438          BEQ     DS1110MEM
00001DA4                          1439          
00001DA4  E35C                    1440          ROL.W   #1,D4           * [D6] Reading count mode
00001DA6  1C04                    1441          MOVE.B  D4,D6
00001DA8  0206 0001               1442          ANDI.B  #%1,D6
00001DAC                          1443          
00001DAC  E55C                    1444          ROL.W   #2,D4           * [D7] reading type of shift
00001DAE  1E04                    1445          MOVE.B  D4,D7
00001DB0  0207 0003               1446          ANDI.B  #%11,D7
00001DB4                          1447          
00001DB4  E75C                    1448          ROL.W   #3,D4           * [D1] reading register
00001DB6  1204                    1449          MOVE.B  D4,D1
00001DB8  0201 0007               1450          ANDI.B  #%111,D1
00001DBC                          1451          
00001DBC  BE3C 0001               1452          CMP.B   #%01,D7   *Determine shift type
00001DC0  6700 008E               1453          BEQ     DLS
00001DC4  BE3C 0000               1454          CMP.B   #%00,D7
00001DC8  6700 0092               1455          BEQ     DAS
00001DCC  BE3C 0003               1456          CMP.B   #%11,D7
00001DD0  6700 0096               1457          BEQ     DRO
00001DD4                          1458          
00001DD4  6000 01F6               1459          BRA     DSEND               *Fallback in case of invalid code
00001DD8                          1460          
00001DD8  48E7 FFFF               1461  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001DDC  4EB9 00001E74           1462          JSR     DS1110SIDE
00001DE2  4CDF FFFF               1463          MOVEM.L (SP)+,A0-A7/D0-D7
00001DE6                          1464          
00001DE6  48E7 FFFF               1465          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001DEA  4EB8 11C2               1466          JSR     SIZE
00001DEE  4CDF FFFF               1467          MOVEM.L (SP)+,A0-A7/D0-D7
00001DF2                          1468          
00001DF2  103C 000E               1469          MOVE.B  #14,D0
00001DF6  43F9 00002201           1470          LEA     SM5,A1
00001DFC  4E4F                    1471          TRAP    #15
00001DFE                          1472          
00001DFE  BA3C 0003               1473          CMP.B   #%11,D5
00001E02  6700 00B4               1474          BEQ     DS1110MEMA
00001E06                          1475          
00001E06  BC3C 0001               1476          CMP.B   #%1,D6
00001E0A  6700 003A               1477          BEQ     DS1110_REG_D
00001E0E  6000 002C               1478          BRA     DS1110_REG_I
00001E12                          1479          
00001E12  1C01                    1480  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001E14                          1481          
00001E14  103C 0003               1482          MOVE.B  #3,D0
00001E18  1202                    1483          MOVE.B  D2,D1
00001E1A  4E4F                    1484          TRAP    #15
00001E1C                          1485          
00001E1C  103C 000E               1486          MOVE.B  #14,D0
00001E20  43F9 00002268           1487          LEA     COMMA,A1
00001E26  4E4F                    1488          TRAP    #15
00001E28                          1489          
00001E28  43F9 00002256           1490          LEA     VALD,A1
00001E2E  4E4F                    1491          TRAP    #15
00001E30                          1492          
00001E30  103C 0003               1493          MOVE.B  #3,D0
00001E34  1206                    1494          MOVE.B  D6,D1
00001E36  4E4F                    1495          TRAP    #15
00001E38                          1496          
00001E38  6000 0192               1497          BRA     DSEND
00001E3C                          1498          
00001E3C                          1499  DS1110_REG_I
00001E3C  43F9 00002258           1500          LEA     VALN,A1
00001E42  4E4F                    1501          TRAP    #15
00001E44  60CC                    1502          BRA     DS1110B
00001E46                          1503  
00001E46                          1504  DS1110_REG_D
00001E46  43F9 00002256           1505          LEA     VALD,A1
00001E4C  4E4F                    1506          TRAP    #15
00001E4E  60C2                    1507          BRA     DS1110B       
00001E50                          1508          
00001E50  43F9 0000228C           1509  DLS     LEA     LSM,A1
00001E56  4E4F                    1510          TRAP    #15
00001E58  6000 FF7E               1511          BRA     DS1110A
00001E5C                          1512          
00001E5C  43F9 00002293           1513  DAS     LEA     ASM,A1
00001E62  4E4F                    1514          TRAP    #15
00001E64  6000 FF72               1515          BRA     DS1110A
00001E68                          1516          
00001E68  43F9 0000229A           1517  DRO     LEA     ROM,A1
00001E6E  4E4F                    1518          TRAP    #15
00001E70  6000 FF66               1519          BRA     DS1110A
00001E74                          1520          
00001E74                          1521  DS1110SIDE
00001E74  103C 0006               1522          MOVE.B  #6,D0
00001E78  B63C 0001               1523          CMP.B   #1,D3
00001E7C  6700 000C               1524          BEQ     DS1110LSIDE
00001E80  123C 0052               1525          MOVE.B  #82,D1
00001E84  4E4F                    1526          TRAP    #15
00001E86  6000 0008               1527          BRA     DS1110SIDEEND
00001E8A                          1528  
00001E8A                          1529  DS1110LSIDE
00001E8A  123C 004C               1530          MOVE.B  #76,D1
00001E8E  4E4F                    1531          TRAP    #15
00001E90                          1532          
00001E90                          1533  DS1110SIDEEND
00001E90  4E75                    1534          RTS 
00001E92                          1535  
00001E92                          1536  DS1110MEM
00001E92                          1537                                  * Shift type is instead stored in D2
00001E92                          1538          
00001E92  E75C                    1539          ROL.W   #3,D4           * [D6] Reading address mode
00001E94  1C04                    1540          MOVE.B  D4,D6
00001E96  0206 0007               1541          ANDI.B  #%111,D6
00001E9A                          1542          
00001E9A  E75C                    1543          ROL.W   #3,D4           * [D1] Reading address register
00001E9C  1204                    1544          MOVE.B  D4,D1
00001E9E  0201 0007               1545          ANDI.B  #%111,D1
00001EA2                          1546          
00001EA2  B43C 0001               1547          CMP.B   #%01,D2
00001EA6  67A8                    1548          BEQ     DLS
00001EA8  B43C 0000               1549          CMP.B   #%00,D2
00001EAC  67AE                    1550          BEQ     DAS
00001EAE  B43C 0003               1551          CMP.B   #%11,D2
00001EB2  67B4                    1552          BEQ     DRO
00001EB4  6000 0116               1553          BRA     DSEND
00001EB8                          1554          
00001EB8                          1555          
00001EB8                          1556  DS1110MEMA
00001EB8                          1557          
00001EB8  BC3C 0002               1558          CMP.B   #%010,D6
00001EBC  6700 002E               1559          BEQ     DS1110MEM_REG
00001EC0  BC3C 0003               1560          CMP.B   #%011,D6
00001EC4  6700 004C               1561          BEQ     DS1110MEM_INC
00001EC8  BC3C 0004               1562          CMP.B   #%100,D6
00001ECC  6700 006A               1563          BEQ     DS1110MEM_DEC
00001ED0                          1564          
00001ED0  BC3C 0007               1565          CMP.B   #%111,D6
00001ED4  6600 00CA               1566          BNE     DSERR
00001ED8                          1567          
00001ED8  B23C 0000               1568          CMP.B   #%000,D1
00001EDC  6700 0080               1569          BEQ     DS1110MEM_CUSW
00001EE0  B23C 0001               1570          CMP.B   #%001,D1
00001EE4  6700 0096               1571          BEQ     DS1110MEM_CUSL
00001EE8                          1572          
00001EE8  6000 00E2               1573          BRA     DSEND
00001EEC                          1574  
00001EEC                          1575  DS1110MEM_REG
00001EEC  43F9 0000225E           1576          LEA     OPENPTR,A1
00001EF2  4E4F                    1577          TRAP    #15
00001EF4                          1578          
00001EF4  43F9 00002254           1579          LEA     VALA,A1
00001EFA  4E4F                    1580          TRAP    #15
00001EFC                          1581          
00001EFC  103C 0003               1582          MOVE.B  #3,D0
00001F00  4E4F                    1583          TRAP    #15
00001F02  103C 000E               1584          MOVE.B  #14,D0
00001F06                          1585          
00001F06  43F9 00002263           1586          LEA     CLOSEPTR,A1
00001F0C  4E4F                    1587          TRAP    #15
00001F0E                          1588          
00001F0E  6000 00BC               1589          BRA     DSEND
00001F12                          1590  
00001F12                          1591  DS1110MEM_INC
00001F12  43F9 0000225E           1592          LEA     OPENPTR,A1
00001F18  4E4F                    1593          TRAP    #15
00001F1A                          1594          
00001F1A  43F9 00002254           1595          LEA     VALA,A1
00001F20  4E4F                    1596          TRAP    #15
00001F22                          1597          
00001F22  103C 0003               1598          MOVE.B  #3,D0
00001F26  4E4F                    1599          TRAP    #15
00001F28  103C 000E               1600          MOVE.B  #14,D0
00001F2C                          1601          
00001F2C  43F9 00002265           1602          LEA     CLOSEIPTR,A1
00001F32  4E4F                    1603          TRAP    #15
00001F34                          1604          
00001F34  6000 0096               1605          BRA     DSEND
00001F38                          1606  
00001F38                          1607  DS1110MEM_DEC
00001F38  43F9 00002260           1608          LEA     OPENDPTR,A1
00001F3E  4E4F                    1609          TRAP    #15
00001F40                          1610          
00001F40  43F9 00002254           1611          LEA     VALA,A1
00001F46  4E4F                    1612          TRAP    #15
00001F48                          1613          
00001F48  103C 0003               1614          MOVE.B  #3,D0
00001F4C  4E4F                    1615          TRAP    #15
00001F4E  103C 000E               1616          MOVE.B  #14,D0
00001F52                          1617          
00001F52  43F9 00002263           1618          LEA     CLOSEPTR,A1
00001F58  4E4F                    1619          TRAP    #15
00001F5A                          1620          
00001F5A  6000 0070               1621          BRA     DSEND
00001F5E                          1622          
00001F5E                          1623  DS1110MEM_CUSW
00001F5E  43F9 0000226A           1624          LEA     DOLLAR,A1
00001F64  4E4F                    1625          TRAP    #15
00001F66  341A                    1626          MOVE.W  (A2)+,D2
00001F68  48E7 0400               1627          MOVEM.L D5,-(SP)
00001F6C  1A3C 0030               1628          MOVE.B  #48,D5
00001F70  4EB8 117A               1629          JSR     HEXOUT
00001F74  4CDF 0020               1630          MOVEM.L (SP)+,D5
00001F78  6000 0052               1631          BRA     DSEND
00001F7C                          1632          
00001F7C                          1633  DS1110MEM_CUSL
00001F7C  43F9 0000226A           1634          LEA     DOLLAR,A1
00001F82  4E4F                    1635          TRAP    #15
00001F84  241A                    1636          MOVE.L  (A2)+,D2
00001F86  48E7 0400               1637          MOVEM.L D5,-(SP)
00001F8A  1A3C 0030               1638          MOVE.B  #48,D5
00001F8E  4EB8 117A               1639          JSR     HEXOUT
00001F92  4CDF 0020               1640          MOVEM.L (SP)+,D5
00001F96  6000 0034               1641          BRA     DSEND
00001F9A                          1642          
00001F9A                          1643  
00001F9A                          1644  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F9A                          1645  
00001F9A  4E71                    1646  DS1111  NOP
00001F9C  6000 002E               1647          BRA     DSEND
00001FA0                          1648  
00001FA0                          1649  *DS Final
00001FA0                          1650  *--------------------------------------------------------------------------------------------------
00001FA0                          1651  
00001FA0  103C 000E               1652  DSERR   MOVE.B  #14,D0
00001FA4  43F9 0000221D           1653          LEA     ERRM,A1
00001FAA  4E4F                    1654          TRAP    #15
00001FAC  6000 001E               1655          BRA     DSEND
00001FB0                          1656          
00001FB0                          1657  DSERRINS
00001FB0  103C 000E               1658          MOVE.B  #14,D0
00001FB4  43F9 00002225           1659          LEA     ERRMINS,A1
00001FBA  4E4F                    1660          TRAP    #15
00001FBC  6000 000E               1661          BRA     DSEND
00001FC0                          1662  
00001FC0                          1663  DSERREA
00001FC0  103C 000E               1664          MOVE.B  #14,D0
00001FC4  43F9 00002226           1665          LEA     ERRMEA,A1
00001FCA  4E4F                    1666          TRAP    #15
00001FCC                          1667  
00001FCC  4E75                    1668  DSEND   RTS
00001FCE                          1669  
00001FCE  43F9 000021EE           1670  DSEOF   LEA     LB,A1
00001FD4  103C 000E               1671          MOVE.B  #14,D0
00001FD8  4E4F                    1672          TRAP    #15
00001FDA                          1673          
00001FDA  43F9 000020F0           1674          LEA     REST,A1
00001FE0  103C 000E               1675          MOVE.B  #14,D0
00001FE4  4E4F                    1676          TRAP    #15
00001FE6                          1677          
00001FE6  103C 0005               1678          MOVE.B  #5,D0
00001FEA  4E4F                    1679          TRAP    #15
00001FEC                          1680          
00001FEC  B23C 0059               1681          CMP.B   #89,D1
00001FF0  6700 F00E               1682          BEQ     START
00001FF4  B23C 0079               1683          CMP.B   #121,D1
00001FF8  6700 F006               1684          BEQ     START
00001FFC                          1685  
00001FFC  43F9 000021EE           1686  END     LEA     LB,A1
00002002  103C 000E               1687          MOVE.B  #14,D0
00002006  4E4F                    1688          TRAP    #15
00002008                          1689          
00002008  43F9 000021EE           1690          LEA     LB,A1
0000200E  103C 000E               1691          MOVE.B  #14,D0
00002012  4E4F                    1692          TRAP    #15
00002014                          1693          
00002014  43F9 0000210D           1694          LEA     ENDMSG,A1
0000201A  103C 000E               1695          MOVE.B  #14,D0
0000201E  4E4F                    1696          TRAP    #15
00002020                          1697          
00002020  43F9 00002135           1698          LEA     AUTHOR,A1
00002026  4E4F                    1699          TRAP    #15
00002028                          1700          
00002028  43F9 000021EE           1701          LEA     LB,A1
0000202E  103C 000E               1702          MOVE.B  #14,D0
00002032  4E4F                    1703          TRAP    #15
00002034                          1704          
00002034  103C 0009               1705          MOVE.B  #9,D0
00002038  4E4F                    1706          TRAP    #15
0000203A                          1707  
0000203A                          1708  *Initialized Variables
0000203A                          1709  *--------------------------------------------------------------------------------------------------
0000203A                          1710  
0000203A  =0000000D               1711  CR      EQU     $0D
0000203A  =0000000A               1712  LF      EQU     $0A
0000203A  =00000009               1713  HT      EQU     $09
0000203A                          1714  
0000203A= 54 68 69 73 20 69 ...   1715  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000020C2= 45 6E 74 65 72 20 ...   1716  ASTART  DC.B    'Enter start address: $',0
000020D9= 45 6E 74 65 72 20 ...   1717  AEND    DC.B    'Enter end address:   $',0
000020F0= 52 65 73 74 61 72 ...   1718  REST    DC.B    'Restart Disassembler (y/n)? ',0
0000210D= 54 68 61 6E 6B 20 ...   1719  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002135= 4D 61 64 65 20 62 ...   1720  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000215A                          1721  
0000215A= 45 52 52 4F 52 3A ...   1722  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002194= 45 52 52 4F 52 3A ...   1723  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
000021BA= 45 52 52 4F 52 3A ...   1724  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000021EE                          1725  
000021EE= 0D 0A 00                1726  LB      DC.B    CR,LF,0
000021F1                          1727  
000021F1= 09 00                   1728  HTM     DC.B    HT,0
000021F3                          1729  
000021F3= 20 00                   1730  SM1     DC.B    ' ',0
000021F5= 20 20 00                1731  SM2     DC.B    '  ',0
000021F8= 20 20 20 00             1732  SM3     DC.B    '   ',0
000021FC= 20 20 20 20 00          1733  SM4     DC.B    '    ',0
00002201= 20 20 20 20 20 00       1734  SM5     DC.B    '     ',0
00002207= 20 20 20 20 20 20 00    1735  SM6     DC.B    '      ',0
0000220E= 20 20 20 20 20 20 ...   1736  SM7     DC.B    '       ',0
00002216                          1737  
00002216= 54 45 53 54 00          1738  TESTM   DC.B    'TEST',0
0000221B                          1739  
0000221B= 00                      1740  NOTH    DC.B    '',0
0000221C= 00                      1741  NOTH2   DC.B    '',0
0000221D                          1742  
0000221D= 20 2A 45 52 52 4F ...   1743  ERRM    DC.B    ' *ERROR',0
00002225= 00                      1744  ERRMINS DC.B    '',0
00002226= 20 2A 45 52 52 4F ...   1745  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
0000224B                          1746  
0000224B= 2E 42 00                1747  MODEB   DC.B    '.B',0
0000224E= 2E 57 00                1748  MODEW   DC.B    '.W',0
00002251= 2E 4C 00                1749  MODEL   DC.B    '.L',0
00002254                          1750  
00002254= 41 00                   1751  VALA    DC.B    'A',0
00002256= 44 00                   1752  VALD    DC.B    'D',0
00002258= 23 00                   1753  VALN    DC.B    '#',0
0000225A= 30 00                   1754  VAL0    DC.B    '0',0
0000225C= 51 00                   1755  VALQ    DC.B    'Q',0
0000225E                          1756  
0000225E= 28 00                   1757  OPENPTR     DC.B    '(',0
00002260= 2D 28 00                1758  OPENDPTR    DC.B    '-(',0
00002263                          1759  
00002263= 29 00                   1760  CLOSEPTR    DC.B    ')',0
00002265= 29 2B 00                1761  CLOSEIPTR   DC.B    ')+',0
00002268                          1762  
00002268= 2C 00                   1763  COMMA   DC.B    ',',0
0000226A= 24 00                   1764  DOLLAR  DC.B    '$',0
0000226C                          1765  
0000226C= 4E 4F 50 00             1766  NOPM    DC.B    'NOP',0
00002270                          1767  
00002270= 4D 4F 56 45 00          1768  MOVEM   DC.B    'MOVE',0
00002275                          1769  
00002275= 41 44 44 00             1770  ADDM    DC.B    'ADD',0
00002279                          1771  
00002279= 53 55 42 00             1772  SUBM    DC.B    'SUB',0
0000227D                          1773  
0000227D= 4C 45 41 00             1774  LEAM    DC.B    'LEA',0
00002281                          1775  
00002281= 41 4E 44 00             1776  ANDM    DC.B    'AND',0
00002285= 4F 52 00                1777  ORM     DC.B    'OR',0
00002288= 4E 4F 54 00             1778  NOTM    DC.B    'NOT',0
0000228C                          1779  
0000228C= 4C 53 00                1780  LSM    DC.B    'LS',0
0000228F= 4C 53 52 00             1781  LSRM    DC.B    'LSR',0
00002293= 41 53 00                1782  ASM    DC.B    'AS',0
00002296= 41 53 52 00             1783  ASRM    DC.B    'ASR',0
0000229A                          1784  
0000229A= 52 4F 00                1785  ROM    DC.B    'RO',0
0000229D= 52 4F 52 00             1786  RORM    DC.B    'ROR',0
000022A1                          1787  
000022A1= 42 47 54 00             1788  BGTM    DC.B    'BGT',0
000022A5= 42 4C 45 00             1789  BLEM    DC.B    'BLE',0
000022A9= 42 45 51 00             1790  BEQM    DC.B    'BEQ',0
000022AD                          1791  
000022AD= 4A 53 52 00             1792  JSRM    DC.B    'JSR',0
000022B1= 52 54 53 00             1793  RTSM    DC.B    'RTS',0
000022B5                          1794  
000022B5= 42 52 41 00             1795  BRAM    DC.B    'BRA',0
000022B9                          1796  
000022B9                          1797  
000022B9                          1798      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1D60
ADDCONT             1CEC
ADDDATACHECK        1D7A
ADDM                2275
ADDRMODEALL         120C
ADDSIZEEND          1D6A
ADREG               1682
ADREGP              169A
AEND                20D9
AM000               120C
AM001               122C
AM010               1254
AM011               1284
AM100               12B4
AM111               12E4
AM111001            1312
AM111100            1338
AMEND               1366
ANDM                2281
ASM                 2293
ASRM                2296
ASTART              20C2
AUTHOR              2135
BEQM                22A9
BGTM                22A1
BLEM                22A5
BRAM                22B5
CLOSEIPTR           2265
CLOSEPTR            2263
COMMA               2268
CR                  D
DADD                1C9E
DADDA               1D44
DADDEA              1D0A
DADDPRNTREG         1CDE
DADDQ               18D6
DAND                139E
DANDA               1428
DANDB               13EC
DANDL               1414
DANDW               1400
DAS                 1E5C
DATACHECKCONT       1D22
DBEQ                1A82
DBGT                1A06
DBLE                1A42
DBRA                197A
DBRA_16BIT          19C2
DBRA_32BIT          19E4
DISASM              136C
DJSR                1704
DJSR_CUSL           179C
DJSR_CUSW           177E
DJSR_REG            1758
DLEA                17C6
DLEAP               17FC
DLS                 1E50
DMOVE2              146E
DMOVEA              1512
DMOVEQ              1AC4
DNOP                15C8
DNOT                15D4
DNOTA               1634
DNOTB               15F8
DNOTL               1620
DNOTW               160C
DOLLAR              226A
DOR                 1B2E
DORA                1BA6
DORB                1B6A
DORL                1B92
DORW                1B7E
DREG                166A
DRO                 1E68
DRTS                17BA
DS0                 1376
DS00                138A
DS01                1534
DS010               1552
DS0100              158E
DS0101              18D4
DS011               155C
DS0110              194E
DS0111              1AC2
DS1                 1380
DS10                153E
DS100               1566
DS1000              1B2C
DS1001              1BF8
DS101               1570
DS1010              1C8A
DS1011              1C90
DS11                1548
DS110               157A
DS1100              1C96
DS1101              1C9C
DS111               1584
DS1110              1D84
DS1110A             1DD8
DS1110B             1E12
DS1110LSIDE         1E8A
DS1110MEM           1E92
DS1110MEMA          1EB8
DS1110MEM_CUSL      1F7C
DS1110MEM_CUSW      1F5E
DS1110MEM_DEC       1F38
DS1110MEM_INC       1F12
DS1110MEM_REG       1EEC
DS1110SIDE          1E74
DS1110SIDEEND       1E90
DS1110_REG_D        1E46
DS1110_REG_I        1E3C
DS1111              1F9A
DSEND               1FCC
DSEOF               1FCE
DSERR               1FA0
DSERREA             1FC0
DSERRINS            1FB0
DSUB                1BFA
DSUBEA              1C56
DSUBPRNTREG         1C32
END                 1FFC
ENDMSG              210D
ERRM                221D
ERRMEA              2226
ERRMINS             2225
EXT                 16E2
EXTW                16F8
HDONE               11C0
HEXOUT              117A
HHEX                1194
HNUM                119C
HSKIP2              11AA
HSKIP3              11BE
HSTEP               1182
HSTEP2              11A0
HT                  9
HTM                 21F1
INTRO               203A
JSR010              1828
JSR111              1858
JSR111001           188A
JSRM                22AD
JSRPRINT2           18B4
LB                  21EE
LEAM                227D
LF                  A
LSM                 228C
LSRM                228F
MADREG              16BA
MODEB               224B
MODEL               2251
MODEW               224E
MOVECONT            1492
MOVEERRCHECK        1528
MOVEM               2270
MSDONE              14D8
MSIZE               1492
MSIZEB              14BA
MSIZEL              14CE
MSIZEW              14C4
NOPM                226C
NOTH                221B
NOTH2               221C
NOTM                2288
OPENDPTR            2260
OPENPTR             225E
ORM                 2285
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1D3C
PSTEP               108E
PSTEP2              10BE
RCONT               1166
READLN              1118
REST                20F0
ROM                 229A
RORM                229D
RPAUSE              116E
RSTEP               111E
RTSM                22B1
SDONE               1208
SIZE                11C2
SIZEB               11EA
SIZEL               11FE
SIZEW               11F4
SM1                 21F3
SM2                 21F5
SM3                 21F8
SM4                 21FC
SM5                 2201
SM6                 2207
SM7                 220E
SRET                120A
START               1000
STARTER             0
SUBM                2279
TEST                102A
TESTM               2216
VAL0                225A
VALA                2254
VALD                2256
VALN                2258
VALQ                225C
VERR1               10E8
VERR1M              215A
VERR2               10F8
VERR2M              2194
VERR3               1108
VERR3M              21BA
VINPUT              10DE
