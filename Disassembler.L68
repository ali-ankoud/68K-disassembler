00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 5:53:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 00002026             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 000020AE             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 00002207             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 000020C5             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 00002207             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 00002146            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 0EF2                109          BRA     END
000010F8                           110  
000010F8  43F9 00002180            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 0EE2                114          BRA     END
00001108                           115  
00001108  43F9 000021A6            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 0ED2                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  244B                     124          MOVE.L  A3,A2               *Set current address to start address
0000111A  1A3C 0000                125          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000111E                           126  
0000111E                           127  RSTEP                               *RSTEP: 
0000111E  381A                     128          MOVE.W  (A2)+,D4
00001120  340A                     129          MOVE.W  A2,D2
00001122  5542                     130          SUBQ.W  #2,D2
00001124                           131          
00001124  48E7 0400                132          MOVEM.L D5,-(SP)
00001128  1A3C 0000                133          MOVE.B  #0,D5
0000112C  4EB9 0000117A            134          JSR     HEXOUT              *Run printing operation for HEX address
00001132  4CDF 0020                135          MOVEM.L (SP)+,D5
00001136                           136          
00001136  43F9 000021E1            137          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000113C  103C 000E                138          MOVE.B  #14,D0
00001140  4E4F                     139          TRAP    #15
00001142                           140          
00001142  48E7 7F0F                141          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001146  4EB9 0000136C            142          JSR     DISASM              *Run disassembly for current machine code
0000114C  4CDF F0FE                143          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001150                           144          
00001150  5205                     145          ADDQ.B  #1,D5       *Increment counter by 1
00001152  BA3C 0020                146          CMP.B   #32,D5      *Check if we reached 32 lines
00001156  6700 0016                147          BEQ     RPAUSE      *Branch to pausing code
0000115A                           148          
0000115A  43F9 000021DA            149          LEA     LB,A1       *Print line break
00001160  103C 000E                150          MOVE.B  #14,D0      
00001164  4E4F                     151          TRAP    #15
00001166                           152          
00001166                           153  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001166  B9CA                     154          CMP.L   A2,A4       *Check if we reached the end address
00001168  6D00 0E50                155          BLT     DSEOF       *End loop if so
0000116C  60B0                     156          BRA     RSTEP       *Or else continue the loop
0000116E                           157          
0000116E                           158  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000116E  1A3C 0000                159          MOVE.B  #0,D5       * Reset D5 counter
00001172  103C 0005                160          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001176  4E4F                     161          TRAP    #15         * Only used for waiting for user to hit ENTER
00001178  60EC                     162          BRA     RCONT       *Continue with READLN loop
0000117A                           163  
0000117A                           164  *--------------------------------------------------------------------------------------------------
0000117A                           165  
0000117A                           166  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000117A  103C 0006                167          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000117E  163C 0008                168          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001182                           169          
00001182                           170  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001182  E99A                     171          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001184  2202                     172          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001186  0281 0000000F            173          ANDI.L  #$F,D1      * Filter to the right four bits
0000118C  B23C 000A                174          CMP.B   #10,D1      *Distinguish between number and letter
00001190  6D00 000A                175          BLT     HNUM        *Branch to number handling, or continue to letter handling
00001194                           176          
00001194                           177  HHEX                        *HHEX: Handle letters from HEXOUT for loop
00001194  0601 0037                178          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001198  6000 0006                179          BRA     HSTEP2      *Branch to step 2 of the iteration
0000119C                           180  
0000119C                           181  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
0000119C  0601 0030                182          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A0                           183  
000011A0                           184  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011A0  5303                     185          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011A2                           186          
000011A2  B205                     187          CMP.B   D5,D1
000011A4  6700 0004                188          BEQ     HSKIP2
000011A8                           189          
000011A8  4E4F                     190          TRAP #15            *Will print the ASCII value stored in D1
000011AA  0C03 0000                191  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011AE  6700 0010                192          BEQ     HDONE       *End loop if done
000011B2                           193          
000011B2  B23C 0030                194          CMP.B   #48,D1
000011B6  6700 0006                195          BEQ     HSKIP3
000011BA                           196          
000011BA  1A3C 0000                197          MOVE.B  #0,D5
000011BE                           198          
000011BE  60C2                     199  HSKIP3  BRA     HSTEP       *Or else continue loop
000011C0                           200          
000011C0  4E75                     201  HDONE   RTS
000011C2                           202  
000011C2                           203  
000011C2                           204  *--------------------------------------------------------------------------------------------------
000011C2                           205  
000011C2  103C 000E                206  SIZE    MOVE.B  #14,D0
000011C6  BA3C 0000                207          CMP.B   #%00,D5
000011CA  6700 001E                208          BEQ     SIZEB
000011CE  BA3C 0001                209          CMP.B   #%01,D5
000011D2  6700 0020                210          BEQ     SIZEW
000011D6  BA3C 0002                211          CMP.B   #%10,D5
000011DA  6700 0022                212          BEQ     SIZEL
000011DE  BA3C 0003                213          CMP.B   #%11,D5
000011E2  6700 0010                214          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011E6  6000 0022                215          BRA     SRET
000011EA                           216          
000011EA  43F9 00002237            217  SIZEB   LEA     MODEB,A1
000011F0  6000 0016                218          BRA     SDONE
000011F4                           219  
000011F4  43F9 0000223A            220  SIZEW   LEA     MODEW,A1
000011FA  6000 000C                221          BRA     SDONE
000011FE                           222  
000011FE  43F9 0000223D            223  SIZEL   LEA     MODEL,A1
00001204  6000 0002                224          BRA     SDONE
00001208                           225  
00001208  4E4F                     226  SDONE   TRAP    #15
0000120A                           227  
0000120A  4E75                     228  SRET    RTS
0000120C                           229  
0000120C                           230  *-----------------------------------------------------------------------------------
0000120C                           231  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           232  *uses d1, d0, and a1
0000120C                           233  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           234  *uses d1, d0, and a1
0000120C                           235  ADDRMODEALL
0000120C                           236  *comparisons
0000120C  B67C 0000                237  AM000   CMP     #%000,D3
00001210  6600 001A                238          BNE     AM001
00001214  43F9 00002242            239          LEA     VALD,A1
0000121A  4E4F                     240          TRAP    #15
0000121C  1206                     241          MOVE.B  D6,D1       *moving ea num to d1 to print
0000121E  103C 0003                242          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001222  4E4F                     243          TRAP    #15         *printing register number
00001224  103C 000E                244          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001228  6000 013C                245          BRA     AMEND
0000122C                           246  
0000122C                           247          
0000122C  B67C 0001                248  AM001   CMP     #%001,D3
00001230  6600 0022                249          BNE     AM010
00001234  BA7C 0000                250          CMP     #00,D5
00001238  6700 0D52                251          BEQ     DSERR
0000123C  43F9 00002240            252          LEA     VALA,A1
00001242  4E4F                     253          TRAP    #15
00001244  1206                     254          MOVE.B  D6,D1       *moving ea num to d1 to print
00001246  103C 0003                255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124A  4E4F                     256          TRAP    #15         *printing register number
0000124C  103C 000E                257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001250  6000 0114                258          BRA     AMEND
00001254                           259  
00001254  B67C 0002                260  AM010   CMP     #%010,D3
00001258  6600 002A                261          BNE     AM011
0000125C  43F9 0000224C            262          LEA     OPENPTR,A1
00001262  4E4F                     263          TRAP    #15
00001264  43F9 00002240            264          LEA     VALA,A1
0000126A  4E4F                     265          TRAP    #15
0000126C  1206                     266          MOVE.B  D6,D1       *moving ea num to d1 to print
0000126E  103C 0003                267          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001272  4E4F                     268          TRAP    #15         *printing register number
00001274  103C 000E                269          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001278  43F9 00002251            270          LEA     CLOSEPTR,A1
0000127E  4E4F                     271          TRAP    #15
00001280  6000 00E4                272          BRA     AMEND
00001284                           273  
00001284  B67C 0003                274  AM011   CMP     #%011,D3
00001288  6600 002A                275          BNE     AM100
0000128C  43F9 0000224C            276          LEA     OPENPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  43F9 00002240            278          LEA     VALA,A1
0000129A  4E4F                     279          TRAP    #15
0000129C  1206                     280          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129E  103C 0003                281          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012A2  4E4F                     282          TRAP    #15         *printing register number
000012A4  103C 000E                283          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A8  43F9 00002253            284          LEA     CLOSEIPTR,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  6000 00B4                286          BRA     AMEND
000012B4                           287  
000012B4  B67C 0004                288  AM100   CMP     #%100,D3
000012B8  6600 002A                289          BNE     AM111
000012BC  43F9 0000224E            290          LEA     OPENDPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  43F9 00002240            292          LEA     VALA,A1
000012CA  4E4F                     293          TRAP    #15
000012CC  1206                     294          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CE  103C 0003                295          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012D2  4E4F                     296          TRAP    #15         *printing register number
000012D4  103C 000E                297          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D8  43F9 00002251            298          LEA     CLOSEPTR,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  6000 0084                300          BRA     AMEND
000012E4                           301  
000012E4  B67C 0007                302  AM111   CMP     #%111,D3
000012E8  6600 0CA2                303          BNE     DSERR
000012EC  BC7C 0000                304          CMP     #%000,D6
000012F0  6600 0020                305          BNE     AM111001
000012F4  43F9 00002258            306          LEA     DOLLAR,A1
000012FA  4E4F                     307          TRAP    #15
000012FC  341A                     308          MOVE.W  (A2)+,D2
000012FE  48E7 0400                309          MOVEM.L D5,-(SP)    
00001302  1A3C 0030                310          MOVE.B  #48,D5
00001306  4EB8 117A                311          JSR     HEXOUT
0000130A  4CDF 0020                312          MOVEM.L (SP)+,D5
0000130E  6000 0056                313          BRA     AMEND
00001312                           314          
00001312                           315  AM111001
00001312  BC7C 0001                316          CMP     #%001,D6
00001316  6600 0020                317          BNE     AM111100
0000131A  43F9 00002258            318          LEA     DOLLAR,A1
00001320  4E4F                     319          TRAP    #15
00001322  241A                     320          MOVE.L  (A2)+,D2
00001324  48E7 0400                321          MOVEM.L D5,-(SP)
00001328  1A3C 0030                322          MOVE.B  #48,D5
0000132C  4EB8 117A                323          JSR     HEXOUT
00001330  4CDF 0020                324          MOVEM.L (SP)+,D5
00001334  6000 0030                325          BRA     AMEND
00001338                           326          
00001338                           327  AM111100
00001338  BC7C 0004                328          CMP     #%100,D6
0000133C  6600 0C4E                329          BNE     DSERR
00001340  43F9 00002244            330          LEA     VALN,A1
00001346  4E4F                     331          TRAP    #15
00001348  341A                     332          MOVE.W  (A2)+,D2
0000134A  48E7 0400                333          MOVEM.L D5,-(SP)    
0000134E  103C 0003                334          MOVE.B  #3,D0
00001352  3202                     335          MOVE.W  D2,D1
00001354  4E4F                     336          TRAP    #15
00001356  103C 000E                337          MOVE.B  #14,D0
0000135A  4CDF 0020                338          MOVEM.L (SP)+,D5
0000135E  323C 0000                339          MOVE.W  #0,D1
00001362  6000 0002                340          BRA     AMEND
00001366                           341          
00001366  103C 000E                342  AMEND   MOVE.B  #14,D0
0000136A  4E75                     343          RTS
0000136C                           344  
0000136C                           345  *--------------------------------------------------------------------------------------------------
0000136C                           346  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000136C                           347  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000136C                           348  
0000136C                           349  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000136C                           350  
0000136C                           351  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000136C                           352  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000136C                           353  
0000136C                           354  DISASM                      *DISASM: Disassemble a machine code
0000136C  E34C                     355          LSL.W   #1,D4       * Tier 0 binary search
0000136E  6500 0010                356          BCS     DS1
00001372  6000 0002                357          BRA     DS0
00001376                           358  
00001376                           359  *DS Tier 1 ----------------------------------------------------------------------------------------
00001376                           360  
00001376                           361  DS0                         *DS0: Tier 1 binary search for 0 side
00001376  E34C                     362          LSL.W   #1,D4       
00001378  6500 018A                363          BCS     DS01
0000137C  6000 000C                364          BRA     DS00
00001380                           365  
00001380                           366  DS1                         *DS1: Tier 1 binary search for 1 side
00001380  E34C                     367          LSL.W   #1,D4       
00001382  6500 0194                368          BCS     DS11
00001386  6000 0186                369          BRA     DS10
0000138A                           370  
0000138A                           371  DS00                        *DS00: Disassembly processing for 00 prefix
0000138A  E55C                     372          ROL.W   #2,D4       
0000138C  1A04                     373          MOVE.B  D4,D5
0000138E  0205 0003                374          ANDI.B  #%11,D5
00001392  0C05 0000                375          CMPI.B  #%00,D5
00001396  6700 0006                376          BEQ     DAND
0000139A  6000 00A2                377          BRA     DMOVE2
0000139E                           378  
0000139E  E95C                     379  DAND    ROL.W   #4,D4
000013A0  1A04                     380          MOVE.B  D4,D5
000013A2  0205 0002                381          ANDI.B  #%0010,D5
000013A6  0C05 0002                382          CMPI.B  #%0010,D5
000013AA  6600 0BF0                383          BNE     DSERRINS
000013AE                           384          
000013AE  E55C                     385          ROL.W   #2,D4
000013B0  1A04                     386          MOVE.B  D4,D5
000013B2  0205 0007                387          ANDI.B  #%111,D5
000013B6                           388          
000013B6  E75C                     389          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013B8  1604                     390          MOVE.B  D4,D3           ; Move the byte in D4 to D5
000013BA  0203 0007                391          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
000013BE                           392          
000013BE  E75C                     393          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013C0  1C04                     394          MOVE.B  D4,D6           ; Move the byte in D4 to D5
000013C2  0206 0007                395          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
000013C6                           396          
000013C6  43F9 00002242            397          LEA     VALD,A1         ; Load effective address of Dn
000013CC  4E4F                     398          TRAP    #15             ; Print Dn
000013CE  1E05                     399          MOVE.B  D5,D7           ; Store the register number for later use
000013D0                           400  
000013D0                           401          
000013D0  BA3C 0000                402          CMP.B   #%000,D5        ; Compare with byte size
000013D4  6700 0016                403          BEQ     DANDB
000013D8  BA3C 0001                404          CMP.B   #%001,D5        ; Compare with word size
000013DC  6700 0022                405          BEQ     DANDW
000013E0  BA3C 0002                406          CMP.B   #%010,D5        ; Compare with long size
000013E4  6700 002E                407          BEQ     DANDL
000013E8                           408          
000013E8  6000 0BCE                409          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013EC                           410  
000013EC  43F9 0000226F            411  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F2  4E4F                     412          TRAP    #15             ; Print ANDM string
000013F4  43F9 00002237            413          LEA     MODEB,A1        ; Load effective address of MODEB string
000013FA  4E4F                     414          TRAP    #15             ; Print MODEB string
000013FC  6000 002A                415          BRA     DANDA           ; Branch to addressing mode parsing
00001400                           416  
00001400  43F9 0000226F            417  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001406  4E4F                     418          TRAP    #15             ; Print ANDM string
00001408  43F9 0000223A            419          LEA     MODEW,A1        ; Load effective address of MODEW string
0000140E  4E4F                     420          TRAP    #15             ; Print MODEW string
00001410  6000 0016                421          BRA     DANDA           ; Branch to addressing mode parsing
00001414                           422  
00001414  43F9 0000226F            423  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000141A  4E4F                     424          TRAP    #15             ; Print ANDM string
0000141C  43F9 0000223D            425          LEA     MODEL,A1        ; Load effective address of MODEL string
00001422  4E4F                     426          TRAP    #15             ; Print MODEL string
00001424  6000 0002                427          BRA     DANDA           ; Branch to addressing mode parsing
00001428                           428  
00001428  43F9 000021ED            429  DANDA   LEA     SM5,A1
0000142E  4E4F                     430          TRAP    #15
00001430                           431  
00001430  0204 0007                432          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001434  1C04                     433          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001436                           434  
00001436  4EB8 120C                435          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
0000143A                           436  
0000143A  6000 0B7C                437          BRA     DSEND                 
0000143E                           438  
0000143E                           439  
0000143E                           440          
0000143E                           441  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
0000143E  4E71                     442  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001440                           443          *size in d5 from above processing
00001440  43F9 0000225E            444          LEA     MOVEM,A1
00001446  4E4F                     445          TRAP    #15
00001448                           446                  
00001448                           447          *dest reg to d7
00001448  E75C                     448          ROL.W   #3,D4
0000144A  1E04                     449          MOVE.B  D4,D7
0000144C  CE3C 0007                450          AND.B   #%111,D7
00001450                           451          
00001450                           452          *dest mode to d3: An means MOVEA
00001450  E75C                     453          ROL.W   #3,D4
00001452  1604                     454          MOVE.B  D4,D3
00001454  C63C 0007                455          AND.B   #%111,D3
00001458  3C43                     456          MOVE.W  D3,A6
0000145A                           457          
0000145A  B67C 0001                458          CMP     #%001,D3
0000145E  6700 0082                459          BEQ     DMOVEA
00001462                           460  MOVECONT
00001462                           461  *printing size then first addressing moode, then comma
00001462                           462  *size is different for move
00001462  103C 000E                463  MSIZE   MOVE.B  #14,D0
00001466  BA3C 0001                464          CMP.B   #%01,D5
0000146A  6700 001E                465          BEQ     MSIZEB
0000146E  BA3C 0003                466          CMP.B   #%11,D5
00001472  6700 0020                467          BEQ     MSIZEW
00001476  BA3C 0002                468          CMP.B   #%10,D5
0000147A  6700 0022                469          BEQ     MSIZEL
0000147E  BA3C 0003                470          CMP.B   #%11,D5
00001482  6700 0010                471          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001486  6000 0B04                472          BRA     DSERR
0000148A                           473          
0000148A  43F9 00002237            474  MSIZEB  LEA     MODEB,A1
00001490  6000 0016                475          BRA     MSDONE
00001494                           476  
00001494  43F9 0000223A            477  MSIZEW  LEA     MODEW,A1
0000149A  6000 000C                478          BRA     MSDONE
0000149E                           479  
0000149E  43F9 0000223D            480  MSIZEL  LEA     MODEL,A1
000014A4  6000 0002                481          BRA     MSDONE
000014A8                           482  
000014A8  4E4F                     483  MSDONE  TRAP    #15
000014AA                           484  
000014AA  43F9 000021FA            485          LEA     SM7,A1
000014B0  4E4F                     486          TRAP    #15
000014B2                           487          
000014B2                           488          *source mode to d3
000014B2  E75C                     489          ROL.W   #3,D4
000014B4  1604                     490          MOVE.B  D4,D3
000014B6  C63C 0007                491          AND.B   #%111,D3
000014BA                           492          
000014BA                           493          *source reg to d6
000014BA  E75C                     494          ROL.W   #3,D4
000014BC  1C04                     495          MOVE.B  D4,D6
000014BE  CC3C 0007                496          AND.B   #%111,D6
000014C2                           497          
000014C2  4EB8 120C                498          JSR     ADDRMODEALL
000014C6  B67C 0001                499          CMP     #%001,D3
000014CA  6700 002C                500          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014CE  43F9 00002256            501          LEA     COMMA,A1
000014D4  4E4F                     502          TRAP    #15
000014D6  1C07                     503          MOVE.B  D7,D6
000014D8  360E                     504          MOVE.W  A6,D3
000014DA  4EB8 120C                505          JSR     ADDRMODEALL
000014DE  6000 0AD8                506          BRA     DSEND
000014E2                           507  
000014E2  4E71                     508  DMOVEA  NOP
000014E4  BA7C 0001                509          CMP     #%01,D5     *if size is byte, err
000014E8  6700 0AA2                510          BEQ     DSERR
000014EC  43F9 00002240            511          LEA     VALA,A1        *else, print A and return
000014F2  4E4F                     512          TRAP    #15
000014F4  6000 FF6C                513          BRA     MOVECONT
000014F8                           514  
000014F8                           515  MOVEERRCHECK
000014F8  BA7C 0001                516          CMP     #%01,D5
000014FC  6700 0A8E                517          BEQ     DSERR
00001500  6000 0AB6                518          BRA     DSEND
00001504                           519  
00001504                           520          
00001504                           521  
00001504                           522  *DS Tier 2 ----------------------------------------------------------------------------------------
00001504                           523  
00001504                           524  DS01                        *DS01: Tier 2 binary search for 01 side
00001504  E34C                     525          LSL.W   #1,D4
00001506  6500 0024                526          BCS     DS011
0000150A  6000 0016                527          BRA     DS010
0000150E                           528  
0000150E                           529  DS10                        *DS10: Tier 2 binary search for 10 side
0000150E  E34C                     530          LSL.W   #1,D4
00001510  6500 002E                531          BCS     DS101
00001514  6000 0020                532          BRA     DS100
00001518                           533  
00001518                           534  DS11                        *DS11: Tier 2 binary search for 11 side
00001518  E34C                     535          LSL.W   #1,D4
0000151A  6500 0038                536          BCS     DS111
0000151E  6000 002A                537          BRA     DS110
00001522                           538  
00001522                           539  *DS Tier 3 ----------------------------------------------------------------------------------------
00001522                           540  
00001522                           541  DS010                       *DS010: Tier 3 binary search for 010 side
00001522  E34C                     542          LSL.W   #1,D4
00001524  6500 03E0                543          BCS     DS0101
00001528  6000 0034                544          BRA     DS0100
0000152C                           545  
0000152C                           546  DS011                       *DS011: Tier 3 binary search for 011 side
0000152C  E34C                     547          LSL.W   #1,D4
0000152E  6500 05C4                548          BCS     DS0111
00001532  6000 044C                549          BRA     DS0110
00001536                           550  
00001536                           551  DS100                       *DS100: Tier 3 binary search for 100 side
00001536  E34C                     552          LSL.W   #1,D4
00001538  6500 06AA                553          BCS     DS1001
0000153C  6000 0620                554          BRA     DS1000
00001540                           555  
00001540                           556  DS101                       *DS101: Tier 3 binary search for 101 side
00001540  E34C                     557          LSL.W   #1,D4
00001542  6500 0738                558          BCS     DS1011
00001546  6000 072E                559          BRA     DS1010
0000154A                           560  
0000154A                           561  DS110                       *DS110: Tier 3 binary search for 110 side
0000154A  E34C                     562          LSL.W   #1,D4
0000154C  6500 073A                563          BCS     DS1101
00001550  6000 0730                564          BRA     DS1100
00001554                           565  
00001554                           566  DS111                       *DS111: Tier 3 binary search for 111 side
00001554  E34C                     567          LSL.W   #1,D4
00001556  6500 0A2E                568          BCS     DS1111
0000155A  6000 0814                569          BRA     DS1110
0000155E                           570  
0000155E                           571  *DS Tier 4 ----------------------------------------------------------------------------------------
0000155E                           572  
0000155E                           573  DS0100                      *DS0100: Processing for 0100 prefix
0000155E  0C44 E710                574          CMPI.W  #%1110011100010000,D4
00001562  6700 0042                575          BEQ     DNOP
00001566  0C44 E750                576          CMPI.W  #%1110011101010000,D4
0000156A  6700 022C                577          BEQ     DRTS
0000156E                           578          
0000156E  3404                     579          MOVE.W  D4,D2
00001570  0242 1C00                580          ANDI.W  #%0001110000000000,D2
00001574  0C42 1C00                581          CMPI.W  #%0001110000000000,D2
00001578  6700 022A                582          BEQ     DLEA
0000157C                           583          
0000157C  3404                     584          MOVE.W  D4,D2
0000157E  0242 B800                585          ANDI.W  #%1011100000000000,D2
00001582  0C42 8800                586          CMPI.W  #%1000100000000000,D2
00001586  6700 032A                587          BEQ     DMOVEM
0000158A                           588          
0000158A  E95C                     589          ROL.W   #4,D4
0000158C  1404                     590          MOVE.B  D4,D2
0000158E  0202 000F                591          ANDI.B  #%1111,D2
00001592                           592          
00001592  B43C 000E                593          CMP.B   #%1110,D2
00001596  6700 014A                594          BEQ     DJSR
0000159A                           595          
0000159A  B43C 0006                596          CMP.B   #%0110,D2
0000159E  6700 0012                597          BEQ     DNOT
000015A2                           598          
000015A2  6000 09F8                599          BRA     DSERRINS
000015A6                           600  
000015A6  43F9 0000225A            601  DNOP    LEA     NOPM,A1
000015AC  4E4F                     602          TRAP    #15
000015AE  6000 0A08                603          BRA     DSEND
000015B2                           604          
000015B2  E55C                     605  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015B4  1A04                     606          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015B6  0205 0003                607          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015BA                           608  
000015BA  BA3C 0000                609          CMP.B   #%00,D5         ; compare with byte size
000015BE  6700 0016                610          BEQ     DNOTB
000015C2  BA3C 0001                611          CMP.B   #%01,D5         ; compare with word size
000015C6  6700 0022                612          BEQ     DNOTW
000015CA  BA3C 0002                613          CMP.B   #%10,D5         ; compare with long size
000015CE  6700 002E                614          BEQ     DNOTL
000015D2                           615          
000015D2  6000 09E4                616          BRA     DSEND           ; branch to DSEND in case of invalid code
000015D6                           617  
000015D6  43F9 00002276            618  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015DC  4E4F                     619          TRAP    #15             ; print NOTM string
000015DE  43F9 00002237            620          LEA     MODEB,A1        ; load effective address of MODEB string
000015E4  4E4F                     621          TRAP    #15             ; print MODEB string
000015E6  6000 002A                622          BRA     DNOTA           ; branch to addressing mode parsing
000015EA                           623  
000015EA  43F9 00002276            624  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
000015F0  4E4F                     625          TRAP    #15             ; print NOTM string
000015F2  43F9 0000223A            626          LEA     MODEW,A1        ; load effective address of MODEW string
000015F8  4E4F                     627          TRAP    #15             ; print MODEW string
000015FA  6000 0016                628          BRA     DNOTA           ; branch to addressing mode parsing
000015FE                           629  
000015FE  43F9 00002276            630  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001604  4E4F                     631          TRAP    #15             ; print NOTM string
00001606  43F9 0000223D            632          LEA     MODEL,A1        ; load effective address of MODEL string
0000160C  4E4F                     633          TRAP    #15             ; print MODEL string
0000160E  6000 0002                634          BRA     DNOTA           ; branch to addressing mode parsing
00001612                           635  
00001612  ED5C                     636  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001614  1204                     637          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001616  0201 003F                638          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000161A                           639  
0000161A                           640          ; Now process addressing mode and register based on the value in D1
0000161A                           641  
0000161A  1A01                     642          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000161C  0205 0007                643          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001620  6700 0026                644          BEQ     DREG            ; If it is direct register mode
00001624  BA3C 0002                645          CMP.B   #%010,D5        ; Compare with An
00001628  6700 0036                646          BEQ     ADREG
0000162C  BA3C 0003                647          CMP.B   #%011,D5        ; Compare with (An)+
00001630  6700 0046                648          BEQ     ADREGP
00001634  BA3C 0004                649          CMP.B   #%100,D5        ; Compare with -(An)
00001638  6700 005E                650          BEQ     MADREG
0000163C  BA3C 0007                651          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001640  6700 007E                652          BEQ     EXT
00001644                           653              
00001644  6000 0972                654          BRA     DSEND
00001648                           655  
00001648  1C01                     656  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000164A  0206 0007                657          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
0000164E  DC39 00002242            658          ADD.B   VALD,D6         ; Convert register number to ASCII
00001654  43F9 00002242            659          LEA     VALD,A1         ; Load effective address of Dn
0000165A  4E4F                     660          TRAP    #15             ; Print Dn
0000165C  6000 095A                661          BRA     DSEND
00001660                           662  
00001660  1C01                     663  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001662  0206 0007                664          ANDI.B  #%111,D6
00001666  DC39 00002240            665          ADD.B   VALA,D6
0000166C  43F9 00002240            666          LEA     VALA,A1
00001672  4E4F                     667          TRAP    #15
00001674  6000 0942                668          BRA     DSEND
00001678                           669  
00001678  1C01                     670  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
0000167A  0206 0007                671          ANDI.B  #%111,D6
0000167E  DC39 00002240            672          ADD.B   VALA,D6
00001684  43F9 00002240            673          LEA     VALA,A1
0000168A  4E4F                     674          TRAP    #15
0000168C  43F9 00002253            675          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001692  4E4F                     676          TRAP    #15             ; Print )+
00001694  6000 0922                677          BRA     DSEND
00001698                           678  
00001698  1C01                     679  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
0000169A  0206 0007                680          ANDI.B  #%111,D6
0000169E  DC39 00002240            681          ADD.B   VALA,D6
000016A4  43F9 0000224E            682          LEA     OPENDPTR,A1     ; Load effective address of -(
000016AA  4E4F                     683          TRAP    #15             ; Print -(
000016AC  43F9 00002240            684          LEA     VALA,A1
000016B2  4E4F                     685          TRAP    #15
000016B4  43F9 00002251            686          LEA     CLOSEPTR,A1     ; Load effective address of )
000016BA  4E4F                     687          TRAP    #15             ; Print )
000016BC  6000 08FA                688          BRA     DSEND
000016C0                           689  
000016C0  1C01                     690  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016C2  0206 0001                691          ANDI.B  #%1,D6
000016C6  6700 000E                692          BEQ     EXTW
000016CA  43F9 00002244            693          LEA     VALN,A1         ; Load effective address of #
000016D0  4E4F                     694          TRAP    #15             ; Print #
000016D2  6000 08E4                695          BRA     DSEND
000016D6                           696  
000016D6  43F9 00002246            697  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016DC  4E4F                     698          TRAP    #15             ; Print 0
000016DE  6000 08D8                699          BRA     DSEND
000016E2                           700  
000016E2                           701          
000016E2  E55C                     702  DJSR    ROL.W   #2,D4
000016E4  1404                     703          MOVE.B  D4,D2
000016E6  0202 0007                704          ANDI.B  #%111,D2
000016EA  0C02 0002                705          CMPI.B  #%10,D2
000016EE  6600 089C                706          BNE     DSERR
000016F2                           707          
000016F2  43F9 0000229B            708          LEA     JSRM,A1
000016F8  4E4F                     709          TRAP    #15
000016FA                           710          
000016FA  43F9 000021FA            711          LEA     SM7,A1
00001700  4E4F                     712          TRAP    #15
00001702                           713  
00001702  E75C                     714          ROL.W   #3,D4       * [D2] address mode
00001704  1404                     715          MOVE.B  D4,D2
00001706  0202 0007                716          ANDI.B  #%111,D2
0000170A                           717          
0000170A  E75C                     718          ROL.W   #3,D4       * [D1] address register
0000170C  1204                     719          MOVE.B  D4,D1
0000170E  0201 0007                720          ANDI.B  #%111,D1
00001712                           721          
00001712  0C02 0002                722          CMPI.B  #%010,D2
00001716  6700 001E                723          BEQ     DJSR_REG
0000171A                           724          
0000171A  0C02 0007                725          CMPI.B  #%111,D2
0000171E  6600 086C                726          BNE     DSERR
00001722                           727          
00001722  0C01 0000                728          CMPI.B  #%000,D1
00001726  6700 0034                729          BEQ     DJSR_CUSW
0000172A                           730          
0000172A  0C01 0001                731          CMPI.B  #%001,D1
0000172E  6700 004A                732          BEQ     DJSR_CUSL
00001732                           733          
00001732  6000 0884                734          BRA     DSEND
00001736                           735          
00001736                           736          
00001736                           737          
00001736                           738  DJSR_REG        
00001736  43F9 0000224C            739          LEA     OPENPTR,A1
0000173C  4E4F                     740          TRAP    #15
0000173E                           741          
0000173E  43F9 00002240            742          LEA     VALA,A1
00001744  4E4F                     743          TRAP    #15
00001746                           744          
00001746  103C 0003                745          MOVE.B  #3,D0
0000174A  4E4F                     746          TRAP    #15
0000174C  103C 000E                747          MOVE.B  #14,D0
00001750                           748          
00001750  43F9 00002251            749          LEA     CLOSEPTR,A1
00001756  4E4F                     750          TRAP    #15
00001758                           751          
00001758  6000 085E                752          BRA     DSEND
0000175C                           753  
0000175C                           754          
0000175C                           755  DJSR_CUSW
0000175C  43F9 00002258            756          LEA     DOLLAR,A1
00001762  4E4F                     757          TRAP    #15
00001764  341A                     758          MOVE.W  (A2)+,D2
00001766  48E7 0400                759          MOVEM.L D5,-(SP)
0000176A  1A3C 0030                760          MOVE.B  #48,D5
0000176E  4EB8 117A                761          JSR     HEXOUT
00001772  4CDF 0020                762          MOVEM.L (SP)+,D5
00001776  6000 0840                763          BRA     DSEND
0000177A                           764  
0000177A                           765  DJSR_CUSL
0000177A  43F9 00002258            766          LEA     DOLLAR,A1
00001780  4E4F                     767          TRAP    #15
00001782  241A                     768          MOVE.L  (A2)+,D2
00001784  48E7 0400                769          MOVEM.L D5,-(SP)
00001788  1A3C 0030                770          MOVE.B  #48,D5
0000178C  4EB8 117A                771          JSR     HEXOUT
00001790  4CDF 0020                772          MOVEM.L (SP)+,D5
00001794  6000 0822                773          BRA     DSEND
00001798                           774          
00001798  43F9 0000229F            775  DRTS    LEA     RTSM,A1
0000179E  4E4F                     776          TRAP    #15
000017A0  6000 0816                777          BRA     DSEND
000017A4                           778          
000017A4                           779          
000017A4                           780  DLEA    *printing
000017A4  43F9 0000226B            781          LEA     LEAM,A1
000017AA  4E4F                     782          TRAP    #15
000017AC  43F9 000021FA            783          LEA     SM7,A1
000017B2  4E4F                     784          TRAP    #15
000017B4                           785          
000017B4                           786          *shifting out 111
000017B4  E75C                     787          ROL.W   #3,D4
000017B6                           788          
000017B6                           789          *getting destination register
000017B6  E75C                     790          ROL.W   #3,D4
000017B8  1404                     791          MOVE.B  D4,D2
000017BA  0202 0007                792          ANDI.B  #%111,D2
000017BE                           793          
000017BE                           794          *getting ea mode
000017BE  E75C                     795          ROL.W   #3,D4
000017C0  1604                     796          MOVE.B  D4,D3
000017C2  0203 0007                797          ANDI.B  #%111,D3
000017C6                           798          
000017C6  B63C 0002                799          CMP.B   #%010,D3
000017CA  6700 000E                800          BEQ     DLEAP
000017CE                           801          
000017CE  B63C 0007                802          CMP.B   #%111,D3
000017D2  6700 0006                803          BEQ     DLEAP
000017D6                           804          
000017D6  6000 07D4                805          BRA     DSERREA
000017DA                           806          
000017DA                           807          *getting ea reg
000017DA  E75C                     808  DLEAP   ROL.W   #3,D4
000017DC  1C04                     809          MOVE.B  D4,D6
000017DE  0206 0007                810          ANDI.B  #%111,D6
000017E2                           811          
000017E2                           812          *printing
000017E2  4EB8 120C                813          JSR     ADDRMODEALL
000017E6                           814          
000017E6  43F9 00002256            815          LEA     COMMA,A1
000017EC  4E4F                     816          TRAP    #15
000017EE  43F9 00002240            817          LEA     VALA,A1
000017F4  4E4F                     818          TRAP    #15
000017F6  103C 0003                819          MOVE.B  #3,D0
000017FA  1202                     820          MOVE.B  D2,D1
000017FC  4E4F                     821          TRAP    #15
000017FE  103C 000E                822          MOVE.B  #14,D0
00001802                           823          
00001802  6000 07B4                824          BRA DSEND
00001806                           825          
00001806                           826  JSR010
00001806  B63C 0002                827          CMP.B   #%010,D3
0000180A  6600 002A                828          BNE     JSR111
0000180E  43F9 0000224C            829          LEA     OPENPTR,A1
00001814  4E4F                     830          TRAP    #15
00001816  43F9 00002240            831          LEA     VALA,A1
0000181C  4E4F                     832          TRAP    #15
0000181E  103C 0003                833          MOVE.B  #3,D0
00001822  1206                     834          MOVE.B  D6,D1
00001824  4E4F                     835          TRAP    #15
00001826  103C 000E                836          MOVE.B  #14,D0
0000182A  43F9 00002251            837          LEA     CLOSEPTR,A1
00001830  4E4F                     838          TRAP    #15
00001832  6000 005E                839          BRA     JSRPRINT2
00001836                           840  JSR111
00001836  B63C 0007                841          CMP.B   #%111,D3
0000183A  6600 0750                842          BNE     DSERR
0000183E  BC3C 0000                843          CMP.B   #%000,D6
00001842  6600 0024                844          BNE     JSR111001
00001846  43F9 00002258            845          LEA     DOLLAR,A1
0000184C  4E4F                     846          TRAP    #15
0000184E  341A                     847          MOVE.W  (A2)+,D2
00001850  48E7 0400                848          MOVEM.L D5,-(SP)    
00001854  1A3C 0030                849          MOVE.B  #48,D5
00001858  4EB8 117A                850          JSR     HEXOUT
0000185C  4CDF 0020                851          MOVEM.L (SP)+,D5
00001860  103C 000E                852          MOVE.B  #14,D0
00001864  6000 002C                853          BRA     JSRPRINT2
00001868                           854          
00001868                           855  JSR111001
00001868  BC3C 0001                856          CMP.B   #%001,D6
0000186C  6600 071E                857          BNE     DSERR
00001870  43F9 00002258            858          LEA     DOLLAR,A1
00001876  4E4F                     859          TRAP    #15
00001878  241A                     860          MOVE.L  (A2)+,D2
0000187A  48E7 0400                861          MOVEM.L D5,-(SP)
0000187E  1A3C 0030                862          MOVE.B  #48,D5
00001882  4EB8 117A                863          JSR     HEXOUT
00001886  4CDF 0020                864          MOVEM.L (SP)+,D5
0000188A  103C 000E                865          MOVE.B  #14,D0
0000188E  6000 0002                866          BRA     JSRPRINT2
00001892                           867          
00001892                           868  JSRPRINT2
00001892  43F9 00002256            869          LEA     COMMA,A1
00001898  4E4F                     870          TRAP    #15
0000189A  43F9 00002240            871          LEA     VALA,A1
000018A0  4E4F                     872          TRAP    #15
000018A2  103C 0003                873          MOVE.B  #3,D0
000018A6  3207                     874          MOVE.W  D7,D1
000018A8  4E4F                     875          TRAP    #15
000018AA  103C 000E                876          MOVE.B  #14,D0
000018AE                           877          
000018AE  6000 0708                878          BRA     DSEND
000018B2                           879          
000018B2                           880          
000018B2                           881  DMOVEM
000018B2                           882  *printing movem
000018B2  43F9 0000225E            883          LEA     MOVEM,A1
000018B8  4E4F                     884          TRAP    #15
000018BA  43F9 0000224A            885          LEA     VALM,A1
000018C0  4E4F                     886          TRAP    #15
000018C2                           887          
000018C2                           888  *parsing initial bits
000018C2  E55C                     889          ROL.W   #2,D4
000018C4  1C04                     890          MOVE.B  D4,D6
000018C6  0206 0001                891          ANDI.B  #%1,D6      *getting dr field
000018CA                           892          
000018CA  E95C                     893          ROL.W   #4,D4
000018CC  1A04                     894          MOVE.B  D4,D5
000018CE  0205 0001                895          ANDI.B  #1,D5       *getting size field
000018D2                           896          
000018D2                           897          *printing size
000018D2  BA7C 0000                898          CMP     #0,D5
000018D6  6600 000E                899          BNE     MOVEML
000018DA  43F9 0000223A            900          LEA     MODEW,A1
000018E0  4E4F                     901          TRAP    #15
000018E2  6000 000A                902          BRA     MOVEMEA
000018E6                           903  MOVEML        
000018E6  43F9 0000223D            904          LEA     MODEL,A1
000018EC  4E4F                     905          TRAP    #15
000018EE                           906          
000018EE                           907  MOVEMEA
000018EE  43F9 000021FA            908          LEA     SM7,A1
000018F4  4E4F                     909          TRAP    #15
000018F6                           910          
000018F6  E75C                     911          ROL.W   #3,D4       *mode bits
000018F8  1604                     912          MOVE.B  D4,D3
000018FA  0203 0007                913          ANDI.B  #%111,D3
000018FE  E75C                     914          ROL.W   #3,D4       *register bits
00001900  1C04                     915          MOVE.B  D4,D6
00001902  0206 0007                916          ANDI.B  #%111,D6
00001906                           917          
00001906                           918          
00001906                           919  
00001906                           920  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001906                           921  
00001906  4E71                     922  DS0101  NOP
00001908                           923          
00001908  4E71                     924  DADDQ   NOP
0000190A  43F9 00002263            925          LEA     ADDM,A1
00001910  4E4F                     926          TRAP    #15
00001912  43F9 00002248            927          LEA     VALQ,A1
00001918  4E4F                     928          TRAP    #15
0000191A                           929          
0000191A                           930          *parsing data to d1
0000191A  E75C                     931          ROL.W   #3,D4
0000191C  1204                     932          MOVE.B  D4,D1
0000191E  C23C 0007                933          AND.B   #%111,D1
00001922                           934          
00001922                           935          *ensuring next bit is 0
00001922  E35C                     936          ROL.W   #1,D4
00001924  1A04                     937          MOVE.B  D4,D5
00001926  CA3C 0001                938          AND.B   #%1,D5
0000192A  BA7C 0000                939          CMP     #0,D5
0000192E  6600 065C                940          BNE     DSERR
00001932                           941          
00001932                           942          *parsing and printing size
00001932  E55C                     943          ROL.W   #2,D4
00001934  1A04                     944          MOVE.B  D4,D5
00001936  CA3C 0003                945          AND.B   #%11,D5
0000193A  4EB8 11C2                946          JSR     SIZE
0000193E  43F9 000021FA            947          LEA     SM7,A1
00001944  4E4F                     948          TRAP    #15
00001946                           949          
00001946                           950          *parsing effective address information
00001946                           951          *mode:
00001946  E75C                     952          ROL.W   #3,D4
00001948  1604                     953          MOVE.B  D4,D3
0000194A  C63C 0007                954          AND.B   #%111,D3
0000194E                           955          
0000194E                           956          *register:
0000194E  E71C                     957          ROL.B   #3,D4
00001950  1C04                     958          MOVE.B  D4,D6
00001952  CC3C 0007                959          AND.B   #%111,D6
00001956                           960          
00001956                           961          *printing data
00001956  43F9 00002244            962          LEA     VALN,A1
0000195C  4E4F                     963          TRAP    #15
0000195E  103C 0003                964          MOVE.B  #3,D0
00001962  4E4F                     965          TRAP    #15
00001964  103C 000E                966          MOVE.B  #14,D0
00001968  43F9 00002256            967          LEA     COMMA,A1
0000196E  4E4F                     968          TRAP    #15
00001970                           969          
00001970  B67C 0004                970          CMP     #%100,D3
00001974  6700 0616                971          BEQ     DSERR
00001978  4EB8 120C                972          JSR     ADDRMODEALL
0000197C                           973          
0000197C  6000 063A                974          BRA     DSEND
00001980                           975          
00001980                           976  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001980                           977  
00001980                           978  DS0110  
00001980  E95C                     979          ROL.W   #4,D4   *Get next 4 bits
00001982  1404                     980          MOVE.B  D4,D2   *Copy to D2
00001984  0202 000F                981          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001988                           982          
00001988  B43C 0000                983          CMP.B   #%0000,D2   *BRA
0000198C  6700 001E                984          BEQ     DBRA
00001990                           985          
00001990  B43C 000E                986          CMP.B   #%1110,D2   *BGT   
00001994  6700 00A2                987          BEQ     DBGT
00001998                           988          
00001998  B43C 000F                989          CMP.B   #%1111,D2   *BLE   
0000199C  6700 00D6                990          BEQ     DBLE
000019A0                           991          
000019A0  B43C 0007                992          CMP.B   #%0111,D2   *BEQ   
000019A4  6700 010E                993          BEQ     DBEQ
000019A8                           994          
000019A8  6000 05F2                995          BRA     DSERRINS
000019AC                           996          
000019AC  43F9 000022A3            997  DBRA    LEA     BRAM,A1
000019B2  4E4F                     998          TRAP    #15
000019B4                           999          
000019B4  43F9 000021FA           1000          LEA     SM7,A1
000019BA  4E4F                    1001          TRAP    #15
000019BC                          1002  
000019BC  E15C                    1003          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019BE  1204                    1004          MOVE.B  D4,D1
000019C0  0281 00001100           1005          ANDI.L  #$1100,D1
000019C6                          1006          
000019C6  0C01 0000               1007          CMPI.B  #%00000000,D1
000019CA  6700 0028               1008          BEQ     DBRA_16BIT      * Word
000019CE                          1009          
000019CE  0C01 00FF               1010          CMPI.B  #%11111111,D1
000019D2  6700 0042               1011          BEQ     DBRA_32BIT      * Long
000019D6                          1012          
000019D6                          1013          * 8 Bit Displacement
000019D6  43F9 00002258           1014          LEA     DOLLAR,A1
000019DC  4E4F                    1015          TRAP    #15
000019DE                          1016          
000019DE  341A                    1017          MOVE.W  (A2)+,D2
000019E0  D441                    1018          ADD.W   D1,D2
000019E2  5842                    1019          ADD.W   #4,D2   *unsure   
000019E4  1A3C 0030               1020          MOVE.B  #48,D5
000019E8  4EB8 117A               1021          JSR     HEXOUT
000019EC  6000 05CA               1022          BRA     DSEND
000019F0                          1023  
000019F0                          1024          *Displacement is put in D1      
000019F0                          1025          
000019F0                          1026          
000019F0  6000 05C6               1027          BRA     DSEND
000019F4                          1028          
000019F4                          1029  DBRA_16BIT
000019F4  43F9 00002258           1030          LEA     DOLLAR,A1
000019FA  4E4F                    1031          TRAP    #15
000019FC  341A                    1032          MOVE.W  (A2)+,D2
000019FE  D44A                    1033          ADD.W   A2,D2
00001A00  5542                    1034          SUB.W   #2,D2   *unsure
00001A02  48E7 0400               1035          MOVEM.L D5,-(SP)    
00001A06  1A3C 0030               1036          MOVE.B  #48,D5
00001A0A  4EB8 117A               1037          JSR     HEXOUT
00001A0E  4CDF 0020               1038          MOVEM.L (SP)+,D5
00001A12  6000 05A4               1039          BRA     DSEND
00001A16                          1040  
00001A16                          1041  DBRA_32BIT
00001A16  43F9 00002258           1042          LEA     DOLLAR,A1
00001A1C  4E4F                    1043          TRAP    #15
00001A1E  241A                    1044          MOVE.L  (A2)+,D2
00001A20  D48A                    1045          ADD.L   A2,D2
00001A22  5582                    1046          SUB.L   #2,D2   *unsure
00001A24  48E7 0400               1047          MOVEM.L D5,-(SP)
00001A28  1A3C 0030               1048          MOVE.B  #48,D5
00001A2C  4EB8 117A               1049          JSR     HEXOUT
00001A30  4CDF 0020               1050          MOVEM.L (SP)+,D5
00001A34  6000 0582               1051          BRA     DSEND
00001A38                          1052          
00001A38                          1053          
00001A38                          1054          
00001A38  43F9 0000228F           1055  DBGT    LEA     BGTM,A1
00001A3E  4E4F                    1056          TRAP    #15
00001A40                          1057          
00001A40  43F9 000021FA           1058          LEA     SM7,A1
00001A46  4E4F                    1059          TRAP    #15
00001A48                          1060          
00001A48  E15C                    1061          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A4A  1204                    1062          MOVE.B  D4,D1
00001A4C  0241 00FF               1063          ANDI.W  #%0000000011111111,D1
00001A50                          1064          
00001A50  0C01 0000               1065          CMPI.B  #%00000000,D1
00001A54  679E                    1066          BEQ     DBRA_16BIT      * Word
00001A56                          1067          
00001A56  0C01 00FF               1068          CMPI.B  #%11111111,D1
00001A5A  67BA                    1069          BEQ     DBRA_32BIT      * Long
00001A5C                          1070          
00001A5C  43F9 00002258           1071          LEA     DOLLAR,A1
00001A62  4E4F                    1072          TRAP    #15
00001A64                          1073      
00001A64  340A                    1074          MOVE.W  A2,D2
00001A66  D441                    1075          ADD.W   D1,D2
00001A68                          1076    
00001A68  1A3C 0030               1077          MOVE.B  #48,D5
00001A6C  4EB8 117A               1078          JSR     HEXOUT
00001A70  6000 0546               1079          BRA     DSEND
00001A74                          1080  
00001A74  43F9 00002293           1081  DBLE    LEA     BLEM,A1
00001A7A  4E4F                    1082          TRAP    #15
00001A7C                          1083          
00001A7C  43F9 000021FA           1084          LEA     SM7,A1
00001A82  4E4F                    1085          TRAP    #15
00001A84                          1086          
00001A84  E15C                    1087          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A86  1204                    1088          MOVE.B  D4,D1
00001A88  0241 00FF               1089          ANDI.W  #%0000000011111111,D1
00001A8C                          1090          
00001A8C  0C01 0000               1091          CMPI.B  #%00000000,D1
00001A90  6700 FF62               1092          BEQ     DBRA_16BIT      * Word
00001A94                          1093          
00001A94  0C01 00FF               1094          CMPI.B  #%11111111,D1
00001A98  6700 FF7C               1095          BEQ     DBRA_32BIT      * Long
00001A9C                          1096          
00001A9C  43F9 00002258           1097          LEA     DOLLAR,A1
00001AA2  4E4F                    1098          TRAP    #15
00001AA4                          1099          
00001AA4  340A                    1100          MOVE.W  A2,D2
00001AA6  D441                    1101          ADD.W   D1,D2
00001AA8                          1102   
00001AA8  1A3C 0030               1103          MOVE.B  #48,D5
00001AAC  4EB8 117A               1104          JSR     HEXOUT
00001AB0                          1105          
00001AB0  6000 0506               1106          BRA     DSEND
00001AB4                          1107  
00001AB4  43F9 00002297           1108  DBEQ    LEA     BEQM,A1
00001ABA  4E4F                    1109          TRAP    #15
00001ABC                          1110          
00001ABC  43F9 000021FA           1111          LEA     SM7,A1
00001AC2  4E4F                    1112          TRAP    #15
00001AC4                          1113          
00001AC4  E15C                    1114          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001AC6  1204                    1115          MOVE.B  D4,D1
00001AC8  0241 00FF               1116          ANDI.W  #%0000000011111111,D1
00001ACC                          1117          
00001ACC  0C01 0000               1118          CMPI.B  #%00000000,D1
00001AD0  6700 FF22               1119          BEQ     DBRA_16BIT      * Word
00001AD4                          1120          
00001AD4  0C01 00FF               1121          CMPI.B  #%11111111,D1
00001AD8  6700 FF3C               1122          BEQ     DBRA_32BIT      * Long
00001ADC                          1123          
00001ADC  43F9 00002258           1124          LEA     DOLLAR,A1
00001AE2  4E4F                    1125          TRAP    #15
00001AE4                          1126  
00001AE4  340A                    1127          MOVE.W  A2,D2
00001AE6  D441                    1128          ADD.W   D1,D2
00001AE8                          1129   
00001AE8  1A3C 0030               1130          MOVE.B  #48,D5
00001AEC  4EB8 117A               1131          JSR     HEXOUT
00001AF0                          1132          
00001AF0  6000 04C6               1133          BRA     DSEND
00001AF4                          1134  
00001AF4                          1135  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AF4                          1136  
00001AF4  4E71                    1137  DS0111  NOP
00001AF6                          1138          
00001AF6  4E71                    1139  DMOVEQ  NOP
00001AF8  43F9 0000225E           1140          LEA     MOVEM,A1
00001AFE  4E4F                    1141          TRAP    #15
00001B00  43F9 00002248           1142          LEA     VALQ,A1
00001B06  4E4F                    1143          TRAP    #15
00001B08  43F9 000021FA           1144          LEA     SM7,A1
00001B0E  4E4F                    1145          TRAP    #15
00001B10                          1146          
00001B10                          1147          *getting register number
00001B10  E75C                    1148          ROL.W   #3,D4
00001B12  1A04                    1149          MOVE.B  D4,D5
00001B14  CA3C 0007               1150          AND.B   #%111,D5
00001B18                          1151          
00001B18                          1152          *throwing error if next digit not 0
00001B18  E35C                    1153          ROL.W   #1,D4
00001B1A  1C04                    1154          MOVE.B  D4,D6
00001B1C  CC3C 0001               1155          AND.B   #%1,D6
00001B20  BC3C 0000               1156          CMP.B   #0,D6
00001B24  6600 0466               1157          BNE     DSERR
00001B28                          1158          
00001B28                          1159          *getting data and printing information
00001B28  E15C                    1160          ROL.W   #8,D4
00001B2A  1204                    1161          MOVE.B  D4,D1
00001B2C  C23C 00FF               1162          AND.B   #%11111111,D1
00001B30  43F9 00002244           1163          LEA     VALN,A1
00001B36  4E4F                    1164          TRAP    #15
00001B38  103C 0003               1165          MOVE.B  #3,D0
00001B3C  4E4F                    1166          TRAP    #15
00001B3E  103C 000E               1167          MOVE.B  #14,D0
00001B42  43F9 00002256           1168          LEA     COMMA,A1
00001B48  4E4F                    1169          TRAP    #15
00001B4A  43F9 00002242           1170          LEA     VALD,A1
00001B50  4E4F                    1171          TRAP    #15
00001B52  103C 0003               1172          MOVE.B  #3,D0
00001B56  3205                    1173          MOVE.W  D5,D1
00001B58  4E4F                    1174          TRAP    #15
00001B5A                          1175          
00001B5A  6000 045C               1176          BRA     DSEND
00001B5E                          1177          
00001B5E                          1178  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B5E                          1179  
00001B5E  4E71                    1180  DS1000  NOP
00001B60                          1181          
00001B60  E75C                    1182  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001B62  1A04                    1183          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001B64  0205 0007               1184          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B68  1C05                    1185          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001B6A                          1186  
00001B6A  E75C                    1187          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001B6C  1A04                    1188          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001B6E  0205 0007               1189          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B72  BA3C 0000               1190          CMP.B   #%000,D5        ; Compare with byte size
00001B76  6700 0016               1191          BEQ     DORB
00001B7A  BA3C 0001               1192          CMP.B   #%001,D5        ; Compare with word size
00001B7E  6700 0022               1193          BEQ     DORW
00001B82  BA3C 0002               1194          CMP.B   #%010,D5        ; Compare with long size
00001B86  6700 002E               1195          BEQ     DORL
00001B8A                          1196          
00001B8A  6000 042C               1197          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001B8E                          1198  
00001B8E  43F9 00002273           1199  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001B94  4E4F                    1200          TRAP    #15             ; Print ORM string
00001B96  43F9 00002237           1201          LEA     MODEB,A1        ; Load effective address of MODEB string
00001B9C  4E4F                    1202          TRAP    #15             ; Print MODEB string
00001B9E  6000 002A               1203          BRA     DORA            ; Branch to addressing mode parsing
00001BA2                          1204  
00001BA2  43F9 00002273           1205  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001BA8  4E4F                    1206          TRAP    #15             ; Print ORM string
00001BAA  43F9 0000223A           1207          LEA     MODEW,A1        ; Load effective address of MODEW string
00001BB0  4E4F                    1208          TRAP    #15             ; Print MODEW string
00001BB2  6000 0016               1209          BRA     DORA            ; Branch to addressing mode parsing
00001BB6                          1210  
00001BB6  43F9 00002273           1211  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001BBC  4E4F                    1212          TRAP    #15             ; Print ORM string
00001BBE  43F9 0000223D           1213          LEA     MODEL,A1        ; Load effective address of MODEL string
00001BC4  4E4F                    1214          TRAP    #15             ; Print MODEL string
00001BC6  6000 0002               1215          BRA     DORA            ; Branch to addressing mode parsing
00001BCA                          1216  
00001BCA  ED5C                    1217  DORA    ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001BCC  1A04                    1218          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001BCE  0205 0038               1219          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001BD2  E61D                    1220          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001BD4  1605                    1221          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001BD6  0204 0007               1222          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001BDA  1C04                    1223          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001BDC                          1224  
00001BDC  4EB8 120C               1225          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001BE0                          1226  
00001BE0  6000 03D6               1227          BRA     DSEND                    
00001BE4                          1228  
00001BE4                          1229  
00001BE4                          1230  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BE4                          1231  
00001BE4  4E71                    1232  DS1001  NOP
00001BE6  4E71                    1233  DSUB    NOP
00001BE8                          1234  *print sub
00001BE8  43F9 00002267           1235          LEA     SUBM,A1
00001BEE  4E4F                    1236          TRAP    #15
00001BF0                          1237  
00001BF0                          1238  *parse dn reg: 3 bits
00001BF0                          1239  *number of the data register involved
00001BF0                          1240  *nums 0-7, paired with below
00001BF0  E75C                    1241          ROL.W   #3,D4       *dn reg num in d1
00001BF2  1E04                    1242          MOVE.B  D4,D7
00001BF4  0207 0007               1243          ANDI.B  #%111,D7
00001BF8                          1244          
00001BF8  3C47                    1245          MOVE.W  D7,A6       *temporary for storage
00001BFA                          1246  
00001BFA                          1247  *parse opmode: 3 bits
00001BFA                          1248  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001BFA                          1249  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001BFA                          1250  *invalid: 111, 011
00001BFA                          1251  *parse first digit separately
00001BFA  E35C                    1252          ROL.W   #1,D4       *addressing mode in d2
00001BFC  1E04                    1253          MOVE.B  D4,D7
00001BFE  0207 0001               1254          ANDI.B  #%1,D7
00001C02                          1255          
00001C02                          1256  *parsing next two digits of size
00001C02  E55C                    1257          ROL.W   #2,D4       *size in d5
00001C04  1A04                    1258          MOVE.B  D4,D5
00001C06  0205 0003               1259          ANDI.B  #%11,D5
00001C0A  4EB8 11C2               1260          JSR     SIZE
00001C0E  43F9 000021FA           1261          LEA     SM7,A1
00001C14  4E4F                    1262          TRAP    #15
00001C16                          1263          
00001C16                          1264  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C16  BE3C 0000               1265          CMP.B   #%0,D7       *if 1, then register info printed last
00001C1A  6700 0026               1266          BEQ     DSUBEA      *branch to ea before register
00001C1E                          1267          
00001C1E                          1268  *printing register information
00001C1E                          1269  DSUBPRNTREG
00001C1E  43F9 00002242           1270          LEA     VALD,A1
00001C24  4E4F                    1271          TRAP    #15
00001C26  320E                    1272          MOVE.W  A6,D1       *retrieving a6 register data
00001C28  103C 0003               1273          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C2C  4E4F                    1274          TRAP    #15         *printing register number
00001C2E  103C 000E               1275          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C32  BE3C 0000               1276          CMP.B   #%0,D7      *if info finished printing
00001C36  6700 0380               1277          BEQ     DSEND      *branch to end
00001C3A  43F9 00002256           1278          LEA     COMMA,A1
00001C40  4E4F                    1279          TRAP    #15
00001C42                          1280  
00001C42                          1281          
00001C42                          1282  * parse ea mode: 3 bits
00001C42                          1283  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C42                          1284  *address reg direct not allowed for .B operations
00001C42                          1285  *no invalid
00001C42                          1286  DSUBEA
00001C42  E75C                    1287          ROL.W   #3,D4       *ea mode
00001C44  1604                    1288          MOVE.B  D4,D3
00001C46  0203 0007               1289          ANDI.B  #%111,D3
00001C4A                          1290  
00001C4A                          1291  *parse ea reg: 3 bits
00001C4A                          1292  *no invalid: paired with opmode below (nums 0-7)
00001C4A                          1293  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001C4A  E75C                    1294          ROL.W   #3,D4       *ea mode
00001C4C  1C04                    1295          MOVE.B  D4,D6
00001C4E  0206 0007               1296          ANDI.B  #%111,D6
00001C52                          1297          
00001C52  2803                    1298          MOVE.L  D3,D4   *temporarily using D4 
00001C54                          1299          
00001C54                          1300  *comparisons
00001C54  B67C 0004               1301          CMP     #%100,D3
00001C58  6700 0332               1302          BEQ     DSERR
00001C5C  4EB8 120C               1303          JSR     ADDRMODEALL
00001C60  BE3C 0001               1304          CMP.B   #%1,D7      *if info printed
00001C64  6700 0352               1305          BEQ     DSEND       *end
00001C68  43F9 00002256           1306          LEA     COMMA,A1
00001C6E  4E4F                    1307          TRAP    #15
00001C70  60AC                    1308          BRA     DSUBPRNTREG *check d6 for size of data
00001C72                          1309  *then take data from d4 and print (?)
00001C72                          1310  
00001C72  6000 0344               1311          BRA     DSEND
00001C76                          1312  
00001C76                          1313  
00001C76                          1314  
00001C76  4E71                    1315  DS1010  NOP
00001C78  6000 0322               1316          BRA     DSERRINS
00001C7C                          1317  
00001C7C                          1318          
00001C7C                          1319  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C7C                          1320  
00001C7C  4E71                    1321  DS1011  NOP
00001C7E  6000 031C               1322          BRA     DSERRINS
00001C82                          1323          
00001C82                          1324  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C82                          1325  
00001C82  4E71                    1326  DS1100  NOP
00001C84  6000 0316               1327          BRA     DSERRINS
00001C88                          1328          
00001C88                          1329  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C88                          1330  
00001C88  4E71                    1331  DS1101  NOP
00001C8A                          1332  
00001C8A  4E71                    1333  DADD    NOP
00001C8C  43F9 00002263           1334          LEA     ADDM,A1
00001C92  4E4F                    1335          TRAP    #15
00001C94                          1336          
00001C94                          1337          *parse dn reg: 3 bits
00001C94                          1338  *number of the data register involved
00001C94                          1339  *nums 0-7, paired with below
00001C94  E75C                    1340          ROL.W   #3,D4       *dn reg num in d7
00001C96  1E04                    1341          MOVE.B  D4,D7
00001C98  0207 0007               1342          ANDI.B  #%111,D7
00001C9C                          1343          
00001C9C  3C47                    1344          MOVE.W  D7,A6
00001C9E                          1345  
00001C9E                          1346  *parse opmode: 3 bits
00001C9E                          1347  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C9E                          1348  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C9E                          1349  *invalid: 111, 011
00001C9E                          1350  *parse first digit separately
00001C9E  E35C                    1351          ROL.W   #1,D4       *addressing mode in d2
00001CA0  1E04                    1352          MOVE.B  D4,D7
00001CA2  0207 0001               1353          ANDI.B  #%1,D7
00001CA6                          1354          
00001CA6                          1355  *parsing next two digits of size
00001CA6  E55C                    1356          ROL.W   #2,D4       *size in d5
00001CA8  1A04                    1357          MOVE.B  D4,D5
00001CAA  0205 0003               1358          ANDI.B  #%11,D5
00001CAE  BA3C 0003               1359          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001CB2  6700 007C               1360          BEQ     DADDA
00001CB6  4EB8 11C2               1361          JSR     SIZE
00001CBA  43F9 000021FA           1362          LEA     SM7,A1
00001CC0  4E4F                    1363          TRAP    #15
00001CC2                          1364          
00001CC2                          1365  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001CC2  BE3C 0000               1366          CMP.B   #%0,D7       *if 0, then register info printed last
00001CC6  6700 002E               1367          BEQ     DADDEA      *branch to ea before register
00001CCA                          1368          
00001CCA                          1369  *printing register information
00001CCA                          1370  DADDPRNTREG
00001CCA  BA3C 0003               1371          CMP.B   #%11,D5
00001CCE  6700 0058               1372          BEQ     PRINTA
00001CD2  43F9 00002242           1373          LEA     VALD,A1
00001CD8                          1374  ADDCONT
00001CD8  4E4F                    1375          TRAP    #15
00001CDA  320E                    1376          MOVE.W  A6,D1       *moving reg num to d1 to print
00001CDC  103C 0003               1377          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001CE0  4E4F                    1378          TRAP    #15         *printing register number
00001CE2  103C 000E               1379          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001CE6  BE3C 0000               1380          CMP.B   #%0,D7      *if info finished printing
00001CEA  6700 02CC               1381          BEQ     DSEND      *branch to end
00001CEE  43F9 00002256           1382          LEA     COMMA,A1
00001CF4  4E4F                    1383          TRAP    #15
00001CF6                          1384  
00001CF6                          1385          
00001CF6                          1386  * parse ea mode: 3 bits
00001CF6                          1387  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001CF6                          1388  *address reg direct not allowed for .B operations
00001CF6                          1389  *no invalid
00001CF6                          1390  DADDEA
00001CF6  E75C                    1391          ROL.W   #3,D4       *ea mode
00001CF8  1604                    1392          MOVE.B  D4,D3
00001CFA  0203 0007               1393          ANDI.B  #%111,D3
00001CFE                          1394  
00001CFE                          1395  *parse ea reg: 3 bits
00001CFE                          1396  *no invalid: paired with opmode below (nums 0-7)
00001CFE                          1397  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001CFE  E75C                    1398          ROL.W   #3,D4       *ea mode
00001D00  1C04                    1399          MOVE.B  D4,D6
00001D02  0206 0007               1400          ANDI.B  #%111,D6
00001D06                          1401          
00001D06                          1402  *comparisons
00001D06  B67C 0004               1403          CMP     #%100,D3
00001D0A  6700 005A               1404          BEQ     ADDDATACHECK
00001D0E                          1405  DATACHECKCONT
00001D0E  4EB8 120C               1406          JSR     ADDRMODEALL
00001D12  BE3C 0001               1407          CMP.B   #%1,D7      *if info printed
00001D16  6700 02A0               1408          BEQ     DSEND       *end
00001D1A  43F9 00002256           1409          LEA     COMMA,A1
00001D20  4E4F                    1410          TRAP    #15
00001D22  60A6                    1411          BRA     DADDPRNTREG 
00001D24                          1412  
00001D24  6000 0292               1413          BRA     DSEND
00001D28                          1414          
00001D28  43F9 00002240           1415  PRINTA  LEA     VALA,A1
00001D2E  60A8                    1416          BRA     ADDCONT
00001D30                          1417  
00001D30                          1418          
00001D30  4E71                    1419  DADDA   NOP
00001D32  43F9 00002240           1420          LEA     VALA,A1
00001D38  4E4F                    1421          TRAP    #15
00001D3A  BE3C 0000               1422          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001D3E  6600 000C               1423          BNE     ADDAL
00001D42  43F9 0000223A           1424          LEA     MODEW,A1
00001D48  6000 000C               1425          BRA     ADDSIZEEND
00001D4C  43F9 0000223D           1426  ADDAL   LEA     MODEL,A1
00001D52  6000 0002               1427          BRA     ADDSIZEEND
00001D56                          1428  ADDSIZEEND
00001D56  4E4F                    1429          TRAP    #15
00001D58  43F9 000021FA           1430          LEA     SM7,A1
00001D5E  4E4F                    1431          TRAP    #15
00001D60  1E3C 0000               1432          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D64  6090                    1433          BRA     DADDEA
00001D66                          1434  ADDDATACHECK
00001D66  BA3C 0003               1435          CMP.B   #%11,D5
00001D6A  6700 0220               1436          BEQ     DSERR
00001D6E  609E                    1437          BRA     DATACHECKCONT
00001D70                          1438          
00001D70                          1439          
00001D70                          1440  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D70                          1441  
00001D70                          1442  DS1110
00001D70  E75C                    1443          ROL.W   #3,D4           * [D2] Reading count
00001D72  1404                    1444          MOVE.B  D4,D2
00001D74  0202 0007               1445          ANDI.B  #%111,D2
00001D78                          1446          
00001D78  E35C                    1447          ROL.W   #1,D4           * [D3] Reading direction
00001D7A  1604                    1448          MOVE.B  D4,D3
00001D7C  0203 0001               1449          ANDI.B  #%1,D3
00001D80                          1450          
00001D80  E55C                    1451          ROL.W   #2,D4           * [D5] Reading size
00001D82  1A04                    1452          MOVE.B  D4,D5
00001D84  0205 0003               1453          ANDI.B  #%11,D5
00001D88                          1454          
00001D88  BA3C 0003               1455          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D8C  6700 00F0               1456          BEQ     DS1110MEM
00001D90                          1457          
00001D90  E35C                    1458          ROL.W   #1,D4           * [D6] Reading count mode
00001D92  1C04                    1459          MOVE.B  D4,D6
00001D94  0206 0001               1460          ANDI.B  #%1,D6
00001D98                          1461          
00001D98  E55C                    1462          ROL.W   #2,D4           * [D7] reading type of shift
00001D9A  1E04                    1463          MOVE.B  D4,D7
00001D9C  0207 0003               1464          ANDI.B  #%11,D7
00001DA0                          1465          
00001DA0  E75C                    1466          ROL.W   #3,D4           * [D1] reading register
00001DA2  1204                    1467          MOVE.B  D4,D1
00001DA4  0201 0007               1468          ANDI.B  #%111,D1
00001DA8                          1469          
00001DA8  BE3C 0001               1470          CMP.B   #%01,D7   *Determine shift type
00001DAC  6700 008E               1471          BEQ     DLS
00001DB0  BE3C 0000               1472          CMP.B   #%00,D7
00001DB4  6700 0092               1473          BEQ     DAS
00001DB8  BE3C 0003               1474          CMP.B   #%11,D7
00001DBC  6700 0096               1475          BEQ     DRO
00001DC0                          1476          
00001DC0  6000 01F6               1477          BRA     DSEND               *Fallback in case of invalid code
00001DC4                          1478          
00001DC4  48E7 FFFF               1479  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001DC8  4EB9 00001E60           1480          JSR     DS1110SIDE
00001DCE  4CDF FFFF               1481          MOVEM.L (SP)+,A0-A7/D0-D7
00001DD2                          1482          
00001DD2  48E7 FFFF               1483          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001DD6  4EB8 11C2               1484          JSR     SIZE
00001DDA  4CDF FFFF               1485          MOVEM.L (SP)+,A0-A7/D0-D7
00001DDE                          1486          
00001DDE  103C 000E               1487          MOVE.B  #14,D0
00001DE2  43F9 000021ED           1488          LEA     SM5,A1
00001DE8  4E4F                    1489          TRAP    #15
00001DEA                          1490          
00001DEA  BA3C 0003               1491          CMP.B   #%11,D5
00001DEE  6700 00B4               1492          BEQ     DS1110MEMA
00001DF2                          1493          
00001DF2  BC3C 0001               1494          CMP.B   #%1,D6
00001DF6  6700 003A               1495          BEQ     DS1110_REG_D
00001DFA  6000 002C               1496          BRA     DS1110_REG_I
00001DFE                          1497          
00001DFE  1C01                    1498  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001E00                          1499          
00001E00  103C 0003               1500          MOVE.B  #3,D0
00001E04  1202                    1501          MOVE.B  D2,D1
00001E06  4E4F                    1502          TRAP    #15
00001E08                          1503          
00001E08  103C 000E               1504          MOVE.B  #14,D0
00001E0C  43F9 00002256           1505          LEA     COMMA,A1
00001E12  4E4F                    1506          TRAP    #15
00001E14                          1507          
00001E14  43F9 00002242           1508          LEA     VALD,A1
00001E1A  4E4F                    1509          TRAP    #15
00001E1C                          1510          
00001E1C  103C 0003               1511          MOVE.B  #3,D0
00001E20  1206                    1512          MOVE.B  D6,D1
00001E22  4E4F                    1513          TRAP    #15
00001E24                          1514          
00001E24  6000 0192               1515          BRA     DSEND
00001E28                          1516          
00001E28                          1517  DS1110_REG_I
00001E28  43F9 00002244           1518          LEA     VALN,A1
00001E2E  4E4F                    1519          TRAP    #15
00001E30  60CC                    1520          BRA     DS1110B
00001E32                          1521  
00001E32                          1522  DS1110_REG_D
00001E32  43F9 00002242           1523          LEA     VALD,A1
00001E38  4E4F                    1524          TRAP    #15
00001E3A  60C2                    1525          BRA     DS1110B       
00001E3C                          1526          
00001E3C  43F9 0000227A           1527  DLS     LEA     LSM,A1
00001E42  4E4F                    1528          TRAP    #15
00001E44  6000 FF7E               1529          BRA     DS1110A
00001E48                          1530          
00001E48  43F9 00002281           1531  DAS     LEA     ASM,A1
00001E4E  4E4F                    1532          TRAP    #15
00001E50  6000 FF72               1533          BRA     DS1110A
00001E54                          1534          
00001E54  43F9 00002288           1535  DRO     LEA     ROM,A1
00001E5A  4E4F                    1536          TRAP    #15
00001E5C  6000 FF66               1537          BRA     DS1110A
00001E60                          1538          
00001E60                          1539  DS1110SIDE
00001E60  103C 0006               1540          MOVE.B  #6,D0
00001E64  B63C 0001               1541          CMP.B   #1,D3
00001E68  6700 000C               1542          BEQ     DS1110LSIDE
00001E6C  123C 0052               1543          MOVE.B  #82,D1
00001E70  4E4F                    1544          TRAP    #15
00001E72  6000 0008               1545          BRA     DS1110SIDEEND
00001E76                          1546  
00001E76                          1547  DS1110LSIDE
00001E76  123C 004C               1548          MOVE.B  #76,D1
00001E7A  4E4F                    1549          TRAP    #15
00001E7C                          1550          
00001E7C                          1551  DS1110SIDEEND
00001E7C  4E75                    1552          RTS 
00001E7E                          1553  
00001E7E                          1554  DS1110MEM
00001E7E                          1555                                  * Shift type is instead stored in D2
00001E7E                          1556          
00001E7E  E75C                    1557          ROL.W   #3,D4           * [D6] Reading address mode
00001E80  1C04                    1558          MOVE.B  D4,D6
00001E82  0206 0007               1559          ANDI.B  #%111,D6
00001E86                          1560          
00001E86  E75C                    1561          ROL.W   #3,D4           * [D1] Reading address register
00001E88  1204                    1562          MOVE.B  D4,D1
00001E8A  0201 0007               1563          ANDI.B  #%111,D1
00001E8E                          1564          
00001E8E  B43C 0001               1565          CMP.B   #%01,D2
00001E92  67A8                    1566          BEQ     DLS
00001E94  B43C 0000               1567          CMP.B   #%00,D2
00001E98  67AE                    1568          BEQ     DAS
00001E9A  B43C 0003               1569          CMP.B   #%11,D2
00001E9E  67B4                    1570          BEQ     DRO
00001EA0  6000 0116               1571          BRA     DSEND
00001EA4                          1572          
00001EA4                          1573          
00001EA4                          1574  DS1110MEMA
00001EA4                          1575          
00001EA4  BC3C 0002               1576          CMP.B   #%010,D6
00001EA8  6700 002E               1577          BEQ     DS1110MEM_REG
00001EAC  BC3C 0003               1578          CMP.B   #%011,D6
00001EB0  6700 004C               1579          BEQ     DS1110MEM_INC
00001EB4  BC3C 0004               1580          CMP.B   #%100,D6
00001EB8  6700 006A               1581          BEQ     DS1110MEM_DEC
00001EBC                          1582          
00001EBC  BC3C 0007               1583          CMP.B   #%111,D6
00001EC0  6600 00CA               1584          BNE     DSERR
00001EC4                          1585          
00001EC4  B23C 0000               1586          CMP.B   #%000,D1
00001EC8  6700 0080               1587          BEQ     DS1110MEM_CUSW
00001ECC  B23C 0001               1588          CMP.B   #%001,D1
00001ED0  6700 0096               1589          BEQ     DS1110MEM_CUSL
00001ED4                          1590          
00001ED4  6000 00E2               1591          BRA     DSEND
00001ED8                          1592  
00001ED8                          1593  DS1110MEM_REG
00001ED8  43F9 0000224C           1594          LEA     OPENPTR,A1
00001EDE  4E4F                    1595          TRAP    #15
00001EE0                          1596          
00001EE0  43F9 00002240           1597          LEA     VALA,A1
00001EE6  4E4F                    1598          TRAP    #15
00001EE8                          1599          
00001EE8  103C 0003               1600          MOVE.B  #3,D0
00001EEC  4E4F                    1601          TRAP    #15
00001EEE  103C 000E               1602          MOVE.B  #14,D0
00001EF2                          1603          
00001EF2  43F9 00002251           1604          LEA     CLOSEPTR,A1
00001EF8  4E4F                    1605          TRAP    #15
00001EFA                          1606          
00001EFA  6000 00BC               1607          BRA     DSEND
00001EFE                          1608  
00001EFE                          1609  DS1110MEM_INC
00001EFE  43F9 0000224C           1610          LEA     OPENPTR,A1
00001F04  4E4F                    1611          TRAP    #15
00001F06                          1612          
00001F06  43F9 00002240           1613          LEA     VALA,A1
00001F0C  4E4F                    1614          TRAP    #15
00001F0E                          1615          
00001F0E  103C 0003               1616          MOVE.B  #3,D0
00001F12  4E4F                    1617          TRAP    #15
00001F14  103C 000E               1618          MOVE.B  #14,D0
00001F18                          1619          
00001F18  43F9 00002253           1620          LEA     CLOSEIPTR,A1
00001F1E  4E4F                    1621          TRAP    #15
00001F20                          1622          
00001F20  6000 0096               1623          BRA     DSEND
00001F24                          1624  
00001F24                          1625  DS1110MEM_DEC
00001F24  43F9 0000224E           1626          LEA     OPENDPTR,A1
00001F2A  4E4F                    1627          TRAP    #15
00001F2C                          1628          
00001F2C  43F9 00002240           1629          LEA     VALA,A1
00001F32  4E4F                    1630          TRAP    #15
00001F34                          1631          
00001F34  103C 0003               1632          MOVE.B  #3,D0
00001F38  4E4F                    1633          TRAP    #15
00001F3A  103C 000E               1634          MOVE.B  #14,D0
00001F3E                          1635          
00001F3E  43F9 00002251           1636          LEA     CLOSEPTR,A1
00001F44  4E4F                    1637          TRAP    #15
00001F46                          1638          
00001F46  6000 0070               1639          BRA     DSEND
00001F4A                          1640          
00001F4A                          1641  DS1110MEM_CUSW
00001F4A  43F9 00002258           1642          LEA     DOLLAR,A1
00001F50  4E4F                    1643          TRAP    #15
00001F52  341A                    1644          MOVE.W  (A2)+,D2
00001F54  48E7 0400               1645          MOVEM.L D5,-(SP)
00001F58  1A3C 0030               1646          MOVE.B  #48,D5
00001F5C  4EB8 117A               1647          JSR     HEXOUT
00001F60  4CDF 0020               1648          MOVEM.L (SP)+,D5
00001F64  6000 0052               1649          BRA     DSEND
00001F68                          1650          
00001F68                          1651  DS1110MEM_CUSL
00001F68  43F9 00002258           1652          LEA     DOLLAR,A1
00001F6E  4E4F                    1653          TRAP    #15
00001F70  241A                    1654          MOVE.L  (A2)+,D2
00001F72  48E7 0400               1655          MOVEM.L D5,-(SP)
00001F76  1A3C 0030               1656          MOVE.B  #48,D5
00001F7A  4EB8 117A               1657          JSR     HEXOUT
00001F7E  4CDF 0020               1658          MOVEM.L (SP)+,D5
00001F82  6000 0034               1659          BRA     DSEND
00001F86                          1660          
00001F86                          1661  
00001F86                          1662  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F86                          1663  
00001F86  4E71                    1664  DS1111  NOP
00001F88  6000 002E               1665          BRA     DSEND
00001F8C                          1666  
00001F8C                          1667  *DS Final
00001F8C                          1668  *--------------------------------------------------------------------------------------------------
00001F8C                          1669  
00001F8C  103C 000E               1670  DSERR   MOVE.B  #14,D0
00001F90  43F9 00002209           1671          LEA     ERRM,A1
00001F96  4E4F                    1672          TRAP    #15
00001F98  6000 001E               1673          BRA     DSEND
00001F9C                          1674          
00001F9C                          1675  DSERRINS
00001F9C  103C 000E               1676          MOVE.B  #14,D0
00001FA0  43F9 00002211           1677          LEA     ERRMINS,A1
00001FA6  4E4F                    1678          TRAP    #15
00001FA8  6000 000E               1679          BRA     DSEND
00001FAC                          1680  
00001FAC                          1681  DSERREA
00001FAC  103C 000E               1682          MOVE.B  #14,D0
00001FB0  43F9 00002212           1683          LEA     ERRMEA,A1
00001FB6  4E4F                    1684          TRAP    #15
00001FB8                          1685  
00001FB8  4E75                    1686  DSEND   RTS
00001FBA                          1687  
00001FBA  43F9 000021DA           1688  DSEOF   LEA     LB,A1
00001FC0  103C 000E               1689          MOVE.B  #14,D0
00001FC4  4E4F                    1690          TRAP    #15
00001FC6                          1691          
00001FC6  43F9 000020DC           1692          LEA     REST,A1
00001FCC  103C 000E               1693          MOVE.B  #14,D0
00001FD0  4E4F                    1694          TRAP    #15
00001FD2                          1695          
00001FD2  103C 0005               1696          MOVE.B  #5,D0
00001FD6  4E4F                    1697          TRAP    #15
00001FD8                          1698          
00001FD8  B23C 0059               1699          CMP.B   #89,D1
00001FDC  6700 F022               1700          BEQ     START
00001FE0  B23C 0079               1701          CMP.B   #121,D1
00001FE4  6700 F01A               1702          BEQ     START
00001FE8                          1703  
00001FE8  43F9 000021DA           1704  END     LEA     LB,A1
00001FEE  103C 000E               1705          MOVE.B  #14,D0
00001FF2  4E4F                    1706          TRAP    #15
00001FF4                          1707          
00001FF4  43F9 000021DA           1708          LEA     LB,A1
00001FFA  103C 000E               1709          MOVE.B  #14,D0
00001FFE  4E4F                    1710          TRAP    #15
00002000                          1711          
00002000  43F9 000020F9           1712          LEA     ENDMSG,A1
00002006  103C 000E               1713          MOVE.B  #14,D0
0000200A  4E4F                    1714          TRAP    #15
0000200C                          1715          
0000200C  43F9 00002121           1716          LEA     AUTHOR,A1
00002012  4E4F                    1717          TRAP    #15
00002014                          1718          
00002014  43F9 000021DA           1719          LEA     LB,A1
0000201A  103C 000E               1720          MOVE.B  #14,D0
0000201E  4E4F                    1721          TRAP    #15
00002020                          1722          
00002020  103C 0009               1723          MOVE.B  #9,D0
00002024  4E4F                    1724          TRAP    #15
00002026                          1725  
00002026                          1726  *Initialized Variables
00002026                          1727  *--------------------------------------------------------------------------------------------------
00002026                          1728  
00002026  =0000000D               1729  CR      EQU     $0D
00002026  =0000000A               1730  LF      EQU     $0A
00002026  =00000009               1731  HT      EQU     $09
00002026                          1732  
00002026= 54 68 69 73 20 69 ...   1733  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000020AE= 45 6E 74 65 72 20 ...   1734  ASTART  DC.B    'Enter start address: $',0
000020C5= 45 6E 74 65 72 20 ...   1735  AEND    DC.B    'Enter end address:   $',0
000020DC= 52 65 73 74 61 72 ...   1736  REST    DC.B    'Restart Disassembler (y/n)? ',0
000020F9= 54 68 61 6E 6B 20 ...   1737  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002121= 4D 61 64 65 20 62 ...   1738  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
00002146                          1739  
00002146= 45 52 52 4F 52 3A ...   1740  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002180= 45 52 52 4F 52 3A ...   1741  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
000021A6= 45 52 52 4F 52 3A ...   1742  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000021DA                          1743  
000021DA= 0D 0A 00                1744  LB      DC.B    CR,LF,0
000021DD                          1745  
000021DD= 09 00                   1746  HTM     DC.B    HT,0
000021DF                          1747  
000021DF= 20 00                   1748  SM1     DC.B    ' ',0
000021E1= 20 20 00                1749  SM2     DC.B    '  ',0
000021E4= 20 20 20 00             1750  SM3     DC.B    '   ',0
000021E8= 20 20 20 20 00          1751  SM4     DC.B    '    ',0
000021ED= 20 20 20 20 20 00       1752  SM5     DC.B    '     ',0
000021F3= 20 20 20 20 20 20 00    1753  SM6     DC.B    '      ',0
000021FA= 20 20 20 20 20 20 ...   1754  SM7     DC.B    '       ',0
00002202                          1755  
00002202= 54 45 53 54 00          1756  TESTM   DC.B    'TEST',0
00002207                          1757  
00002207= 00                      1758  NOTH    DC.B    '',0
00002208= 00                      1759  NOTH2   DC.B    '',0
00002209                          1760  
00002209= 20 2A 45 52 52 4F ...   1761  ERRM    DC.B    ' *ERROR',0
00002211= 00                      1762  ERRMINS DC.B    '',0
00002212= 20 2A 45 52 52 4F ...   1763  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
00002237                          1764  
00002237= 2E 42 00                1765  MODEB   DC.B    '.B',0
0000223A= 2E 57 00                1766  MODEW   DC.B    '.W',0
0000223D= 2E 4C 00                1767  MODEL   DC.B    '.L',0
00002240                          1768  
00002240= 41 00                   1769  VALA    DC.B    'A',0
00002242= 44 00                   1770  VALD    DC.B    'D',0
00002244= 23 00                   1771  VALN    DC.B    '#',0
00002246= 30 00                   1772  VAL0    DC.B    '0',0
00002248= 51 00                   1773  VALQ    DC.B    'Q',0
0000224A= 4D 00                   1774  VALM    DC.B    'M',0
0000224C                          1775  
0000224C= 28 00                   1776  OPENPTR     DC.B    '(',0
0000224E= 2D 28 00                1777  OPENDPTR    DC.B    '-(',0
00002251                          1778  
00002251= 29 00                   1779  CLOSEPTR    DC.B    ')',0
00002253= 29 2B 00                1780  CLOSEIPTR   DC.B    ')+',0
00002256                          1781  
00002256= 2C 00                   1782  COMMA   DC.B    ',',0
00002258= 24 00                   1783  DOLLAR  DC.B    '$',0
0000225A                          1784  
0000225A= 4E 4F 50 00             1785  NOPM    DC.B    'NOP',0
0000225E                          1786  
0000225E= 4D 4F 56 45 00          1787  MOVEM   DC.B    'MOVE',0
00002263                          1788  
00002263= 41 44 44 00             1789  ADDM    DC.B    'ADD',0
00002267                          1790  
00002267= 53 55 42 00             1791  SUBM    DC.B    'SUB',0
0000226B                          1792  
0000226B= 4C 45 41 00             1793  LEAM    DC.B    'LEA',0
0000226F                          1794  
0000226F= 41 4E 44 00             1795  ANDM    DC.B    'AND',0
00002273= 4F 52 00                1796  ORM     DC.B    'OR',0
00002276= 4E 4F 54 00             1797  NOTM    DC.B    'NOT',0
0000227A                          1798  
0000227A= 4C 53 00                1799  LSM    DC.B    'LS',0
0000227D= 4C 53 52 00             1800  LSRM    DC.B    'LSR',0
00002281= 41 53 00                1801  ASM    DC.B    'AS',0
00002284= 41 53 52 00             1802  ASRM    DC.B    'ASR',0
00002288                          1803  
00002288= 52 4F 00                1804  ROM    DC.B    'RO',0
0000228B= 52 4F 52 00             1805  RORM    DC.B    'ROR',0
0000228F                          1806  
0000228F= 42 47 54 00             1807  BGTM    DC.B    'BGT',0
00002293= 42 4C 45 00             1808  BLEM    DC.B    'BLE',0
00002297= 42 45 51 00             1809  BEQM    DC.B    'BEQ',0
0000229B                          1810  
0000229B= 4A 53 52 00             1811  JSRM    DC.B    'JSR',0
0000229F= 52 54 53 00             1812  RTSM    DC.B    'RTS',0
000022A3                          1813  
000022A3= 42 52 41 00             1814  BRAM    DC.B    'BRA',0
000022A7                          1815  
000022A7                          1816  
000022A7                          1817      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1D4C
ADDCONT             1CD8
ADDDATACHECK        1D66
ADDM                2263
ADDRMODEALL         120C
ADDSIZEEND          1D56
ADREG               1660
ADREGP              1678
AEND                20C5
AM000               120C
AM001               122C
AM010               1254
AM011               1284
AM100               12B4
AM111               12E4
AM111001            1312
AM111100            1338
AMEND               1366
ANDM                226F
ASM                 2281
ASRM                2284
ASTART              20AE
AUTHOR              2121
BEQM                2297
BGTM                228F
BLEM                2293
BRAM                22A3
CLOSEIPTR           2253
CLOSEPTR            2251
COMMA               2256
CR                  D
DADD                1C8A
DADDA               1D30
DADDEA              1CF6
DADDPRNTREG         1CCA
DADDQ               1908
DAND                139E
DANDA               1428
DANDB               13EC
DANDL               1414
DANDW               1400
DAS                 1E48
DATACHECKCONT       1D0E
DBEQ                1AB4
DBGT                1A38
DBLE                1A74
DBRA                19AC
DBRA_16BIT          19F4
DBRA_32BIT          1A16
DISASM              136C
DJSR                16E2
DJSR_CUSL           177A
DJSR_CUSW           175C
DJSR_REG            1736
DLEA                17A4
DLEAP               17DA
DLS                 1E3C
DMOVE2              143E
DMOVEA              14E2
DMOVEM              18B2
DMOVEQ              1AF6
DNOP                15A6
DNOT                15B2
DNOTA               1612
DNOTB               15D6
DNOTL               15FE
DNOTW               15EA
DOLLAR              2258
DOR                 1B60
DORA                1BCA
DORB                1B8E
DORL                1BB6
DORW                1BA2
DREG                1648
DRO                 1E54
DRTS                1798
DS0                 1376
DS00                138A
DS01                1504
DS010               1522
DS0100              155E
DS0101              1906
DS011               152C
DS0110              1980
DS0111              1AF4
DS1                 1380
DS10                150E
DS100               1536
DS1000              1B5E
DS1001              1BE4
DS101               1540
DS1010              1C76
DS1011              1C7C
DS11                1518
DS110               154A
DS1100              1C82
DS1101              1C88
DS111               1554
DS1110              1D70
DS1110A             1DC4
DS1110B             1DFE
DS1110LSIDE         1E76
DS1110MEM           1E7E
DS1110MEMA          1EA4
DS1110MEM_CUSL      1F68
DS1110MEM_CUSW      1F4A
DS1110MEM_DEC       1F24
DS1110MEM_INC       1EFE
DS1110MEM_REG       1ED8
DS1110SIDE          1E60
DS1110SIDEEND       1E7C
DS1110_REG_D        1E32
DS1110_REG_I        1E28
DS1111              1F86
DSEND               1FB8
DSEOF               1FBA
DSERR               1F8C
DSERREA             1FAC
DSERRINS            1F9C
DSUB                1BE6
DSUBEA              1C42
DSUBPRNTREG         1C1E
END                 1FE8
ENDMSG              20F9
ERRM                2209
ERRMEA              2212
ERRMINS             2211
EXT                 16C0
EXTW                16D6
HDONE               11C0
HEXOUT              117A
HHEX                1194
HNUM                119C
HSKIP2              11AA
HSKIP3              11BE
HSTEP               1182
HSTEP2              11A0
HT                  9
HTM                 21DD
INTRO               2026
JSR010              1806
JSR111              1836
JSR111001           1868
JSRM                229B
JSRPRINT2           1892
LB                  21DA
LEAM                226B
LF                  A
LSM                 227A
LSRM                227D
MADREG              1698
MODEB               2237
MODEL               223D
MODEW               223A
MOVECONT            1462
MOVEERRCHECK        14F8
MOVEM               225E
MOVEMEA             18EE
MOVEML              18E6
MSDONE              14A8
MSIZE               1462
MSIZEB              148A
MSIZEL              149E
MSIZEW              1494
NOPM                225A
NOTH                2207
NOTH2               2208
NOTM                2276
OPENDPTR            224E
OPENPTR             224C
ORM                 2273
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1D28
PSTEP               108E
PSTEP2              10BE
RCONT               1166
READLN              1118
REST                20DC
ROM                 2288
RORM                228B
RPAUSE              116E
RSTEP               111E
RTSM                229F
SDONE               1208
SIZE                11C2
SIZEB               11EA
SIZEL               11FE
SIZEW               11F4
SM1                 21DF
SM2                 21E1
SM3                 21E4
SM4                 21E8
SM5                 21ED
SM6                 21F3
SM7                 21FA
SRET                120A
START               1000
STARTER             0
SUBM                2267
TEST                102A
TESTM               2202
VAL0                2246
VALA                2240
VALD                2242
VALM                224A
VALN                2244
VALQ                2248
VERR1               10E8
VERR1M              2146
VERR2               10F8
VERR2M              2180
VERR3               1108
VERR3M              21A6
VINPUT              10DE
