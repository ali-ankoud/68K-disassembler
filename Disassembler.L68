00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 10:05:34 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 000022AA             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 00002332             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 0000248B             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 00002349             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 0000248B             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 000023CA            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 1166                114          BRA     END
00001108                           115  
00001108  43F9 00002404            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 1156                119          BRA     END
00001118                           120  
00001118  43F9 0000242A            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 1146                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 00002465            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 0000245E            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 10C4                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 000024BB            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 000024BE            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 000024C1            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 000024C6            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0FC6                256          BEQ     DSERR
0000124C  43F9 000024C4            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 000024D0            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 000024C4            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 000024D5            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 000024D0            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 000024C4            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 000024D7            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 000024D2            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 000024C4            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 000024D5            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0F16                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 000024DC            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 000024DC            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0EC2                334          BNE     DSERR
00001350  43F9 000024C8            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 014E                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 0158                373          BCS     DS11
00001396  6000 014A                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 014E                381          BEQ     DS010
000013AA  6000 0002                382          BRA     DMOVE2
000013AE                           383          
000013AE                           384  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
000013AE  4E71                     385  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
000013B0                           386          *size in d5 from above processing
000013B0  43F9 000024E6            387          LEA     MOVEM,A1
000013B6  4E4F                     388          TRAP    #15
000013B8                           389                  
000013B8                           390          *dest reg to d7
000013B8  E75C                     391          ROL.W   #3,D4
000013BA  1E04                     392          MOVE.B  D4,D7
000013BC  CE3C 0007                393          AND.B   #%111,D7
000013C0                           394          
000013C0                           395          *dest mode to d3: An means MOVEA
000013C0  E75C                     396          ROL.W   #3,D4
000013C2  1404                     397          MOVE.B  D4,D2
000013C4  C43C 0007                398          AND.B   #%111,D2
000013C8  3C42                     399          MOVE.W  D2,A6
000013CA                           400          
000013CA  B43C 0001                401          CMP.B   #%001,D2
000013CE  6700 00E8                402          BEQ     DMOVEA
000013D2                           403  MOVECONT
000013D2                           404  *printing size then first addressing moode, then comma
000013D2                           405  *size is different for move
000013D2  103C 000E                406  MSIZEN  MOVE.B  #14,D0
000013D6  BA3C 0001                407          CMP.B   #%01,D5
000013DA  6700 001E                408          BEQ     MSIZEBN
000013DE  BA3C 0003                409          CMP.B   #%11,D5
000013E2  6700 0028                410          BEQ     MSIZEWN
000013E6  BA3C 0002                411          CMP.B   #%10,D5
000013EA  6700 0032                412          BEQ     MSIZELN
000013EE  BA3C 0003                413          CMP.B   #%11,D5
000013F2  6700 006E                414          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000013F6  6000 0E18                415          BRA     DSERR
000013FA                           416          
000013FA  43F9 000024BB            417  MSIZEBN LEA     MODEB,A1
00001400  4E4F                     418          TRAP    #15
00001402  43F9 00002463            419          LEA     SM1,A1
00001408  6000 006C                420          BRA     MSDONE
0000140C                           421  
0000140C  43F9 000024BE            422  MSIZEWN LEA     MODEW,A1
00001412  4E4F                     423          TRAP    #15
00001414  43F9 00002463            424          LEA     SM1,A1
0000141A  6000 005A                425          BRA     MSDONE
0000141E                           426  
0000141E  43F9 000024C1            427  MSIZELN LEA     MODEL,A1
00001424  4E4F                     428          TRAP    #15
00001426  43F9 00002463            429          LEA     SM1,A1
0000142C  6000 0048                430          BRA     MSDONE
00001430                           431  
00001430  103C 000E                432  MSIZE   MOVE.B  #14,D0
00001434  BA3C 0001                433          CMP.B   #%01,D5
00001438  6700 001E                434          BEQ     MSIZEB
0000143C  BA3C 0003                435          CMP.B   #%11,D5
00001440  6700 0020                436          BEQ     MSIZEW
00001444  BA3C 0002                437          CMP.B   #%10,D5
00001448  6700 0022                438          BEQ     MSIZEL
0000144C  BA3C 0003                439          CMP.B   #%11,D5
00001450  6700 0010                440          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001454  6000 0DBA                441          BRA     DSERR
00001458                           442          
00001458  43F9 000024BB            443  MSIZEB  LEA     MODEB,A1
0000145E  6000 0016                444          BRA     MSDONE
00001462                           445  
00001462  43F9 000024BE            446  MSIZEW  LEA     MODEW,A1
00001468  6000 000C                447          BRA     MSDONE
0000146C                           448  
0000146C  43F9 000024C1            449  MSIZEL  LEA     MODEL,A1
00001472  6000 0002                450          BRA     MSDONE
00001476                           451  
00001476  4E4F                     452  MSDONE  TRAP    #15
00001478                           453  
00001478  43F9 00002468            454          LEA     SM3,A1
0000147E  4E4F                     455          TRAP    #15
00001480                           456          
00001480                           457          *source mode to d3
00001480  E75C                     458          ROL.W   #3,D4
00001482  1604                     459          MOVE.B  D4,D3
00001484  C63C 0007                460          AND.B   #%111,D3
00001488                           461          
00001488                           462          *source reg to d6
00001488  E75C                     463          ROL.W   #3,D4
0000148A  1C04                     464          MOVE.B  D4,D6
0000148C  CC3C 0007                465          AND.B   #%111,D6
00001490                           466          
00001490  48A7 2000                467          MOVEM   D2,-(SP)
00001494  4EB8 121C                468          JSR     ADDRMODEALL
00001498  4C9F 0004                469          MOVEM   (SP)+,D2
0000149C  B67C 0001                470          CMP     #%001,D3
000014A0  6700 002C                471          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014A4  43F9 000024DA            472  MSDONE2 LEA     COMMA,A1
000014AA  4E4F                     473          TRAP    #15
000014AC  1C07                     474          MOVE.B  D7,D6
000014AE  1602                     475          MOVE.B  D2,D3
000014B0  4EB8 121C                476          JSR     ADDRMODEALL
000014B4  6000 0D86                477          BRA     DSEND
000014B8                           478  
000014B8  4E71                     479  DMOVEA  NOP
000014BA  BA7C 0001                480          CMP     #%01,D5     *if size is byte, err
000014BE  6700 0D50                481          BEQ     DSERR
000014C2  43F9 000024C4            482          LEA     VALA,A1        *else, print A and return
000014C8  4E4F                     483          TRAP    #15
000014CA  6000 FF64                484          BRA     MSIZE
000014CE                           485  
000014CE                           486  MOVEERRCHECK
000014CE  BA7C 0001                487          CMP     #%01,D5
000014D2  6700 0D3C                488          BEQ     DSERR
000014D6  60CC                     489          BRA     MSDONE2
000014D8                           490  
000014D8                           491          
000014D8                           492  
000014D8                           493  *DS Tier 2 ----------------------------------------------------------------------------------------
000014D8                           494  
000014D8                           495  DS01                        *DS01: Tier 2 binary search for 01 side
000014D8  E34C                     496          LSL.W   #1,D4
000014DA  6500 0024                497          BCS     DS011
000014DE  6000 0016                498          BRA     DS010
000014E2                           499  
000014E2                           500  DS10                        *DS10: Tier 2 binary search for 10 side
000014E2  E34C                     501          LSL.W   #1,D4
000014E4  6500 002E                502          BCS     DS101
000014E8  6000 0020                503          BRA     DS100
000014EC                           504  
000014EC                           505  DS11                        *DS11: Tier 2 binary search for 11 side
000014EC  E34C                     506          LSL.W   #1,D4
000014EE  6500 0038                507          BCS     DS111
000014F2  6000 002A                508          BRA     DS110
000014F6                           509  
000014F6                           510  *DS Tier 3 ----------------------------------------------------------------------------------------
000014F6                           511  
000014F6                           512  DS010                       *DS010: Tier 3 binary search for 010 side
000014F6  E34C                     513          LSL.W   #1,D4
000014F8  6500 0562                514          BCS     DS0101
000014FC  6000 0034                515          BRA     DS0100
00001500                           516  
00001500                           517  DS011                       *DS011: Tier 3 binary search for 011 side
00001500  E34C                     518          LSL.W   #1,D4
00001502  6500 0746                519          BCS     DS0111
00001506  6000 05CE                520          BRA     DS0110
0000150A                           521  
0000150A                           522  DS100                       *DS100: Tier 3 binary search for 100 side
0000150A  E34C                     523          LSL.W   #1,D4
0000150C  6500 0882                524          BCS     DS1001
00001510  6000 07A2                525          BRA     DS1000
00001514                           526  
00001514                           527  DS101                       *DS101: Tier 3 binary search for 101 side
00001514  E34C                     528          LSL.W   #1,D4
00001516  6500 0910                529          BCS     DS1011
0000151A  6000 0906                530          BRA     DS1010
0000151E                           531  
0000151E                           532  DS110                       *DS110: Tier 3 binary search for 110 side
0000151E  E34C                     533          LSL.W   #1,D4
00001520  6500 09EA                534          BCS     DS1101
00001524  6000 0908                535          BRA     DAND
00001528                           536  
00001528                           537  DS111                       *DS111: Tier 3 binary search for 111 side
00001528  E34C                     538          LSL.W   #1,D4
0000152A  6500 0CDE                539          BCS     DS1111
0000152E  6000 0AC4                540          BRA     DS1110
00001532                           541  
00001532                           542  *DS Tier 4 ----------------------------------------------------------------------------------------
00001532                           543  
00001532                           544  DS0100                      *DS0100: Processing for 0100 prefix
00001532  0C44 E710                545          CMPI.W  #%1110011100010000,D4
00001536  6700 0042                546          BEQ     DNOP
0000153A  0C44 E750                547          CMPI.W  #%1110011101010000,D4
0000153E  6700 022C                548          BEQ     DRTS
00001542                           549          
00001542  3404                     550          MOVE.W  D4,D2
00001544  0242 1C00                551          ANDI.W  #%0001110000000000,D2
00001548  0C42 1C00                552          CMPI.W  #%0001110000000000,D2
0000154C  6700 022A                553          BEQ     DLEA
00001550                           554          
00001550  3404                     555          MOVE.W  D4,D2
00001552  0242 B800                556          ANDI.W  #%1011100000000000,D2
00001556  0C42 8800                557          CMPI.W  #%1000100000000000,D2
0000155A  6700 0332                558          BEQ     DMOVEM
0000155E                           559          
0000155E  E95C                     560          ROL.W   #4,D4
00001560  1404                     561          MOVE.B  D4,D2
00001562  0202 000F                562          ANDI.B  #%1111,D2
00001566                           563          
00001566  B43C 000E                564          CMP.B   #%1110,D2
0000156A  6700 014A                565          BEQ     DJSR
0000156E                           566          
0000156E  B43C 0006                567          CMP.B   #%0110,D2
00001572  6700 0012                568          BEQ     DNOT
00001576                           569          
00001576  6000 0CA8                570          BRA     DSERRINS
0000157A                           571  
0000157A  43F9 000024E2            572  DNOP    LEA     NOPM,A1
00001580  4E4F                     573          TRAP    #15
00001582  6000 0CB8                574          BRA     DSEND
00001586                           575          
00001586  E55C                     576  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
00001588  1A04                     577          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000158A  0205 0003                578          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
0000158E                           579  
0000158E  BA3C 0000                580          CMP.B   #%00,D5         ; compare with byte size
00001592  6700 0016                581          BEQ     DNOTB
00001596  BA3C 0001                582          CMP.B   #%01,D5         ; compare with word size
0000159A  6700 0022                583          BEQ     DNOTW
0000159E  BA3C 0002                584          CMP.B   #%10,D5         ; compare with long size
000015A2  6700 002E                585          BEQ     DNOTL
000015A6                           586          
000015A6  6000 0C94                587          BRA     DSEND           ; branch to DSEND in case of invalid code
000015AA                           588  
000015AA  43F9 000024FE            589  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015B0  4E4F                     590          TRAP    #15             ; print NOTM string
000015B2  43F9 000024BB            591          LEA     MODEB,A1        ; load effective address of MODEB string
000015B8  4E4F                     592          TRAP    #15             ; print MODEB string
000015BA  6000 002A                593          BRA     DNOTA           ; branch to addressing mode parsing
000015BE                           594  
000015BE  43F9 000024FE            595  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
000015C4  4E4F                     596          TRAP    #15             ; print NOTM string
000015C6  43F9 000024BE            597          LEA     MODEW,A1        ; load effective address of MODEW string
000015CC  4E4F                     598          TRAP    #15             ; print MODEW string
000015CE  6000 0016                599          BRA     DNOTA           ; branch to addressing mode parsing
000015D2                           600  
000015D2  43F9 000024FE            601  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
000015D8  4E4F                     602          TRAP    #15             ; print NOTM string
000015DA  43F9 000024C1            603          LEA     MODEL,A1        ; load effective address of MODEL string
000015E0  4E4F                     604          TRAP    #15             ; print MODEL string
000015E2  6000 0002                605          BRA     DNOTA           ; branch to addressing mode parsing
000015E6                           606  
000015E6  ED5C                     607  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
000015E8  1204                     608          MOVE.B  D4,D1           ; move the byte in D4 to D1
000015EA  0201 003F                609          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
000015EE                           610  
000015EE                           611          ; Now process addressing mode and register based on the value in D1
000015EE                           612  
000015EE  1A01                     613          MOVE.B  D1,D5           ; Move the byte in D1 to D5
000015F0  0205 0007                614          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000015F4  6700 0026                615          BEQ     DREG            ; If it is direct register mode
000015F8  BA3C 0002                616          CMP.B   #%010,D5        ; Compare with An
000015FC  6700 0036                617          BEQ     ADREG
00001600  BA3C 0003                618          CMP.B   #%011,D5        ; Compare with (An)+
00001604  6700 0046                619          BEQ     ADREGP
00001608  BA3C 0004                620          CMP.B   #%100,D5        ; Compare with -(An)
0000160C  6700 005E                621          BEQ     MADREG
00001610  BA3C 0007                622          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001614  6700 007E                623          BEQ     EXT
00001618                           624              
00001618  6000 0C22                625          BRA     DSEND
0000161C                           626  
0000161C  1C01                     627  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000161E  0206 0007                628          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
00001622  DC39 000024C6            629          ADD.B   VALD,D6         ; Convert register number to ASCII
00001628  43F9 000024C6            630          LEA     VALD,A1         ; Load effective address of Dn
0000162E  4E4F                     631          TRAP    #15             ; Print Dn
00001630  6000 0C0A                632          BRA     DSEND
00001634                           633  
00001634  1C01                     634  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001636  0206 0007                635          ANDI.B  #%111,D6
0000163A  DC39 000024C4            636          ADD.B   VALA,D6
00001640  43F9 000024C4            637          LEA     VALA,A1
00001646  4E4F                     638          TRAP    #15
00001648  6000 0BF2                639          BRA     DSEND
0000164C                           640  
0000164C  1C01                     641  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
0000164E  0206 0007                642          ANDI.B  #%111,D6
00001652  DC39 000024C4            643          ADD.B   VALA,D6
00001658  43F9 000024C4            644          LEA     VALA,A1
0000165E  4E4F                     645          TRAP    #15
00001660  43F9 000024D7            646          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001666  4E4F                     647          TRAP    #15             ; Print )+
00001668  6000 0BD2                648          BRA     DSEND
0000166C                           649  
0000166C  1C01                     650  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
0000166E  0206 0007                651          ANDI.B  #%111,D6
00001672  DC39 000024C4            652          ADD.B   VALA,D6
00001678  43F9 000024D2            653          LEA     OPENDPTR,A1     ; Load effective address of -(
0000167E  4E4F                     654          TRAP    #15             ; Print -(
00001680  43F9 000024C4            655          LEA     VALA,A1
00001686  4E4F                     656          TRAP    #15
00001688  43F9 000024D5            657          LEA     CLOSEPTR,A1     ; Load effective address of )
0000168E  4E4F                     658          TRAP    #15             ; Print )
00001690  6000 0BAA                659          BRA     DSEND
00001694                           660  
00001694  1C01                     661  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001696  0206 0001                662          ANDI.B  #%1,D6
0000169A  6700 000E                663          BEQ     EXTW
0000169E  43F9 000024C8            664          LEA     VALN,A1         ; Load effective address of #
000016A4  4E4F                     665          TRAP    #15             ; Print #
000016A6  6000 0B94                666          BRA     DSEND
000016AA                           667  
000016AA  43F9 000024CA            668  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016B0  4E4F                     669          TRAP    #15             ; Print 0
000016B2  6000 0B88                670          BRA     DSEND
000016B6                           671  
000016B6                           672          
000016B6  E55C                     673  DJSR    ROL.W   #2,D4
000016B8  1404                     674          MOVE.B  D4,D2
000016BA  0202 0007                675          ANDI.B  #%111,D2
000016BE  0C02 0002                676          CMPI.B  #%10,D2
000016C2  6600 0B4C                677          BNE     DSERR
000016C6                           678          
000016C6  43F9 00002523            679          LEA     JSRM,A1
000016CC  4E4F                     680          TRAP    #15
000016CE                           681          
000016CE  43F9 0000247E            682          LEA     SM7,A1
000016D4  4E4F                     683          TRAP    #15
000016D6                           684  
000016D6  E75C                     685          ROL.W   #3,D4       * [D2] address mode
000016D8  1404                     686          MOVE.B  D4,D2
000016DA  0202 0007                687          ANDI.B  #%111,D2
000016DE                           688          
000016DE  E75C                     689          ROL.W   #3,D4       * [D1] address register
000016E0  1204                     690          MOVE.B  D4,D1
000016E2  0201 0007                691          ANDI.B  #%111,D1
000016E6                           692          
000016E6  0C02 0002                693          CMPI.B  #%010,D2
000016EA  6700 001E                694          BEQ     DJSR_REG
000016EE                           695          
000016EE  0C02 0007                696          CMPI.B  #%111,D2
000016F2  6600 0B1C                697          BNE     DSERR
000016F6                           698          
000016F6  0C01 0000                699          CMPI.B  #%000,D1
000016FA  6700 0034                700          BEQ     DJSR_CUSW
000016FE                           701          
000016FE  0C01 0001                702          CMPI.B  #%001,D1
00001702  6700 004A                703          BEQ     DJSR_CUSL
00001706                           704          
00001706  6000 0B34                705          BRA     DSEND
0000170A                           706          
0000170A                           707          
0000170A                           708          
0000170A                           709  DJSR_REG        
0000170A  43F9 000024D0            710          LEA     OPENPTR,A1
00001710  4E4F                     711          TRAP    #15
00001712                           712          
00001712  43F9 000024C4            713          LEA     VALA,A1
00001718  4E4F                     714          TRAP    #15
0000171A                           715          
0000171A  103C 0003                716          MOVE.B  #3,D0
0000171E  4E4F                     717          TRAP    #15
00001720  103C 000E                718          MOVE.B  #14,D0
00001724                           719          
00001724  43F9 000024D5            720          LEA     CLOSEPTR,A1
0000172A  4E4F                     721          TRAP    #15
0000172C                           722          
0000172C  6000 0B0E                723          BRA     DSEND
00001730                           724  
00001730                           725          
00001730                           726  DJSR_CUSW
00001730  43F9 000024DC            727          LEA     DOLLAR,A1
00001736  4E4F                     728          TRAP    #15
00001738  341A                     729          MOVE.W  (A2)+,D2
0000173A  48E7 0400                730          MOVEM.L D5,-(SP)
0000173E  1A3C 0030                731          MOVE.B  #48,D5
00001742  4EB8 118A                732          JSR     HEXOUT
00001746  4CDF 0020                733          MOVEM.L (SP)+,D5
0000174A  6000 0AF0                734          BRA     DSEND
0000174E                           735  
0000174E                           736  DJSR_CUSL
0000174E  43F9 000024DC            737          LEA     DOLLAR,A1
00001754  4E4F                     738          TRAP    #15
00001756  241A                     739          MOVE.L  (A2)+,D2
00001758  48E7 0400                740          MOVEM.L D5,-(SP)
0000175C  1A3C 0030                741          MOVE.B  #48,D5
00001760  4EB8 118A                742          JSR     HEXOUT
00001764  4CDF 0020                743          MOVEM.L (SP)+,D5
00001768  6000 0AD2                744          BRA     DSEND
0000176C                           745          
0000176C  43F9 00002527            746  DRTS    LEA     RTSM,A1
00001772  4E4F                     747          TRAP    #15
00001774  6000 0AC6                748          BRA     DSEND
00001778                           749          
00001778                           750          
00001778                           751  DLEA    *printing
00001778  43F9 000024F3            752          LEA     LEAM,A1
0000177E  4E4F                     753          TRAP    #15
00001780  43F9 0000247E            754          LEA     SM7,A1
00001786  4E4F                     755          TRAP    #15
00001788                           756          
00001788                           757          *getting destination register
00001788  E75C                     758          ROL.W   #3,D4
0000178A  1404                     759          MOVE.B  D4,D2
0000178C  0202 0007                760          ANDI.B  #%111,D2
00001790                           761          
00001790                           762          *shifting out 111
00001790  E75C                     763          ROL.W   #3,D4
00001792                           764          
00001792                           765          *getting ea mode
00001792  E75C                     766          ROL.W   #3,D4
00001794  1604                     767          MOVE.B  D4,D3
00001796  0203 0007                768          ANDI.B  #%111,D3
0000179A                           769          
0000179A  B63C 0002                770          CMP.B   #%010,D3
0000179E  6700 000E                771          BEQ     DLEAP
000017A2                           772          
000017A2  B63C 0007                773          CMP.B   #%111,D3
000017A6  6700 0006                774          BEQ     DLEAP
000017AA                           775          
000017AA  6000 0A84                776          BRA     DSERREA
000017AE                           777          
000017AE                           778          *getting ea reg
000017AE  E75C                     779  DLEAP   ROL.W   #3,D4
000017B0  1C04                     780          MOVE.B  D4,D6
000017B2  0206 0007                781          ANDI.B  #%111,D6
000017B6                           782          
000017B6                           783          *printing
000017B6  48E7 2000                784          MOVEM.L D2,-(SP)
000017BA  4EB8 121C                785          JSR     ADDRMODEALL
000017BE  4CDF 0004                786          MOVEM.L (SP)+,D2
000017C2                           787          
000017C2  43F9 000024DA            788          LEA     COMMA,A1
000017C8  4E4F                     789          TRAP    #15
000017CA  43F9 000024C4            790          LEA     VALA,A1
000017D0  4E4F                     791          TRAP    #15
000017D2  103C 0003                792          MOVE.B  #3,D0
000017D6  1202                     793          MOVE.B  D2,D1
000017D8  4E4F                     794          TRAP    #15
000017DA  103C 000E                795          MOVE.B  #14,D0
000017DE                           796          
000017DE  6000 0A5C                797          BRA DSEND
000017E2                           798          
000017E2                           799  JSR010
000017E2  B63C 0002                800          CMP.B   #%010,D3
000017E6  6600 002A                801          BNE     JSR111
000017EA  43F9 000024D0            802          LEA     OPENPTR,A1
000017F0  4E4F                     803          TRAP    #15
000017F2  43F9 000024C4            804          LEA     VALA,A1
000017F8  4E4F                     805          TRAP    #15
000017FA  103C 0003                806          MOVE.B  #3,D0
000017FE  1206                     807          MOVE.B  D6,D1
00001800  4E4F                     808          TRAP    #15
00001802  103C 000E                809          MOVE.B  #14,D0
00001806  43F9 000024D5            810          LEA     CLOSEPTR,A1
0000180C  4E4F                     811          TRAP    #15
0000180E  6000 005E                812          BRA     JSRPRINT2
00001812                           813  JSR111
00001812  B63C 0007                814          CMP.B   #%111,D3
00001816  6600 09F8                815          BNE     DSERR
0000181A  BC3C 0000                816          CMP.B   #%000,D6
0000181E  6600 0024                817          BNE     JSR111001
00001822  43F9 000024DC            818          LEA     DOLLAR,A1
00001828  4E4F                     819          TRAP    #15
0000182A  341A                     820          MOVE.W  (A2)+,D2
0000182C  48E7 0400                821          MOVEM.L D5,-(SP)    
00001830  1A3C 0030                822          MOVE.B  #48,D5
00001834  4EB8 118A                823          JSR     HEXOUT
00001838  4CDF 0020                824          MOVEM.L (SP)+,D5
0000183C  103C 000E                825          MOVE.B  #14,D0
00001840  6000 002C                826          BRA     JSRPRINT2
00001844                           827          
00001844                           828  JSR111001
00001844  BC3C 0001                829          CMP.B   #%001,D6
00001848  6600 09C6                830          BNE     DSERR
0000184C  43F9 000024DC            831          LEA     DOLLAR,A1
00001852  4E4F                     832          TRAP    #15
00001854  241A                     833          MOVE.L  (A2)+,D2
00001856  48E7 0400                834          MOVEM.L D5,-(SP)
0000185A  1A3C 0030                835          MOVE.B  #48,D5
0000185E  4EB8 118A                836          JSR     HEXOUT
00001862  4CDF 0020                837          MOVEM.L (SP)+,D5
00001866  103C 000E                838          MOVE.B  #14,D0
0000186A  6000 0002                839          BRA     JSRPRINT2
0000186E                           840          
0000186E                           841  JSRPRINT2
0000186E  43F9 000024DA            842          LEA     COMMA,A1
00001874  4E4F                     843          TRAP    #15
00001876  43F9 000024C4            844          LEA     VALA,A1
0000187C  4E4F                     845          TRAP    #15
0000187E  103C 0003                846          MOVE.B  #3,D0
00001882  3207                     847          MOVE.W  D7,D1
00001884  4E4F                     848          TRAP    #15
00001886  103C 000E                849          MOVE.B  #14,D0
0000188A                           850          
0000188A  6000 09B0                851          BRA     DSEND
0000188E                           852          
0000188E                           853          
0000188E                           854  DMOVEM
0000188E                           855  *printing movem
0000188E  43F9 000024E6            856          LEA     MOVEM,A1
00001894  4E4F                     857          TRAP    #15
00001896  43F9 000024CE            858          LEA     VALM,A1
0000189C  4E4F                     859          TRAP    #15
0000189E                           860          
0000189E                           861  *parsing initial bits
0000189E  E55C                     862          ROL.W   #2,D4
000018A0  1E04                     863          MOVE.B  D4,D7
000018A2  0207 0001                864          ANDI.B  #%1,D7      *getting dr field
000018A6                           865          
000018A6  E95C                     866          ROL.W   #4,D4
000018A8  1A04                     867          MOVE.B  D4,D5
000018AA  0205 0001                868          ANDI.B  #1,D5       *getting size field
000018AE                           869          
000018AE                           870          *printing size
000018AE  BA7C 0000                871          CMP     #0,D5
000018B2  6600 000E                872          BNE     MOVEML
000018B6  43F9 000024BE            873          LEA     MODEW,A1
000018BC  4E4F                     874          TRAP    #15
000018BE  6000 000A                875          BRA     MOVEMEA
000018C2                           876  MOVEML        
000018C2  43F9 000024C1            877          LEA     MODEL,A1
000018C8  4E4F                     878          TRAP    #15
000018CA                           879          
000018CA                           880  MOVEMEA   
000018CA  43F9 00002468            881          LEA     SM3,A1
000018D0  4E4F                     882          TRAP    #15
000018D2                           883          
000018D2  E75C                     884          ROL.W   #3,D4       *mode bits
000018D4  1604                     885          MOVE.B  D4,D3
000018D6  0203 0007                886          ANDI.B  #%111,D3
000018DA  E75C                     887          ROL.W   #3,D4       *register bits
000018DC  1C04                     888          MOVE.B  D4,D6
000018DE  0206 0007                889          ANDI.B  #%111,D6
000018E2                           890          
000018E2  341A                     891          MOVE.W  (A2)+,D2
000018E4                           892          
000018E4  BE3C 0001                893          CMP.B   #1,D7
000018E8  6600 0016                894          BNE     MOVEMEB
000018EC                           895          
000018EC  48E7 2000                896          MOVEM.L D2,-(SP)
000018F0  4EB8 121C                897          JSR     ADDRMODEALL
000018F4  4CDF 0004                898          MOVEM.L (SP)+,D2
000018F8                           899          
000018F8  43F9 000024DA            900          LEA     COMMA,A1
000018FE  4E4F                     901          TRAP    #15
00001900                           902          
00001900                           903  MOVEMEB 
00001900                           904          
00001900  48E7 0100                905          MOVEM.L D7,-(SP)
00001904                           906          
00001904  B63C 0004                907          CMP.B   #%100,D3
00001908  6700 000E                908          BEQ     MOVEMEB1
0000190C                           909          
0000190C  3E02                     910          MOVE.W  D2,D7
0000190E  0247 FF00                911          ANDI.W  #$FF00,D7
00001912  E04F                     912          LSR.W   #8,D7
00001914  6000 0008                913          BRA     MOVEMEB2
00001918                           914          
00001918                           915  MOVEMEB1 
00001918  3E02                     916          MOVE.W  D2,D7
0000191A  0247 00FF                917          ANDI.W  #$FF,D7
0000191E                           918          
0000191E                           919  MOVEMEB2
0000191E                           920  
0000191E  4EB9 00001A16            921          JSR     MOVEMLOOP
00001924  4CDF 0080                922          MOVEM.L (SP)+,D7
00001928  103C 0037                923          MOVE.B  #55,D0
0000192C  B83C 0008                924          CMP.B   #8,D4
00001930  6C00 0040                925          BGE     MOVEM3
00001934  103C 000E                926          MOVE.B  #14,D0
00001938                           927          
00001938  43F9 000024C4            928  MOVEM2  LEA     VALA,A1
0000193E  4E4F                     929          TRAP    #15
00001940                           930          
00001940  103C 0003                931          MOVE.B  #3,D0
00001944  1204                     932          MOVE.B  D4,D1
00001946  4E4F                     933          TRAP    #15
00001948  103C 000E                934          MOVE.B  #14,D0
0000194C                           935          
0000194C  BA3C 0001                936          CMP.B   #1,D5
00001950  6700 0020                937          BEQ     MOVEM3
00001954                           938          
00001954  43F9 000024E0            939          LEA     DASH,A1
0000195A  4E4F                     940          TRAP    #15
0000195C  D205                     941          ADD.B   D5,D1
0000195E  5301                     942          SUBQ.B  #1,D1
00001960                           943          
00001960  43F9 000024C4            944          LEA     VALA,A1
00001966  4E4F                     945          TRAP    #15
00001968  103C 0003                946          MOVE.B  #3,D0
0000196C  4E4F                     947          TRAP    #15
0000196E  103C 000E                948          MOVE.B  #14,D0
00001972                           949          
00001972  48E7 0100                950  MOVEM3  MOVEM.L D7,-(SP)
00001976  3E02                     951          MOVE.W  D2,D7
00001978                           952          
00001978  B63C 0004                953          CMP.B   #%100,D3
0000197C  6700 000A                954          BEQ     MOVEM31
00001980                           955          
00001980  0247 00FF                956          ANDI.W  #$FF,D7
00001984  6000 0008                957          BRA     MOVEM32
00001988                           958          
00001988                           959  MOVEM31 
00001988  0247 FF00                960          ANDI.W  #$FF00,D7
0000198C  E04F                     961          LSR.W   #8,D7
0000198E                           962  
0000198E  4EB9 00001A16            963  MOVEM32 JSR     MOVEMLOOP
00001994  4CDF 0080                964          MOVEM.L (SP)+,D7
00001998                           965          
00001998  B03C 0037                966          CMP.B   #55,D0
0000199C  6700 0016                967          BEQ     MOVEM4
000019A0                           968          
000019A0  B83C 0008                969          CMP.B   #8,D4
000019A4  6C00 0054                970          BGE     MOVEM5
000019A8                           971          
000019A8  103C 000E                972          MOVE.B  #14,D0
000019AC  43F9 000024DE            973          LEA     SLASH,A1
000019B2  4E4F                     974          TRAP    #15
000019B4                           975  
000019B4  103C 000E                976  MOVEM4  MOVE.B  #14,D0
000019B8  B83C 0008                977          CMP.B   #8,D4
000019BC  6C00 003C                978          BGE     MOVEM5
000019C0                           979          
000019C0  43F9 000024C6            980          LEA     VALD,A1
000019C6  4E4F                     981          TRAP    #15
000019C8                           982          
000019C8  103C 0003                983          MOVE.B  #3,D0
000019CC  1204                     984          MOVE.B  D4,D1
000019CE  4E4F                     985          TRAP    #15
000019D0  103C 000E                986          MOVE.B  #14,D0
000019D4                           987          
000019D4  BA3C 0001                988          CMP.B   #1,D5
000019D8  6700 0020                989          BEQ     MOVEM5
000019DC                           990          
000019DC  43F9 000024E0            991          LEA     DASH,A1
000019E2  4E4F                     992          TRAP    #15
000019E4  D205                     993          ADD.B   D5,D1
000019E6  5301                     994          SUBQ.B  #1,D1
000019E8                           995          
000019E8  43F9 000024C6            996          LEA     VALD,A1
000019EE  4E4F                     997          TRAP    #15
000019F0  103C 0003                998          MOVE.B  #3,D0
000019F4  4E4F                     999          TRAP    #15
000019F6  103C 000E               1000          MOVE.B  #14,D0
000019FA                          1001          
000019FA                          1002          
000019FA                          1003  
000019FA  103C 000E               1004  MOVEM5  MOVE.B  #14,D0
000019FE                          1005          
000019FE  BE3C 0001               1006          CMP.B   #1,D7
00001A02  6700 0838               1007          BEQ     DSEND
00001A06                          1008          
00001A06  43F9 000024DA           1009          LEA     COMMA,A1
00001A0C  4E4F                    1010          TRAP    #15
00001A0E                          1011          
00001A0E  4EB8 121C               1012          JSR     ADDRMODEALL
00001A12                          1013          
00001A12  6000 0828               1014          BRA     DSEND
00001A16                          1015  
00001A16                          1016  MOVEMLOOP
00001A16  1A3C 0000               1017          MOVE.B  #0,D5
00001A1A  183C 0000               1018          MOVE.B  #0,D4
00001A1E                          1019          
00001A1E                          1020  MOVEMSTEP
00001A1E  B63C 0004               1021          CMP.B   #%100,D3
00001A22  6700 0014               1022          BEQ     MOVEMSHIFTL
00001A26  6000 0018               1023          BRA     MOVEMSHIFTR
00001A2A                          1024  MOVEMSTEP1
00001A2A  0C05 0000               1025          CMPI.B  #0,D5
00001A2E  6E00 0026               1026          BGT     MOVEMLOOPDONE
00001A32  5204                    1027          ADDQ.B  #1,D4
00001A34  6000 0012               1028          BRA     MOVEMSTEP2
00001A38                          1029  
00001A38                          1030  MOVEMSHIFTL
00001A38  E30F                    1031          LSL.B   #1,D7
00001A3A  6500 0016               1032          BCS     MOVEMLOOPINC
00001A3E  60EA                    1033          BRA     MOVEMSTEP1
00001A40                          1034  
00001A40                          1035  MOVEMSHIFTR
00001A40  E20F                    1036          LSR.B   #1,D7
00001A42  6500 000E               1037          BCS     MOVEMLOOPINC
00001A46  60E2                    1038          BRA     MOVEMSTEP1
00001A48                          1039  
00001A48                          1040  MOVEMSTEP2
00001A48  B83C 0008               1041          CMP.B   #8,D4
00001A4C  6DD0                    1042          BLT     MOVEMSTEP
00001A4E  6000 0006               1043          BRA     MOVEMLOOPDONE
00001A52                          1044  
00001A52                          1045  MOVEMLOOPINC
00001A52  5205                    1046          ADDQ.B  #1,D5
00001A54  60F2                    1047          BRA     MOVEMSTEP2
00001A56                          1048  
00001A56                          1049  MOVEMLOOPDONE
00001A56  4E75                    1050          RTS
00001A58                          1051          
00001A58                          1052          
00001A58                          1053  MOVEMLOOPSINGLEAR
00001A58                          1054          
00001A58                          1055          
00001A58  6000 07E2               1056          BRA     DSEND
00001A5C                          1057  
00001A5C                          1058  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A5C                          1059  
00001A5C  4E71                    1060  DS0101  NOP
00001A5E                          1061          
00001A5E  4E71                    1062  DADDQ   NOP
00001A60  43F9 000024EB           1063          LEA     ADDM,A1
00001A66  4E4F                    1064          TRAP    #15
00001A68  43F9 000024CC           1065          LEA     VALQ,A1
00001A6E  4E4F                    1066          TRAP    #15
00001A70                          1067          
00001A70                          1068          *parsing data to d1
00001A70  E75C                    1069          ROL.W   #3,D4
00001A72  1204                    1070          MOVE.B  D4,D1
00001A74  C23C 0007               1071          AND.B   #%111,D1
00001A78                          1072          
00001A78                          1073          *ensuring next bit is 0
00001A78  E35C                    1074          ROL.W   #1,D4
00001A7A  1A04                    1075          MOVE.B  D4,D5
00001A7C  CA3C 0001               1076          AND.B   #%1,D5
00001A80  BA7C 0000               1077          CMP     #0,D5
00001A84  6600 078A               1078          BNE     DSERR
00001A88                          1079          
00001A88                          1080          *parsing and printing size
00001A88  E55C                    1081          ROL.W   #2,D4
00001A8A  1A04                    1082          MOVE.B  D4,D5
00001A8C  CA3C 0003               1083          AND.B   #%11,D5
00001A90  4EB8 11D2               1084          JSR     SIZE
00001A94  43F9 0000246C           1085          LEA     SM4,A1
00001A9A  4E4F                    1086          TRAP    #15
00001A9C                          1087          
00001A9C                          1088          *parsing effective address information
00001A9C                          1089          *mode:
00001A9C  E75C                    1090          ROL.W   #3,D4
00001A9E  1604                    1091          MOVE.B  D4,D3
00001AA0  C63C 0007               1092          AND.B   #%111,D3
00001AA4                          1093          
00001AA4                          1094          *register:
00001AA4  E71C                    1095          ROL.B   #3,D4
00001AA6  1C04                    1096          MOVE.B  D4,D6
00001AA8  CC3C 0007               1097          AND.B   #%111,D6
00001AAC                          1098          
00001AAC                          1099          *printing data
00001AAC  43F9 000024C8           1100          LEA     VALN,A1
00001AB2  4E4F                    1101          TRAP    #15
00001AB4  103C 0003               1102          MOVE.B  #3,D0
00001AB8  4E4F                    1103          TRAP    #15
00001ABA  103C 000E               1104          MOVE.B  #14,D0
00001ABE  43F9 000024DA           1105          LEA     COMMA,A1
00001AC4  4E4F                    1106          TRAP    #15
00001AC6                          1107          
00001AC6  B67C 0004               1108          CMP     #%100,D3
00001ACA  6700 0744               1109          BEQ     DSERR
00001ACE  4EB8 121C               1110          JSR     ADDRMODEALL
00001AD2                          1111          
00001AD2  6000 0768               1112          BRA     DSEND
00001AD6                          1113          
00001AD6                          1114  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AD6                          1115  
00001AD6                          1116  DS0110  
00001AD6  E95C                    1117          ROL.W   #4,D4   *Get next 4 bits
00001AD8  1404                    1118          MOVE.B  D4,D2   *Copy to D2
00001ADA  0202 000F               1119          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001ADE                          1120          
00001ADE  B43C 0000               1121          CMP.B   #%0000,D2   *BRA
00001AE2  6700 001E               1122          BEQ     DBRA
00001AE6                          1123          
00001AE6  B43C 000E               1124          CMP.B   #%1110,D2   *BGT   
00001AEA  6700 00A2               1125          BEQ     DBGT
00001AEE                          1126          
00001AEE  B43C 000F               1127          CMP.B   #%1111,D2   *BLE   
00001AF2  6700 00D6               1128          BEQ     DBLE
00001AF6                          1129          
00001AF6  B43C 0007               1130          CMP.B   #%0111,D2   *BEQ   
00001AFA  6700 010E               1131          BEQ     DBEQ
00001AFE                          1132          
00001AFE  6000 0720               1133          BRA     DSERRINS
00001B02                          1134          
00001B02  43F9 0000252B           1135  DBRA    LEA     BRAM,A1
00001B08  4E4F                    1136          TRAP    #15
00001B0A                          1137          
00001B0A  43F9 0000247E           1138          LEA     SM7,A1
00001B10  4E4F                    1139          TRAP    #15
00001B12                          1140  
00001B12  E15C                    1141          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B14  1204                    1142          MOVE.B  D4,D1
00001B16  0281 00001100           1143          ANDI.L  #$1100,D1
00001B1C                          1144          
00001B1C  0C01 0000               1145          CMPI.B  #%00000000,D1
00001B20  6700 0028               1146          BEQ     DBRA_16BIT      * Word
00001B24                          1147          
00001B24  0C01 00FF               1148          CMPI.B  #%11111111,D1
00001B28  6700 0042               1149          BEQ     DBRA_32BIT      * Long
00001B2C                          1150          
00001B2C                          1151          * 8 Bit Displacement
00001B2C  43F9 000024DC           1152          LEA     DOLLAR,A1
00001B32  4E4F                    1153          TRAP    #15
00001B34                          1154          
00001B34  341A                    1155          MOVE.W  (A2)+,D2
00001B36  D441                    1156          ADD.W   D1,D2
00001B38  5842                    1157          ADD.W   #4,D2   *unsure   
00001B3A  1A3C 0030               1158          MOVE.B  #48,D5
00001B3E  4EB8 118A               1159          JSR     HEXOUT
00001B42  6000 06F8               1160          BRA     DSEND
00001B46                          1161  
00001B46                          1162          *Displacement is put in D1      
00001B46                          1163          
00001B46                          1164          
00001B46  6000 06F4               1165          BRA     DSEND
00001B4A                          1166          
00001B4A                          1167  DBRA_16BIT
00001B4A  43F9 000024DC           1168          LEA     DOLLAR,A1
00001B50  4E4F                    1169          TRAP    #15
00001B52  341A                    1170          MOVE.W  (A2)+,D2
00001B54  D44A                    1171          ADD.W   A2,D2
00001B56  5542                    1172          SUB.W   #2,D2   *unsure
00001B58  48E7 0400               1173          MOVEM.L D5,-(SP)    
00001B5C  1A3C 0030               1174          MOVE.B  #48,D5
00001B60  4EB8 118A               1175          JSR     HEXOUT
00001B64  4CDF 0020               1176          MOVEM.L (SP)+,D5
00001B68  6000 06D2               1177          BRA     DSEND
00001B6C                          1178  
00001B6C                          1179  DBRA_32BIT
00001B6C  43F9 000024DC           1180          LEA     DOLLAR,A1
00001B72  4E4F                    1181          TRAP    #15
00001B74  241A                    1182          MOVE.L  (A2)+,D2
00001B76  D48A                    1183          ADD.L   A2,D2
00001B78  5582                    1184          SUB.L   #2,D2   *unsure
00001B7A  48E7 0400               1185          MOVEM.L D5,-(SP)
00001B7E  1A3C 0030               1186          MOVE.B  #48,D5
00001B82  4EB8 118A               1187          JSR     HEXOUT
00001B86  4CDF 0020               1188          MOVEM.L (SP)+,D5
00001B8A  6000 06B0               1189          BRA     DSEND
00001B8E                          1190          
00001B8E                          1191          
00001B8E                          1192          
00001B8E  43F9 00002517           1193  DBGT    LEA     BGTM,A1
00001B94  4E4F                    1194          TRAP    #15
00001B96                          1195          
00001B96  43F9 0000247E           1196          LEA     SM7,A1
00001B9C  4E4F                    1197          TRAP    #15
00001B9E                          1198          
00001B9E  E15C                    1199          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BA0  1204                    1200          MOVE.B  D4,D1
00001BA2  0241 00FF               1201          ANDI.W  #%0000000011111111,D1
00001BA6                          1202          
00001BA6  0C01 0000               1203          CMPI.B  #%00000000,D1
00001BAA  679E                    1204          BEQ     DBRA_16BIT      * Word
00001BAC                          1205          
00001BAC  0C01 00FF               1206          CMPI.B  #%11111111,D1
00001BB0  67BA                    1207          BEQ     DBRA_32BIT      * Long
00001BB2                          1208          
00001BB2  43F9 000024DC           1209          LEA     DOLLAR,A1
00001BB8  4E4F                    1210          TRAP    #15
00001BBA                          1211      
00001BBA  340A                    1212          MOVE.W  A2,D2
00001BBC  D441                    1213          ADD.W   D1,D2
00001BBE                          1214    
00001BBE  1A3C 0030               1215          MOVE.B  #48,D5
00001BC2  4EB8 118A               1216          JSR     HEXOUT
00001BC6  6000 0674               1217          BRA     DSEND
00001BCA                          1218  
00001BCA  43F9 0000251B           1219  DBLE    LEA     BLEM,A1
00001BD0  4E4F                    1220          TRAP    #15
00001BD2                          1221          
00001BD2  43F9 0000247E           1222          LEA     SM7,A1
00001BD8  4E4F                    1223          TRAP    #15
00001BDA                          1224          
00001BDA  E15C                    1225          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BDC  1204                    1226          MOVE.B  D4,D1
00001BDE  0241 00FF               1227          ANDI.W  #%0000000011111111,D1
00001BE2                          1228          
00001BE2  0C01 0000               1229          CMPI.B  #%00000000,D1
00001BE6  6700 FF62               1230          BEQ     DBRA_16BIT      * Word
00001BEA                          1231          
00001BEA  0C01 00FF               1232          CMPI.B  #%11111111,D1
00001BEE  6700 FF7C               1233          BEQ     DBRA_32BIT      * Long
00001BF2                          1234          
00001BF2  43F9 000024DC           1235          LEA     DOLLAR,A1
00001BF8  4E4F                    1236          TRAP    #15
00001BFA                          1237          
00001BFA  340A                    1238          MOVE.W  A2,D2
00001BFC  D441                    1239          ADD.W   D1,D2
00001BFE                          1240   
00001BFE  1A3C 0030               1241          MOVE.B  #48,D5
00001C02  4EB8 118A               1242          JSR     HEXOUT
00001C06                          1243          
00001C06  6000 0634               1244          BRA     DSEND
00001C0A                          1245  
00001C0A  43F9 0000251F           1246  DBEQ    LEA     BEQM,A1
00001C10  4E4F                    1247          TRAP    #15
00001C12                          1248          
00001C12  43F9 0000247E           1249          LEA     SM7,A1
00001C18  4E4F                    1250          TRAP    #15
00001C1A                          1251          
00001C1A  E15C                    1252          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C1C  1204                    1253          MOVE.B  D4,D1
00001C1E  0241 00FF               1254          ANDI.W  #%0000000011111111,D1
00001C22                          1255          
00001C22  0C01 0000               1256          CMPI.B  #%00000000,D1
00001C26  6700 FF22               1257          BEQ     DBRA_16BIT      * Word
00001C2A                          1258          
00001C2A  0C01 00FF               1259          CMPI.B  #%11111111,D1
00001C2E  6700 FF3C               1260          BEQ     DBRA_32BIT      * Long
00001C32                          1261          
00001C32  43F9 000024DC           1262          LEA     DOLLAR,A1
00001C38  4E4F                    1263          TRAP    #15
00001C3A                          1264  
00001C3A  340A                    1265          MOVE.W  A2,D2
00001C3C  D441                    1266          ADD.W   D1,D2
00001C3E                          1267   
00001C3E  1A3C 0030               1268          MOVE.B  #48,D5
00001C42  4EB8 118A               1269          JSR     HEXOUT
00001C46                          1270          
00001C46  6000 05F4               1271          BRA     DSEND
00001C4A                          1272  
00001C4A                          1273  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C4A                          1274  
00001C4A  4E71                    1275  DS0111  NOP
00001C4C                          1276          
00001C4C  4E71                    1277  DMOVEQ  NOP
00001C4E  43F9 000024E6           1278          LEA     MOVEM,A1
00001C54  4E4F                    1279          TRAP    #15
00001C56  43F9 000024CC           1280          LEA     VALQ,A1
00001C5C  4E4F                    1281          TRAP    #15
00001C5E  43F9 00002471           1282          LEA     SM5,A1
00001C64  4E4F                    1283          TRAP    #15
00001C66                          1284          
00001C66                          1285          *getting register number
00001C66  E75C                    1286          ROL.W   #3,D4
00001C68  1A04                    1287          MOVE.B  D4,D5
00001C6A  CA3C 0007               1288          AND.B   #%111,D5
00001C6E                          1289          
00001C6E                          1290          *throwing error if next digit not 0
00001C6E  E35C                    1291          ROL.W   #1,D4
00001C70  1C04                    1292          MOVE.B  D4,D6
00001C72  CC3C 0001               1293          AND.B   #%1,D6
00001C76  BC3C 0000               1294          CMP.B   #0,D6
00001C7A  6600 0594               1295          BNE     DSERR
00001C7E                          1296          
00001C7E                          1297          *getting data and printing information
00001C7E  E15C                    1298          ROL.W   #8,D4
00001C80  1204                    1299          MOVE.B  D4,D1
00001C82  C23C 00FF               1300          AND.B   #%11111111,D1
00001C86  43F9 000024C8           1301          LEA     VALN,A1
00001C8C  4E4F                    1302          TRAP    #15
00001C8E  103C 0003               1303          MOVE.B  #3,D0
00001C92  4E4F                    1304          TRAP    #15
00001C94  103C 000E               1305          MOVE.B  #14,D0
00001C98  43F9 000024DA           1306          LEA     COMMA,A1
00001C9E  4E4F                    1307          TRAP    #15
00001CA0  43F9 000024C6           1308          LEA     VALD,A1
00001CA6  4E4F                    1309          TRAP    #15
00001CA8  103C 0003               1310          MOVE.B  #3,D0
00001CAC  3205                    1311          MOVE.W  D5,D1
00001CAE  4E4F                    1312          TRAP    #15
00001CB0                          1313          
00001CB0  6000 058A               1314          BRA     DSEND
00001CB4                          1315          
00001CB4                          1316  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001CB4                          1317  
00001CB4  4E71                    1318  DS1000  NOP
00001CB6                          1319          
00001CB6  E75C                    1320  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001CB8  1A04                    1321          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CBA  0205 0007               1322          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CBE  1C05                    1323          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001CC0                          1324  
00001CC0  E75C                    1325          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001CC2  1A04                    1326          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CC4  0205 0007               1327          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CC8  1E05                    1328          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001CCA  BA3C 0000               1329          CMP.B   #%000,D5        ; Compare with byte size
00001CCE  6700 0016               1330          BEQ     DORB
00001CD2  BA3C 0001               1331          CMP.B   #%001,D5        ; Compare with word size
00001CD6  6700 0022               1332          BEQ     DORW
00001CDA  BA3C 0002               1333          CMP.B   #%010,D5        ; Compare with long size
00001CDE  6700 002E               1334          BEQ     DORL
00001CE2                          1335  
00001CE2  6000 0558               1336          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001CE6                          1337  
00001CE6  43F9 000024FB           1338  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001CEC  4E4F                    1339          TRAP    #15             ; Print ORM string
00001CEE  43F9 000024BB           1340          LEA     MODEB,A1        ; Load effective address of MODEB string
00001CF4  4E4F                    1341          TRAP    #15             ; Print MODEB string
00001CF6  6000 002A               1342          BRA     DORA            ; Branch to addressing mode parsing
00001CFA                          1343  
00001CFA  43F9 000024FB           1344  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001D00  4E4F                    1345          TRAP    #15             ; Print ORM string
00001D02  43F9 000024BE           1346          LEA     MODEW,A1        ; Load effective address of MODEW string
00001D08  4E4F                    1347          TRAP    #15             ; Print MODEW string
00001D0A  6000 0016               1348          BRA     DORA            ; Branch to addressing mode parsing
00001D0E                          1349  
00001D0E  43F9 000024FB           1350  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001D14  4E4F                    1351          TRAP    #15             ; Print ORM string
00001D16  43F9 000024C1           1352          LEA     MODEL,A1        ; Load effective address of MODEL string
00001D1C  4E4F                    1353          TRAP    #15             ; Print MODEL string
00001D1E  6000 0002               1354          BRA     DORA            ; Branch to addressing mode parsing
00001D22                          1355  
00001D22  43F9 00002477           1356  DORA    LEA     SM6,A1
00001D28  4E4F                    1357          TRAP    #15
00001D2A  ED5C                    1358          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001D2C  1A04                    1359          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D2E  0205 0038               1360          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001D32  E61D                    1361          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001D34  1605                    1362          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001D36  0204 0007               1363          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001D3A  1C04                    1364          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001D3C                          1365  
00001D3C  BE3C 0004               1366          CMP.B   #%100,D7        ; Compare opmode with '100'
00001D40  6D00 0006               1367          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001D44  6000 002A               1368          BRA     DORAD           ; Else, branch to DORAD
00001D48                          1369  
00001D48  4EB8 121C               1370  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D4C  103C 000E               1371          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001D50  43F9 000024DA           1372          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D56  4E4F                    1373          TRAP    #15             ; Print comma
00001D58  43F9 000024C6           1374          LEA     VALD,A1
00001D5E  4E4F                    1375          TRAP    #15
00001D60  1206                    1376          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D62  103C 0003               1377          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D66  4E4F                    1378          TRAP    #15             ; Print register number
00001D68  103C 000E               1379          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D6C  6000 04CE               1380          BRA     DSEND           ; Branch to DSEND
00001D70                          1381  
00001D70  1206                    1382  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D72  103C 0003               1383          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D76  4E4F                    1384          TRAP    #15             ; Print register number
00001D78  103C 000E               1385          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D7C  43F9 000024DA           1386          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D82  4E4F                    1387          TRAP    #15             ; Print comma
00001D84  4EB8 121C               1388          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D88  103C 000E               1389          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D8C  6000 04AE               1390          BRA     DSEND           ; Branch to DSEND                 
00001D90                          1391  
00001D90                          1392  
00001D90                          1393  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D90                          1394  
00001D90  4E71                    1395  DS1001  NOP
00001D92  4E71                    1396  DSUB    NOP
00001D94                          1397  *print sub
00001D94  43F9 000024EF           1398          LEA     SUBM,A1
00001D9A  4E4F                    1399          TRAP    #15
00001D9C                          1400  
00001D9C                          1401  *parse dn reg: 3 bits
00001D9C                          1402  *number of the data register involved
00001D9C                          1403  *nums 0-7, paired with below
00001D9C  E75C                    1404          ROL.W   #3,D4       *dn reg num in d1
00001D9E  1E04                    1405          MOVE.B  D4,D7
00001DA0  0207 0007               1406          ANDI.B  #%111,D7
00001DA4                          1407          
00001DA4  3C47                    1408          MOVE.W  D7,A6       *temporary for storage
00001DA6                          1409  
00001DA6                          1410  *parse opmode: 3 bits
00001DA6                          1411  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001DA6                          1412  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001DA6                          1413  *invalid: 111, 011
00001DA6                          1414  *parse first digit separately
00001DA6  E35C                    1415          ROL.W   #1,D4       *addressing mode in d2
00001DA8  1E04                    1416          MOVE.B  D4,D7
00001DAA  0207 0001               1417          ANDI.B  #%1,D7
00001DAE                          1418          
00001DAE                          1419  *parsing next two digits of size
00001DAE  E55C                    1420          ROL.W   #2,D4       *size in d5
00001DB0  1A04                    1421          MOVE.B  D4,D5
00001DB2  0205 0003               1422          ANDI.B  #%11,D5
00001DB6  4EB8 11D2               1423          JSR     SIZE
00001DBA  43F9 00002471           1424          LEA     SM5,A1
00001DC0  4E4F                    1425          TRAP    #15
00001DC2                          1426          
00001DC2                          1427  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001DC2  BE3C 0000               1428          CMP.B   #%0,D7       *if 1, then register info printed last
00001DC6  6700 0026               1429          BEQ     DSUBEA      *branch to ea before register
00001DCA                          1430          
00001DCA                          1431  *printing register information
00001DCA                          1432  DSUBPRNTREG
00001DCA  43F9 000024C6           1433          LEA     VALD,A1
00001DD0  4E4F                    1434          TRAP    #15
00001DD2  320E                    1435          MOVE.W  A6,D1       *retrieving a6 register data
00001DD4  103C 0003               1436          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001DD8  4E4F                    1437          TRAP    #15         *printing register number
00001DDA  103C 000E               1438          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001DDE  BE3C 0000               1439          CMP.B   #%0,D7      *if info finished printing
00001DE2  6700 0458               1440          BEQ     DSEND      *branch to end
00001DE6  43F9 000024DA           1441          LEA     COMMA,A1
00001DEC  4E4F                    1442          TRAP    #15
00001DEE                          1443  
00001DEE                          1444          
00001DEE                          1445  * parse ea mode: 3 bits
00001DEE                          1446  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001DEE                          1447  *address reg direct not allowed for .B operations
00001DEE                          1448  *no invalid
00001DEE                          1449  DSUBEA
00001DEE  E75C                    1450          ROL.W   #3,D4       *ea mode
00001DF0  1604                    1451          MOVE.B  D4,D3
00001DF2  0203 0007               1452          ANDI.B  #%111,D3
00001DF6                          1453  
00001DF6                          1454  *parse ea reg: 3 bits
00001DF6                          1455  *no invalid: paired with opmode below (nums 0-7)
00001DF6                          1456  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001DF6  E75C                    1457          ROL.W   #3,D4       *ea mode
00001DF8  1C04                    1458          MOVE.B  D4,D6
00001DFA  0206 0007               1459          ANDI.B  #%111,D6
00001DFE                          1460          
00001DFE  2803                    1461          MOVE.L  D3,D4   *temporarily using D4 
00001E00                          1462          
00001E00                          1463  *comparisons
00001E00  B67C 0004               1464          CMP     #%100,D3
00001E04  6700 040A               1465          BEQ     DSERR
00001E08  4EB8 121C               1466          JSR     ADDRMODEALL
00001E0C  BE3C 0001               1467          CMP.B   #%1,D7      *if info printed
00001E10  6700 042A               1468          BEQ     DSEND       *end
00001E14  43F9 000024DA           1469          LEA     COMMA,A1
00001E1A  4E4F                    1470          TRAP    #15
00001E1C  60AC                    1471          BRA     DSUBPRNTREG *check d6 for size of data
00001E1E                          1472  *then take data from d4 and print (?)
00001E1E                          1473  
00001E1E  6000 041C               1474          BRA     DSEND
00001E22                          1475  
00001E22                          1476  
00001E22                          1477  
00001E22  4E71                    1478  DS1010  NOP
00001E24  6000 03FA               1479          BRA     DSERRINS
00001E28                          1480  
00001E28                          1481          
00001E28                          1482  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E28                          1483  
00001E28  4E71                    1484  DS1011  NOP
00001E2A  6000 03F4               1485          BRA     DSERRINS
00001E2E                          1486          
00001E2E                          1487  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E2E                          1488  
00001E2E                          1489  DAND    
00001E2E  E75C                    1490          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001E30  1A04                    1491          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E32  0205 0007               1492          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001E36  1C05                    1493          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001E38                          1494  
00001E38  E75C                    1495          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001E3A  1A04                    1496          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E3C  0205 0007               1497          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001E40  1E05                    1498          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001E42  BA3C 0000               1499          CMP.B   #%000,D5        ; Compare with byte size
00001E46  6700 0016               1500          BEQ     DANDB
00001E4A  BA3C 0001               1501          CMP.B   #%001,D5        ; Compare with word size
00001E4E  6700 0022               1502          BEQ     DANDW
00001E52  BA3C 0002               1503          CMP.B   #%010,D5        ; Compare with long size
00001E56  6700 002E               1504          BEQ     DANDL
00001E5A                          1505  
00001E5A  6000 03E0               1506          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001E5E                          1507  
00001E5E  43F9 000024F7           1508  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E64  4E4F                    1509          TRAP    #15             ; Print ANDM string
00001E66  43F9 000024BB           1510          LEA     MODEB,A1        ; Load effective address of MODEB string
00001E6C  4E4F                    1511          TRAP    #15             ; Print MODEB string
00001E6E  6000 002A               1512          BRA     DANDA           ; Branch to addressing mode parsing
00001E72                          1513  
00001E72  43F9 000024F7           1514  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E78  4E4F                    1515          TRAP    #15             ; Print ANDM string
00001E7A  43F9 000024BE           1516          LEA     MODEW,A1        ; Load effective address of MODEW string
00001E80  4E4F                    1517          TRAP    #15             ; Print MODEW string
00001E82  6000 0016               1518          BRA     DANDA           ; Branch to addressing mode parsing
00001E86                          1519  
00001E86  43F9 000024F7           1520  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E8C  4E4F                    1521          TRAP    #15             ; Print ANDM string
00001E8E  43F9 000024C1           1522          LEA     MODEL,A1        ; Load effective address of MODEL string
00001E94  4E4F                    1523          TRAP    #15             ; Print MODEL string
00001E96  6000 0002               1524          BRA     DANDA           ; Branch to addressing mode parsing
00001E9A                          1525  
00001E9A  43F9 00002471           1526  DANDA   LEA     SM5,A1
00001EA0  4E4F                    1527          TRAP    #15
00001EA2  ED5C                    1528          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001EA4  1A04                    1529          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001EA6  0205 0038               1530          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001EAA  E61D                    1531          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001EAC  1605                    1532          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001EAE  0204 0007               1533          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001EB2  1C04                    1534          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001EB4                          1535  
00001EB4  BE3C 0004               1536          CMP.B   #%100,D7        ; Compare opmode with '100'
00001EB8  6D00 0006               1537          BLT     DANDAE          ; If opmode < '100', branch to DANDAE
00001EBC  6000 002A               1538          BRA     DANDAD          ; Else, branch to DANDAD
00001EC0                          1539  
00001EC0  4EB8 121C               1540  DANDAE  JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001EC4  103C 000E               1541          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001EC8  43F9 000024DA           1542          LEA     COMMA,A1        ; Load effective address of COMMA string
00001ECE  4E4F                    1543          TRAP    #15             ; Print comma
00001ED0  43F9 000024C6           1544          LEA     VALD,A1
00001ED6  4E4F                    1545          TRAP    #15
00001ED8  1206                    1546          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001EDA  103C 0003               1547          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001EDE  4E4F                    1548          TRAP    #15             ; Print register number
00001EE0  103C 000E               1549          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EE4  6000 0356               1550          BRA     DSEND           ; Branch to DSEND
00001EE8                          1551  
00001EE8  1206                    1552  DANDAD  MOVE.B  D6,D1           ; Move ea num to D1 to print
00001EEA  103C 0003               1553          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001EEE  4E4F                    1554          TRAP    #15             ; Print register number
00001EF0  103C 000E               1555          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EF4  43F9 000024DA           1556          LEA     COMMA,A1        ; Load effective address of COMMA string
00001EFA  4E4F                    1557          TRAP    #15             ; Print comma
00001EFC  4EB8 121C               1558          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001F00  103C 000E               1559          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001F04  6000 0336               1560          BRA     DSEND           ; Branch to DSEND 
00001F08                          1561  
00001F08                          1562  
00001F08  6000 0332               1563          BRA     DSEND       
00001F0C                          1564          
00001F0C                          1565  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F0C                          1566  
00001F0C  4E71                    1567  DS1101  NOP
00001F0E                          1568  
00001F0E  4E71                    1569  DADD    NOP
00001F10  43F9 000024EB           1570          LEA     ADDM,A1
00001F16  4E4F                    1571          TRAP    #15
00001F18                          1572          
00001F18                          1573          *parse dn reg: 3 bits
00001F18                          1574  *number of the data register involved
00001F18                          1575  *nums 0-7, paired with below
00001F18  E75C                    1576          ROL.W   #3,D4       *dn reg num in d7
00001F1A  1E04                    1577          MOVE.B  D4,D7
00001F1C  0207 0007               1578          ANDI.B  #%111,D7
00001F20                          1579          
00001F20  3C47                    1580          MOVE.W  D7,A6
00001F22                          1581  
00001F22                          1582  *parse opmode: 3 bits
00001F22                          1583  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001F22                          1584  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001F22                          1585  *invalid: 111, 011
00001F22                          1586  *parse first digit separately
00001F22  E35C                    1587          ROL.W   #1,D4       *addressing mode in d2
00001F24  1E04                    1588          MOVE.B  D4,D7
00001F26  0207 0001               1589          ANDI.B  #%1,D7
00001F2A                          1590          
00001F2A                          1591  *parsing next two digits of size
00001F2A  E55C                    1592          ROL.W   #2,D4       *size in d5
00001F2C  1A04                    1593          MOVE.B  D4,D5
00001F2E  0205 0003               1594          ANDI.B  #%11,D5
00001F32  BA3C 0003               1595          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001F36  6700 007C               1596          BEQ     DADDA
00001F3A  4EB8 11D2               1597          JSR     SIZE
00001F3E  43F9 00002471           1598          LEA     SM5,A1
00001F44  4E4F                    1599          TRAP    #15
00001F46                          1600          
00001F46                          1601  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001F46  BE3C 0000               1602          CMP.B   #%0,D7       *if 0, then register info printed last
00001F4A  6700 002E               1603          BEQ     DADDEA      *branch to ea before register
00001F4E                          1604          
00001F4E                          1605  *printing register information
00001F4E                          1606  DADDPRNTREG
00001F4E  BA3C 0003               1607          CMP.B   #%11,D5
00001F52  6700 0058               1608          BEQ     PRINTA
00001F56  43F9 000024C6           1609          LEA     VALD,A1
00001F5C                          1610  ADDCONT
00001F5C  4E4F                    1611          TRAP    #15
00001F5E  320E                    1612          MOVE.W  A6,D1       *moving reg num to d1 to print
00001F60  103C 0003               1613          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001F64  4E4F                    1614          TRAP    #15         *printing register number
00001F66  103C 000E               1615          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001F6A  BE3C 0000               1616          CMP.B   #%0,D7      *if info finished printing
00001F6E  6700 02CC               1617          BEQ     DSEND      *branch to end
00001F72  43F9 000024DA           1618          LEA     COMMA,A1
00001F78  4E4F                    1619          TRAP    #15
00001F7A                          1620  
00001F7A                          1621          
00001F7A                          1622  * parse ea mode: 3 bits
00001F7A                          1623  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F7A                          1624  *address reg direct not allowed for .B operations
00001F7A                          1625  *no invalid
00001F7A                          1626  DADDEA
00001F7A  E75C                    1627          ROL.W   #3,D4       *ea mode
00001F7C  1604                    1628          MOVE.B  D4,D3
00001F7E  0203 0007               1629          ANDI.B  #%111,D3
00001F82                          1630  
00001F82                          1631  *parse ea reg: 3 bits
00001F82                          1632  *no invalid: paired with opmode below (nums 0-7)
00001F82                          1633  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F82  E75C                    1634          ROL.W   #3,D4       *ea mode
00001F84  1C04                    1635          MOVE.B  D4,D6
00001F86  0206 0007               1636          ANDI.B  #%111,D6
00001F8A                          1637          
00001F8A                          1638  *comparisons
00001F8A  B67C 0004               1639          CMP     #%100,D3
00001F8E  6700 005A               1640          BEQ     ADDDATACHECK
00001F92                          1641  DATACHECKCONT
00001F92  4EB8 121C               1642          JSR     ADDRMODEALL
00001F96  BE3C 0001               1643          CMP.B   #%1,D7      *if info printed
00001F9A  6700 02A0               1644          BEQ     DSEND       *end
00001F9E  43F9 000024DA           1645          LEA     COMMA,A1
00001FA4  4E4F                    1646          TRAP    #15
00001FA6  60A6                    1647          BRA     DADDPRNTREG 
00001FA8                          1648  
00001FA8  6000 0292               1649          BRA     DSEND
00001FAC                          1650          
00001FAC  43F9 000024C4           1651  PRINTA  LEA     VALA,A1
00001FB2  60A8                    1652          BRA     ADDCONT
00001FB4                          1653  
00001FB4                          1654          
00001FB4  4E71                    1655  DADDA   NOP
00001FB6  43F9 000024C4           1656          LEA     VALA,A1
00001FBC  4E4F                    1657          TRAP    #15
00001FBE  BE3C 0000               1658          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001FC2  6600 000C               1659          BNE     ADDAL
00001FC6  43F9 000024BE           1660          LEA     MODEW,A1
00001FCC  6000 000C               1661          BRA     ADDSIZEEND
00001FD0  43F9 000024C1           1662  ADDAL   LEA     MODEL,A1
00001FD6  6000 0002               1663          BRA     ADDSIZEEND
00001FDA                          1664  ADDSIZEEND
00001FDA  4E4F                    1665          TRAP    #15
00001FDC  43F9 0000246C           1666          LEA     SM4,A1
00001FE2  4E4F                    1667          TRAP    #15
00001FE4  1E3C 0000               1668          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001FE8  6090                    1669          BRA     DADDEA
00001FEA                          1670  ADDDATACHECK
00001FEA  BA3C 0003               1671          CMP.B   #%11,D5
00001FEE  6700 0220               1672          BEQ     DSERR
00001FF2  609E                    1673          BRA     DATACHECKCONT
00001FF4                          1674          
00001FF4                          1675          
00001FF4                          1676  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001FF4                          1677  
00001FF4                          1678  DS1110
00001FF4  E75C                    1679          ROL.W   #3,D4           * [D2] Reading count
00001FF6  1404                    1680          MOVE.B  D4,D2
00001FF8  0202 0007               1681          ANDI.B  #%111,D2
00001FFC                          1682          
00001FFC  E35C                    1683          ROL.W   #1,D4           * [D3] Reading direction
00001FFE  1604                    1684          MOVE.B  D4,D3
00002000  0203 0001               1685          ANDI.B  #%1,D3
00002004                          1686          
00002004  E55C                    1687          ROL.W   #2,D4           * [D5] Reading size
00002006  1A04                    1688          MOVE.B  D4,D5
00002008  0205 0003               1689          ANDI.B  #%11,D5
0000200C                          1690          
0000200C  BA3C 0003               1691          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00002010  6700 00F0               1692          BEQ     DS1110MEM
00002014                          1693          
00002014  E35C                    1694          ROL.W   #1,D4           * [D6] Reading count mode
00002016  1C04                    1695          MOVE.B  D4,D6
00002018  0206 0001               1696          ANDI.B  #%1,D6
0000201C                          1697          
0000201C  E55C                    1698          ROL.W   #2,D4           * [D7] reading type of shift
0000201E  1E04                    1699          MOVE.B  D4,D7
00002020  0207 0003               1700          ANDI.B  #%11,D7
00002024                          1701          
00002024  E75C                    1702          ROL.W   #3,D4           * [D1] reading register
00002026  1204                    1703          MOVE.B  D4,D1
00002028  0201 0007               1704          ANDI.B  #%111,D1
0000202C                          1705          
0000202C  BE3C 0001               1706          CMP.B   #%01,D7   *Determine shift type
00002030  6700 008E               1707          BEQ     DLS
00002034  BE3C 0000               1708          CMP.B   #%00,D7
00002038  6700 0092               1709          BEQ     DAS
0000203C  BE3C 0003               1710          CMP.B   #%11,D7
00002040  6700 0096               1711          BEQ     DRO
00002044                          1712          
00002044  6000 01F6               1713          BRA     DSEND               *Fallback in case of invalid code
00002048                          1714          
00002048  48E7 FFFF               1715  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
0000204C  4EB9 000020E4           1716          JSR     DS1110SIDE
00002052  4CDF FFFF               1717          MOVEM.L (SP)+,A0-A7/D0-D7
00002056                          1718          
00002056  48E7 FFFF               1719          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
0000205A  4EB8 11D2               1720          JSR     SIZE
0000205E  4CDF FFFF               1721          MOVEM.L (SP)+,A0-A7/D0-D7
00002062                          1722          
00002062  103C 000E               1723          MOVE.B  #14,D0
00002066  43F9 00002471           1724          LEA     SM5,A1
0000206C  4E4F                    1725          TRAP    #15
0000206E                          1726          
0000206E  BA3C 0003               1727          CMP.B   #%11,D5
00002072  6700 00B4               1728          BEQ     DS1110MEMA
00002076                          1729          
00002076  BC3C 0001               1730          CMP.B   #%1,D6
0000207A  6700 003A               1731          BEQ     DS1110_REG_D
0000207E  6000 002C               1732          BRA     DS1110_REG_I
00002082                          1733          
00002082  1C01                    1734  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00002084                          1735          
00002084  103C 0003               1736          MOVE.B  #3,D0
00002088  1202                    1737          MOVE.B  D2,D1
0000208A  4E4F                    1738          TRAP    #15
0000208C                          1739          
0000208C  103C 000E               1740          MOVE.B  #14,D0
00002090  43F9 000024DA           1741          LEA     COMMA,A1
00002096  4E4F                    1742          TRAP    #15
00002098                          1743          
00002098  43F9 000024C6           1744          LEA     VALD,A1
0000209E  4E4F                    1745          TRAP    #15
000020A0                          1746          
000020A0  103C 0003               1747          MOVE.B  #3,D0
000020A4  1206                    1748          MOVE.B  D6,D1
000020A6  4E4F                    1749          TRAP    #15
000020A8                          1750          
000020A8  6000 0192               1751          BRA     DSEND
000020AC                          1752          
000020AC                          1753  DS1110_REG_I
000020AC  43F9 000024C8           1754          LEA     VALN,A1
000020B2  4E4F                    1755          TRAP    #15
000020B4  60CC                    1756          BRA     DS1110B
000020B6                          1757  
000020B6                          1758  DS1110_REG_D
000020B6  43F9 000024C6           1759          LEA     VALD,A1
000020BC  4E4F                    1760          TRAP    #15
000020BE  60C2                    1761          BRA     DS1110B       
000020C0                          1762          
000020C0  43F9 00002502           1763  DLS     LEA     LSM,A1
000020C6  4E4F                    1764          TRAP    #15
000020C8  6000 FF7E               1765          BRA     DS1110A
000020CC                          1766          
000020CC  43F9 00002509           1767  DAS     LEA     ASM,A1
000020D2  4E4F                    1768          TRAP    #15
000020D4  6000 FF72               1769          BRA     DS1110A
000020D8                          1770          
000020D8  43F9 00002510           1771  DRO     LEA     ROM,A1
000020DE  4E4F                    1772          TRAP    #15
000020E0  6000 FF66               1773          BRA     DS1110A
000020E4                          1774          
000020E4                          1775  DS1110SIDE
000020E4  103C 0006               1776          MOVE.B  #6,D0
000020E8  B63C 0001               1777          CMP.B   #1,D3
000020EC  6700 000C               1778          BEQ     DS1110LSIDE
000020F0  123C 0052               1779          MOVE.B  #82,D1
000020F4  4E4F                    1780          TRAP    #15
000020F6  6000 0008               1781          BRA     DS1110SIDEEND
000020FA                          1782  
000020FA                          1783  DS1110LSIDE
000020FA  123C 004C               1784          MOVE.B  #76,D1
000020FE  4E4F                    1785          TRAP    #15
00002100                          1786          
00002100                          1787  DS1110SIDEEND
00002100  4E75                    1788          RTS 
00002102                          1789  
00002102                          1790  DS1110MEM
00002102                          1791                                  * Shift type is instead stored in D2
00002102                          1792          
00002102  E75C                    1793          ROL.W   #3,D4           * [D6] Reading address mode
00002104  1C04                    1794          MOVE.B  D4,D6
00002106  0206 0007               1795          ANDI.B  #%111,D6
0000210A                          1796          
0000210A  E75C                    1797          ROL.W   #3,D4           * [D1] Reading address register
0000210C  1204                    1798          MOVE.B  D4,D1
0000210E  0201 0007               1799          ANDI.B  #%111,D1
00002112                          1800          
00002112  B43C 0001               1801          CMP.B   #%01,D2
00002116  67A8                    1802          BEQ     DLS
00002118  B43C 0000               1803          CMP.B   #%00,D2
0000211C  67AE                    1804          BEQ     DAS
0000211E  B43C 0003               1805          CMP.B   #%11,D2
00002122  67B4                    1806          BEQ     DRO
00002124  6000 0116               1807          BRA     DSEND
00002128                          1808          
00002128                          1809          
00002128                          1810  DS1110MEMA
00002128                          1811          
00002128  BC3C 0002               1812          CMP.B   #%010,D6
0000212C  6700 002E               1813          BEQ     DS1110MEM_REG
00002130  BC3C 0003               1814          CMP.B   #%011,D6
00002134  6700 004C               1815          BEQ     DS1110MEM_INC
00002138  BC3C 0004               1816          CMP.B   #%100,D6
0000213C  6700 006A               1817          BEQ     DS1110MEM_DEC
00002140                          1818          
00002140  BC3C 0007               1819          CMP.B   #%111,D6
00002144  6600 00CA               1820          BNE     DSERR
00002148                          1821          
00002148  B23C 0000               1822          CMP.B   #%000,D1
0000214C  6700 0080               1823          BEQ     DS1110MEM_CUSW
00002150  B23C 0001               1824          CMP.B   #%001,D1
00002154  6700 0096               1825          BEQ     DS1110MEM_CUSL
00002158                          1826          
00002158  6000 00E2               1827          BRA     DSEND
0000215C                          1828  
0000215C                          1829  DS1110MEM_REG
0000215C  43F9 000024D0           1830          LEA     OPENPTR,A1
00002162  4E4F                    1831          TRAP    #15
00002164                          1832          
00002164  43F9 000024C4           1833          LEA     VALA,A1
0000216A  4E4F                    1834          TRAP    #15
0000216C                          1835          
0000216C  103C 0003               1836          MOVE.B  #3,D0
00002170  4E4F                    1837          TRAP    #15
00002172  103C 000E               1838          MOVE.B  #14,D0
00002176                          1839          
00002176  43F9 000024D5           1840          LEA     CLOSEPTR,A1
0000217C  4E4F                    1841          TRAP    #15
0000217E                          1842          
0000217E  6000 00BC               1843          BRA     DSEND
00002182                          1844  
00002182                          1845  DS1110MEM_INC
00002182  43F9 000024D0           1846          LEA     OPENPTR,A1
00002188  4E4F                    1847          TRAP    #15
0000218A                          1848          
0000218A  43F9 000024C4           1849          LEA     VALA,A1
00002190  4E4F                    1850          TRAP    #15
00002192                          1851          
00002192  103C 0003               1852          MOVE.B  #3,D0
00002196  4E4F                    1853          TRAP    #15
00002198  103C 000E               1854          MOVE.B  #14,D0
0000219C                          1855          
0000219C  43F9 000024D7           1856          LEA     CLOSEIPTR,A1
000021A2  4E4F                    1857          TRAP    #15
000021A4                          1858          
000021A4  6000 0096               1859          BRA     DSEND
000021A8                          1860  
000021A8                          1861  DS1110MEM_DEC
000021A8  43F9 000024D2           1862          LEA     OPENDPTR,A1
000021AE  4E4F                    1863          TRAP    #15
000021B0                          1864          
000021B0  43F9 000024C4           1865          LEA     VALA,A1
000021B6  4E4F                    1866          TRAP    #15
000021B8                          1867          
000021B8  103C 0003               1868          MOVE.B  #3,D0
000021BC  4E4F                    1869          TRAP    #15
000021BE  103C 000E               1870          MOVE.B  #14,D0
000021C2                          1871          
000021C2  43F9 000024D5           1872          LEA     CLOSEPTR,A1
000021C8  4E4F                    1873          TRAP    #15
000021CA                          1874          
000021CA  6000 0070               1875          BRA     DSEND
000021CE                          1876          
000021CE                          1877  DS1110MEM_CUSW
000021CE  43F9 000024DC           1878          LEA     DOLLAR,A1
000021D4  4E4F                    1879          TRAP    #15
000021D6  341A                    1880          MOVE.W  (A2)+,D2
000021D8  48E7 0400               1881          MOVEM.L D5,-(SP)
000021DC  1A3C 0030               1882          MOVE.B  #48,D5
000021E0  4EB8 118A               1883          JSR     HEXOUT
000021E4  4CDF 0020               1884          MOVEM.L (SP)+,D5
000021E8  6000 0052               1885          BRA     DSEND
000021EC                          1886          
000021EC                          1887  DS1110MEM_CUSL
000021EC  43F9 000024DC           1888          LEA     DOLLAR,A1
000021F2  4E4F                    1889          TRAP    #15
000021F4  241A                    1890          MOVE.L  (A2)+,D2
000021F6  48E7 0400               1891          MOVEM.L D5,-(SP)
000021FA  1A3C 0030               1892          MOVE.B  #48,D5
000021FE  4EB8 118A               1893          JSR     HEXOUT
00002202  4CDF 0020               1894          MOVEM.L (SP)+,D5
00002206  6000 0034               1895          BRA     DSEND
0000220A                          1896          
0000220A                          1897  
0000220A                          1898  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000220A                          1899  
0000220A  4E71                    1900  DS1111  NOP
0000220C  6000 002E               1901          BRA     DSEND
00002210                          1902  
00002210                          1903  *DS Final
00002210                          1904  *--------------------------------------------------------------------------------------------------
00002210                          1905  
00002210  103C 000E               1906  DSERR   MOVE.B  #14,D0
00002214  43F9 0000248D           1907          LEA     ERRM,A1
0000221A  4E4F                    1908          TRAP    #15
0000221C  6000 001E               1909          BRA     DSEND
00002220                          1910          
00002220                          1911  DSERRINS
00002220  103C 000E               1912          MOVE.B  #14,D0
00002224  43F9 00002495           1913          LEA     ERRMINS,A1
0000222A  4E4F                    1914          TRAP    #15
0000222C  6000 000E               1915          BRA     DSEND
00002230                          1916  
00002230                          1917  DSERREA
00002230  103C 000E               1918          MOVE.B  #14,D0
00002234  43F9 00002496           1919          LEA     ERRMEA,A1
0000223A  4E4F                    1920          TRAP    #15
0000223C                          1921  
0000223C  4E75                    1922  DSEND   RTS
0000223E                          1923  
0000223E  43F9 0000245E           1924  DSEOF   LEA     LB,A1
00002244  103C 000E               1925          MOVE.B  #14,D0
00002248  4E4F                    1926          TRAP    #15
0000224A                          1927          
0000224A  43F9 00002360           1928          LEA     REST,A1
00002250  103C 000E               1929          MOVE.B  #14,D0
00002254  4E4F                    1930          TRAP    #15
00002256                          1931          
00002256  103C 0005               1932          MOVE.B  #5,D0
0000225A  4E4F                    1933          TRAP    #15
0000225C                          1934          
0000225C  B23C 0059               1935          CMP.B   #89,D1
00002260  6700 ED9E               1936          BEQ     START
00002264  B23C 0079               1937          CMP.B   #121,D1
00002268  6700 ED96               1938          BEQ     START
0000226C                          1939  
0000226C  43F9 0000245E           1940  END     LEA     LB,A1
00002272  103C 000E               1941          MOVE.B  #14,D0
00002276  4E4F                    1942          TRAP    #15
00002278                          1943          
00002278  43F9 0000245E           1944          LEA     LB,A1
0000227E  103C 000E               1945          MOVE.B  #14,D0
00002282  4E4F                    1946          TRAP    #15
00002284                          1947          
00002284  43F9 0000237D           1948          LEA     ENDMSG,A1
0000228A  103C 000E               1949          MOVE.B  #14,D0
0000228E  4E4F                    1950          TRAP    #15
00002290                          1951          
00002290  43F9 000023A5           1952          LEA     AUTHOR,A1
00002296  4E4F                    1953          TRAP    #15
00002298                          1954          
00002298  43F9 0000245E           1955          LEA     LB,A1
0000229E  103C 000E               1956          MOVE.B  #14,D0
000022A2  4E4F                    1957          TRAP    #15
000022A4                          1958          
000022A4  103C 0009               1959          MOVE.B  #9,D0
000022A8  4E4F                    1960          TRAP    #15
000022AA                          1961  
000022AA                          1962  *Initialized Variables
000022AA                          1963  *--------------------------------------------------------------------------------------------------
000022AA                          1964  
000022AA  =0000000D               1965  CR      EQU     $0D
000022AA  =0000000A               1966  LF      EQU     $0A
000022AA  =00000009               1967  HT      EQU     $09
000022AA                          1968  
000022AA= 54 68 69 73 20 69 ...   1969  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002332= 45 6E 74 65 72 20 ...   1970  ASTART  DC.B    'Enter start address: $',0
00002349= 45 6E 74 65 72 20 ...   1971  AEND    DC.B    'Enter end address:   $',0
00002360= 52 65 73 74 61 72 ...   1972  REST    DC.B    'Restart Disassembler (y/n)? ',0
0000237D= 54 68 61 6E 6B 20 ...   1973  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000023A5= 4D 61 64 65 20 62 ...   1974  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000023CA                          1975  
000023CA= 45 52 52 4F 52 3A ...   1976  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002404= 45 52 52 4F 52 3A ...   1977  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000242A= 45 52 52 4F 52 3A ...   1978  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
0000245E                          1979  
0000245E= 0D 0A 00                1980  LB      DC.B    CR,LF,0
00002461                          1981  
00002461= 09 00                   1982  HTM     DC.B    HT,0
00002463                          1983  
00002463= 20 00                   1984  SM1     DC.B    ' ',0
00002465= 20 20 00                1985  SM2     DC.B    '  ',0
00002468= 20 20 20 00             1986  SM3     DC.B    '   ',0
0000246C= 20 20 20 20 00          1987  SM4     DC.B    '    ',0
00002471= 20 20 20 20 20 00       1988  SM5     DC.B    '     ',0
00002477= 20 20 20 20 20 20 00    1989  SM6     DC.B    '      ',0
0000247E= 20 20 20 20 20 20 ...   1990  SM7     DC.B    '       ',0
00002486                          1991  
00002486= 54 45 53 54 00          1992  TESTM   DC.B    'TEST',0
0000248B                          1993  
0000248B= 00                      1994  NOTH    DC.B    '',0
0000248C= 00                      1995  NOTH2   DC.B    '',0
0000248D                          1996  
0000248D= 20 2A 45 52 52 4F ...   1997  ERRM    DC.B    ' *ERROR',0
00002495= 00                      1998  ERRMINS DC.B    '',0
00002496= 20 2A 45 52 52 4F ...   1999  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
000024BB                          2000  
000024BB= 2E 42 00                2001  MODEB   DC.B    '.B',0
000024BE= 2E 57 00                2002  MODEW   DC.B    '.W',0
000024C1= 2E 4C 00                2003  MODEL   DC.B    '.L',0
000024C4                          2004  
000024C4= 41 00                   2005  VALA    DC.B    'A',0
000024C6= 44 00                   2006  VALD    DC.B    'D',0
000024C8= 23 00                   2007  VALN    DC.B    '#',0
000024CA= 30 00                   2008  VAL0    DC.B    '0',0
000024CC= 51 00                   2009  VALQ    DC.B    'Q',0
000024CE= 4D 00                   2010  VALM    DC.B    'M',0
000024D0                          2011  
000024D0= 28 00                   2012  OPENPTR     DC.B    '(',0
000024D2= 2D 28 00                2013  OPENDPTR    DC.B    '-(',0
000024D5                          2014  
000024D5= 29 00                   2015  CLOSEPTR    DC.B    ')',0
000024D7= 29 2B 00                2016  CLOSEIPTR   DC.B    ')+',0
000024DA                          2017  
000024DA= 2C 00                   2018  COMMA   DC.B    ',',0
000024DC= 24 00                   2019  DOLLAR  DC.B    '$',0
000024DE= 2F 00                   2020  SLASH   DC.B    '/',0
000024E0= 2D 00                   2021  DASH    DC.B    '-',0
000024E2                          2022  
000024E2= 4E 4F 50 00             2023  NOPM    DC.B    'NOP',0
000024E6                          2024  
000024E6= 4D 4F 56 45 00          2025  MOVEM   DC.B    'MOVE',0
000024EB                          2026  
000024EB= 41 44 44 00             2027  ADDM    DC.B    'ADD',0
000024EF                          2028  
000024EF= 53 55 42 00             2029  SUBM    DC.B    'SUB',0
000024F3                          2030  
000024F3= 4C 45 41 00             2031  LEAM    DC.B    'LEA',0
000024F7                          2032  
000024F7= 41 4E 44 00             2033  ANDM    DC.B    'AND',0
000024FB= 4F 52 00                2034  ORM     DC.B    'OR',0
000024FE= 4E 4F 54 00             2035  NOTM    DC.B    'NOT',0
00002502                          2036  
00002502= 4C 53 00                2037  LSM    DC.B    'LS',0
00002505= 4C 53 52 00             2038  LSRM    DC.B    'LSR',0
00002509= 41 53 00                2039  ASM    DC.B    'AS',0
0000250C= 41 53 52 00             2040  ASRM    DC.B    'ASR',0
00002510                          2041  
00002510= 52 4F 00                2042  ROM    DC.B    'RO',0
00002513= 52 4F 52 00             2043  RORM    DC.B    'ROR',0
00002517                          2044  
00002517= 42 47 54 00             2045  BGTM    DC.B    'BGT',0
0000251B= 42 4C 45 00             2046  BLEM    DC.B    'BLE',0
0000251F= 42 45 51 00             2047  BEQM    DC.B    'BEQ',0
00002523                          2048  
00002523= 4A 53 52 00             2049  JSRM    DC.B    'JSR',0
00002527= 52 54 53 00             2050  RTSM    DC.B    'RTS',0
0000252B                          2051  
0000252B= 42 52 41 00             2052  BRAM    DC.B    'BRA',0
0000252F                          2053  
0000252F                          2054  
0000252F                          2055      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1FD0
ADDCONT             1F5C
ADDDATACHECK        1FEA
ADDM                24EB
ADDRMODEALL         121C
ADDSIZEEND          1FDA
ADREG               1634
ADREGP              164C
AEND                2349
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                24F7
ASM                 2509
ASRM                250C
ASTART              2332
AUTHOR              23A5
BEQM                251F
BGTM                2517
BLEM                251B
BRAM                252B
CLOSEIPTR           24D7
CLOSEPTR            24D5
COMMA               24DA
CR                  D
DADD                1F0E
DADDA               1FB4
DADDEA              1F7A
DADDPRNTREG         1F4E
DADDQ               1A5E
DAND                1E2E
DANDA               1E9A
DANDAD              1EE8
DANDAE              1EC0
DANDB               1E5E
DANDL               1E86
DANDW               1E72
DAS                 20CC
DASH                24E0
DATACHECKCONT       1F92
DBEQ                1C0A
DBGT                1B8E
DBLE                1BCA
DBRA                1B02
DBRA_16BIT          1B4A
DBRA_32BIT          1B6C
DISASM              137C
DJSR                16B6
DJSR_CUSL           174E
DJSR_CUSW           1730
DJSR_REG            170A
DLEA                1778
DLEAP               17AE
DLS                 20C0
DMOVE2              13AE
DMOVEA              14B8
DMOVEM              188E
DMOVEQ              1C4C
DNOP                157A
DNOT                1586
DNOTA               15E6
DNOTB               15AA
DNOTL               15D2
DNOTW               15BE
DOLLAR              24DC
DOR                 1CB6
DORA                1D22
DORAD               1D70
DORAE               1D48
DORB                1CE6
DORL                1D0E
DORW                1CFA
DREG                161C
DRO                 20D8
DRTS                176C
DS0                 1386
DS00                139A
DS01                14D8
DS010               14F6
DS0100              1532
DS0101              1A5C
DS011               1500
DS0110              1AD6
DS0111              1C4A
DS1                 1390
DS10                14E2
DS100               150A
DS1000              1CB4
DS1001              1D90
DS101               1514
DS1010              1E22
DS1011              1E28
DS11                14EC
DS110               151E
DS1101              1F0C
DS111               1528
DS1110              1FF4
DS1110A             2048
DS1110B             2082
DS1110LSIDE         20FA
DS1110MEM           2102
DS1110MEMA          2128
DS1110MEM_CUSL      21EC
DS1110MEM_CUSW      21CE
DS1110MEM_DEC       21A8
DS1110MEM_INC       2182
DS1110MEM_REG       215C
DS1110SIDE          20E4
DS1110SIDEEND       2100
DS1110_REG_D        20B6
DS1110_REG_I        20AC
DS1111              220A
DSEND               223C
DSEOF               223E
DSERR               2210
DSERREA             2230
DSERRINS            2220
DSUB                1D92
DSUBEA              1DEE
DSUBPRNTREG         1DCA
END                 226C
ENDMSG              237D
ERRM                248D
ERRMEA              2496
ERRMINS             2495
EXT                 1694
EXTW                16AA
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 2461
INTRO               22AA
JSR010              17E2
JSR111              1812
JSR111001           1844
JSRM                2523
JSRPRINT2           186E
LB                  245E
LEAM                24F3
LF                  A
LSM                 2502
LSRM                2505
MADREG              166C
MODEB               24BB
MODEL               24C1
MODEW               24BE
MOVECONT            13D2
MOVEERRCHECK        14CE
MOVEM               24E6
MOVEM2              1938
MOVEM3              1972
MOVEM31             1988
MOVEM32             198E
MOVEM4              19B4
MOVEM5              19FA
MOVEMEA             18CA
MOVEMEB             1900
MOVEMEB1            1918
MOVEMEB2            191E
MOVEML              18C2
MOVEMLOOP           1A16
MOVEMLOOPDONE       1A56
MOVEMLOOPINC        1A52
MOVEMLOOPSINGLEAR   1A58
MOVEMSHIFTL         1A38
MOVEMSHIFTR         1A40
MOVEMSTEP           1A1E
MOVEMSTEP1          1A2A
MOVEMSTEP2          1A48
MSDONE              1476
MSDONE2             14A4
MSIZE               1430
MSIZEB              1458
MSIZEBN             13FA
MSIZEL              146C
MSIZELN             141E
MSIZEN              13D2
MSIZEW              1462
MSIZEWN             140C
NOPM                24E2
NOTH                248B
NOTH2               248C
NOTM                24FE
OPENDPTR            24D2
OPENPTR             24D0
ORM                 24FB
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1FAC
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                2360
ROM                 2510
RORM                2513
RPAUSE              117E
RSTEP               112E
RTSM                2527
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               24DE
SM1                 2463
SM2                 2465
SM3                 2468
SM4                 246C
SM5                 2471
SM6                 2477
SM7                 247E
SRET                121A
START               1000
STARTER             0
SUBM                24EF
TEST                103A
TESTM               2486
VAL0                24CA
VALA                24C4
VALD                24C6
VALM                24CE
VALN                24C8
VALQ                24CC
VERR1               10F8
VERR1M              23CA
VERR2               1108
VERR2M              2404
VERR3               1118
VERR3M              242A
VINPUT              10EE
