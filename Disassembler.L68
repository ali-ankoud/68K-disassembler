00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 3:14:04 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 00001FEE             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 00002076             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 000021CF             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 0000208D             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 000021CF             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 0000210E            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 0EBA                109          BRA     END
000010F8                           110  
000010F8  43F9 00002148            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 0EAA                114          BRA     END
00001108                           115  
00001108  43F9 0000216E            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 0E9A                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  244B                     124          MOVE.L  A3,A2               *Set current address to start address
0000111A  1A3C 0000                125          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000111E                           126  
0000111E                           127  RSTEP                               *RSTEP: 
0000111E  381A                     128          MOVE.W  (A2)+,D4
00001120  340A                     129          MOVE.W  A2,D2
00001122  5542                     130          SUBQ.W  #2,D2
00001124                           131          
00001124  48E7 0400                132          MOVEM.L D5,-(SP)
00001128  1A3C 0000                133          MOVE.B  #0,D5
0000112C  4EB9 0000117A            134          JSR     HEXOUT              *Run printing operation for HEX address
00001132  4CDF 0020                135          MOVEM.L (SP)+,D5
00001136                           136          
00001136  43F9 000021A9            137          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000113C  103C 000E                138          MOVE.B  #14,D0
00001140  4E4F                     139          TRAP    #15
00001142                           140          
00001142  48E7 7F0F                141          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001146  4EB9 0000136C            142          JSR     DISASM              *Run disassembly for current machine code
0000114C  4CDF F0FE                143          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001150                           144          
00001150  5205                     145          ADDQ.B  #1,D5       *Increment counter by 1
00001152  BA3C 0020                146          CMP.B   #32,D5      *Check if we reached 32 lines
00001156  6700 0016                147          BEQ     RPAUSE      *Branch to pausing code
0000115A                           148          
0000115A  43F9 000021A2            149          LEA     LB,A1       *Print line break
00001160  103C 000E                150          MOVE.B  #14,D0      
00001164  4E4F                     151          TRAP    #15
00001166                           152          
00001166                           153  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001166  B9CA                     154          CMP.L   A2,A4       *Check if we reached the end address
00001168  6D00 0E18                155          BLT     DSEOF       *End loop if so
0000116C  60B0                     156          BRA     RSTEP       *Or else continue the loop
0000116E                           157          
0000116E                           158  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000116E  1A3C 0000                159          MOVE.B  #0,D5       * Reset D5 counter
00001172  103C 0005                160          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001176  4E4F                     161          TRAP    #15         * Only used for waiting for user to hit ENTER
00001178  60EC                     162          BRA     RCONT       *Continue with READLN loop
0000117A                           163  
0000117A                           164  *--------------------------------------------------------------------------------------------------
0000117A                           165  
0000117A                           166  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000117A  103C 0006                167          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000117E  163C 0008                168          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001182                           169          
00001182                           170  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001182  E99A                     171          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001184  2202                     172          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001186  0281 0000000F            173          ANDI.L  #$F,D1      * Filter to the right four bits
0000118C  B23C 000A                174          CMP.B   #10,D1      *Distinguish between number and letter
00001190  6D00 000A                175          BLT     HNUM        *Branch to number handling, or continue to letter handling
00001194                           176          
00001194                           177  HHEX                        *HHEX: Handle letters from HEXOUT for loop
00001194  0601 0037                178          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001198  6000 0006                179          BRA     HSTEP2      *Branch to step 2 of the iteration
0000119C                           180  
0000119C                           181  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
0000119C  0601 0030                182          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A0                           183  
000011A0                           184  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011A0  5303                     185          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011A2                           186          
000011A2  B205                     187          CMP.B   D5,D1
000011A4  6700 0004                188          BEQ     HSKIP2
000011A8                           189          
000011A8  4E4F                     190          TRAP #15            *Will print the ASCII value stored in D1
000011AA  0C03 0000                191  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011AE  6700 0010                192          BEQ     HDONE       *End loop if done
000011B2                           193          
000011B2  B23C 0030                194          CMP.B   #48,D1
000011B6  6700 0006                195          BEQ     HSKIP3
000011BA                           196          
000011BA  1A3C 0000                197          MOVE.B  #0,D5
000011BE                           198          
000011BE  60C2                     199  HSKIP3  BRA     HSTEP       *Or else continue loop
000011C0                           200          
000011C0  4E75                     201  HDONE   RTS
000011C2                           202  
000011C2                           203  
000011C2                           204  *--------------------------------------------------------------------------------------------------
000011C2                           205  
000011C2  103C 000E                206  SIZE    MOVE.B  #14,D0
000011C6  BA3C 0000                207          CMP.B   #%00,D5
000011CA  6700 001E                208          BEQ     SIZEB
000011CE  BA3C 0001                209          CMP.B   #%01,D5
000011D2  6700 0020                210          BEQ     SIZEW
000011D6  BA3C 0002                211          CMP.B   #%10,D5
000011DA  6700 0022                212          BEQ     SIZEL
000011DE  BA3C 0003                213          CMP.B   #%11,D5
000011E2  6700 0010                214          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011E6  6000 0022                215          BRA     SRET
000011EA                           216          
000011EA  43F9 000021DA            217  SIZEB   LEA     MODEB,A1
000011F0  6000 0016                218          BRA     SDONE
000011F4                           219  
000011F4  43F9 000021DD            220  SIZEW   LEA     MODEW,A1
000011FA  6000 000C                221          BRA     SDONE
000011FE                           222  
000011FE  43F9 000021E0            223  SIZEL   LEA     MODEL,A1
00001204  6000 0002                224          BRA     SDONE
00001208                           225  
00001208  4E4F                     226  SDONE   TRAP    #15
0000120A                           227  
0000120A  4E75                     228  SRET    RTS
0000120C                           229  
0000120C                           230  *-----------------------------------------------------------------------------------
0000120C                           231  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           232  *uses d1, d0, and a1
0000120C                           233  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           234  *uses d1, d0, and a1
0000120C                           235  ADDRMODEALL
0000120C                           236  *comparisons
0000120C  B67C 0000                237  AM000   CMP     #%000,D3
00001210  6600 001A                238          BNE     AM001
00001214  43F9 000021E5            239          LEA     VALD,A1
0000121A  4E4F                     240          TRAP    #15
0000121C  1206                     241          MOVE.B  D6,D1       *moving ea num to d1 to print
0000121E  103C 0003                242          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001222  4E4F                     243          TRAP    #15         *printing register number
00001224  103C 000E                244          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001228  6000 013C                245          BRA     AMEND
0000122C                           246  
0000122C                           247          
0000122C  B67C 0001                248  AM001   CMP     #%001,D3
00001230  6600 0022                249          BNE     AM010
00001234  BA7C 0000                250          CMP     #00,D5
00001238  6700 0D3A                251          BEQ     DSERR
0000123C  43F9 000021E3            252          LEA     VALA,A1
00001242  4E4F                     253          TRAP    #15
00001244  1206                     254          MOVE.B  D6,D1       *moving ea num to d1 to print
00001246  103C 0003                255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124A  4E4F                     256          TRAP    #15         *printing register number
0000124C  103C 000E                257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001250  6000 0114                258          BRA     AMEND
00001254                           259  
00001254  B67C 0002                260  AM010   CMP     #%010,D3
00001258  6600 002A                261          BNE     AM011
0000125C  43F9 000021ED            262          LEA     OPENPTR,A1
00001262  4E4F                     263          TRAP    #15
00001264  43F9 000021E3            264          LEA     VALA,A1
0000126A  4E4F                     265          TRAP    #15
0000126C  1206                     266          MOVE.B  D6,D1       *moving ea num to d1 to print
0000126E  103C 0003                267          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001272  4E4F                     268          TRAP    #15         *printing register number
00001274  103C 000E                269          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001278  43F9 000021F2            270          LEA     CLOSEPTR,A1
0000127E  4E4F                     271          TRAP    #15
00001280  6000 00E4                272          BRA     AMEND
00001284                           273  
00001284  B67C 0003                274  AM011   CMP     #%011,D3
00001288  6600 002A                275          BNE     AM100
0000128C  43F9 000021ED            276          LEA     OPENPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  43F9 000021E3            278          LEA     VALA,A1
0000129A  4E4F                     279          TRAP    #15
0000129C  1206                     280          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129E  103C 0003                281          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012A2  4E4F                     282          TRAP    #15         *printing register number
000012A4  103C 000E                283          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A8  43F9 000021F4            284          LEA     CLOSEIPTR,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  6000 00B4                286          BRA     AMEND
000012B4                           287  
000012B4  B67C 0004                288  AM100   CMP     #%100,D3
000012B8  6600 002A                289          BNE     AM111
000012BC  43F9 000021EF            290          LEA     OPENDPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  43F9 000021E3            292          LEA     VALA,A1
000012CA  4E4F                     293          TRAP    #15
000012CC  1206                     294          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CE  103C 0003                295          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012D2  4E4F                     296          TRAP    #15         *printing register number
000012D4  103C 000E                297          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D8  43F9 000021F2            298          LEA     CLOSEPTR,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  6000 0084                300          BRA     AMEND
000012E4                           301  
000012E4  B67C 0007                302  AM111   CMP     #%111,D3
000012E8  6600 0C8A                303          BNE     DSERR
000012EC  BC7C 0000                304          CMP     #%000,D6
000012F0  6600 0020                305          BNE     AM111001
000012F4  43F9 000021F9            306          LEA     DOLLAR,A1
000012FA  4E4F                     307          TRAP    #15
000012FC  341A                     308          MOVE.W  (A2)+,D2
000012FE  48E7 0400                309          MOVEM.L D5,-(SP)    
00001302  1A3C 0030                310          MOVE.B  #48,D5
00001306  4EB8 117A                311          JSR     HEXOUT
0000130A  4CDF 0020                312          MOVEM.L (SP)+,D5
0000130E  6000 0056                313          BRA     AMEND
00001312                           314          
00001312                           315  AM111001
00001312  BC7C 0001                316          CMP     #%001,D6
00001316  6600 0020                317          BNE     AM111100
0000131A  43F9 000021F9            318          LEA     DOLLAR,A1
00001320  4E4F                     319          TRAP    #15
00001322  241A                     320          MOVE.L  (A2)+,D2
00001324  48E7 0400                321          MOVEM.L D5,-(SP)
00001328  1A3C 0030                322          MOVE.B  #48,D5
0000132C  4EB8 117A                323          JSR     HEXOUT
00001330  4CDF 0020                324          MOVEM.L (SP)+,D5
00001334  6000 0030                325          BRA     AMEND
00001338                           326          
00001338                           327  AM111100
00001338  BC7C 0004                328          CMP     #%100,D6
0000133C  6600 0C36                329          BNE     DSERR
00001340  43F9 000021E7            330          LEA     VALN,A1
00001346  4E4F                     331          TRAP    #15
00001348  341A                     332          MOVE.W  (A2)+,D2
0000134A  48E7 0400                333          MOVEM.L D5,-(SP)    
0000134E  1A3C 0030                334          MOVE.B  #48,D5
00001352  103C 0003                335          MOVE.B  #3,D0
00001356  1202                     336          MOVE.B  D2,D1
00001358  4E4F                     337          TRAP    #15
0000135A  103C 000E                338          MOVE.B  #14,D0
0000135E  4CDF 0020                339          MOVEM.L (SP)+,D5
00001362  6000 0002                340          BRA     AMEND
00001366                           341          
00001366  103C 000E                342  AMEND   MOVE.B  #14,D0
0000136A  4E75                     343          RTS
0000136C                           344  
0000136C                           345  *--------------------------------------------------------------------------------------------------
0000136C                           346  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000136C                           347  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000136C                           348  
0000136C                           349  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000136C                           350  
0000136C                           351  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000136C                           352  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000136C                           353  
0000136C                           354  DISASM                      *DISASM: Disassemble a machine code
0000136C  E34C                     355          LSL.W   #1,D4       * Tier 0 binary search
0000136E  6500 0010                356          BCS     DS1
00001372  6000 0002                357          BRA     DS0
00001376                           358  
00001376                           359  *DS Tier 1 ----------------------------------------------------------------------------------------
00001376                           360  
00001376                           361  DS0                         *DS0: Tier 1 binary search for 0 side
00001376  E34C                     362          LSL.W   #1,D4       
00001378  6500 01B4                363          BCS     DS01
0000137C  6000 000C                364          BRA     DS00
00001380                           365  
00001380                           366  DS1                         *DS1: Tier 1 binary search for 1 side
00001380  E34C                     367          LSL.W   #1,D4       
00001382  6500 01BE                368          BCS     DS11
00001386  6000 01B0                369          BRA     DS10
0000138A                           370  
0000138A                           371  DS00                        *DS00: Disassembly processing for 00 prefix
0000138A  E55C                     372          ROL.W   #2,D4       
0000138C  1A04                     373          MOVE.B  D4,D5
0000138E  0205 0003                374          ANDI.B  #%11,D5
00001392  0C05 0000                375          CMPI.B  #%00,D5
00001396  6700 0006                376          BEQ     DAND
0000139A  6000 00CC                377          BRA     DMOVE2
0000139E                           378  
0000139E  E75C                     379  DAND    ROL.W   #3,D4           ; shift D4 left by 3 bits to get register number
000013A0  1A04                     380          MOVE.B  D4,D5           ; move the byte in D4 to D5
000013A2  0205 0007                381          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013A6  DA39 000021E5            382          ADD.B   VALD,D5         ; Convert register number to ASCII
000013AC  43F9 000021E5            383          LEA     VALD,A1         ; Load effective address of Dn
000013B2  4E4F                     384          TRAP    #15             ; Print Dn
000013B4  1E05                     385          MOVE.B  D5,D7           ; Store the register number for later use
000013B6                           386  
000013B6  E75C                     387          ROL.W   #3,D4           ; shift D4 left by 3 bits to get opmode
000013B8  1A04                     388          MOVE.B  D4,D5           ; move the byte in D4 to D5
000013BA  0205 0007                389          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013BE  BA3C 0000                390          CMP.B   #%000,D5        ; compare with byte size
000013C2  6700 0016                391          BEQ     DANDB
000013C6  BA3C 0001                392          CMP.B   #%001,D5        ; compare with word size
000013CA  6700 0022                393          BEQ     DANDW
000013CE  BA3C 0002                394          CMP.B   #%010,D5        ; compare with long size
000013D2  6700 002E                395          BEQ     DANDL
000013D6                           396          
000013D6  6000 0BA8                397          BRA     DSEND           ; branch to DSEND in case of invalid code
000013DA                           398  
000013DA  43F9 00002210            399  DANDB   LEA     ANDM,A1         ; load effective address of ANDM string
000013E0  4E4F                     400          TRAP    #15             ; print ANDM string
000013E2  43F9 000021DA            401          LEA     MODEB,A1        ; load effective address of MODEB string
000013E8  4E4F                     402          TRAP    #15             ; print MODEB string
000013EA  6000 002A                403          BRA     DANDA           ; branch to addressing mode parsing
000013EE                           404  
000013EE  43F9 00002210            405  DANDW   LEA     ANDM,A1         ; load effective address of ANDM string
000013F4  4E4F                     406          TRAP    #15             ; print ANDM string
000013F6  43F9 000021DD            407          LEA     MODEW,A1        ; load effective address of MODEW string
000013FC  4E4F                     408          TRAP    #15             ; print MODEW string
000013FE  6000 0016                409          BRA     DANDA           ; branch to addressing mode parsing
00001402                           410  
00001402  43F9 00002210            411  DANDL   LEA     ANDM,A1         ; load effective address of ANDM string
00001408  4E4F                     412          TRAP    #15             ; print ANDM string
0000140A  43F9 000021E0            413          LEA     MODEL,A1        ; load effective address of MODEL string
00001410  4E4F                     414          TRAP    #15             ; print MODEL string
00001412  6000 0002                415          BRA     DANDA           ; branch to addressing mode parsing
00001416                           416  
00001416  ED5C                     417  DANDA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001418                           418  
00001418  1A04                     419          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000141A  0205 0038                420          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
0000141E  E61D                     421          ROR.B   #3,D5           ; shift D5 right by 3 bits to get mode
00001420  43F9 000021AC            422          LEA     SM3,A1          ; load effective address of SM3 string
00001426  4E4F                     423          TRAP    #15             ; print space
00001428  1C05                     424          MOVE.B  D5,D6           ; store mode in D6 for further checks
0000142A                           425  
0000142A  0204 0007                426          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
0000142E  D839 000021E5            427          ADD.B   VALD,D4         ; convert register number to ASCII
00001434  43F9 000021E5            428          LEA     VALD,A1         ; load effective address of Dn
0000143A  4E4F                     429          TRAP    #15             ; print Dn
0000143C                           430  
0000143C  BC3C 0000                431          CMP.B   #%000,D6        ; compare mode with Dn
00001440  6700 0B3E                432          BEQ     DSEND
00001444  BC3C 0002                433          CMP.B   #%010,D6        ; compare mode with (An)
00001448  6700 0B36                434          BEQ     DSEND
0000144C  BC3C 0003                435          CMP.B   #%011,D6        ; compare mode with (An)+
00001450  6700 0B2E                436          BEQ     DSEND
00001454  BC3C 0004                437          CMP.B   #%100,D6        ; compare mode with -(An)
00001458  6700 0B26                438          BEQ     DSEND
0000145C  BC3C 0007                439          CMP.B   #%111,D6        ; compare mode with (xxx).W or (xxx).L
00001460  6700 0B1E                440          BEQ     DSEND
00001464  6000 0B1A                441          BRA     DSEND           ; branch to DSEND in case of invalid code
00001468                           442          
00001468                           443  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
00001468  4E71                     444  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000146A                           445          *size in d5 from above processing
0000146A  43F9 000021FF            446          LEA     MOVEM,A1
00001470  4E4F                     447          TRAP    #15
00001472                           448                  
00001472                           449          *dest reg to d7
00001472  E75C                     450          ROL.W   #3,D4
00001474  1E04                     451          MOVE.B  D4,D7
00001476  CE3C 0007                452          AND.B   #%111,D7
0000147A                           453          
0000147A                           454          *dest mode to d3: An means MOVEA
0000147A  E75C                     455          ROL.W   #3,D4
0000147C  1604                     456          MOVE.B  D4,D3
0000147E  C63C 0007                457          AND.B   #%111,D3
00001482  3C43                     458          MOVE.W  D3,A6
00001484                           459          
00001484  B67C 0001                460          CMP     #%001,D3
00001488  6700 0082                461          BEQ     DMOVEA
0000148C                           462  MOVECONT
0000148C                           463  *printing size then first addressing moode, then comma
0000148C                           464  *size is different for move
0000148C  103C 000E                465  MSIZE   MOVE.B  #14,D0
00001490  BA3C 0001                466          CMP.B   #%01,D5
00001494  6700 001E                467          BEQ     MSIZEB
00001498  BA3C 0003                468          CMP.B   #%11,D5
0000149C  6700 0020                469          BEQ     MSIZEW
000014A0  BA3C 0002                470          CMP.B   #%10,D5
000014A4  6700 0022                471          BEQ     MSIZEL
000014A8  BA3C 0003                472          CMP.B   #%11,D5
000014AC  6700 0010                473          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014B0  6000 0AC2                474          BRA     DSERR
000014B4                           475          
000014B4  43F9 000021DA            476  MSIZEB  LEA     MODEB,A1
000014BA  6000 0016                477          BRA     MSDONE
000014BE                           478  
000014BE  43F9 000021DD            479  MSIZEW  LEA     MODEW,A1
000014C4  6000 000C                480          BRA     MSDONE
000014C8                           481  
000014C8  43F9 000021E0            482  MSIZEL  LEA     MODEL,A1
000014CE  6000 0002                483          BRA     MSDONE
000014D2                           484  
000014D2  4E4F                     485  MSDONE  TRAP    #15
000014D4                           486  
000014D4  43F9 000021C2            487          LEA     SM7,A1
000014DA  4E4F                     488          TRAP    #15
000014DC                           489          
000014DC                           490          *source mode to d3
000014DC  E75C                     491          ROL.W   #3,D4
000014DE  1604                     492          MOVE.B  D4,D3
000014E0  C63C 0007                493          AND.B   #%111,D3
000014E4                           494          
000014E4                           495          *source reg to d6
000014E4  E75C                     496          ROL.W   #3,D4
000014E6  1C04                     497          MOVE.B  D4,D6
000014E8  CC3C 0007                498          AND.B   #%111,D6
000014EC                           499          
000014EC  4EB8 120C                500          JSR     ADDRMODEALL
000014F0  B67C 0001                501          CMP     #%001,D3
000014F4  6700 002C                502          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014F8  43F9 000021F7            503          LEA     COMMA,A1
000014FE  4E4F                     504          TRAP    #15
00001500  1C07                     505          MOVE.B  D7,D6
00001502  360E                     506          MOVE.W  A6,D3
00001504  4EB8 120C                507          JSR     ADDRMODEALL
00001508  6000 0A76                508          BRA     DSEND
0000150C                           509  
0000150C  4E71                     510  DMOVEA  NOP
0000150E  BA7C 0001                511          CMP     #%01,D5     *if size is byte, err
00001512  6700 0A60                512          BEQ     DSERR
00001516  43F9 000021E3            513          LEA     VALA,A1        *else, print A and return
0000151C  4E4F                     514          TRAP    #15
0000151E  6000 FF6C                515          BRA     MOVECONT
00001522                           516  
00001522                           517  MOVEERRCHECK
00001522  BA7C 0001                518          CMP     #%01,D5
00001526  6700 0A4C                519          BEQ     DSERR
0000152A  6000 0A54                520          BRA     DSEND
0000152E                           521  
0000152E                           522          
0000152E                           523  
0000152E                           524  *DS Tier 2 ----------------------------------------------------------------------------------------
0000152E                           525  
0000152E                           526  DS01                        *DS01: Tier 2 binary search for 01 side
0000152E  E34C                     527          LSL.W   #1,D4
00001530  6500 0024                528          BCS     DS011
00001534  6000 0016                529          BRA     DS010
00001538                           530  
00001538                           531  DS10                        *DS10: Tier 2 binary search for 10 side
00001538  E34C                     532          LSL.W   #1,D4
0000153A  6500 002E                533          BCS     DS101
0000153E  6000 0020                534          BRA     DS100
00001542                           535  
00001542                           536  DS11                        *DS11: Tier 2 binary search for 11 side
00001542  E34C                     537          LSL.W   #1,D4
00001544  6500 0038                538          BCS     DS111
00001548  6000 002A                539          BRA     DS110
0000154C                           540  
0000154C                           541  *DS Tier 3 ----------------------------------------------------------------------------------------
0000154C                           542  
0000154C                           543  DS010                       *DS010: Tier 3 binary search for 010 side
0000154C  E34C                     544          LSL.W   #1,D4
0000154E  6500 0354                545          BCS     DS0101
00001552  6000 0034                546          BRA     DS0100
00001556                           547  
00001556                           548  DS011                       *DS011: Tier 3 binary search for 011 side
00001556  E34C                     549          LSL.W   #1,D4
00001558  6500 0538                550          BCS     DS0111
0000155C  6000 03C0                551          BRA     DS0110
00001560                           552  
00001560                           553  DS100                       *DS100: Tier 3 binary search for 100 side
00001560  E34C                     554          LSL.W   #1,D4
00001562  6500 0668                555          BCS     DS1001
00001566  6000 0594                556          BRA     DS1000
0000156A                           557  
0000156A                           558  DS101                       *DS101: Tier 3 binary search for 101 side
0000156A  E34C                     559          LSL.W   #1,D4
0000156C  6500 06F6                560          BCS     DS1011
00001570  6000 06EC                561          BRA     DS1010
00001574                           562  
00001574                           563  DS110                       *DS110: Tier 3 binary search for 110 side
00001574  E34C                     564          LSL.W   #1,D4
00001576  6500 06F8                565          BCS     DS1101
0000157A  6000 06EE                566          BRA     DS1100
0000157E                           567  
0000157E                           568  DS111                       *DS111: Tier 3 binary search for 111 side
0000157E  E34C                     569          LSL.W   #1,D4
00001580  6500 09EC                570          BCS     DS1111
00001584  6000 07D2                571          BRA     DS1110
00001588                           572  
00001588                           573  *DS Tier 4 ----------------------------------------------------------------------------------------
00001588                           574  
00001588                           575  DS0100                      *DS0100: Processing for 0100 prefix
00001588  0C44 E710                576          CMPI.W  #%1110011100010000,D4
0000158C  6700 0034                577          BEQ     DNOP
00001590  0C44 E750                578          CMPI.W  #%1110011101010000,D4
00001594  6700 021E                579          BEQ     DRTS
00001598                           580          
00001598  E95C                     581          ROL.W   #4,D4
0000159A  1404                     582          MOVE.B  D4,D2
0000159C  0202 000F                583          ANDI.B  #%1111,D2
000015A0                           584          
000015A0  B43C 000E                585          CMP.B   #%1110,D2
000015A4  6700 0158                586          BEQ     DJSR
000015A8                           587          
000015A8  B43C 0006                588          CMP.B   #%0110,D2
000015AC  6700 0020                589          BEQ     DNOT
000015B0                           590          
000015B0  1602                     591          MOVE.B  D2,D3
000015B2  0203 0001                592          ANDI.B  #%1,D3
000015B6  B63C 0001                593          CMP.B   #1,D3
000015BA  6700 0204                594          BEQ     DLEA
000015BE                           595          
000015BE  6000 09C0                596          BRA     DSEND
000015C2                           597  
000015C2  43F9 000021FB            598  DNOP    LEA     NOPM,A1
000015C8  4E4F                     599          TRAP    #15
000015CA  6000 09B4                600          BRA     DSEND
000015CE                           601          
000015CE  E55C                     602  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015D0  1A04                     603          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015D2  0205 0003                604          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015D6                           605  
000015D6  BA3C 0000                606          CMP.B   #%00,D5         ; compare with byte size
000015DA  6700 0016                607          BEQ     DNOTB
000015DE  BA3C 0001                608          CMP.B   #%01,D5         ; compare with word size
000015E2  6700 0022                609          BEQ     DNOTW
000015E6  BA3C 0002                610          CMP.B   #%10,D5         ; compare with long size
000015EA  6700 002E                611          BEQ     DNOTL
000015EE                           612          
000015EE  6000 0990                613          BRA     DSEND           ; branch to DSEND in case of invalid code
000015F2                           614  
000015F2  43F9 00002217            615  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015F8  4E4F                     616          TRAP    #15             ; print NOTM string
000015FA  43F9 000021DA            617          LEA     MODEB,A1        ; load effective address of MODEB string
00001600  4E4F                     618          TRAP    #15             ; print MODEB string
00001602  6000 002A                619          BRA     DNOTA           ; branch to addressing mode parsing
00001606                           620  
00001606  43F9 00002217            621  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
0000160C  4E4F                     622          TRAP    #15             ; print NOTM string
0000160E  43F9 000021DD            623          LEA     MODEW,A1        ; load effective address of MODEW string
00001614  4E4F                     624          TRAP    #15             ; print MODEW string
00001616  6000 0016                625          BRA     DNOTA           ; branch to addressing mode parsing
0000161A                           626  
0000161A  43F9 00002217            627  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001620  4E4F                     628          TRAP    #15             ; print NOTM string
00001622  43F9 000021E0            629          LEA     MODEL,A1        ; load effective address of MODEL string
00001628  4E4F                     630          TRAP    #15             ; print MODEL string
0000162A  6000 0002                631          BRA     DNOTA           ; branch to addressing mode parsing
0000162E                           632  
0000162E  ED5C                     633  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001630  1204                     634          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001632  0201 003F                635          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
00001636                           636  
00001636                           637          ; Now process addressing mode and register based on the value in D1
00001636                           638  
00001636  1A01                     639          MOVE.B  D1,D5           ; Move the byte in D1 to D5
00001638  0205 0007                640          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
0000163C  6700 0026                641          BEQ     DREG            ; If it is direct register mode
00001640  BA3C 0002                642          CMP.B   #%010,D5        ; Compare with An
00001644  6700 0036                643          BEQ     ADREG
00001648  BA3C 0003                644          CMP.B   #%011,D5        ; Compare with (An)+
0000164C  6700 0046                645          BEQ     ADREGP
00001650  BA3C 0004                646          CMP.B   #%100,D5        ; Compare with -(An)
00001654  6700 005E                647          BEQ     MADREG
00001658  BA3C 0007                648          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
0000165C  6700 007E                649          BEQ     EXT
00001660                           650              
00001660  6000 091E                651          BRA     DSEND
00001664                           652  
00001664  1C01                     653  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
00001666  0206 0007                654          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
0000166A  DC39 000021E5            655          ADD.B   VALD,D6         ; Convert register number to ASCII
00001670  43F9 000021E5            656          LEA     VALD,A1         ; Load effective address of Dn
00001676  4E4F                     657          TRAP    #15             ; Print Dn
00001678  6000 0906                658          BRA     DSEND
0000167C                           659  
0000167C  1C01                     660  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
0000167E  0206 0007                661          ANDI.B  #%111,D6
00001682  DC39 000021E3            662          ADD.B   VALA,D6
00001688  43F9 000021E3            663          LEA     VALA,A1
0000168E  4E4F                     664          TRAP    #15
00001690  6000 08EE                665          BRA     DSEND
00001694                           666  
00001694  1C01                     667  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
00001696  0206 0007                668          ANDI.B  #%111,D6
0000169A  DC39 000021E3            669          ADD.B   VALA,D6
000016A0  43F9 000021E3            670          LEA     VALA,A1
000016A6  4E4F                     671          TRAP    #15
000016A8  43F9 000021F4            672          LEA     CLOSEIPTR,A1    ; Load effective address of )+
000016AE  4E4F                     673          TRAP    #15             ; Print )+
000016B0  6000 08CE                674          BRA     DSEND
000016B4                           675  
000016B4  1C01                     676  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
000016B6  0206 0007                677          ANDI.B  #%111,D6
000016BA  DC39 000021E3            678          ADD.B   VALA,D6
000016C0  43F9 000021EF            679          LEA     OPENDPTR,A1     ; Load effective address of -(
000016C6  4E4F                     680          TRAP    #15             ; Print -(
000016C8  43F9 000021E3            681          LEA     VALA,A1
000016CE  4E4F                     682          TRAP    #15
000016D0  43F9 000021F2            683          LEA     CLOSEPTR,A1     ; Load effective address of )
000016D6  4E4F                     684          TRAP    #15             ; Print )
000016D8  6000 08A6                685          BRA     DSEND
000016DC                           686  
000016DC  1C01                     687  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016DE  0206 0001                688          ANDI.B  #%1,D6
000016E2  6700 000E                689          BEQ     EXTW
000016E6  43F9 000021E7            690          LEA     VALN,A1         ; Load effective address of #
000016EC  4E4F                     691          TRAP    #15             ; Print #
000016EE  6000 0890                692          BRA     DSEND
000016F2                           693  
000016F2  43F9 000021E9            694  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016F8  4E4F                     695          TRAP    #15             ; Print 0
000016FA  6000 0884                696          BRA     DSEND
000016FE                           697  
000016FE                           698          
000016FE  E55C                     699  DJSR    ROL.W   #2,D4
00001700  1404                     700          MOVE.B  D4,D2
00001702  0202 0007                701          ANDI.B  #%111,D2
00001706  0C02 0002                702          CMPI.B  #%10,D2
0000170A  6600 0868                703          BNE     DSERR
0000170E                           704          
0000170E  43F9 0000223C            705          LEA     JSRM,A1
00001714  4E4F                     706          TRAP    #15
00001716                           707          
00001716  43F9 000021C2            708          LEA     SM7,A1
0000171C  4E4F                     709          TRAP    #15
0000171E                           710  
0000171E  E75C                     711          ROL.W   #3,D4       * [D2] address mode
00001720  1404                     712          MOVE.B  D4,D2
00001722  0202 0007                713          ANDI.B  #%111,D2
00001726                           714          
00001726  E75C                     715          ROL.W   #3,D4       * [D1] address register
00001728  1204                     716          MOVE.B  D4,D1
0000172A  0201 0007                717          ANDI.B  #%111,D1
0000172E                           718          
0000172E  0C02 0002                719          CMPI.B  #%010,D2
00001732  6700 001E                720          BEQ     DJSR_REG
00001736                           721          
00001736  0C02 0007                722          CMPI.B  #%111,D2
0000173A  6600 0838                723          BNE     DSERR
0000173E                           724          
0000173E  0C01 0000                725          CMPI.B  #%000,D1
00001742  6700 0034                726          BEQ     DJSR_CUSW
00001746                           727          
00001746  0C01 0001                728          CMPI.B  #%001,D1
0000174A  6700 004A                729          BEQ     DJSR_CUSL
0000174E                           730          
0000174E  6000 0830                731          BRA     DSEND
00001752                           732          
00001752                           733          
00001752                           734          
00001752                           735  DJSR_REG        
00001752  43F9 000021ED            736          LEA     OPENPTR,A1
00001758  4E4F                     737          TRAP    #15
0000175A                           738          
0000175A  43F9 000021E3            739          LEA     VALA,A1
00001760  4E4F                     740          TRAP    #15
00001762                           741          
00001762  103C 0003                742          MOVE.B  #3,D0
00001766  4E4F                     743          TRAP    #15
00001768  103C 000E                744          MOVE.B  #14,D0
0000176C                           745          
0000176C  43F9 000021F2            746          LEA     CLOSEPTR,A1
00001772  4E4F                     747          TRAP    #15
00001774                           748          
00001774  6000 080A                749          BRA     DSEND
00001778                           750  
00001778                           751          
00001778                           752  DJSR_CUSW
00001778  43F9 000021F9            753          LEA     DOLLAR,A1
0000177E  4E4F                     754          TRAP    #15
00001780  341A                     755          MOVE.W  (A2)+,D2
00001782  48E7 0400                756          MOVEM.L D5,-(SP)
00001786  1A3C 0030                757          MOVE.B  #48,D5
0000178A  4EB8 117A                758          JSR     HEXOUT
0000178E  4CDF 0020                759          MOVEM.L (SP)+,D5
00001792  6000 07EC                760          BRA     DSEND
00001796                           761  
00001796                           762  DJSR_CUSL
00001796  43F9 000021F9            763          LEA     DOLLAR,A1
0000179C  4E4F                     764          TRAP    #15
0000179E  241A                     765          MOVE.L  (A2)+,D2
000017A0  48E7 0400                766          MOVEM.L D5,-(SP)
000017A4  1A3C 0030                767          MOVE.B  #48,D5
000017A8  4EB8 117A                768          JSR     HEXOUT
000017AC  4CDF 0020                769          MOVEM.L (SP)+,D5
000017B0  6000 07CE                770          BRA     DSEND
000017B4                           771          
000017B4  43F9 00002240            772  DRTS    LEA     RTSM,A1
000017BA  4E4F                     773          TRAP    #15
000017BC  6000 07C2                774          BRA     DSEND
000017C0                           775          
000017C0                           776          
000017C0                           777  DLEA    *printing
000017C0  43F9 0000220C            778          LEA     LEAM,A1
000017C6  4E4F                     779          TRAP    #15
000017C8  43F9 000021C2            780          LEA     SM7,A1
000017CE  4E4F                     781          TRAP    #15
000017D0                           782  
000017D0                           783          *getting destination register
000017D0  0202 000E                784          ANDI.B  #%1110,D2
000017D4  E21A                     785          ROR.B   #1,D2
000017D6  3E02                     786          MOVE.W  D2,D7
000017D8                           787          
000017D8                           788          *ensuring that next two bits are 11
000017D8  E55C                     789          ROL.W   #2,D4
000017DA  1C04                     790          MOVE.B  D4,D6
000017DC  0206 0003                791          ANDI.B  #%11,D6
000017E0  BC3C 0003                792          CMP.B   #%11,D6
000017E4  6600 078E                793          BNE     DSERR
000017E8                           794          
000017E8                           795          *getting ea mode
000017E8  E75C                     796          ROL.W   #3,D4
000017EA  1604                     797          MOVE.B  D4,D3
000017EC  0203 0007                798          ANDI.B  #%111,D3
000017F0                           799          
000017F0                           800          *getting ea reg
000017F0  E75C                     801          ROL.W   #3,D4
000017F2  1C04                     802          MOVE.B  D4,D6
000017F4  0206 0007                803          ANDI.B  #%111,D6
000017F8                           804          
000017F8                           805          *printing
000017F8                           806  JSR010
000017F8  B63C 0002                807          CMP.B   #%010,D3
000017FC  6600 002A                808          BNE     JSR111
00001800  43F9 000021ED            809          LEA     OPENPTR,A1
00001806  4E4F                     810          TRAP    #15
00001808  43F9 000021E3            811          LEA     VALA,A1
0000180E  4E4F                     812          TRAP    #15
00001810  103C 0003                813          MOVE.B  #3,D0
00001814  1206                     814          MOVE.B  D6,D1
00001816  4E4F                     815          TRAP    #15
00001818  103C 000E                816          MOVE.B  #14,D0
0000181C  43F9 000021F2            817          LEA     CLOSEPTR,A1
00001822  4E4F                     818          TRAP    #15
00001824  6000 005E                819          BRA     JSRPRINT2
00001828                           820  JSR111
00001828  B63C 0007                821          CMP.B   #%111,D3
0000182C  6600 0746                822          BNE     DSERR
00001830  BC3C 0000                823          CMP.B   #%000,D6
00001834  6600 0024                824          BNE     JSR111001
00001838  43F9 000021F9            825          LEA     DOLLAR,A1
0000183E  4E4F                     826          TRAP    #15
00001840  341A                     827          MOVE.W  (A2)+,D2
00001842  48E7 0400                828          MOVEM.L D5,-(SP)    
00001846  1A3C 0030                829          MOVE.B  #48,D5
0000184A  4EB8 117A                830          JSR     HEXOUT
0000184E  4CDF 0020                831          MOVEM.L (SP)+,D5
00001852  103C 000E                832          MOVE.B  #14,D0
00001856  6000 002C                833          BRA     JSRPRINT2
0000185A                           834          
0000185A                           835  JSR111001
0000185A  BC3C 0001                836          CMP.B   #%001,D6
0000185E  6600 0714                837          BNE     DSERR
00001862  43F9 000021F9            838          LEA     DOLLAR,A1
00001868  4E4F                     839          TRAP    #15
0000186A  241A                     840          MOVE.L  (A2)+,D2
0000186C  48E7 0400                841          MOVEM.L D5,-(SP)
00001870  1A3C 0030                842          MOVE.B  #48,D5
00001874  4EB8 117A                843          JSR     HEXOUT
00001878  4CDF 0020                844          MOVEM.L (SP)+,D5
0000187C  103C 000E                845          MOVE.B  #14,D0
00001880  6000 0002                846          BRA     JSRPRINT2
00001884                           847          
00001884                           848  JSRPRINT2
00001884  43F9 000021F7            849          LEA     COMMA,A1
0000188A  4E4F                     850          TRAP    #15
0000188C  43F9 000021E3            851          LEA     VALA,A1
00001892  4E4F                     852          TRAP    #15
00001894  103C 0003                853          MOVE.B  #3,D0
00001898  3207                     854          MOVE.W  D7,D1
0000189A  4E4F                     855          TRAP    #15
0000189C  103C 000E                856          MOVE.B  #14,D0
000018A0                           857          
000018A0  6000 06DE                858          BRA     DSEND
000018A4                           859          
000018A4                           860  
000018A4                           861  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000018A4                           862  
000018A4  4E71                     863  DS0101  NOP
000018A6                           864          
000018A6  4E71                     865  DADDQ   NOP
000018A8  43F9 00002204            866          LEA     ADDM,A1
000018AE  4E4F                     867          TRAP    #15
000018B0  43F9 000021EB            868          LEA     VALQ,A1
000018B6  4E4F                     869          TRAP    #15
000018B8                           870          
000018B8                           871          *parsing data to d1
000018B8  E75C                     872          ROL.W   #3,D4
000018BA  1204                     873          MOVE.B  D4,D1
000018BC  C23C 0007                874          AND.B   #%111,D1
000018C0                           875          
000018C0                           876          *ensuring next bit is 0
000018C0  E35C                     877          ROL.W   #1,D4
000018C2  1A04                     878          MOVE.B  D4,D5
000018C4  CA3C 0001                879          AND.B   #%1,D5
000018C8  BA7C 0000                880          CMP     #0,D5
000018CC  6600 06A6                881          BNE     DSERR
000018D0                           882          
000018D0                           883          *parsing and printing size
000018D0  E55C                     884          ROL.W   #2,D4
000018D2  1A04                     885          MOVE.B  D4,D5
000018D4  CA3C 0003                886          AND.B   #%11,D5
000018D8  4EB8 11C2                887          JSR     SIZE
000018DC  43F9 000021C2            888          LEA     SM7,A1
000018E2  4E4F                     889          TRAP    #15
000018E4                           890          
000018E4                           891          *parsing effective address information
000018E4                           892          *mode:
000018E4  E75C                     893          ROL.W   #3,D4
000018E6  1604                     894          MOVE.B  D4,D3
000018E8  C63C 0007                895          AND.B   #%111,D3
000018EC                           896          
000018EC                           897          *register:
000018EC  E71C                     898          ROL.B   #3,D4
000018EE  1C04                     899          MOVE.B  D4,D6
000018F0  CC3C 0007                900          AND.B   #%111,D6
000018F4                           901          
000018F4                           902          *printing data
000018F4  43F9 000021E7            903          LEA     VALN,A1
000018FA  4E4F                     904          TRAP    #15
000018FC  103C 0003                905          MOVE.B  #3,D0
00001900  4E4F                     906          TRAP    #15
00001902  103C 000E                907          MOVE.B  #14,D0
00001906  43F9 000021F7            908          LEA     COMMA,A1
0000190C  4E4F                     909          TRAP    #15
0000190E                           910          
0000190E  B67C 0004                911          CMP     #%100,D3
00001912  6700 0660                912          BEQ     DSERR
00001916  4EB8 120C                913          JSR     ADDRMODEALL
0000191A                           914          
0000191A  6000 0664                915          BRA     DSEND
0000191E                           916          
0000191E                           917  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000191E                           918  
0000191E                           919  DS0110  
0000191E  E95C                     920          ROL.W   #4,D4   *Get next 4 bits
00001920  1404                     921          MOVE.B  D4,D2   *Copy to D2
00001922  0202 000F                922          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001926                           923          
00001926  B43C 0000                924          CMP.B   #%0000,D2   *BRA
0000192A  6700 001E                925          BEQ     DBRA
0000192E                           926          
0000192E  B43C 000E                927          CMP.B   #%1110,D2   *BGT   
00001932  6700 00A2                928          BEQ     DBGT
00001936                           929          
00001936  B43C 000F                930          CMP.B   #%1111,D2   *BLE   
0000193A  6700 00D6                931          BEQ     DBLE
0000193E                           932          
0000193E  B43C 0007                933          CMP.B   #%0111,D2   *BEQ   
00001942  6700 010E                934          BEQ     DBEQ
00001946                           935          
00001946  6000 0638                936          BRA     DSEND
0000194A                           937          
0000194A  43F9 00002244            938  DBRA    LEA     BRAM,A1
00001950  4E4F                     939          TRAP    #15
00001952                           940          
00001952  43F9 000021C2            941          LEA     SM7,A1
00001958  4E4F                     942          TRAP    #15
0000195A                           943  
0000195A  E15C                     944          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000195C  1204                     945          MOVE.B  D4,D1
0000195E  0281 00001100            946          ANDI.L  #$1100,D1
00001964                           947          
00001964  0C01 0000                948          CMPI.B  #%00000000,D1
00001968  6700 0028                949          BEQ     DBRA_16BIT      * Word
0000196C                           950          
0000196C  0C01 00FF                951          CMPI.B  #%11111111,D1
00001970  6700 0042                952          BEQ     DBRA_32BIT      * Long
00001974                           953          
00001974                           954          * 8 Bit Displacement
00001974  43F9 000021F9            955          LEA     DOLLAR,A1
0000197A  4E4F                     956          TRAP    #15
0000197C                           957          
0000197C  341A                     958          MOVE.W  (A2)+,D2
0000197E  D441                     959          ADD.W   D1,D2
00001980  5842                     960          ADD.W   #4,D2   *unsure   
00001982  1A3C 0030                961          MOVE.B  #48,D5
00001986  4EB8 117A                962          JSR     HEXOUT
0000198A  6000 05F4                963          BRA     DSEND
0000198E                           964  
0000198E                           965          *Displacement is put in D1      
0000198E                           966          
0000198E                           967          
0000198E  6000 05F0                968          BRA     DSEND
00001992                           969          
00001992                           970  DBRA_16BIT
00001992  43F9 000021F9            971          LEA     DOLLAR,A1
00001998  4E4F                     972          TRAP    #15
0000199A  341A                     973          MOVE.W  (A2)+,D2
0000199C  D44A                     974          ADD.W   A2,D2
0000199E  5542                     975          SUB.W   #2,D2   *unsure
000019A0  48E7 0400                976          MOVEM.L D5,-(SP)    
000019A4  1A3C 0030                977          MOVE.B  #48,D5
000019A8  4EB8 117A                978          JSR     HEXOUT
000019AC  4CDF 0020                979          MOVEM.L (SP)+,D5
000019B0  6000 05CE                980          BRA     DSEND
000019B4                           981  
000019B4                           982  DBRA_32BIT
000019B4  43F9 000021F9            983          LEA     DOLLAR,A1
000019BA  4E4F                     984          TRAP    #15
000019BC  241A                     985          MOVE.L  (A2)+,D2
000019BE  D48A                     986          ADD.L   A2,D2
000019C0  5582                     987          SUB.L   #2,D2   *unsure
000019C2  48E7 0400                988          MOVEM.L D5,-(SP)
000019C6  1A3C 0030                989          MOVE.B  #48,D5
000019CA  4EB8 117A                990          JSR     HEXOUT
000019CE  4CDF 0020                991          MOVEM.L (SP)+,D5
000019D2  6000 05AC                992          BRA     DSEND
000019D6                           993          
000019D6                           994          
000019D6                           995          
000019D6  43F9 00002230            996  DBGT    LEA     BGTM,A1
000019DC  4E4F                     997          TRAP    #15
000019DE                           998          
000019DE  43F9 000021C2            999          LEA     SM7,A1
000019E4  4E4F                    1000          TRAP    #15
000019E6                          1001          
000019E6  E15C                    1002          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019E8  1204                    1003          MOVE.B  D4,D1
000019EA  0241 00FF               1004          ANDI.W  #%0000000011111111,D1
000019EE                          1005          
000019EE  0C01 0000               1006          CMPI.B  #%00000000,D1
000019F2  679E                    1007          BEQ     DBRA_16BIT      * Word
000019F4                          1008          
000019F4  0C01 00FF               1009          CMPI.B  #%11111111,D1
000019F8  67BA                    1010          BEQ     DBRA_32BIT      * Long
000019FA                          1011          
000019FA  43F9 000021F9           1012          LEA     DOLLAR,A1
00001A00  4E4F                    1013          TRAP    #15
00001A02                          1014      
00001A02  340A                    1015          MOVE.W  A2,D2
00001A04  D441                    1016          ADD.W   D1,D2
00001A06                          1017    
00001A06  1A3C 0030               1018          MOVE.B  #48,D5
00001A0A  4EB8 117A               1019          JSR     HEXOUT
00001A0E  6000 0570               1020          BRA     DSEND
00001A12                          1021  
00001A12  43F9 00002234           1022  DBLE    LEA     BLEM,A1
00001A18  4E4F                    1023          TRAP    #15
00001A1A                          1024          
00001A1A  43F9 000021C2           1025          LEA     SM7,A1
00001A20  4E4F                    1026          TRAP    #15
00001A22                          1027          
00001A22  E15C                    1028          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A24  1204                    1029          MOVE.B  D4,D1
00001A26  0241 00FF               1030          ANDI.W  #%0000000011111111,D1
00001A2A                          1031          
00001A2A  0C01 0000               1032          CMPI.B  #%00000000,D1
00001A2E  6700 FF62               1033          BEQ     DBRA_16BIT      * Word
00001A32                          1034          
00001A32  0C01 00FF               1035          CMPI.B  #%11111111,D1
00001A36  6700 FF7C               1036          BEQ     DBRA_32BIT      * Long
00001A3A                          1037          
00001A3A  43F9 000021F9           1038          LEA     DOLLAR,A1
00001A40  4E4F                    1039          TRAP    #15
00001A42                          1040          
00001A42  340A                    1041          MOVE.W  A2,D2
00001A44  D441                    1042          ADD.W   D1,D2
00001A46                          1043   
00001A46  1A3C 0030               1044          MOVE.B  #48,D5
00001A4A  4EB8 117A               1045          JSR     HEXOUT
00001A4E                          1046          
00001A4E  6000 0530               1047          BRA     DSEND
00001A52                          1048  
00001A52  43F9 00002238           1049  DBEQ    LEA     BEQM,A1
00001A58  4E4F                    1050          TRAP    #15
00001A5A                          1051          
00001A5A  43F9 000021C2           1052          LEA     SM7,A1
00001A60  4E4F                    1053          TRAP    #15
00001A62                          1054          
00001A62  E15C                    1055          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A64  1204                    1056          MOVE.B  D4,D1
00001A66  0241 00FF               1057          ANDI.W  #%0000000011111111,D1
00001A6A                          1058          
00001A6A  0C01 0000               1059          CMPI.B  #%00000000,D1
00001A6E  6700 FF22               1060          BEQ     DBRA_16BIT      * Word
00001A72                          1061          
00001A72  0C01 00FF               1062          CMPI.B  #%11111111,D1
00001A76  6700 FF3C               1063          BEQ     DBRA_32BIT      * Long
00001A7A                          1064          
00001A7A  43F9 000021F9           1065          LEA     DOLLAR,A1
00001A80  4E4F                    1066          TRAP    #15
00001A82                          1067  
00001A82  340A                    1068          MOVE.W  A2,D2
00001A84  D441                    1069          ADD.W   D1,D2
00001A86                          1070   
00001A86  1A3C 0030               1071          MOVE.B  #48,D5
00001A8A  4EB8 117A               1072          JSR     HEXOUT
00001A8E                          1073          
00001A8E  6000 04F0               1074          BRA     DSEND
00001A92                          1075  
00001A92                          1076  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A92                          1077  
00001A92  4E71                    1078  DS0111  NOP
00001A94                          1079          
00001A94  4E71                    1080  DMOVEQ  NOP
00001A96  43F9 000021FF           1081          LEA     MOVEM,A1
00001A9C  4E4F                    1082          TRAP    #15
00001A9E  43F9 000021EB           1083          LEA     VALQ,A1
00001AA4  4E4F                    1084          TRAP    #15
00001AA6  43F9 000021C2           1085          LEA     SM7,A1
00001AAC  4E4F                    1086          TRAP    #15
00001AAE                          1087          
00001AAE                          1088          *getting register number
00001AAE  E75C                    1089          ROL.W   #3,D4
00001AB0  1A04                    1090          MOVE.B  D4,D5
00001AB2  CA3C 0007               1091          AND.B   #%111,D5
00001AB6                          1092          
00001AB6                          1093          *throwing error if next digit not 0
00001AB6  E35C                    1094          ROL.W   #1,D4
00001AB8  1C04                    1095          MOVE.B  D4,D6
00001ABA  CC3C 0001               1096          AND.B   #%1,D6
00001ABE  BC3C 0000               1097          CMP.B   #0,D6
00001AC2  6600 04B0               1098          BNE     DSERR
00001AC6                          1099          
00001AC6                          1100          *getting data and printing information
00001AC6  E15C                    1101          ROL.W   #8,D4
00001AC8  1204                    1102          MOVE.B  D4,D1
00001ACA  C23C 00FF               1103          AND.B   #%11111111,D1
00001ACE  43F9 000021E7           1104          LEA     VALN,A1
00001AD4  4E4F                    1105          TRAP    #15
00001AD6  103C 0003               1106          MOVE.B  #3,D0
00001ADA  4E4F                    1107          TRAP    #15
00001ADC  103C 000E               1108          MOVE.B  #14,D0
00001AE0  43F9 000021F7           1109          LEA     COMMA,A1
00001AE6  4E4F                    1110          TRAP    #15
00001AE8  43F9 000021E5           1111          LEA     VALD,A1
00001AEE  4E4F                    1112          TRAP    #15
00001AF0  103C 0003               1113          MOVE.B  #3,D0
00001AF4  3205                    1114          MOVE.W  D5,D1
00001AF6  4E4F                    1115          TRAP    #15
00001AF8                          1116          
00001AF8  6000 0486               1117          BRA     DSEND
00001AFC                          1118          
00001AFC                          1119  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AFC                          1120  
00001AFC  4E71                    1121  DS1000  NOP
00001AFE  6000 0480               1122          BRA     DSEND
00001B02                          1123          
00001B02  E75C                    1124  DOR     ROL.W   #3,D4           ; shift D4 left by 3 bits to get register number
00001B04  1A04                    1125          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B06  0205 0007               1126          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B0A  DA39 000021E5           1127          ADD.B   VALD,D5         ; Convert register number to ASCII
00001B10  43F9 000021E5           1128          LEA     VALD,A1         ; Load effective address of Dn
00001B16  4E4F                    1129          TRAP    #15             ; Print Dn
00001B18  1E05                    1130          MOVE.B  D5,D7           ; Store the register number for later use
00001B1A                          1131  
00001B1A  E75C                    1132          ROL.W   #3,D4           ; shift D4 left by 3 bits to get opmode
00001B1C  1A04                    1133          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B1E  0205 0007               1134          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B22  BA3C 0000               1135          CMP.B   #%000,D5        ; compare with byte size
00001B26  6700 0016               1136          BEQ     DORB
00001B2A  BA3C 0001               1137          CMP.B   #%001,D5        ; compare with word size
00001B2E  6700 0022               1138          BEQ     DORW
00001B32  BA3C 0002               1139          CMP.B   #%010,D5        ; compare with long size
00001B36  6700 002E               1140          BEQ     DORL
00001B3A                          1141          
00001B3A  6000 0444               1142          BRA     DSEND           ; branch to DSEND in case of invalid code
00001B3E                          1143  
00001B3E  43F9 00002214           1144  DORB    LEA     ORM,A1          ; load effective address of ORM string
00001B44  4E4F                    1145          TRAP    #15             ; print ORM string
00001B46  43F9 000021DA           1146          LEA     MODEB,A1        ; load effective address of MODEB string
00001B4C  4E4F                    1147          TRAP    #15             ; print MODEB string
00001B4E  6000 002A               1148          BRA     DORA           ; branch to addressing mode parsing
00001B52                          1149  
00001B52  43F9 00002214           1150  DORW    LEA     ORM,A1          ; load effective address of ORM string
00001B58  4E4F                    1151          TRAP    #15             ; print ORM string
00001B5A  43F9 000021DD           1152          LEA     MODEW,A1        ; load effective address of MODEW string
00001B60  4E4F                    1153          TRAP    #15             ; print MODEW string
00001B62  6000 0016               1154          BRA     DORA           ; branch to addressing mode parsing
00001B66                          1155  
00001B66  43F9 00002214           1156  DORL    LEA     ORM,A1          ; load effective address of ORM string
00001B6C  4E4F                    1157          TRAP    #15             ; print ORM string
00001B6E  43F9 000021E0           1158          LEA     MODEL,A1        ; load effective address of MODEL string
00001B74  4E4F                    1159          TRAP    #15             ; print MODEL string
00001B76  6000 0002               1160          BRA     DORA           ; branch to addressing mode parsing
00001B7A                          1161  
00001B7A  ED5C                    1162  DORA    ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001B7C                          1163  
00001B7C  1A04                    1164          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B7E  0205 0038               1165          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001B82  E61D                    1166          ROR.B   #3,D5           ; shift D5 right by 3 bits to get mode
00001B84  43F9 000021AC           1167          LEA     SM3,A1          ; load effective address of SM3 string
00001B8A  4E4F                    1168          TRAP    #15             ; print space
00001B8C  1C05                    1169          MOVE.B  D5,D6           ; store mode in D6 for further checks
00001B8E                          1170  
00001B8E  0204 0007               1171          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001B92  D839 000021E5           1172          ADD.B   VALD,D4         ; convert register number to ASCII
00001B98  43F9 000021E5           1173          LEA     VALD,A1         ; load effective address of Dn
00001B9E  4E4F                    1174          TRAP    #15             ; print Dn
00001BA0                          1175  
00001BA0  BC3C 0000               1176          CMP.B   #%000,D6        ; compare mode with Dn
00001BA4  6700 03DA               1177          BEQ     DSEND
00001BA8  BC3C 0002               1178          CMP.B   #%010,D6        ; compare mode with (An)
00001BAC  6700 03D2               1179          BEQ     DSEND
00001BB0  BC3C 0003               1180          CMP.B   #%011,D6        ; compare mode with (An)+
00001BB4  6700 03CA               1181          BEQ     DSEND
00001BB8  BC3C 0004               1182          CMP.B   #%100,D6        ; compare mode with -(An)
00001BBC  6700 03C2               1183          BEQ     DSEND
00001BC0  BC3C 0007               1184          CMP.B   #%111,D6        ; compare mode with (xxx).W or (xxx).L
00001BC4  6700 03BA               1185          BEQ     DSEND
00001BC8  6000 03B6               1186          BRA     DSEND           ; branch to DSEND in case of invalid code
00001BCC                          1187  
00001BCC                          1188  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BCC                          1189  
00001BCC  4E71                    1190  DS1001  NOP
00001BCE  4E71                    1191  DSUB    NOP
00001BD0                          1192  *print sub
00001BD0  43F9 00002208           1193          LEA     SUBM,A1
00001BD6  4E4F                    1194          TRAP    #15
00001BD8                          1195  
00001BD8                          1196  *parse dn reg: 3 bits
00001BD8                          1197  *number of the data register involved
00001BD8                          1198  *nums 0-7, paired with below
00001BD8  E75C                    1199          ROL.W   #3,D4       *dn reg num in d1
00001BDA  1E04                    1200          MOVE.B  D4,D7
00001BDC  0207 0007               1201          ANDI.B  #%111,D7
00001BE0                          1202          
00001BE0  3C47                    1203          MOVE.W  D7,A6       *temporary for storage
00001BE2                          1204  
00001BE2                          1205  *parse opmode: 3 bits
00001BE2                          1206  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001BE2                          1207  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001BE2                          1208  *invalid: 111, 011
00001BE2                          1209  *parse first digit separately
00001BE2  E35C                    1210          ROL.W   #1,D4       *addressing mode in d2
00001BE4  1E04                    1211          MOVE.B  D4,D7
00001BE6  0207 0001               1212          ANDI.B  #%1,D7
00001BEA                          1213          
00001BEA                          1214  *parsing next two digits of size
00001BEA  E55C                    1215          ROL.W   #2,D4       *size in d5
00001BEC  1A04                    1216          MOVE.B  D4,D5
00001BEE  0205 0003               1217          ANDI.B  #%11,D5
00001BF2  4EB8 11C2               1218          JSR     SIZE
00001BF6  43F9 000021C2           1219          LEA     SM7,A1
00001BFC  4E4F                    1220          TRAP    #15
00001BFE                          1221          
00001BFE                          1222  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001BFE  BE3C 0000               1223          CMP.B   #%0,D7       *if 1, then register info printed last
00001C02  6700 0026               1224          BEQ     DSUBEA      *branch to ea before register
00001C06                          1225          
00001C06                          1226  *printing register information
00001C06                          1227  DSUBPRNTREG
00001C06  43F9 000021E5           1228          LEA     VALD,A1
00001C0C  4E4F                    1229          TRAP    #15
00001C0E  320E                    1230          MOVE.W  A6,D1       *retrieving a6 register data
00001C10  103C 0003               1231          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C14  4E4F                    1232          TRAP    #15         *printing register number
00001C16  103C 000E               1233          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C1A  BE3C 0000               1234          CMP.B   #%0,D7      *if info finished printing
00001C1E  6700 0360               1235          BEQ     DSEND      *branch to end
00001C22  43F9 000021F7           1236          LEA     COMMA,A1
00001C28  4E4F                    1237          TRAP    #15
00001C2A                          1238  
00001C2A                          1239          
00001C2A                          1240  * parse ea mode: 3 bits
00001C2A                          1241  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C2A                          1242  *address reg direct not allowed for .B operations
00001C2A                          1243  *no invalid
00001C2A                          1244  DSUBEA
00001C2A  E75C                    1245          ROL.W   #3,D4       *ea mode
00001C2C  1604                    1246          MOVE.B  D4,D3
00001C2E  0203 0007               1247          ANDI.B  #%111,D3
00001C32                          1248  
00001C32                          1249  *parse ea reg: 3 bits
00001C32                          1250  *no invalid: paired with opmode below (nums 0-7)
00001C32                          1251  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001C32  E75C                    1252          ROL.W   #3,D4       *ea mode
00001C34  1C04                    1253          MOVE.B  D4,D6
00001C36  0206 0007               1254          ANDI.B  #%111,D6
00001C3A                          1255          
00001C3A  2803                    1256          MOVE.L  D3,D4   *temporarily using D4 
00001C3C                          1257          
00001C3C                          1258  *comparisons
00001C3C  B67C 0004               1259          CMP     #%100,D3
00001C40  6700 0332               1260          BEQ     DSERR
00001C44  4EB8 120C               1261          JSR     ADDRMODEALL
00001C48  BE3C 0001               1262          CMP.B   #%1,D7      *if info printed
00001C4C  6700 0332               1263          BEQ     DSEND       *end
00001C50  43F9 000021F7           1264          LEA     COMMA,A1
00001C56  4E4F                    1265          TRAP    #15
00001C58  60AC                    1266          BRA     DSUBPRNTREG *check d6 for size of data
00001C5A                          1267  *then take data from d4 and print (?)
00001C5A                          1268  
00001C5A  6000 0324               1269          BRA     DSEND
00001C5E                          1270  
00001C5E                          1271  
00001C5E                          1272  
00001C5E  4E71                    1273  DS1010  NOP
00001C60  6000 031E               1274          BRA     DSEND
00001C64                          1275  
00001C64                          1276          
00001C64                          1277  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C64                          1278  
00001C64  4E71                    1279  DS1011  NOP
00001C66  6000 0318               1280          BRA     DSEND
00001C6A                          1281          
00001C6A                          1282  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C6A                          1283  
00001C6A  4E71                    1284  DS1100  NOP
00001C6C  6000 0312               1285          BRA     DSEND
00001C70                          1286          
00001C70                          1287  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C70                          1288  
00001C70  4E71                    1289  DS1101  NOP
00001C72                          1290  
00001C72  4E71                    1291  DADD    NOP
00001C74  43F9 00002204           1292          LEA     ADDM,A1
00001C7A  4E4F                    1293          TRAP    #15
00001C7C                          1294          
00001C7C                          1295          *parse dn reg: 3 bits
00001C7C                          1296  *number of the data register involved
00001C7C                          1297  *nums 0-7, paired with below
00001C7C  E75C                    1298          ROL.W   #3,D4       *dn reg num in d7
00001C7E  1E04                    1299          MOVE.B  D4,D7
00001C80  0207 0007               1300          ANDI.B  #%111,D7
00001C84                          1301          
00001C84  3C47                    1302          MOVE.W  D7,A6
00001C86                          1303  
00001C86                          1304  *parse opmode: 3 bits
00001C86                          1305  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C86                          1306  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C86                          1307  *invalid: 111, 011
00001C86                          1308  *parse first digit separately
00001C86  E35C                    1309          ROL.W   #1,D4       *addressing mode in d2
00001C88  1E04                    1310          MOVE.B  D4,D7
00001C8A  0207 0001               1311          ANDI.B  #%1,D7
00001C8E                          1312          
00001C8E                          1313  *parsing next two digits of size
00001C8E  E55C                    1314          ROL.W   #2,D4       *size in d5
00001C90  1A04                    1315          MOVE.B  D4,D5
00001C92  0205 0003               1316          ANDI.B  #%11,D5
00001C96  BA3C 0003               1317          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001C9A  6700 007C               1318          BEQ     DADDA
00001C9E  4EB8 11C2               1319          JSR     SIZE
00001CA2  43F9 000021C2           1320          LEA     SM7,A1
00001CA8  4E4F                    1321          TRAP    #15
00001CAA                          1322          
00001CAA                          1323  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001CAA  BE3C 0000               1324          CMP.B   #%0,D7       *if 0, then register info printed last
00001CAE  6700 002E               1325          BEQ     DADDEA      *branch to ea before register
00001CB2                          1326          
00001CB2                          1327  *printing register information
00001CB2                          1328  DADDPRNTREG
00001CB2  BA3C 0003               1329          CMP.B   #%11,D5
00001CB6  6700 0058               1330          BEQ     PRINTA
00001CBA  43F9 000021E5           1331          LEA     VALD,A1
00001CC0                          1332  ADDCONT
00001CC0  4E4F                    1333          TRAP    #15
00001CC2  320E                    1334          MOVE.W  A6,D1       *moving reg num to d1 to print
00001CC4  103C 0003               1335          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001CC8  4E4F                    1336          TRAP    #15         *printing register number
00001CCA  103C 000E               1337          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001CCE  BE3C 0000               1338          CMP.B   #%0,D7      *if info finished printing
00001CD2  6700 02AC               1339          BEQ     DSEND      *branch to end
00001CD6  43F9 000021F7           1340          LEA     COMMA,A1
00001CDC  4E4F                    1341          TRAP    #15
00001CDE                          1342  
00001CDE                          1343          
00001CDE                          1344  * parse ea mode: 3 bits
00001CDE                          1345  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001CDE                          1346  *address reg direct not allowed for .B operations
00001CDE                          1347  *no invalid
00001CDE                          1348  DADDEA
00001CDE  E75C                    1349          ROL.W   #3,D4       *ea mode
00001CE0  1604                    1350          MOVE.B  D4,D3
00001CE2  0203 0007               1351          ANDI.B  #%111,D3
00001CE6                          1352  
00001CE6                          1353  *parse ea reg: 3 bits
00001CE6                          1354  *no invalid: paired with opmode below (nums 0-7)
00001CE6                          1355  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001CE6  E75C                    1356          ROL.W   #3,D4       *ea mode
00001CE8  1C04                    1357          MOVE.B  D4,D6
00001CEA  0206 0007               1358          ANDI.B  #%111,D6
00001CEE                          1359          
00001CEE                          1360  *comparisons
00001CEE  B67C 0004               1361          CMP     #%100,D3
00001CF2  6700 005A               1362          BEQ     ADDDATACHECK
00001CF6                          1363  DATACHECKCONT
00001CF6  4EB8 120C               1364          JSR     ADDRMODEALL
00001CFA  BE3C 0001               1365          CMP.B   #%1,D7      *if info printed
00001CFE  6700 0280               1366          BEQ     DSEND       *end
00001D02  43F9 000021F7           1367          LEA     COMMA,A1
00001D08  4E4F                    1368          TRAP    #15
00001D0A  60A6                    1369          BRA     DADDPRNTREG 
00001D0C                          1370  
00001D0C  6000 0272               1371          BRA     DSEND
00001D10                          1372          
00001D10  43F9 000021E3           1373  PRINTA  LEA     VALA,A1
00001D16  60A8                    1374          BRA     ADDCONT
00001D18                          1375  
00001D18                          1376          
00001D18  4E71                    1377  DADDA   NOP
00001D1A  43F9 000021E3           1378          LEA     VALA,A1
00001D20  4E4F                    1379          TRAP    #15
00001D22  BE3C 0000               1380          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001D26  6600 000C               1381          BNE     ADDAL
00001D2A  43F9 000021DD           1382          LEA     MODEW,A1
00001D30  6000 000C               1383          BRA     ADDSIZEEND
00001D34  43F9 000021E0           1384  ADDAL   LEA     MODEL,A1
00001D3A  6000 0002               1385          BRA     ADDSIZEEND
00001D3E                          1386  ADDSIZEEND
00001D3E  4E4F                    1387          TRAP    #15
00001D40  43F9 000021C2           1388          LEA     SM7,A1
00001D46  4E4F                    1389          TRAP    #15
00001D48  1E3C 0000               1390          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D4C  6090                    1391          BRA     DADDEA
00001D4E                          1392  ADDDATACHECK
00001D4E  BA3C 0003               1393          CMP.B   #%11,D5
00001D52  6700 0220               1394          BEQ     DSERR
00001D56  609E                    1395          BRA     DATACHECKCONT
00001D58                          1396          
00001D58                          1397          
00001D58                          1398  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D58                          1399  
00001D58                          1400  DS1110
00001D58  E75C                    1401          ROL.W   #3,D4           * [D2] Reading count
00001D5A  1404                    1402          MOVE.B  D4,D2
00001D5C  0202 0007               1403          ANDI.B  #%111,D2
00001D60                          1404          
00001D60  E35C                    1405          ROL.W   #1,D4           * [D3] Reading direction
00001D62  1604                    1406          MOVE.B  D4,D3
00001D64  0203 0001               1407          ANDI.B  #%1,D3
00001D68                          1408          
00001D68  E55C                    1409          ROL.W   #2,D4           * [D5] Reading size
00001D6A  1A04                    1410          MOVE.B  D4,D5
00001D6C  0205 0003               1411          ANDI.B  #%11,D5
00001D70                          1412          
00001D70  BA3C 0003               1413          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D74  6700 00F0               1414          BEQ     DS1110MEM
00001D78                          1415          
00001D78  E35C                    1416          ROL.W   #1,D4           * [D6] Reading count mode
00001D7A  1C04                    1417          MOVE.B  D4,D6
00001D7C  0206 0001               1418          ANDI.B  #%1,D6
00001D80                          1419          
00001D80  E55C                    1420          ROL.W   #2,D4           * [D7] reading type of shift
00001D82  1E04                    1421          MOVE.B  D4,D7
00001D84  0207 0003               1422          ANDI.B  #%11,D7
00001D88                          1423          
00001D88  E75C                    1424          ROL.W   #3,D4           * [D1] reading register
00001D8A  1204                    1425          MOVE.B  D4,D1
00001D8C  0201 0007               1426          ANDI.B  #%111,D1
00001D90                          1427          
00001D90  BE3C 0001               1428          CMP.B   #%01,D7   *Determine shift type
00001D94  6700 008E               1429          BEQ     DLS
00001D98  BE3C 0000               1430          CMP.B   #%00,D7
00001D9C  6700 0092               1431          BEQ     DAS
00001DA0  BE3C 0003               1432          CMP.B   #%11,D7
00001DA4  6700 0096               1433          BEQ     DRO
00001DA8                          1434          
00001DA8  6000 01D6               1435          BRA     DSEND               *Fallback in case of invalid code
00001DAC                          1436          
00001DAC  48E7 FFFF               1437  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001DB0  4EB9 00001E48           1438          JSR     DS1110SIDE
00001DB6  4CDF FFFF               1439          MOVEM.L (SP)+,A0-A7/D0-D7
00001DBA                          1440          
00001DBA  48E7 FFFF               1441          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001DBE  4EB8 11C2               1442          JSR     SIZE
00001DC2  4CDF FFFF               1443          MOVEM.L (SP)+,A0-A7/D0-D7
00001DC6                          1444          
00001DC6  103C 000E               1445          MOVE.B  #14,D0
00001DCA  43F9 000021B5           1446          LEA     SM5,A1
00001DD0  4E4F                    1447          TRAP    #15
00001DD2                          1448          
00001DD2  BA3C 0003               1449          CMP.B   #%11,D5
00001DD6  6700 00B4               1450          BEQ     DS1110MEMA
00001DDA                          1451          
00001DDA  BC3C 0001               1452          CMP.B   #%1,D6
00001DDE  6700 003A               1453          BEQ     DS1110_REG_D
00001DE2  6000 002C               1454          BRA     DS1110_REG_I
00001DE6                          1455          
00001DE6  1C01                    1456  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001DE8                          1457          
00001DE8  103C 0003               1458          MOVE.B  #3,D0
00001DEC  1202                    1459          MOVE.B  D2,D1
00001DEE  4E4F                    1460          TRAP    #15
00001DF0                          1461          
00001DF0  103C 000E               1462          MOVE.B  #14,D0
00001DF4  43F9 000021F7           1463          LEA     COMMA,A1
00001DFA  4E4F                    1464          TRAP    #15
00001DFC                          1465          
00001DFC  43F9 000021E5           1466          LEA     VALD,A1
00001E02  4E4F                    1467          TRAP    #15
00001E04                          1468          
00001E04  103C 0003               1469          MOVE.B  #3,D0
00001E08  1206                    1470          MOVE.B  D6,D1
00001E0A  4E4F                    1471          TRAP    #15
00001E0C                          1472          
00001E0C  6000 0172               1473          BRA     DSEND
00001E10                          1474          
00001E10                          1475  DS1110_REG_I
00001E10  43F9 000021E7           1476          LEA     VALN,A1
00001E16  4E4F                    1477          TRAP    #15
00001E18  60CC                    1478          BRA     DS1110B
00001E1A                          1479  
00001E1A                          1480  DS1110_REG_D
00001E1A  43F9 000021E5           1481          LEA     VALD,A1
00001E20  4E4F                    1482          TRAP    #15
00001E22  60C2                    1483          BRA     DS1110B       
00001E24                          1484          
00001E24  43F9 0000221B           1485  DLS     LEA     LSM,A1
00001E2A  4E4F                    1486          TRAP    #15
00001E2C  6000 FF7E               1487          BRA     DS1110A
00001E30                          1488          
00001E30  43F9 00002222           1489  DAS     LEA     ASM,A1
00001E36  4E4F                    1490          TRAP    #15
00001E38  6000 FF72               1491          BRA     DS1110A
00001E3C                          1492          
00001E3C  43F9 00002229           1493  DRO     LEA     ROM,A1
00001E42  4E4F                    1494          TRAP    #15
00001E44  6000 FF66               1495          BRA     DS1110A
00001E48                          1496          
00001E48                          1497  DS1110SIDE
00001E48  103C 0006               1498          MOVE.B  #6,D0
00001E4C  B63C 0001               1499          CMP.B   #1,D3
00001E50  6700 000C               1500          BEQ     DS1110LSIDE
00001E54  123C 0052               1501          MOVE.B  #82,D1
00001E58  4E4F                    1502          TRAP    #15
00001E5A  6000 0008               1503          BRA     DS1110SIDEEND
00001E5E                          1504  
00001E5E                          1505  DS1110LSIDE
00001E5E  123C 004C               1506          MOVE.B  #76,D1
00001E62  4E4F                    1507          TRAP    #15
00001E64                          1508          
00001E64                          1509  DS1110SIDEEND
00001E64  4E75                    1510          RTS 
00001E66                          1511  
00001E66                          1512  DS1110MEM
00001E66                          1513                                  * Shift type is instead stored in D2
00001E66                          1514          
00001E66  E75C                    1515          ROL.W   #3,D4           * [D6] Reading address mode
00001E68  1C04                    1516          MOVE.B  D4,D6
00001E6A  0206 0007               1517          ANDI.B  #%111,D6
00001E6E                          1518          
00001E6E  E75C                    1519          ROL.W   #3,D4           * [D1] Reading address register
00001E70  1204                    1520          MOVE.B  D4,D1
00001E72  0201 0007               1521          ANDI.B  #%111,D1
00001E76                          1522          
00001E76  B43C 0001               1523          CMP.B   #%01,D2
00001E7A  67A8                    1524          BEQ     DLS
00001E7C  B43C 0000               1525          CMP.B   #%00,D2
00001E80  67AE                    1526          BEQ     DAS
00001E82  B43C 0003               1527          CMP.B   #%11,D2
00001E86  67B4                    1528          BEQ     DRO
00001E88  6000 00F6               1529          BRA     DSEND
00001E8C                          1530          
00001E8C                          1531          
00001E8C                          1532  DS1110MEMA
00001E8C                          1533          
00001E8C  BC3C 0002               1534          CMP.B   #%010,D6
00001E90  6700 002E               1535          BEQ     DS1110MEM_REG
00001E94  BC3C 0003               1536          CMP.B   #%011,D6
00001E98  6700 004C               1537          BEQ     DS1110MEM_INC
00001E9C  BC3C 0004               1538          CMP.B   #%100,D6
00001EA0  6700 006A               1539          BEQ     DS1110MEM_DEC
00001EA4                          1540          
00001EA4  BC3C 0007               1541          CMP.B   #%111,D6
00001EA8  6600 00CA               1542          BNE     DSERR
00001EAC                          1543          
00001EAC  B23C 0000               1544          CMP.B   #%000,D1
00001EB0  6700 0080               1545          BEQ     DS1110MEM_CUSW
00001EB4  B23C 0001               1546          CMP.B   #%001,D1
00001EB8  6700 0096               1547          BEQ     DS1110MEM_CUSL
00001EBC                          1548          
00001EBC  6000 00C2               1549          BRA     DSEND
00001EC0                          1550  
00001EC0                          1551  DS1110MEM_REG
00001EC0  43F9 000021ED           1552          LEA     OPENPTR,A1
00001EC6  4E4F                    1553          TRAP    #15
00001EC8                          1554          
00001EC8  43F9 000021E3           1555          LEA     VALA,A1
00001ECE  4E4F                    1556          TRAP    #15
00001ED0                          1557          
00001ED0  103C 0003               1558          MOVE.B  #3,D0
00001ED4  4E4F                    1559          TRAP    #15
00001ED6  103C 000E               1560          MOVE.B  #14,D0
00001EDA                          1561          
00001EDA  43F9 000021F2           1562          LEA     CLOSEPTR,A1
00001EE0  4E4F                    1563          TRAP    #15
00001EE2                          1564          
00001EE2  6000 009C               1565          BRA     DSEND
00001EE6                          1566  
00001EE6                          1567  DS1110MEM_INC
00001EE6  43F9 000021ED           1568          LEA     OPENPTR,A1
00001EEC  4E4F                    1569          TRAP    #15
00001EEE                          1570          
00001EEE  43F9 000021E3           1571          LEA     VALA,A1
00001EF4  4E4F                    1572          TRAP    #15
00001EF6                          1573          
00001EF6  103C 0003               1574          MOVE.B  #3,D0
00001EFA  4E4F                    1575          TRAP    #15
00001EFC  103C 000E               1576          MOVE.B  #14,D0
00001F00                          1577          
00001F00  43F9 000021F4           1578          LEA     CLOSEIPTR,A1
00001F06  4E4F                    1579          TRAP    #15
00001F08                          1580          
00001F08  6000 0076               1581          BRA     DSEND
00001F0C                          1582  
00001F0C                          1583  DS1110MEM_DEC
00001F0C  43F9 000021EF           1584          LEA     OPENDPTR,A1
00001F12  4E4F                    1585          TRAP    #15
00001F14                          1586          
00001F14  43F9 000021E3           1587          LEA     VALA,A1
00001F1A  4E4F                    1588          TRAP    #15
00001F1C                          1589          
00001F1C  103C 0003               1590          MOVE.B  #3,D0
00001F20  4E4F                    1591          TRAP    #15
00001F22  103C 000E               1592          MOVE.B  #14,D0
00001F26                          1593          
00001F26  43F9 000021F2           1594          LEA     CLOSEPTR,A1
00001F2C  4E4F                    1595          TRAP    #15
00001F2E                          1596          
00001F2E  6000 0050               1597          BRA     DSEND
00001F32                          1598          
00001F32                          1599  DS1110MEM_CUSW
00001F32  43F9 000021F9           1600          LEA     DOLLAR,A1
00001F38  4E4F                    1601          TRAP    #15
00001F3A  341A                    1602          MOVE.W  (A2)+,D2
00001F3C  48E7 0400               1603          MOVEM.L D5,-(SP)
00001F40  1A3C 0030               1604          MOVE.B  #48,D5
00001F44  4EB8 117A               1605          JSR     HEXOUT
00001F48  4CDF 0020               1606          MOVEM.L (SP)+,D5
00001F4C  6000 0032               1607          BRA     DSEND
00001F50                          1608          
00001F50                          1609  DS1110MEM_CUSL
00001F50  43F9 000021F9           1610          LEA     DOLLAR,A1
00001F56  4E4F                    1611          TRAP    #15
00001F58  241A                    1612          MOVE.L  (A2)+,D2
00001F5A  48E7 0400               1613          MOVEM.L D5,-(SP)
00001F5E  1A3C 0030               1614          MOVE.B  #48,D5
00001F62  4EB8 117A               1615          JSR     HEXOUT
00001F66  4CDF 0020               1616          MOVEM.L (SP)+,D5
00001F6A  6000 0014               1617          BRA     DSEND
00001F6E                          1618          
00001F6E                          1619  
00001F6E                          1620  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F6E                          1621  
00001F6E  4E71                    1622  DS1111  NOP
00001F70  6000 000E               1623          BRA     DSEND
00001F74                          1624  
00001F74                          1625  *DS Final
00001F74                          1626  *--------------------------------------------------------------------------------------------------
00001F74                          1627  
00001F74  103C 000E               1628  DSERR   MOVE.B  #14,D0
00001F78  43F9 000021D1           1629          LEA     ERRM,A1
00001F7E  4E4F                    1630          TRAP    #15
00001F80                          1631  
00001F80  4E75                    1632  DSEND   RTS
00001F82                          1633  
00001F82  43F9 000021A2           1634  DSEOF   LEA     LB,A1
00001F88  103C 000E               1635          MOVE.B  #14,D0
00001F8C  4E4F                    1636          TRAP    #15
00001F8E                          1637          
00001F8E  43F9 000020A4           1638          LEA     REST,A1
00001F94  103C 000E               1639          MOVE.B  #14,D0
00001F98  4E4F                    1640          TRAP    #15
00001F9A                          1641          
00001F9A  103C 0005               1642          MOVE.B  #5,D0
00001F9E  4E4F                    1643          TRAP    #15
00001FA0                          1644          
00001FA0  B23C 0059               1645          CMP.B   #89,D1
00001FA4  6700 F05A               1646          BEQ     START
00001FA8  B23C 0079               1647          CMP.B   #121,D1
00001FAC  6700 F052               1648          BEQ     START
00001FB0                          1649  
00001FB0  43F9 000021A2           1650  END     LEA     LB,A1
00001FB6  103C 000E               1651          MOVE.B  #14,D0
00001FBA  4E4F                    1652          TRAP    #15
00001FBC                          1653          
00001FBC  43F9 000021A2           1654          LEA     LB,A1
00001FC2  103C 000E               1655          MOVE.B  #14,D0
00001FC6  4E4F                    1656          TRAP    #15
00001FC8                          1657          
00001FC8  43F9 000020C1           1658          LEA     ENDMSG,A1
00001FCE  103C 000E               1659          MOVE.B  #14,D0
00001FD2  4E4F                    1660          TRAP    #15
00001FD4                          1661          
00001FD4  43F9 000020E9           1662          LEA     AUTHOR,A1
00001FDA  4E4F                    1663          TRAP    #15
00001FDC                          1664          
00001FDC  43F9 000021A2           1665          LEA     LB,A1
00001FE2  103C 000E               1666          MOVE.B  #14,D0
00001FE6  4E4F                    1667          TRAP    #15
00001FE8                          1668          
00001FE8  103C 0009               1669          MOVE.B  #9,D0
00001FEC  4E4F                    1670          TRAP    #15
00001FEE                          1671  
00001FEE                          1672  *Initialized Variables
00001FEE                          1673  *--------------------------------------------------------------------------------------------------
00001FEE                          1674  
00001FEE  =0000000D               1675  CR      EQU     $0D
00001FEE  =0000000A               1676  LF      EQU     $0A
00001FEE  =00000009               1677  HT      EQU     $09
00001FEE                          1678  
00001FEE= 54 68 69 73 20 69 ...   1679  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002076= 45 6E 74 65 72 20 ...   1680  ASTART  DC.B    'Enter start address: $',0
0000208D= 45 6E 74 65 72 20 ...   1681  AEND    DC.B    'Enter end address:   $',0
000020A4= 52 65 73 74 61 72 ...   1682  REST    DC.B    'Restart Disassembler (y/n)? ',0
000020C1= 54 68 61 6E 6B 20 ...   1683  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000020E9= 4D 61 64 65 20 62 ...   1684  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000210E                          1685  
0000210E= 45 52 52 4F 52 3A ...   1686  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002148= 45 52 52 4F 52 3A ...   1687  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000216E= 45 52 52 4F 52 3A ...   1688  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000021A2                          1689  
000021A2= 0D 0A 00                1690  LB      DC.B    CR,LF,0
000021A5                          1691  
000021A5= 09 00                   1692  HTM     DC.B    HT,0
000021A7                          1693  
000021A7= 20 00                   1694  SM1     DC.B    ' ',0
000021A9= 20 20 00                1695  SM2     DC.B    '  ',0
000021AC= 20 20 20 00             1696  SM3     DC.B    '   ',0
000021B0= 20 20 20 20 00          1697  SM4     DC.B    '    ',0
000021B5= 20 20 20 20 20 00       1698  SM5     DC.B    '     ',0
000021BB= 20 20 20 20 20 20 00    1699  SM6     DC.B    '      ',0
000021C2= 20 20 20 20 20 20 ...   1700  SM7     DC.B    '       ',0
000021CA                          1701  
000021CA= 54 45 53 54 00          1702  TESTM   DC.B    'TEST',0
000021CF                          1703  
000021CF= 00                      1704  NOTH    DC.B    '',0
000021D0= 00                      1705  NOTH2   DC.B    '',0
000021D1                          1706  
000021D1= 20 20 2A 45 52 52 ...   1707  ERRM    DC.B    '  *ERROR',0
000021DA                          1708  
000021DA= 2E 42 00                1709  MODEB   DC.B    '.B',0
000021DD= 2E 57 00                1710  MODEW   DC.B    '.W',0
000021E0= 2E 4C 00                1711  MODEL   DC.B    '.L',0
000021E3                          1712  
000021E3= 41 00                   1713  VALA    DC.B    'A',0
000021E5= 44 00                   1714  VALD    DC.B    'D',0
000021E7= 23 00                   1715  VALN    DC.B    '#',0
000021E9= 30 00                   1716  VAL0    DC.B    '0',0
000021EB= 51 00                   1717  VALQ    DC.B    'Q',0
000021ED                          1718  
000021ED= 28 00                   1719  OPENPTR     DC.B    '(',0
000021EF= 2D 28 00                1720  OPENDPTR    DC.B    '-(',0
000021F2                          1721  
000021F2= 29 00                   1722  CLOSEPTR    DC.B    ')',0
000021F4= 29 2B 00                1723  CLOSEIPTR   DC.B    ')+',0
000021F7                          1724  
000021F7= 2C 00                   1725  COMMA   DC.B    ',',0
000021F9= 24 00                   1726  DOLLAR  DC.B    '$',0
000021FB                          1727  
000021FB= 4E 4F 50 00             1728  NOPM    DC.B    'NOP',0
000021FF                          1729  
000021FF= 4D 4F 56 45 00          1730  MOVEM   DC.B    'MOVE',0
00002204                          1731  
00002204= 41 44 44 00             1732  ADDM    DC.B    'ADD',0
00002208                          1733  
00002208= 53 55 42 00             1734  SUBM    DC.B    'SUB',0
0000220C                          1735  
0000220C= 4C 45 41 00             1736  LEAM    DC.B    'LEA',0
00002210                          1737  
00002210= 41 4E 44 00             1738  ANDM    DC.B    'AND',0
00002214= 4F 52 00                1739  ORM     DC.B    'OR',0
00002217= 4E 4F 54 00             1740  NOTM    DC.B    'NOT',0
0000221B                          1741  
0000221B= 4C 53 00                1742  LSM    DC.B    'LS',0
0000221E= 4C 53 52 00             1743  LSRM    DC.B    'LSR',0
00002222= 41 53 00                1744  ASM    DC.B    'AS',0
00002225= 41 53 52 00             1745  ASRM    DC.B    'ASR',0
00002229                          1746  
00002229= 52 4F 00                1747  ROM    DC.B    'RO',0
0000222C= 52 4F 52 00             1748  RORM    DC.B    'ROR',0
00002230                          1749  
00002230= 42 47 54 00             1750  BGTM    DC.B    'BGT',0
00002234= 42 4C 45 00             1751  BLEM    DC.B    'BLE',0
00002238= 42 45 51 00             1752  BEQM    DC.B    'BEQ',0
0000223C                          1753  
0000223C= 4A 53 52 00             1754  JSRM    DC.B    'JSR',0
00002240= 52 54 53 00             1755  RTSM    DC.B    'RTS',0
00002244                          1756  
00002244= 42 52 41 00             1757  BRAM    DC.B    'BRA',0
00002248                          1758  
00002248                          1759  
00002248                          1760      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1D34
ADDCONT             1CC0
ADDDATACHECK        1D4E
ADDM                2204
ADDRMODEALL         120C
ADDSIZEEND          1D3E
ADREG               167C
ADREGP              1694
AEND                208D
AM000               120C
AM001               122C
AM010               1254
AM011               1284
AM100               12B4
AM111               12E4
AM111001            1312
AM111100            1338
AMEND               1366
ANDM                2210
ASM                 2222
ASRM                2225
ASTART              2076
AUTHOR              20E9
BEQM                2238
BGTM                2230
BLEM                2234
BRAM                2244
CLOSEIPTR           21F4
CLOSEPTR            21F2
COMMA               21F7
CR                  D
DADD                1C72
DADDA               1D18
DADDEA              1CDE
DADDPRNTREG         1CB2
DADDQ               18A6
DAND                139E
DANDA               1416
DANDB               13DA
DANDL               1402
DANDW               13EE
DAS                 1E30
DATACHECKCONT       1CF6
DBEQ                1A52
DBGT                19D6
DBLE                1A12
DBRA                194A
DBRA_16BIT          1992
DBRA_32BIT          19B4
DISASM              136C
DJSR                16FE
DJSR_CUSL           1796
DJSR_CUSW           1778
DJSR_REG            1752
DLEA                17C0
DLS                 1E24
DMOVE2              1468
DMOVEA              150C
DMOVEQ              1A94
DNOP                15C2
DNOT                15CE
DNOTA               162E
DNOTB               15F2
DNOTL               161A
DNOTW               1606
DOLLAR              21F9
DOR                 1B02
DORA                1B7A
DORB                1B3E
DORL                1B66
DORW                1B52
DREG                1664
DRO                 1E3C
DRTS                17B4
DS0                 1376
DS00                138A
DS01                152E
DS010               154C
DS0100              1588
DS0101              18A4
DS011               1556
DS0110              191E
DS0111              1A92
DS1                 1380
DS10                1538
DS100               1560
DS1000              1AFC
DS1001              1BCC
DS101               156A
DS1010              1C5E
DS1011              1C64
DS11                1542
DS110               1574
DS1100              1C6A
DS1101              1C70
DS111               157E
DS1110              1D58
DS1110A             1DAC
DS1110B             1DE6
DS1110LSIDE         1E5E
DS1110MEM           1E66
DS1110MEMA          1E8C
DS1110MEM_CUSL      1F50
DS1110MEM_CUSW      1F32
DS1110MEM_DEC       1F0C
DS1110MEM_INC       1EE6
DS1110MEM_REG       1EC0
DS1110SIDE          1E48
DS1110SIDEEND       1E64
DS1110_REG_D        1E1A
DS1110_REG_I        1E10
DS1111              1F6E
DSEND               1F80
DSEOF               1F82
DSERR               1F74
DSUB                1BCE
DSUBEA              1C2A
DSUBPRNTREG         1C06
END                 1FB0
ENDMSG              20C1
ERRM                21D1
EXT                 16DC
EXTW                16F2
HDONE               11C0
HEXOUT              117A
HHEX                1194
HNUM                119C
HSKIP2              11AA
HSKIP3              11BE
HSTEP               1182
HSTEP2              11A0
HT                  9
HTM                 21A5
INTRO               1FEE
JSR010              17F8
JSR111              1828
JSR111001           185A
JSRM                223C
JSRPRINT2           1884
LB                  21A2
LEAM                220C
LF                  A
LSM                 221B
LSRM                221E
MADREG              16B4
MODEB               21DA
MODEL               21E0
MODEW               21DD
MOVECONT            148C
MOVEERRCHECK        1522
MOVEM               21FF
MSDONE              14D2
MSIZE               148C
MSIZEB              14B4
MSIZEL              14C8
MSIZEW              14BE
NOPM                21FB
NOTH                21CF
NOTH2               21D0
NOTM                2217
OPENDPTR            21EF
OPENPTR             21ED
ORM                 2214
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1D10
PSTEP               108E
PSTEP2              10BE
RCONT               1166
READLN              1118
REST                20A4
ROM                 2229
RORM                222C
RPAUSE              116E
RSTEP               111E
RTSM                2240
SDONE               1208
SIZE                11C2
SIZEB               11EA
SIZEL               11FE
SIZEW               11F4
SM1                 21A7
SM2                 21A9
SM3                 21AC
SM4                 21B0
SM5                 21B5
SM6                 21BB
SM7                 21C2
SRET                120A
START               1000
STARTER             0
SUBM                2208
TEST                102A
TESTM               21CA
VAL0                21E9
VALA                21E3
VALD                21E5
VALN                21E7
VALQ                21EB
VERR1               10E8
VERR1M              210E
VERR2               10F8
VERR2M              2148
VERR3               1108
VERR3M              216E
VINPUT              10DE
