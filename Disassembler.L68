00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 8:33:34 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 0000225C             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 000022E4             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 0000243D             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 000022FB             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 0000243D             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 0000237C            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 1118                114          BRA     END
00001108                           115  
00001108  43F9 000023B6            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 1108                119          BRA     END
00001118                           120  
00001118  43F9 000023DC            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 10F8                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 00002417            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 00002410            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 1076                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 0000246D            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 00002470            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 00002473            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 00002478            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0F78                256          BEQ     DSERR
0000124C  43F9 00002476            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 00002482            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 00002476            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 00002487            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 00002482            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 00002476            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 00002489            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 00002484            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 00002476            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 00002487            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0EC8                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 0000248E            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 0000248E            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0E74                334          BNE     DSERR
00001350  43F9 0000247A            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 01E8                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 01F2                373          BCS     DS11
00001396  6000 01E4                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 0006                381          BEQ     DAND
000013AA  6000 00A2                382          BRA     DMOVE2
000013AE                           383  
000013AE  E95C                     384  DAND    ROL.W   #4,D4
000013B0  1A04                     385          MOVE.B  D4,D5
000013B2  0205 0002                386          ANDI.B  #%0010,D5
000013B6  0C05 0002                387          CMPI.B  #%0010,D5
000013BA  6600 0E16                388          BNE     DSERRINS
000013BE                           389          
000013BE  E55C                     390          ROL.W   #2,D4
000013C0  1A04                     391          MOVE.B  D4,D5
000013C2  0205 0007                392          ANDI.B  #%111,D5
000013C6                           393          
000013C6  E75C                     394          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013C8  1604                     395          MOVE.B  D4,D3           ; Move the byte in D4 to D5
000013CA  0203 0007                396          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
000013CE                           397          
000013CE  E75C                     398          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013D0  1C04                     399          MOVE.B  D4,D6           ; Move the byte in D4 to D5
000013D2  0206 0007                400          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
000013D6                           401          
000013D6  43F9 00002478            402          LEA     VALD,A1         ; Load effective address of Dn
000013DC  4E4F                     403          TRAP    #15             ; Print Dn
000013DE  1E05                     404          MOVE.B  D5,D7           ; Store the register number for later use
000013E0                           405  
000013E0                           406          
000013E0  BA3C 0000                407          CMP.B   #%000,D5        ; Compare with byte size
000013E4  6700 0016                408          BEQ     DANDB
000013E8  BA3C 0001                409          CMP.B   #%001,D5        ; Compare with word size
000013EC  6700 0022                410          BEQ     DANDW
000013F0  BA3C 0002                411          CMP.B   #%010,D5        ; Compare with long size
000013F4  6700 002E                412          BEQ     DANDL
000013F8                           413          
000013F8  6000 0DF4                414          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013FC                           415  
000013FC  43F9 000024A9            416  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001402  4E4F                     417          TRAP    #15             ; Print ANDM string
00001404  43F9 0000246D            418          LEA     MODEB,A1        ; Load effective address of MODEB string
0000140A  4E4F                     419          TRAP    #15             ; Print MODEB string
0000140C  6000 002A                420          BRA     DANDA           ; Branch to addressing mode parsing
00001410                           421  
00001410  43F9 000024A9            422  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001416  4E4F                     423          TRAP    #15             ; Print ANDM string
00001418  43F9 00002470            424          LEA     MODEW,A1        ; Load effective address of MODEW string
0000141E  4E4F                     425          TRAP    #15             ; Print MODEW string
00001420  6000 0016                426          BRA     DANDA           ; Branch to addressing mode parsing
00001424                           427  
00001424  43F9 000024A9            428  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000142A  4E4F                     429          TRAP    #15             ; Print ANDM string
0000142C  43F9 00002473            430          LEA     MODEL,A1        ; Load effective address of MODEL string
00001432  4E4F                     431          TRAP    #15             ; Print MODEL string
00001434  6000 0002                432          BRA     DANDA           ; Branch to addressing mode parsing
00001438                           433  
00001438  43F9 00002423            434  DANDA   LEA     SM5,A1
0000143E  4E4F                     435          TRAP    #15
00001440                           436  
00001440  0204 0007                437          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001444  1C04                     438          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001446                           439  
00001446  4EB8 121C                440          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
0000144A                           441  
0000144A  6000 0DA2                442          BRA     DSEND                 
0000144E                           443  
0000144E                           444  
0000144E                           445          
0000144E                           446  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
0000144E  4E71                     447  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001450                           448          *size in d5 from above processing
00001450  43F9 00002498            449          LEA     MOVEM,A1
00001456  4E4F                     450          TRAP    #15
00001458                           451                  
00001458                           452          *dest reg to d7
00001458  E75C                     453          ROL.W   #3,D4
0000145A  1E04                     454          MOVE.B  D4,D7
0000145C  CE3C 0007                455          AND.B   #%111,D7
00001460                           456          
00001460                           457          *dest mode to d3: An means MOVEA
00001460  E75C                     458          ROL.W   #3,D4
00001462  1604                     459          MOVE.B  D4,D3
00001464  C63C 0007                460          AND.B   #%111,D3
00001468  3C43                     461          MOVE.W  D3,A6
0000146A                           462          
0000146A  B67C 0001                463          CMP     #%001,D3
0000146E  6700 00E0                464          BEQ     DMOVEA
00001472                           465          
00001472                           466  
00001472                           467  MOVECONT
00001472                           468  *printing size then first addressing moode, then comma
00001472                           469  *size is different for move
00001472                           470  MSIZENORM  
00001472  103C 000E                471          MOVE.B  #14,D0
00001476  BA3C 0001                472          CMP.B   #%01,D5
0000147A  6700 0046                473          BEQ     MSIZEBN
0000147E  BA3C 0003                474          CMP.B   #%11,D5
00001482  6700 0050                475          BEQ     MSIZEWN
00001486  BA3C 0002                476          CMP.B   #%10,D5
0000148A  6700 005A                477          BEQ     MSIZELN
0000148E  BA3C 0003                478          CMP.B   #%11,D5
00001492  6700 006E                479          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001496  6000 0D2A                480          BRA     DSERR
0000149A                           481          
0000149A                           482  MSIZE
0000149A  103C 000E                483          MOVE.B  #14,D0
0000149E  BA3C 0001                484          CMP.B   #%01,D5
000014A2  6700 0054                485          BEQ     MSIZEB
000014A6  BA3C 0003                486          CMP.B   #%11,D5
000014AA  6700 0056                487          BEQ     MSIZEW
000014AE  BA3C 0002                488          CMP.B   #%10,D5
000014B2  6700 0058                489          BEQ     MSIZEL
000014B6  BA3C 0003                490          CMP.B   #%11,D5
000014BA  6700 0046                491          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014BE  6000 0D02                492          BRA     DSERR
000014C2                           493  
000014C2  43F9 0000246D            494  MSIZEBN LEA     MODEB,A1
000014C8  4E4F                     495          TRAP    #15
000014CA  43F9 00002415            496          LEA     SM1,A1
000014D0  6000 0044                497          BRA     MSDONE
000014D4                           498  
000014D4  43F9 00002470            499  MSIZEWN LEA     MODEW,A1
000014DA  4E4F                     500          TRAP    #15
000014DC  43F9 00002415            501          LEA     SM1,A1
000014E2  6000 0032                502          BRA     MSDONE
000014E6                           503  
000014E6  43F9 00002473            504  MSIZELN LEA     MODEL,A1
000014EC  4E4F                     505          TRAP    #15
000014EE  43F9 00002415            506          LEA     SM1,A1
000014F4  6000 0020                507          BRA     MSDONE
000014F8                           508      
000014F8  43F9 0000246D            509  MSIZEB  LEA     MODEB,A1
000014FE  6000 0016                510          BRA     MSDONE
00001502                           511  
00001502  43F9 00002470            512  MSIZEW  LEA     MODEW,A1
00001508  6000 000C                513          BRA     MSDONE
0000150C                           514  
0000150C  43F9 00002473            515  MSIZEL  LEA     MODEL,A1
00001512  6000 0002                516          BRA     MSDONE
00001516                           517  
00001516  4E4F                     518  MSDONE  TRAP    #15
00001518                           519  
00001518  43F9 0000241A            520          LEA     SM3,A1
0000151E  4E4F                     521          TRAP    #15
00001520                           522          
00001520                           523          *source mode to d3
00001520  E75C                     524          ROL.W   #3,D4
00001522  1604                     525          MOVE.B  D4,D3
00001524  C63C 0007                526          AND.B   #%111,D3
00001528                           527          
00001528                           528          *source reg to d6
00001528  E75C                     529          ROL.W   #3,D4
0000152A  1C04                     530          MOVE.B  D4,D6
0000152C  CC3C 0007                531          AND.B   #%111,D6
00001530                           532          
00001530  4EB8 121C                533          JSR     ADDRMODEALL
00001534  B67C 0001                534          CMP     #%001,D3
00001538  6700 002C                535          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
0000153C  43F9 0000248C            536          LEA     COMMA,A1
00001542  4E4F                     537          TRAP    #15
00001544  1C07                     538          MOVE.B  D7,D6
00001546  360E                     539          MOVE.W  A6,D3
00001548  4EB8 121C                540          JSR     ADDRMODEALL
0000154C  6000 0CA0                541          BRA     DSEND
00001550                           542  
00001550  4E71                     543  DMOVEA  NOP
00001552  BA7C 0001                544          CMP     #%01,D5     *if size is byte, err
00001556  6700 0C6A                545          BEQ     DSERR
0000155A  43F9 00002476            546          LEA     VALA,A1        *else, print A and return
00001560  4E4F                     547          TRAP    #15
00001562  6000 FF36                548          BRA     MSIZE
00001566                           549  
00001566                           550  MOVEERRCHECK
00001566  BA7C 0001                551          CMP     #%01,D5
0000156A  6700 0C56                552          BEQ     DSERR
0000156E  6000 0C7E                553          BRA     DSEND
00001572                           554  
00001572                           555          
00001572                           556  
00001572                           557  *DS Tier 2 ----------------------------------------------------------------------------------------
00001572                           558  
00001572                           559  DS01                        *DS01: Tier 2 binary search for 01 side
00001572  E34C                     560          LSL.W   #1,D4
00001574  6500 0024                561          BCS     DS011
00001578  6000 0016                562          BRA     DS010
0000157C                           563  
0000157C                           564  DS10                        *DS10: Tier 2 binary search for 10 side
0000157C  E34C                     565          LSL.W   #1,D4
0000157E  6500 002E                566          BCS     DS101
00001582  6000 0020                567          BRA     DS100
00001586                           568  
00001586                           569  DS11                        *DS11: Tier 2 binary search for 11 side
00001586  E34C                     570          LSL.W   #1,D4
00001588  6500 0038                571          BCS     DS111
0000158C  6000 002A                572          BRA     DS110
00001590                           573  
00001590                           574  *DS Tier 3 ----------------------------------------------------------------------------------------
00001590                           575  
00001590                           576  DS010                       *DS010: Tier 3 binary search for 010 side
00001590  E34C                     577          LSL.W   #1,D4
00001592  6500 0552                578          BCS     DS0101
00001596  6000 0034                579          BRA     DS0100
0000159A                           580  
0000159A                           581  DS011                       *DS011: Tier 3 binary search for 011 side
0000159A  E34C                     582          LSL.W   #1,D4
0000159C  6500 0736                583          BCS     DS0111
000015A0  6000 05BE                584          BRA     DS0110
000015A4                           585  
000015A4                           586  DS100                       *DS100: Tier 3 binary search for 100 side
000015A4  E34C                     587          LSL.W   #1,D4
000015A6  6500 0872                588          BCS     DS1001
000015AA  6000 0792                589          BRA     DS1000
000015AE                           590  
000015AE                           591  DS101                       *DS101: Tier 3 binary search for 101 side
000015AE  E34C                     592          LSL.W   #1,D4
000015B0  6500 0900                593          BCS     DS1011
000015B4  6000 08F6                594          BRA     DS1010
000015B8                           595  
000015B8                           596  DS110                       *DS110: Tier 3 binary search for 110 side
000015B8  E34C                     597          LSL.W   #1,D4
000015BA  6500 0902                598          BCS     DS1101
000015BE  6000 08F8                599          BRA     DS1100
000015C2                           600  
000015C2                           601  DS111                       *DS111: Tier 3 binary search for 111 side
000015C2  E34C                     602          LSL.W   #1,D4
000015C4  6500 0BF6                603          BCS     DS1111
000015C8  6000 09DC                604          BRA     DS1110
000015CC                           605  
000015CC                           606  *DS Tier 4 ----------------------------------------------------------------------------------------
000015CC                           607  
000015CC                           608  DS0100                      *DS0100: Processing for 0100 prefix
000015CC  0C44 E710                609          CMPI.W  #%1110011100010000,D4
000015D0  6700 0042                610          BEQ     DNOP
000015D4  0C44 E750                611          CMPI.W  #%1110011101010000,D4
000015D8  6700 022C                612          BEQ     DRTS
000015DC                           613          
000015DC  3404                     614          MOVE.W  D4,D2
000015DE  0242 1C00                615          ANDI.W  #%0001110000000000,D2
000015E2  0C42 1C00                616          CMPI.W  #%0001110000000000,D2
000015E6  6700 022A                617          BEQ     DLEA
000015EA                           618          
000015EA  3404                     619          MOVE.W  D4,D2
000015EC  0242 B800                620          ANDI.W  #%1011100000000000,D2
000015F0  0C42 8800                621          CMPI.W  #%1000100000000000,D2
000015F4  6700 032A                622          BEQ     DMOVEM
000015F8                           623          
000015F8  E95C                     624          ROL.W   #4,D4
000015FA  1404                     625          MOVE.B  D4,D2
000015FC  0202 000F                626          ANDI.B  #%1111,D2
00001600                           627          
00001600  B43C 000E                628          CMP.B   #%1110,D2
00001604  6700 014A                629          BEQ     DJSR
00001608                           630          
00001608  B43C 0006                631          CMP.B   #%0110,D2
0000160C  6700 0012                632          BEQ     DNOT
00001610                           633          
00001610  6000 0BC0                634          BRA     DSERRINS
00001614                           635  
00001614  43F9 00002494            636  DNOP    LEA     NOPM,A1
0000161A  4E4F                     637          TRAP    #15
0000161C  6000 0BD0                638          BRA     DSEND
00001620                           639          
00001620  E55C                     640  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
00001622  1A04                     641          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001624  0205 0003                642          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001628                           643  
00001628  BA3C 0000                644          CMP.B   #%00,D5         ; compare with byte size
0000162C  6700 0016                645          BEQ     DNOTB
00001630  BA3C 0001                646          CMP.B   #%01,D5         ; compare with word size
00001634  6700 0022                647          BEQ     DNOTW
00001638  BA3C 0002                648          CMP.B   #%10,D5         ; compare with long size
0000163C  6700 002E                649          BEQ     DNOTL
00001640                           650          
00001640  6000 0BAC                651          BRA     DSEND           ; branch to DSEND in case of invalid code
00001644                           652  
00001644  43F9 000024B0            653  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
0000164A  4E4F                     654          TRAP    #15             ; print NOTM string
0000164C  43F9 0000246D            655          LEA     MODEB,A1        ; load effective address of MODEB string
00001652  4E4F                     656          TRAP    #15             ; print MODEB string
00001654  6000 002A                657          BRA     DNOTA           ; branch to addressing mode parsing
00001658                           658  
00001658  43F9 000024B0            659  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
0000165E  4E4F                     660          TRAP    #15             ; print NOTM string
00001660  43F9 00002470            661          LEA     MODEW,A1        ; load effective address of MODEW string
00001666  4E4F                     662          TRAP    #15             ; print MODEW string
00001668  6000 0016                663          BRA     DNOTA           ; branch to addressing mode parsing
0000166C                           664  
0000166C  43F9 000024B0            665  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001672  4E4F                     666          TRAP    #15             ; print NOTM string
00001674  43F9 00002473            667          LEA     MODEL,A1        ; load effective address of MODEL string
0000167A  4E4F                     668          TRAP    #15             ; print MODEL string
0000167C  6000 0002                669          BRA     DNOTA           ; branch to addressing mode parsing
00001680                           670  
00001680  ED5C                     671  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001682  1204                     672          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001684  0201 003F                673          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
00001688                           674  
00001688                           675          ; Now process addressing mode and register based on the value in D1
00001688                           676  
00001688  1A01                     677          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000168A  0205 0007                678          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
0000168E  6700 0026                679          BEQ     DREG            ; If it is direct register mode
00001692  BA3C 0002                680          CMP.B   #%010,D5        ; Compare with An
00001696  6700 0036                681          BEQ     ADREG
0000169A  BA3C 0003                682          CMP.B   #%011,D5        ; Compare with (An)+
0000169E  6700 0046                683          BEQ     ADREGP
000016A2  BA3C 0004                684          CMP.B   #%100,D5        ; Compare with -(An)
000016A6  6700 005E                685          BEQ     MADREG
000016AA  BA3C 0007                686          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
000016AE  6700 007E                687          BEQ     EXT
000016B2                           688              
000016B2  6000 0B3A                689          BRA     DSEND
000016B6                           690  
000016B6  1C01                     691  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
000016B8  0206 0007                692          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
000016BC  DC39 00002478            693          ADD.B   VALD,D6         ; Convert register number to ASCII
000016C2  43F9 00002478            694          LEA     VALD,A1         ; Load effective address of Dn
000016C8  4E4F                     695          TRAP    #15             ; Print Dn
000016CA  6000 0B22                696          BRA     DSEND
000016CE                           697  
000016CE  1C01                     698  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
000016D0  0206 0007                699          ANDI.B  #%111,D6
000016D4  DC39 00002476            700          ADD.B   VALA,D6
000016DA  43F9 00002476            701          LEA     VALA,A1
000016E0  4E4F                     702          TRAP    #15
000016E2  6000 0B0A                703          BRA     DSEND
000016E6                           704  
000016E6  1C01                     705  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
000016E8  0206 0007                706          ANDI.B  #%111,D6
000016EC  DC39 00002476            707          ADD.B   VALA,D6
000016F2  43F9 00002476            708          LEA     VALA,A1
000016F8  4E4F                     709          TRAP    #15
000016FA  43F9 00002489            710          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001700  4E4F                     711          TRAP    #15             ; Print )+
00001702  6000 0AEA                712          BRA     DSEND
00001706                           713  
00001706  1C01                     714  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
00001708  0206 0007                715          ANDI.B  #%111,D6
0000170C  DC39 00002476            716          ADD.B   VALA,D6
00001712  43F9 00002484            717          LEA     OPENDPTR,A1     ; Load effective address of -(
00001718  4E4F                     718          TRAP    #15             ; Print -(
0000171A  43F9 00002476            719          LEA     VALA,A1
00001720  4E4F                     720          TRAP    #15
00001722  43F9 00002487            721          LEA     CLOSEPTR,A1     ; Load effective address of )
00001728  4E4F                     722          TRAP    #15             ; Print )
0000172A  6000 0AC2                723          BRA     DSEND
0000172E                           724  
0000172E  1C01                     725  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001730  0206 0001                726          ANDI.B  #%1,D6
00001734  6700 000E                727          BEQ     EXTW
00001738  43F9 0000247A            728          LEA     VALN,A1         ; Load effective address of #
0000173E  4E4F                     729          TRAP    #15             ; Print #
00001740  6000 0AAC                730          BRA     DSEND
00001744                           731  
00001744  43F9 0000247C            732  EXTW    LEA     VAL0,A1         ; Load effective address of 0
0000174A  4E4F                     733          TRAP    #15             ; Print 0
0000174C  6000 0AA0                734          BRA     DSEND
00001750                           735  
00001750                           736          
00001750  E55C                     737  DJSR    ROL.W   #2,D4
00001752  1404                     738          MOVE.B  D4,D2
00001754  0202 0007                739          ANDI.B  #%111,D2
00001758  0C02 0002                740          CMPI.B  #%10,D2
0000175C  6600 0A64                741          BNE     DSERR
00001760                           742          
00001760  43F9 000024D5            743          LEA     JSRM,A1
00001766  4E4F                     744          TRAP    #15
00001768                           745          
00001768  43F9 00002430            746          LEA     SM7,A1
0000176E  4E4F                     747          TRAP    #15
00001770                           748  
00001770  E75C                     749          ROL.W   #3,D4       * [D2] address mode
00001772  1404                     750          MOVE.B  D4,D2
00001774  0202 0007                751          ANDI.B  #%111,D2
00001778                           752          
00001778  E75C                     753          ROL.W   #3,D4       * [D1] address register
0000177A  1204                     754          MOVE.B  D4,D1
0000177C  0201 0007                755          ANDI.B  #%111,D1
00001780                           756          
00001780  0C02 0002                757          CMPI.B  #%010,D2
00001784  6700 001E                758          BEQ     DJSR_REG
00001788                           759          
00001788  0C02 0007                760          CMPI.B  #%111,D2
0000178C  6600 0A34                761          BNE     DSERR
00001790                           762          
00001790  0C01 0000                763          CMPI.B  #%000,D1
00001794  6700 0034                764          BEQ     DJSR_CUSW
00001798                           765          
00001798  0C01 0001                766          CMPI.B  #%001,D1
0000179C  6700 004A                767          BEQ     DJSR_CUSL
000017A0                           768          
000017A0  6000 0A4C                769          BRA     DSEND
000017A4                           770          
000017A4                           771          
000017A4                           772          
000017A4                           773  DJSR_REG        
000017A4  43F9 00002482            774          LEA     OPENPTR,A1
000017AA  4E4F                     775          TRAP    #15
000017AC                           776          
000017AC  43F9 00002476            777          LEA     VALA,A1
000017B2  4E4F                     778          TRAP    #15
000017B4                           779          
000017B4  103C 0003                780          MOVE.B  #3,D0
000017B8  4E4F                     781          TRAP    #15
000017BA  103C 000E                782          MOVE.B  #14,D0
000017BE                           783          
000017BE  43F9 00002487            784          LEA     CLOSEPTR,A1
000017C4  4E4F                     785          TRAP    #15
000017C6                           786          
000017C6  6000 0A26                787          BRA     DSEND
000017CA                           788  
000017CA                           789          
000017CA                           790  DJSR_CUSW
000017CA  43F9 0000248E            791          LEA     DOLLAR,A1
000017D0  4E4F                     792          TRAP    #15
000017D2  341A                     793          MOVE.W  (A2)+,D2
000017D4  48E7 0400                794          MOVEM.L D5,-(SP)
000017D8  1A3C 0030                795          MOVE.B  #48,D5
000017DC  4EB8 118A                796          JSR     HEXOUT
000017E0  4CDF 0020                797          MOVEM.L (SP)+,D5
000017E4  6000 0A08                798          BRA     DSEND
000017E8                           799  
000017E8                           800  DJSR_CUSL
000017E8  43F9 0000248E            801          LEA     DOLLAR,A1
000017EE  4E4F                     802          TRAP    #15
000017F0  241A                     803          MOVE.L  (A2)+,D2
000017F2  48E7 0400                804          MOVEM.L D5,-(SP)
000017F6  1A3C 0030                805          MOVE.B  #48,D5
000017FA  4EB8 118A                806          JSR     HEXOUT
000017FE  4CDF 0020                807          MOVEM.L (SP)+,D5
00001802  6000 09EA                808          BRA     DSEND
00001806                           809          
00001806  43F9 000024D9            810  DRTS    LEA     RTSM,A1
0000180C  4E4F                     811          TRAP    #15
0000180E  6000 09DE                812          BRA     DSEND
00001812                           813          
00001812                           814          
00001812                           815  DLEA    *printing
00001812  43F9 000024A5            816          LEA     LEAM,A1
00001818  4E4F                     817          TRAP    #15
0000181A  43F9 00002430            818          LEA     SM7,A1
00001820  4E4F                     819          TRAP    #15
00001822                           820          
00001822                           821          *shifting out 111
00001822  E75C                     822          ROL.W   #3,D4
00001824                           823          
00001824                           824          *getting destination register
00001824  E75C                     825          ROL.W   #3,D4
00001826  1404                     826          MOVE.B  D4,D2
00001828  0202 0007                827          ANDI.B  #%111,D2
0000182C                           828          
0000182C                           829          *getting ea mode
0000182C  E75C                     830          ROL.W   #3,D4
0000182E  1604                     831          MOVE.B  D4,D3
00001830  0203 0007                832          ANDI.B  #%111,D3
00001834                           833          
00001834  B63C 0002                834          CMP.B   #%010,D3
00001838  6700 000E                835          BEQ     DLEAP
0000183C                           836          
0000183C  B63C 0007                837          CMP.B   #%111,D3
00001840  6700 0006                838          BEQ     DLEAP
00001844                           839          
00001844  6000 099C                840          BRA     DSERREA
00001848                           841          
00001848                           842          *getting ea reg
00001848  E75C                     843  DLEAP   ROL.W   #3,D4
0000184A  1C04                     844          MOVE.B  D4,D6
0000184C  0206 0007                845          ANDI.B  #%111,D6
00001850                           846          
00001850                           847          *printing
00001850  4EB8 121C                848          JSR     ADDRMODEALL
00001854                           849          
00001854  43F9 0000248C            850          LEA     COMMA,A1
0000185A  4E4F                     851          TRAP    #15
0000185C  43F9 00002476            852          LEA     VALA,A1
00001862  4E4F                     853          TRAP    #15
00001864  103C 0003                854          MOVE.B  #3,D0
00001868  1202                     855          MOVE.B  D2,D1
0000186A  4E4F                     856          TRAP    #15
0000186C  103C 000E                857          MOVE.B  #14,D0
00001870                           858          
00001870  6000 097C                859          BRA DSEND
00001874                           860          
00001874                           861  JSR010
00001874  B63C 0002                862          CMP.B   #%010,D3
00001878  6600 002A                863          BNE     JSR111
0000187C  43F9 00002482            864          LEA     OPENPTR,A1
00001882  4E4F                     865          TRAP    #15
00001884  43F9 00002476            866          LEA     VALA,A1
0000188A  4E4F                     867          TRAP    #15
0000188C  103C 0003                868          MOVE.B  #3,D0
00001890  1206                     869          MOVE.B  D6,D1
00001892  4E4F                     870          TRAP    #15
00001894  103C 000E                871          MOVE.B  #14,D0
00001898  43F9 00002487            872          LEA     CLOSEPTR,A1
0000189E  4E4F                     873          TRAP    #15
000018A0  6000 005E                874          BRA     JSRPRINT2
000018A4                           875  JSR111
000018A4  B63C 0007                876          CMP.B   #%111,D3
000018A8  6600 0918                877          BNE     DSERR
000018AC  BC3C 0000                878          CMP.B   #%000,D6
000018B0  6600 0024                879          BNE     JSR111001
000018B4  43F9 0000248E            880          LEA     DOLLAR,A1
000018BA  4E4F                     881          TRAP    #15
000018BC  341A                     882          MOVE.W  (A2)+,D2
000018BE  48E7 0400                883          MOVEM.L D5,-(SP)    
000018C2  1A3C 0030                884          MOVE.B  #48,D5
000018C6  4EB8 118A                885          JSR     HEXOUT
000018CA  4CDF 0020                886          MOVEM.L (SP)+,D5
000018CE  103C 000E                887          MOVE.B  #14,D0
000018D2  6000 002C                888          BRA     JSRPRINT2
000018D6                           889          
000018D6                           890  JSR111001
000018D6  BC3C 0001                891          CMP.B   #%001,D6
000018DA  6600 08E6                892          BNE     DSERR
000018DE  43F9 0000248E            893          LEA     DOLLAR,A1
000018E4  4E4F                     894          TRAP    #15
000018E6  241A                     895          MOVE.L  (A2)+,D2
000018E8  48E7 0400                896          MOVEM.L D5,-(SP)
000018EC  1A3C 0030                897          MOVE.B  #48,D5
000018F0  4EB8 118A                898          JSR     HEXOUT
000018F4  4CDF 0020                899          MOVEM.L (SP)+,D5
000018F8  103C 000E                900          MOVE.B  #14,D0
000018FC  6000 0002                901          BRA     JSRPRINT2
00001900                           902          
00001900                           903  JSRPRINT2
00001900  43F9 0000248C            904          LEA     COMMA,A1
00001906  4E4F                     905          TRAP    #15
00001908  43F9 00002476            906          LEA     VALA,A1
0000190E  4E4F                     907          TRAP    #15
00001910  103C 0003                908          MOVE.B  #3,D0
00001914  3207                     909          MOVE.W  D7,D1
00001916  4E4F                     910          TRAP    #15
00001918  103C 000E                911          MOVE.B  #14,D0
0000191C                           912          
0000191C  6000 08D0                913          BRA     DSEND
00001920                           914          
00001920                           915          
00001920                           916  DMOVEM
00001920                           917  *printing movem
00001920  43F9 00002498            918          LEA     MOVEM,A1
00001926  4E4F                     919          TRAP    #15
00001928  43F9 00002480            920          LEA     VALM,A1
0000192E  4E4F                     921          TRAP    #15
00001930                           922          
00001930                           923  *parsing initial bits
00001930  E55C                     924          ROL.W   #2,D4
00001932  1E04                     925          MOVE.B  D4,D7
00001934  0207 0001                926          ANDI.B  #%1,D7      *getting dr field
00001938                           927          
00001938  E95C                     928          ROL.W   #4,D4
0000193A  1A04                     929          MOVE.B  D4,D5
0000193C  0205 0001                930          ANDI.B  #1,D5       *getting size field
00001940                           931          
00001940                           932          *printing size
00001940  BA7C 0000                933          CMP     #0,D5
00001944  6600 000E                934          BNE     MOVEML
00001948  43F9 00002470            935          LEA     MODEW,A1
0000194E  4E4F                     936          TRAP    #15
00001950  6000 000A                937          BRA     MOVEMEA
00001954                           938  MOVEML        
00001954  43F9 00002473            939          LEA     MODEL,A1
0000195A  4E4F                     940          TRAP    #15
0000195C                           941          
0000195C                           942  MOVEMEA   
0000195C  43F9 0000241A            943          LEA     SM3,A1
00001962  4E4F                     944          TRAP    #15
00001964                           945          
00001964  E75C                     946          ROL.W   #3,D4       *mode bits
00001966  1604                     947          MOVE.B  D4,D3
00001968  0203 0007                948          ANDI.B  #%111,D3
0000196C  E75C                     949          ROL.W   #3,D4       *register bits
0000196E  1C04                     950          MOVE.B  D4,D6
00001970  0206 0007                951          ANDI.B  #%111,D6
00001974  341A                     952          MOVE.W  (A2)+,D2
00001976  BE3C 0001                953          CMP.B   #1,D7
0000197A  6600 000E                954          BNE     MOVEMEB
0000197E                           955          
0000197E  4EB8 121C                956          JSR     ADDRMODEALL
00001982                           957          
00001982  43F9 0000248C            958          LEA     COMMA,A1
00001988  4E4F                     959          TRAP    #15
0000198A                           960          
0000198A                           961  MOVEMEB 
0000198A                           962          
0000198A  48E7 0100                963          MOVEM.L D7,-(SP)
0000198E                           964          
0000198E  B63C 0004                965          CMP.B   #%100,D3
00001992  6700 000E                966          BEQ     MOVEMEB1
00001996                           967          
00001996  3E02                     968          MOVE.W  D2,D7
00001998  0247 FF00                969          ANDI.W  #$FF00,D7
0000199C  E04F                     970          LSR.W   #8,D7
0000199E  6000 0008                971          BRA     MOVEMEB2
000019A2                           972          
000019A2                           973  MOVEMEB1 
000019A2  3E02                     974          MOVE.W  D2,D7
000019A4  0247 00FF                975          ANDI.W  #$FF,D7
000019A8                           976          
000019A8                           977  MOVEMEB2
000019A8                           978  
000019A8  4EB9 00001AA0            979          JSR     MOVEMLOOP
000019AE  4CDF 0080                980          MOVEM.L (SP)+,D7
000019B2  103C 0037                981          MOVE.B  #55,D0
000019B6  B83C 0008                982          CMP.B   #8,D4
000019BA  6C00 0040                983          BGE     MOVEM3
000019BE  103C 000E                984          MOVE.B  #14,D0
000019C2                           985          
000019C2  43F9 00002476            986  MOVEM2  LEA     VALA,A1
000019C8  4E4F                     987          TRAP    #15
000019CA                           988          
000019CA  103C 0003                989          MOVE.B  #3,D0
000019CE  1204                     990          MOVE.B  D4,D1
000019D0  4E4F                     991          TRAP    #15
000019D2  103C 000E                992          MOVE.B  #14,D0
000019D6                           993          
000019D6  BA3C 0001                994          CMP.B   #1,D5
000019DA  6700 0020                995          BEQ     MOVEM3
000019DE                           996          
000019DE  43F9 00002492            997          LEA     DASH,A1
000019E4  4E4F                     998          TRAP    #15
000019E6  D205                     999          ADD.B   D5,D1
000019E8  5301                    1000          SUBQ.B  #1,D1
000019EA                          1001          
000019EA  43F9 00002476           1002          LEA     VALA,A1
000019F0  4E4F                    1003          TRAP    #15
000019F2  103C 0003               1004          MOVE.B  #3,D0
000019F6  4E4F                    1005          TRAP    #15
000019F8  103C 000E               1006          MOVE.B  #14,D0
000019FC                          1007          
000019FC  48E7 0100               1008  MOVEM3  MOVEM.L D7,-(SP)
00001A00  3E02                    1009          MOVE.W  D2,D7
00001A02                          1010          
00001A02  B63C 0004               1011          CMP.B   #%100,D3
00001A06  6700 000A               1012          BEQ     MOVEM31
00001A0A                          1013          
00001A0A  0247 00FF               1014          ANDI.W  #$FF,D7
00001A0E  6000 0008               1015          BRA     MOVEM32
00001A12                          1016          
00001A12                          1017  MOVEM31 
00001A12  0247 FF00               1018          ANDI.W  #$FF00,D7
00001A16  E04F                    1019          LSR.W   #8,D7
00001A18                          1020  
00001A18  4EB9 00001AA0           1021  MOVEM32 JSR     MOVEMLOOP
00001A1E  4CDF 0080               1022          MOVEM.L (SP)+,D7
00001A22                          1023          
00001A22  B03C 0037               1024          CMP.B   #55,D0
00001A26  6700 0016               1025          BEQ     MOVEM4
00001A2A                          1026          
00001A2A  B83C 0008               1027          CMP.B   #8,D4
00001A2E  6C00 0054               1028          BGE     MOVEM5
00001A32                          1029          
00001A32  103C 000E               1030          MOVE.B  #14,D0
00001A36  43F9 00002490           1031          LEA     SLASH,A1
00001A3C  4E4F                    1032          TRAP    #15
00001A3E                          1033  
00001A3E  103C 000E               1034  MOVEM4  MOVE.B  #14,D0
00001A42  B83C 0008               1035          CMP.B   #8,D4
00001A46  6C00 003C               1036          BGE     MOVEM5
00001A4A                          1037          
00001A4A  43F9 00002478           1038          LEA     VALD,A1
00001A50  4E4F                    1039          TRAP    #15
00001A52                          1040          
00001A52  103C 0003               1041          MOVE.B  #3,D0
00001A56  1204                    1042          MOVE.B  D4,D1
00001A58  4E4F                    1043          TRAP    #15
00001A5A  103C 000E               1044          MOVE.B  #14,D0
00001A5E                          1045          
00001A5E  BA3C 0001               1046          CMP.B   #1,D5
00001A62  6700 0020               1047          BEQ     MOVEM5
00001A66                          1048          
00001A66  43F9 00002492           1049          LEA     DASH,A1
00001A6C  4E4F                    1050          TRAP    #15
00001A6E  D205                    1051          ADD.B   D5,D1
00001A70  5301                    1052          SUBQ.B  #1,D1
00001A72                          1053          
00001A72  43F9 00002478           1054          LEA     VALD,A1
00001A78  4E4F                    1055          TRAP    #15
00001A7A  103C 0003               1056          MOVE.B  #3,D0
00001A7E  4E4F                    1057          TRAP    #15
00001A80  103C 000E               1058          MOVE.B  #14,D0
00001A84                          1059          
00001A84                          1060          
00001A84                          1061  
00001A84  103C 000E               1062  MOVEM5  MOVE.B  #14,D0
00001A88                          1063          
00001A88  BE3C 0001               1064          CMP.B   #1,D7
00001A8C  6700 0760               1065          BEQ     DSEND
00001A90                          1066          
00001A90  43F9 0000248C           1067          LEA     COMMA,A1
00001A96  4E4F                    1068          TRAP    #15
00001A98                          1069          
00001A98  4EB8 121C               1070          JSR     ADDRMODEALL
00001A9C                          1071          
00001A9C  6000 0750               1072          BRA     DSEND
00001AA0                          1073  
00001AA0                          1074  MOVEMLOOP
00001AA0  1A3C 0000               1075          MOVE.B  #0,D5
00001AA4  183C 0000               1076          MOVE.B  #0,D4
00001AA8                          1077          
00001AA8                          1078  MOVEMSTEP
00001AA8  B63C 0004               1079          CMP.B   #%100,D3
00001AAC  6700 0014               1080          BEQ     MOVEMSHIFTL
00001AB0  6000 0018               1081          BRA     MOVEMSHIFTR
00001AB4                          1082  MOVEMSTEP1
00001AB4  0C05 0000               1083          CMPI.B  #0,D5
00001AB8  6E00 0026               1084          BGT     MOVEMLOOPDONE
00001ABC  5204                    1085          ADDQ.B  #1,D4
00001ABE  6000 0012               1086          BRA     MOVEMSTEP2
00001AC2                          1087  
00001AC2                          1088  MOVEMSHIFTL
00001AC2  E30F                    1089          LSL.B   #1,D7
00001AC4  6500 0016               1090          BCS     MOVEMLOOPINC
00001AC8  60EA                    1091          BRA     MOVEMSTEP1
00001ACA                          1092  
00001ACA                          1093  MOVEMSHIFTR
00001ACA  E20F                    1094          LSR.B   #1,D7
00001ACC  6500 000E               1095          BCS     MOVEMLOOPINC
00001AD0  60E2                    1096          BRA     MOVEMSTEP1
00001AD2                          1097  
00001AD2                          1098  MOVEMSTEP2
00001AD2  B83C 0008               1099          CMP.B   #8,D4
00001AD6  6DD0                    1100          BLT     MOVEMSTEP
00001AD8  6000 0006               1101          BRA     MOVEMLOOPDONE
00001ADC                          1102  
00001ADC                          1103  MOVEMLOOPINC
00001ADC  5205                    1104          ADDQ.B  #1,D5
00001ADE  60F2                    1105          BRA     MOVEMSTEP2
00001AE0                          1106  
00001AE0                          1107  MOVEMLOOPDONE
00001AE0  4E75                    1108          RTS
00001AE2                          1109          
00001AE2                          1110          
00001AE2                          1111  MOVEMLOOPSINGLEAR
00001AE2                          1112          
00001AE2                          1113          
00001AE2  6000 070A               1114          BRA     DSEND
00001AE6                          1115  
00001AE6                          1116  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AE6                          1117  
00001AE6  4E71                    1118  DS0101  NOP
00001AE8                          1119          
00001AE8  4E71                    1120  DADDQ   NOP
00001AEA  43F9 0000249D           1121          LEA     ADDM,A1
00001AF0  4E4F                    1122          TRAP    #15
00001AF2  43F9 0000247E           1123          LEA     VALQ,A1
00001AF8  4E4F                    1124          TRAP    #15
00001AFA                          1125          
00001AFA                          1126          *parsing data to d1
00001AFA  E75C                    1127          ROL.W   #3,D4
00001AFC  1204                    1128          MOVE.B  D4,D1
00001AFE  C23C 0007               1129          AND.B   #%111,D1
00001B02                          1130          
00001B02                          1131          *ensuring next bit is 0
00001B02  E35C                    1132          ROL.W   #1,D4
00001B04  1A04                    1133          MOVE.B  D4,D5
00001B06  CA3C 0001               1134          AND.B   #%1,D5
00001B0A  BA7C 0000               1135          CMP     #0,D5
00001B0E  6600 06B2               1136          BNE     DSERR
00001B12                          1137          
00001B12                          1138          *parsing and printing size
00001B12  E55C                    1139          ROL.W   #2,D4
00001B14  1A04                    1140          MOVE.B  D4,D5
00001B16  CA3C 0003               1141          AND.B   #%11,D5
00001B1A  4EB8 11D2               1142          JSR     SIZE
00001B1E  43F9 0000241E           1143          LEA     SM4,A1
00001B24  4E4F                    1144          TRAP    #15
00001B26                          1145          
00001B26                          1146          *parsing effective address information
00001B26                          1147          *mode:
00001B26  E75C                    1148          ROL.W   #3,D4
00001B28  1604                    1149          MOVE.B  D4,D3
00001B2A  C63C 0007               1150          AND.B   #%111,D3
00001B2E                          1151          
00001B2E                          1152          *register:
00001B2E  E71C                    1153          ROL.B   #3,D4
00001B30  1C04                    1154          MOVE.B  D4,D6
00001B32  CC3C 0007               1155          AND.B   #%111,D6
00001B36                          1156          
00001B36                          1157          *printing data
00001B36  43F9 0000247A           1158          LEA     VALN,A1
00001B3C  4E4F                    1159          TRAP    #15
00001B3E  103C 0003               1160          MOVE.B  #3,D0
00001B42  4E4F                    1161          TRAP    #15
00001B44  103C 000E               1162          MOVE.B  #14,D0
00001B48  43F9 0000248C           1163          LEA     COMMA,A1
00001B4E  4E4F                    1164          TRAP    #15
00001B50                          1165          
00001B50  B67C 0004               1166          CMP     #%100,D3
00001B54  6700 066C               1167          BEQ     DSERR
00001B58  4EB8 121C               1168          JSR     ADDRMODEALL
00001B5C                          1169          
00001B5C  6000 0690               1170          BRA     DSEND
00001B60                          1171          
00001B60                          1172  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B60                          1173  
00001B60                          1174  DS0110  
00001B60  E95C                    1175          ROL.W   #4,D4   *Get next 4 bits
00001B62  1404                    1176          MOVE.B  D4,D2   *Copy to D2
00001B64  0202 000F               1177          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001B68                          1178          
00001B68  B43C 0000               1179          CMP.B   #%0000,D2   *BRA
00001B6C  6700 001E               1180          BEQ     DBRA
00001B70                          1181          
00001B70  B43C 000E               1182          CMP.B   #%1110,D2   *BGT   
00001B74  6700 00A2               1183          BEQ     DBGT
00001B78                          1184          
00001B78  B43C 000F               1185          CMP.B   #%1111,D2   *BLE   
00001B7C  6700 00D6               1186          BEQ     DBLE
00001B80                          1187          
00001B80  B43C 0007               1188          CMP.B   #%0111,D2   *BEQ   
00001B84  6700 010E               1189          BEQ     DBEQ
00001B88                          1190          
00001B88  6000 0648               1191          BRA     DSERRINS
00001B8C                          1192          
00001B8C  43F9 000024DD           1193  DBRA    LEA     BRAM,A1
00001B92  4E4F                    1194          TRAP    #15
00001B94                          1195          
00001B94  43F9 00002430           1196          LEA     SM7,A1
00001B9A  4E4F                    1197          TRAP    #15
00001B9C                          1198  
00001B9C  E15C                    1199          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B9E  1204                    1200          MOVE.B  D4,D1
00001BA0  0281 00001100           1201          ANDI.L  #$1100,D1
00001BA6                          1202          
00001BA6  0C01 0000               1203          CMPI.B  #%00000000,D1
00001BAA  6700 0028               1204          BEQ     DBRA_16BIT      * Word
00001BAE                          1205          
00001BAE  0C01 00FF               1206          CMPI.B  #%11111111,D1
00001BB2  6700 0042               1207          BEQ     DBRA_32BIT      * Long
00001BB6                          1208          
00001BB6                          1209          * 8 Bit Displacement
00001BB6  43F9 0000248E           1210          LEA     DOLLAR,A1
00001BBC  4E4F                    1211          TRAP    #15
00001BBE                          1212          
00001BBE  341A                    1213          MOVE.W  (A2)+,D2
00001BC0  D441                    1214          ADD.W   D1,D2
00001BC2  5842                    1215          ADD.W   #4,D2   *unsure   
00001BC4  1A3C 0030               1216          MOVE.B  #48,D5
00001BC8  4EB8 118A               1217          JSR     HEXOUT
00001BCC  6000 0620               1218          BRA     DSEND
00001BD0                          1219  
00001BD0                          1220          *Displacement is put in D1      
00001BD0                          1221          
00001BD0                          1222          
00001BD0  6000 061C               1223          BRA     DSEND
00001BD4                          1224          
00001BD4                          1225  DBRA_16BIT
00001BD4  43F9 0000248E           1226          LEA     DOLLAR,A1
00001BDA  4E4F                    1227          TRAP    #15
00001BDC  341A                    1228          MOVE.W  (A2)+,D2
00001BDE  D44A                    1229          ADD.W   A2,D2
00001BE0  5542                    1230          SUB.W   #2,D2   *unsure
00001BE2  48E7 0400               1231          MOVEM.L D5,-(SP)    
00001BE6  1A3C 0030               1232          MOVE.B  #48,D5
00001BEA  4EB8 118A               1233          JSR     HEXOUT
00001BEE  4CDF 0020               1234          MOVEM.L (SP)+,D5
00001BF2  6000 05FA               1235          BRA     DSEND
00001BF6                          1236  
00001BF6                          1237  DBRA_32BIT
00001BF6  43F9 0000248E           1238          LEA     DOLLAR,A1
00001BFC  4E4F                    1239          TRAP    #15
00001BFE  241A                    1240          MOVE.L  (A2)+,D2
00001C00  D48A                    1241          ADD.L   A2,D2
00001C02  5582                    1242          SUB.L   #2,D2   *unsure
00001C04  48E7 0400               1243          MOVEM.L D5,-(SP)
00001C08  1A3C 0030               1244          MOVE.B  #48,D5
00001C0C  4EB8 118A               1245          JSR     HEXOUT
00001C10  4CDF 0020               1246          MOVEM.L (SP)+,D5
00001C14  6000 05D8               1247          BRA     DSEND
00001C18                          1248          
00001C18                          1249          
00001C18                          1250          
00001C18  43F9 000024C9           1251  DBGT    LEA     BGTM,A1
00001C1E  4E4F                    1252          TRAP    #15
00001C20                          1253          
00001C20  43F9 00002430           1254          LEA     SM7,A1
00001C26  4E4F                    1255          TRAP    #15
00001C28                          1256          
00001C28  E15C                    1257          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C2A  1204                    1258          MOVE.B  D4,D1
00001C2C  0241 00FF               1259          ANDI.W  #%0000000011111111,D1
00001C30                          1260          
00001C30  0C01 0000               1261          CMPI.B  #%00000000,D1
00001C34  679E                    1262          BEQ     DBRA_16BIT      * Word
00001C36                          1263          
00001C36  0C01 00FF               1264          CMPI.B  #%11111111,D1
00001C3A  67BA                    1265          BEQ     DBRA_32BIT      * Long
00001C3C                          1266          
00001C3C  43F9 0000248E           1267          LEA     DOLLAR,A1
00001C42  4E4F                    1268          TRAP    #15
00001C44                          1269      
00001C44  340A                    1270          MOVE.W  A2,D2
00001C46  D441                    1271          ADD.W   D1,D2
00001C48                          1272    
00001C48  1A3C 0030               1273          MOVE.B  #48,D5
00001C4C  4EB8 118A               1274          JSR     HEXOUT
00001C50  6000 059C               1275          BRA     DSEND
00001C54                          1276  
00001C54  43F9 000024CD           1277  DBLE    LEA     BLEM,A1
00001C5A  4E4F                    1278          TRAP    #15
00001C5C                          1279          
00001C5C  43F9 00002430           1280          LEA     SM7,A1
00001C62  4E4F                    1281          TRAP    #15
00001C64                          1282          
00001C64  E15C                    1283          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C66  1204                    1284          MOVE.B  D4,D1
00001C68  0241 00FF               1285          ANDI.W  #%0000000011111111,D1
00001C6C                          1286          
00001C6C  0C01 0000               1287          CMPI.B  #%00000000,D1
00001C70  6700 FF62               1288          BEQ     DBRA_16BIT      * Word
00001C74                          1289          
00001C74  0C01 00FF               1290          CMPI.B  #%11111111,D1
00001C78  6700 FF7C               1291          BEQ     DBRA_32BIT      * Long
00001C7C                          1292          
00001C7C  43F9 0000248E           1293          LEA     DOLLAR,A1
00001C82  4E4F                    1294          TRAP    #15
00001C84                          1295          
00001C84  340A                    1296          MOVE.W  A2,D2
00001C86  D441                    1297          ADD.W   D1,D2
00001C88                          1298   
00001C88  1A3C 0030               1299          MOVE.B  #48,D5
00001C8C  4EB8 118A               1300          JSR     HEXOUT
00001C90                          1301          
00001C90  6000 055C               1302          BRA     DSEND
00001C94                          1303  
00001C94  43F9 000024D1           1304  DBEQ    LEA     BEQM,A1
00001C9A  4E4F                    1305          TRAP    #15
00001C9C                          1306          
00001C9C  43F9 00002430           1307          LEA     SM7,A1
00001CA2  4E4F                    1308          TRAP    #15
00001CA4                          1309          
00001CA4  E15C                    1310          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001CA6  1204                    1311          MOVE.B  D4,D1
00001CA8  0241 00FF               1312          ANDI.W  #%0000000011111111,D1
00001CAC                          1313          
00001CAC  0C01 0000               1314          CMPI.B  #%00000000,D1
00001CB0  6700 FF22               1315          BEQ     DBRA_16BIT      * Word
00001CB4                          1316          
00001CB4  0C01 00FF               1317          CMPI.B  #%11111111,D1
00001CB8  6700 FF3C               1318          BEQ     DBRA_32BIT      * Long
00001CBC                          1319          
00001CBC  43F9 0000248E           1320          LEA     DOLLAR,A1
00001CC2  4E4F                    1321          TRAP    #15
00001CC4                          1322  
00001CC4  340A                    1323          MOVE.W  A2,D2
00001CC6  D441                    1324          ADD.W   D1,D2
00001CC8                          1325   
00001CC8  1A3C 0030               1326          MOVE.B  #48,D5
00001CCC  4EB8 118A               1327          JSR     HEXOUT
00001CD0                          1328          
00001CD0  6000 051C               1329          BRA     DSEND
00001CD4                          1330  
00001CD4                          1331  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001CD4                          1332  
00001CD4  4E71                    1333  DS0111  NOP
00001CD6                          1334          
00001CD6  4E71                    1335  DMOVEQ  NOP
00001CD8  43F9 00002498           1336          LEA     MOVEM,A1
00001CDE  4E4F                    1337          TRAP    #15
00001CE0  43F9 0000247E           1338          LEA     VALQ,A1
00001CE6  4E4F                    1339          TRAP    #15
00001CE8  43F9 0000241A           1340          LEA     SM3,A1
00001CEE  4E4F                    1341          TRAP    #15
00001CF0                          1342          
00001CF0                          1343          *getting register number
00001CF0  E75C                    1344          ROL.W   #3,D4
00001CF2  1A04                    1345          MOVE.B  D4,D5
00001CF4  CA3C 0007               1346          AND.B   #%111,D5
00001CF8                          1347          
00001CF8                          1348          *throwing error if next digit not 0
00001CF8  E35C                    1349          ROL.W   #1,D4
00001CFA  1C04                    1350          MOVE.B  D4,D6
00001CFC  CC3C 0001               1351          AND.B   #%1,D6
00001D00  BC3C 0000               1352          CMP.B   #0,D6
00001D04  6600 04BC               1353          BNE     DSERR
00001D08                          1354          
00001D08                          1355          *getting data and printing information
00001D08  E15C                    1356          ROL.W   #8,D4
00001D0A  1204                    1357          MOVE.B  D4,D1
00001D0C  C23C 00FF               1358          AND.B   #%11111111,D1
00001D10  43F9 0000247A           1359          LEA     VALN,A1
00001D16  4E4F                    1360          TRAP    #15
00001D18  103C 0003               1361          MOVE.B  #3,D0
00001D1C  4E4F                    1362          TRAP    #15
00001D1E  103C 000E               1363          MOVE.B  #14,D0
00001D22  43F9 0000248C           1364          LEA     COMMA,A1
00001D28  4E4F                    1365          TRAP    #15
00001D2A  43F9 00002478           1366          LEA     VALD,A1
00001D30  4E4F                    1367          TRAP    #15
00001D32  103C 0003               1368          MOVE.B  #3,D0
00001D36  3205                    1369          MOVE.W  D5,D1
00001D38  4E4F                    1370          TRAP    #15
00001D3A                          1371          
00001D3A  6000 04B2               1372          BRA     DSEND
00001D3E                          1373          
00001D3E                          1374  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D3E                          1375  
00001D3E  4E71                    1376  DS1000  NOP
00001D40                          1377          
00001D40  E75C                    1378  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001D42  1A04                    1379          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D44  0205 0007               1380          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001D48  1C05                    1381          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001D4A                          1382  
00001D4A  E75C                    1383          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001D4C  1A04                    1384          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D4E  0205 0007               1385          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001D52  1E05                    1386          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001D54  BA3C 0000               1387          CMP.B   #%000,D5        ; Compare with byte size
00001D58  6700 0016               1388          BEQ     DORB
00001D5C  BA3C 0001               1389          CMP.B   #%001,D5        ; Compare with word size
00001D60  6700 0022               1390          BEQ     DORW
00001D64  BA3C 0002               1391          CMP.B   #%010,D5        ; Compare with long size
00001D68  6700 002E               1392          BEQ     DORL
00001D6C                          1393  
00001D6C  6000 0480               1394          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001D70                          1395  
00001D70  43F9 000024AD           1396  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001D76  4E4F                    1397          TRAP    #15             ; Print ORM string
00001D78  43F9 0000246D           1398          LEA     MODEB,A1        ; Load effective address of MODEB string
00001D7E  4E4F                    1399          TRAP    #15             ; Print MODEB string
00001D80  6000 002A               1400          BRA     DORA            ; Branch to addressing mode parsing
00001D84                          1401  
00001D84  43F9 000024AD           1402  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001D8A  4E4F                    1403          TRAP    #15             ; Print ORM string
00001D8C  43F9 00002470           1404          LEA     MODEW,A1        ; Load effective address of MODEW string
00001D92  4E4F                    1405          TRAP    #15             ; Print MODEW string
00001D94  6000 0016               1406          BRA     DORA            ; Branch to addressing mode parsing
00001D98                          1407  
00001D98  43F9 000024AD           1408  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001D9E  4E4F                    1409          TRAP    #15             ; Print ORM string
00001DA0  43F9 00002473           1410          LEA     MODEL,A1        ; Load effective address of MODEL string
00001DA6  4E4F                    1411          TRAP    #15             ; Print MODEL string
00001DA8  6000 0002               1412          BRA     DORA            ; Branch to addressing mode parsing
00001DAC                          1413  
00001DAC  43F9 00002429           1414  DORA    LEA     SM6,A1
00001DB2  4E4F                    1415          TRAP    #15
00001DB4  ED5C                    1416          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001DB6  1A04                    1417          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001DB8  0205 0038               1418          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001DBC  E61D                    1419          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001DBE  1605                    1420          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001DC0  0204 0007               1421          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001DC4  1C04                    1422          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001DC6                          1423  
00001DC6  BE3C 0004               1424          CMP.B   #%100,D7        ; Compare opmode with '100'
00001DCA  6D00 0006               1425          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001DCE  6000 002A               1426          BRA     DORAD           ; Else, branch to DORAD
00001DD2                          1427  
00001DD2  4EB8 121C               1428  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001DD6  103C 000E               1429          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001DDA  43F9 0000248C           1430          LEA     COMMA,A1        ; Load effective address of COMMA string
00001DE0  4E4F                    1431          TRAP    #15             ; Print comma
00001DE2  43F9 00002478           1432          LEA     VALD,A1
00001DE8  4E4F                    1433          TRAP    #15
00001DEA  1206                    1434          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001DEC  103C 0003               1435          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001DF0  4E4F                    1436          TRAP    #15             ; Print register number
00001DF2  103C 000E               1437          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001DF6  6000 03F6               1438          BRA     DSEND           ; Branch to DSEND
00001DFA                          1439  
00001DFA  1206                    1440  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001DFC  103C 0003               1441          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E00  4E4F                    1442          TRAP    #15             ; Print register number
00001E02  103C 000E               1443          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E06  43F9 0000248C           1444          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E0C  4E4F                    1445          TRAP    #15             ; Print comma
00001E0E  4EB8 121C               1446          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E12  103C 000E               1447          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E16  6000 03D6               1448          BRA     DSEND           ; Branch to DSEND                 
00001E1A                          1449  
00001E1A                          1450  
00001E1A                          1451  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E1A                          1452  
00001E1A  4E71                    1453  DS1001  NOP
00001E1C  4E71                    1454  DSUB    NOP
00001E1E                          1455  *print sub
00001E1E  43F9 000024A1           1456          LEA     SUBM,A1
00001E24  4E4F                    1457          TRAP    #15
00001E26                          1458  
00001E26                          1459  *parse dn reg: 3 bits
00001E26                          1460  *number of the data register involved
00001E26                          1461  *nums 0-7, paired with below
00001E26  E75C                    1462          ROL.W   #3,D4       *dn reg num in d1
00001E28  1E04                    1463          MOVE.B  D4,D7
00001E2A  0207 0007               1464          ANDI.B  #%111,D7
00001E2E                          1465          
00001E2E  3C47                    1466          MOVE.W  D7,A6       *temporary for storage
00001E30                          1467  
00001E30                          1468  *parse opmode: 3 bits
00001E30                          1469  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001E30                          1470  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001E30                          1471  *invalid: 111, 011
00001E30                          1472  *parse first digit separately
00001E30  E35C                    1473          ROL.W   #1,D4       *addressing mode in d2
00001E32  1E04                    1474          MOVE.B  D4,D7
00001E34  0207 0001               1475          ANDI.B  #%1,D7
00001E38                          1476          
00001E38                          1477  *parsing next two digits of size
00001E38  E55C                    1478          ROL.W   #2,D4       *size in d5
00001E3A  1A04                    1479          MOVE.B  D4,D5
00001E3C  0205 0003               1480          ANDI.B  #%11,D5
00001E40  4EB8 11D2               1481          JSR     SIZE
00001E44  43F9 00002423           1482          LEA     SM5,A1
00001E4A  4E4F                    1483          TRAP    #15
00001E4C                          1484          
00001E4C                          1485  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001E4C  BE3C 0000               1486          CMP.B   #%0,D7       *if 1, then register info printed last
00001E50  6700 0026               1487          BEQ     DSUBEA      *branch to ea before register
00001E54                          1488          
00001E54                          1489  *printing register information
00001E54                          1490  DSUBPRNTREG
00001E54  43F9 00002478           1491          LEA     VALD,A1
00001E5A  4E4F                    1492          TRAP    #15
00001E5C  320E                    1493          MOVE.W  A6,D1       *retrieving a6 register data
00001E5E  103C 0003               1494          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001E62  4E4F                    1495          TRAP    #15         *printing register number
00001E64  103C 000E               1496          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001E68  BE3C 0000               1497          CMP.B   #%0,D7      *if info finished printing
00001E6C  6700 0380               1498          BEQ     DSEND      *branch to end
00001E70  43F9 0000248C           1499          LEA     COMMA,A1
00001E76  4E4F                    1500          TRAP    #15
00001E78                          1501  
00001E78                          1502          
00001E78                          1503  * parse ea mode: 3 bits
00001E78                          1504  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001E78                          1505  *address reg direct not allowed for .B operations
00001E78                          1506  *no invalid
00001E78                          1507  DSUBEA
00001E78  E75C                    1508          ROL.W   #3,D4       *ea mode
00001E7A  1604                    1509          MOVE.B  D4,D3
00001E7C  0203 0007               1510          ANDI.B  #%111,D3
00001E80                          1511  
00001E80                          1512  *parse ea reg: 3 bits
00001E80                          1513  *no invalid: paired with opmode below (nums 0-7)
00001E80                          1514  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001E80  E75C                    1515          ROL.W   #3,D4       *ea mode
00001E82  1C04                    1516          MOVE.B  D4,D6
00001E84  0206 0007               1517          ANDI.B  #%111,D6
00001E88                          1518          
00001E88  2803                    1519          MOVE.L  D3,D4   *temporarily using D4 
00001E8A                          1520          
00001E8A                          1521  *comparisons
00001E8A  B67C 0004               1522          CMP     #%100,D3
00001E8E  6700 0332               1523          BEQ     DSERR
00001E92  4EB8 121C               1524          JSR     ADDRMODEALL
00001E96  BE3C 0001               1525          CMP.B   #%1,D7      *if info printed
00001E9A  6700 0352               1526          BEQ     DSEND       *end
00001E9E  43F9 0000248C           1527          LEA     COMMA,A1
00001EA4  4E4F                    1528          TRAP    #15
00001EA6  60AC                    1529          BRA     DSUBPRNTREG *check d6 for size of data
00001EA8                          1530  *then take data from d4 and print (?)
00001EA8                          1531  
00001EA8  6000 0344               1532          BRA     DSEND
00001EAC                          1533  
00001EAC                          1534  
00001EAC                          1535  
00001EAC  4E71                    1536  DS1010  NOP
00001EAE  6000 0322               1537          BRA     DSERRINS
00001EB2                          1538  
00001EB2                          1539          
00001EB2                          1540  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EB2                          1541  
00001EB2  4E71                    1542  DS1011  NOP
00001EB4  6000 031C               1543          BRA     DSERRINS
00001EB8                          1544          
00001EB8                          1545  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EB8                          1546  
00001EB8  4E71                    1547  DS1100  NOP
00001EBA  6000 0316               1548          BRA     DSERRINS
00001EBE                          1549          
00001EBE                          1550  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EBE                          1551  
00001EBE  4E71                    1552  DS1101  NOP
00001EC0                          1553  
00001EC0  4E71                    1554  DADD    NOP
00001EC2  43F9 0000249D           1555          LEA     ADDM,A1
00001EC8  4E4F                    1556          TRAP    #15
00001ECA                          1557          
00001ECA                          1558          *parse dn reg: 3 bits
00001ECA                          1559  *number of the data register involved
00001ECA                          1560  *nums 0-7, paired with below
00001ECA  E75C                    1561          ROL.W   #3,D4       *dn reg num in d7
00001ECC  1E04                    1562          MOVE.B  D4,D7
00001ECE  0207 0007               1563          ANDI.B  #%111,D7
00001ED2                          1564          
00001ED2  3C47                    1565          MOVE.W  D7,A6
00001ED4                          1566  
00001ED4                          1567  *parse opmode: 3 bits
00001ED4                          1568  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001ED4                          1569  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001ED4                          1570  *invalid: 111, 011
00001ED4                          1571  *parse first digit separately
00001ED4  E35C                    1572          ROL.W   #1,D4       *addressing mode in d2
00001ED6  1E04                    1573          MOVE.B  D4,D7
00001ED8  0207 0001               1574          ANDI.B  #%1,D7
00001EDC                          1575          
00001EDC                          1576  *parsing next two digits of size
00001EDC  E55C                    1577          ROL.W   #2,D4       *size in d5
00001EDE  1A04                    1578          MOVE.B  D4,D5
00001EE0  0205 0003               1579          ANDI.B  #%11,D5
00001EE4  BA3C 0003               1580          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001EE8  6700 007C               1581          BEQ     DADDA
00001EEC  4EB8 11D2               1582          JSR     SIZE
00001EF0  43F9 00002423           1583          LEA     SM5,A1
00001EF6  4E4F                    1584          TRAP    #15
00001EF8                          1585          
00001EF8                          1586  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001EF8  BE3C 0000               1587          CMP.B   #%0,D7       *if 0, then register info printed last
00001EFC  6700 002E               1588          BEQ     DADDEA      *branch to ea before register
00001F00                          1589          
00001F00                          1590  *printing register information
00001F00                          1591  DADDPRNTREG
00001F00  BA3C 0003               1592          CMP.B   #%11,D5
00001F04  6700 0058               1593          BEQ     PRINTA
00001F08  43F9 00002478           1594          LEA     VALD,A1
00001F0E                          1595  ADDCONT
00001F0E  4E4F                    1596          TRAP    #15
00001F10  320E                    1597          MOVE.W  A6,D1       *moving reg num to d1 to print
00001F12  103C 0003               1598          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001F16  4E4F                    1599          TRAP    #15         *printing register number
00001F18  103C 000E               1600          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001F1C  BE3C 0000               1601          CMP.B   #%0,D7      *if info finished printing
00001F20  6700 02CC               1602          BEQ     DSEND      *branch to end
00001F24  43F9 0000248C           1603          LEA     COMMA,A1
00001F2A  4E4F                    1604          TRAP    #15
00001F2C                          1605  
00001F2C                          1606          
00001F2C                          1607  * parse ea mode: 3 bits
00001F2C                          1608  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F2C                          1609  *address reg direct not allowed for .B operations
00001F2C                          1610  *no invalid
00001F2C                          1611  DADDEA
00001F2C  E75C                    1612          ROL.W   #3,D4       *ea mode
00001F2E  1604                    1613          MOVE.B  D4,D3
00001F30  0203 0007               1614          ANDI.B  #%111,D3
00001F34                          1615  
00001F34                          1616  *parse ea reg: 3 bits
00001F34                          1617  *no invalid: paired with opmode below (nums 0-7)
00001F34                          1618  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F34  E75C                    1619          ROL.W   #3,D4       *ea mode
00001F36  1C04                    1620          MOVE.B  D4,D6
00001F38  0206 0007               1621          ANDI.B  #%111,D6
00001F3C                          1622          
00001F3C                          1623  *comparisons
00001F3C  B67C 0004               1624          CMP     #%100,D3
00001F40  6700 005A               1625          BEQ     ADDDATACHECK
00001F44                          1626  DATACHECKCONT
00001F44  4EB8 121C               1627          JSR     ADDRMODEALL
00001F48  BE3C 0001               1628          CMP.B   #%1,D7      *if info printed
00001F4C  6700 02A0               1629          BEQ     DSEND       *end
00001F50  43F9 0000248C           1630          LEA     COMMA,A1
00001F56  4E4F                    1631          TRAP    #15
00001F58  60A6                    1632          BRA     DADDPRNTREG 
00001F5A                          1633  
00001F5A  6000 0292               1634          BRA     DSEND
00001F5E                          1635          
00001F5E  43F9 00002476           1636  PRINTA  LEA     VALA,A1
00001F64  60A8                    1637          BRA     ADDCONT
00001F66                          1638  
00001F66                          1639          
00001F66  4E71                    1640  DADDA   NOP
00001F68  43F9 00002476           1641          LEA     VALA,A1
00001F6E  4E4F                    1642          TRAP    #15
00001F70  BE3C 0000               1643          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001F74  6600 000C               1644          BNE     ADDAL
00001F78  43F9 00002470           1645          LEA     MODEW,A1
00001F7E  6000 000C               1646          BRA     ADDSIZEEND
00001F82  43F9 00002473           1647  ADDAL   LEA     MODEL,A1
00001F88  6000 0002               1648          BRA     ADDSIZEEND
00001F8C                          1649  ADDSIZEEND
00001F8C  4E4F                    1650          TRAP    #15
00001F8E  43F9 0000241E           1651          LEA     SM4,A1
00001F94  4E4F                    1652          TRAP    #15
00001F96  1E3C 0000               1653          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001F9A  6090                    1654          BRA     DADDEA
00001F9C                          1655  ADDDATACHECK
00001F9C  BA3C 0003               1656          CMP.B   #%11,D5
00001FA0  6700 0220               1657          BEQ     DSERR
00001FA4  609E                    1658          BRA     DATACHECKCONT
00001FA6                          1659          
00001FA6                          1660          
00001FA6                          1661  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001FA6                          1662  
00001FA6                          1663  DS1110
00001FA6  E75C                    1664          ROL.W   #3,D4           * [D2] Reading count
00001FA8  1404                    1665          MOVE.B  D4,D2
00001FAA  0202 0007               1666          ANDI.B  #%111,D2
00001FAE                          1667          
00001FAE  E35C                    1668          ROL.W   #1,D4           * [D3] Reading direction
00001FB0  1604                    1669          MOVE.B  D4,D3
00001FB2  0203 0001               1670          ANDI.B  #%1,D3
00001FB6                          1671          
00001FB6  E55C                    1672          ROL.W   #2,D4           * [D5] Reading size
00001FB8  1A04                    1673          MOVE.B  D4,D5
00001FBA  0205 0003               1674          ANDI.B  #%11,D5
00001FBE                          1675          
00001FBE  BA3C 0003               1676          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001FC2  6700 00F0               1677          BEQ     DS1110MEM
00001FC6                          1678          
00001FC6  E35C                    1679          ROL.W   #1,D4           * [D6] Reading count mode
00001FC8  1C04                    1680          MOVE.B  D4,D6
00001FCA  0206 0001               1681          ANDI.B  #%1,D6
00001FCE                          1682          
00001FCE  E55C                    1683          ROL.W   #2,D4           * [D7] reading type of shift
00001FD0  1E04                    1684          MOVE.B  D4,D7
00001FD2  0207 0003               1685          ANDI.B  #%11,D7
00001FD6                          1686          
00001FD6  E75C                    1687          ROL.W   #3,D4           * [D1] reading register
00001FD8  1204                    1688          MOVE.B  D4,D1
00001FDA  0201 0007               1689          ANDI.B  #%111,D1
00001FDE                          1690          
00001FDE  BE3C 0001               1691          CMP.B   #%01,D7   *Determine shift type
00001FE2  6700 008E               1692          BEQ     DLS
00001FE6  BE3C 0000               1693          CMP.B   #%00,D7
00001FEA  6700 0092               1694          BEQ     DAS
00001FEE  BE3C 0003               1695          CMP.B   #%11,D7
00001FF2  6700 0096               1696          BEQ     DRO
00001FF6                          1697          
00001FF6  6000 01F6               1698          BRA     DSEND               *Fallback in case of invalid code
00001FFA                          1699          
00001FFA  48E7 FFFF               1700  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001FFE  4EB9 00002096           1701          JSR     DS1110SIDE
00002004  4CDF FFFF               1702          MOVEM.L (SP)+,A0-A7/D0-D7
00002008                          1703          
00002008  48E7 FFFF               1704          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
0000200C  4EB8 11D2               1705          JSR     SIZE
00002010  4CDF FFFF               1706          MOVEM.L (SP)+,A0-A7/D0-D7
00002014                          1707          
00002014  103C 000E               1708          MOVE.B  #14,D0
00002018  43F9 00002423           1709          LEA     SM5,A1
0000201E  4E4F                    1710          TRAP    #15
00002020                          1711          
00002020  BA3C 0003               1712          CMP.B   #%11,D5
00002024  6700 00B4               1713          BEQ     DS1110MEMA
00002028                          1714          
00002028  BC3C 0001               1715          CMP.B   #%1,D6
0000202C  6700 003A               1716          BEQ     DS1110_REG_D
00002030  6000 002C               1717          BRA     DS1110_REG_I
00002034                          1718          
00002034  1C01                    1719  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00002036                          1720          
00002036  103C 0003               1721          MOVE.B  #3,D0
0000203A  1202                    1722          MOVE.B  D2,D1
0000203C  4E4F                    1723          TRAP    #15
0000203E                          1724          
0000203E  103C 000E               1725          MOVE.B  #14,D0
00002042  43F9 0000248C           1726          LEA     COMMA,A1
00002048  4E4F                    1727          TRAP    #15
0000204A                          1728          
0000204A  43F9 00002478           1729          LEA     VALD,A1
00002050  4E4F                    1730          TRAP    #15
00002052                          1731          
00002052  103C 0003               1732          MOVE.B  #3,D0
00002056  1206                    1733          MOVE.B  D6,D1
00002058  4E4F                    1734          TRAP    #15
0000205A                          1735          
0000205A  6000 0192               1736          BRA     DSEND
0000205E                          1737          
0000205E                          1738  DS1110_REG_I
0000205E  43F9 0000247A           1739          LEA     VALN,A1
00002064  4E4F                    1740          TRAP    #15
00002066  60CC                    1741          BRA     DS1110B
00002068                          1742  
00002068                          1743  DS1110_REG_D
00002068  43F9 00002478           1744          LEA     VALD,A1
0000206E  4E4F                    1745          TRAP    #15
00002070  60C2                    1746          BRA     DS1110B       
00002072                          1747          
00002072  43F9 000024B4           1748  DLS     LEA     LSM,A1
00002078  4E4F                    1749          TRAP    #15
0000207A  6000 FF7E               1750          BRA     DS1110A
0000207E                          1751          
0000207E  43F9 000024BB           1752  DAS     LEA     ASM,A1
00002084  4E4F                    1753          TRAP    #15
00002086  6000 FF72               1754          BRA     DS1110A
0000208A                          1755          
0000208A  43F9 000024C2           1756  DRO     LEA     ROM,A1
00002090  4E4F                    1757          TRAP    #15
00002092  6000 FF66               1758          BRA     DS1110A
00002096                          1759          
00002096                          1760  DS1110SIDE
00002096  103C 0006               1761          MOVE.B  #6,D0
0000209A  B63C 0001               1762          CMP.B   #1,D3
0000209E  6700 000C               1763          BEQ     DS1110LSIDE
000020A2  123C 0052               1764          MOVE.B  #82,D1
000020A6  4E4F                    1765          TRAP    #15
000020A8  6000 0008               1766          BRA     DS1110SIDEEND
000020AC                          1767  
000020AC                          1768  DS1110LSIDE
000020AC  123C 004C               1769          MOVE.B  #76,D1
000020B0  4E4F                    1770          TRAP    #15
000020B2                          1771          
000020B2                          1772  DS1110SIDEEND
000020B2  4E75                    1773          RTS 
000020B4                          1774  
000020B4                          1775  DS1110MEM
000020B4                          1776                                  * Shift type is instead stored in D2
000020B4                          1777          
000020B4  E75C                    1778          ROL.W   #3,D4           * [D6] Reading address mode
000020B6  1C04                    1779          MOVE.B  D4,D6
000020B8  0206 0007               1780          ANDI.B  #%111,D6
000020BC                          1781          
000020BC  E75C                    1782          ROL.W   #3,D4           * [D1] Reading address register
000020BE  1204                    1783          MOVE.B  D4,D1
000020C0  0201 0007               1784          ANDI.B  #%111,D1
000020C4                          1785          
000020C4  B43C 0001               1786          CMP.B   #%01,D2
000020C8  67A8                    1787          BEQ     DLS
000020CA  B43C 0000               1788          CMP.B   #%00,D2
000020CE  67AE                    1789          BEQ     DAS
000020D0  B43C 0003               1790          CMP.B   #%11,D2
000020D4  67B4                    1791          BEQ     DRO
000020D6  6000 0116               1792          BRA     DSEND
000020DA                          1793          
000020DA                          1794          
000020DA                          1795  DS1110MEMA
000020DA                          1796          
000020DA  BC3C 0002               1797          CMP.B   #%010,D6
000020DE  6700 002E               1798          BEQ     DS1110MEM_REG
000020E2  BC3C 0003               1799          CMP.B   #%011,D6
000020E6  6700 004C               1800          BEQ     DS1110MEM_INC
000020EA  BC3C 0004               1801          CMP.B   #%100,D6
000020EE  6700 006A               1802          BEQ     DS1110MEM_DEC
000020F2                          1803          
000020F2  BC3C 0007               1804          CMP.B   #%111,D6
000020F6  6600 00CA               1805          BNE     DSERR
000020FA                          1806          
000020FA  B23C 0000               1807          CMP.B   #%000,D1
000020FE  6700 0080               1808          BEQ     DS1110MEM_CUSW
00002102  B23C 0001               1809          CMP.B   #%001,D1
00002106  6700 0096               1810          BEQ     DS1110MEM_CUSL
0000210A                          1811          
0000210A  6000 00E2               1812          BRA     DSEND
0000210E                          1813  
0000210E                          1814  DS1110MEM_REG
0000210E  43F9 00002482           1815          LEA     OPENPTR,A1
00002114  4E4F                    1816          TRAP    #15
00002116                          1817          
00002116  43F9 00002476           1818          LEA     VALA,A1
0000211C  4E4F                    1819          TRAP    #15
0000211E                          1820          
0000211E  103C 0003               1821          MOVE.B  #3,D0
00002122  4E4F                    1822          TRAP    #15
00002124  103C 000E               1823          MOVE.B  #14,D0
00002128                          1824          
00002128  43F9 00002487           1825          LEA     CLOSEPTR,A1
0000212E  4E4F                    1826          TRAP    #15
00002130                          1827          
00002130  6000 00BC               1828          BRA     DSEND
00002134                          1829  
00002134                          1830  DS1110MEM_INC
00002134  43F9 00002482           1831          LEA     OPENPTR,A1
0000213A  4E4F                    1832          TRAP    #15
0000213C                          1833          
0000213C  43F9 00002476           1834          LEA     VALA,A1
00002142  4E4F                    1835          TRAP    #15
00002144                          1836          
00002144  103C 0003               1837          MOVE.B  #3,D0
00002148  4E4F                    1838          TRAP    #15
0000214A  103C 000E               1839          MOVE.B  #14,D0
0000214E                          1840          
0000214E  43F9 00002489           1841          LEA     CLOSEIPTR,A1
00002154  4E4F                    1842          TRAP    #15
00002156                          1843          
00002156  6000 0096               1844          BRA     DSEND
0000215A                          1845  
0000215A                          1846  DS1110MEM_DEC
0000215A  43F9 00002484           1847          LEA     OPENDPTR,A1
00002160  4E4F                    1848          TRAP    #15
00002162                          1849          
00002162  43F9 00002476           1850          LEA     VALA,A1
00002168  4E4F                    1851          TRAP    #15
0000216A                          1852          
0000216A  103C 0003               1853          MOVE.B  #3,D0
0000216E  4E4F                    1854          TRAP    #15
00002170  103C 000E               1855          MOVE.B  #14,D0
00002174                          1856          
00002174  43F9 00002487           1857          LEA     CLOSEPTR,A1
0000217A  4E4F                    1858          TRAP    #15
0000217C                          1859          
0000217C  6000 0070               1860          BRA     DSEND
00002180                          1861          
00002180                          1862  DS1110MEM_CUSW
00002180  43F9 0000248E           1863          LEA     DOLLAR,A1
00002186  4E4F                    1864          TRAP    #15
00002188  341A                    1865          MOVE.W  (A2)+,D2
0000218A  48E7 0400               1866          MOVEM.L D5,-(SP)
0000218E  1A3C 0030               1867          MOVE.B  #48,D5
00002192  4EB8 118A               1868          JSR     HEXOUT
00002196  4CDF 0020               1869          MOVEM.L (SP)+,D5
0000219A  6000 0052               1870          BRA     DSEND
0000219E                          1871          
0000219E                          1872  DS1110MEM_CUSL
0000219E  43F9 0000248E           1873          LEA     DOLLAR,A1
000021A4  4E4F                    1874          TRAP    #15
000021A6  241A                    1875          MOVE.L  (A2)+,D2
000021A8  48E7 0400               1876          MOVEM.L D5,-(SP)
000021AC  1A3C 0030               1877          MOVE.B  #48,D5
000021B0  4EB8 118A               1878          JSR     HEXOUT
000021B4  4CDF 0020               1879          MOVEM.L (SP)+,D5
000021B8  6000 0034               1880          BRA     DSEND
000021BC                          1881          
000021BC                          1882  
000021BC                          1883  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000021BC                          1884  
000021BC  4E71                    1885  DS1111  NOP
000021BE  6000 002E               1886          BRA     DSEND
000021C2                          1887  
000021C2                          1888  *DS Final
000021C2                          1889  *--------------------------------------------------------------------------------------------------
000021C2                          1890  
000021C2  103C 000E               1891  DSERR   MOVE.B  #14,D0
000021C6  43F9 0000243F           1892          LEA     ERRM,A1
000021CC  4E4F                    1893          TRAP    #15
000021CE  6000 001E               1894          BRA     DSEND
000021D2                          1895          
000021D2                          1896  DSERRINS
000021D2  103C 000E               1897          MOVE.B  #14,D0
000021D6  43F9 00002447           1898          LEA     ERRMINS,A1
000021DC  4E4F                    1899          TRAP    #15
000021DE  6000 000E               1900          BRA     DSEND
000021E2                          1901  
000021E2                          1902  DSERREA
000021E2  103C 000E               1903          MOVE.B  #14,D0
000021E6  43F9 00002448           1904          LEA     ERRMEA,A1
000021EC  4E4F                    1905          TRAP    #15
000021EE                          1906  
000021EE  4E75                    1907  DSEND   RTS
000021F0                          1908  
000021F0  43F9 00002410           1909  DSEOF   LEA     LB,A1
000021F6  103C 000E               1910          MOVE.B  #14,D0
000021FA  4E4F                    1911          TRAP    #15
000021FC                          1912          
000021FC  43F9 00002312           1913          LEA     REST,A1
00002202  103C 000E               1914          MOVE.B  #14,D0
00002206  4E4F                    1915          TRAP    #15
00002208                          1916          
00002208  103C 0005               1917          MOVE.B  #5,D0
0000220C  4E4F                    1918          TRAP    #15
0000220E                          1919          
0000220E  B23C 0059               1920          CMP.B   #89,D1
00002212  6700 EDEC               1921          BEQ     START
00002216  B23C 0079               1922          CMP.B   #121,D1
0000221A  6700 EDE4               1923          BEQ     START
0000221E                          1924  
0000221E  43F9 00002410           1925  END     LEA     LB,A1
00002224  103C 000E               1926          MOVE.B  #14,D0
00002228  4E4F                    1927          TRAP    #15
0000222A                          1928          
0000222A  43F9 00002410           1929          LEA     LB,A1
00002230  103C 000E               1930          MOVE.B  #14,D0
00002234  4E4F                    1931          TRAP    #15
00002236                          1932          
00002236  43F9 0000232F           1933          LEA     ENDMSG,A1
0000223C  103C 000E               1934          MOVE.B  #14,D0
00002240  4E4F                    1935          TRAP    #15
00002242                          1936          
00002242  43F9 00002357           1937          LEA     AUTHOR,A1
00002248  4E4F                    1938          TRAP    #15
0000224A                          1939          
0000224A  43F9 00002410           1940          LEA     LB,A1
00002250  103C 000E               1941          MOVE.B  #14,D0
00002254  4E4F                    1942          TRAP    #15
00002256                          1943          
00002256  103C 0009               1944          MOVE.B  #9,D0
0000225A  4E4F                    1945          TRAP    #15
0000225C                          1946  
0000225C                          1947  *Initialized Variables
0000225C                          1948  *--------------------------------------------------------------------------------------------------
0000225C                          1949  
0000225C  =0000000D               1950  CR      EQU     $0D
0000225C  =0000000A               1951  LF      EQU     $0A
0000225C  =00000009               1952  HT      EQU     $09
0000225C                          1953  
0000225C= 54 68 69 73 20 69 ...   1954  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000022E4= 45 6E 74 65 72 20 ...   1955  ASTART  DC.B    'Enter start address: $',0
000022FB= 45 6E 74 65 72 20 ...   1956  AEND    DC.B    'Enter end address:   $',0
00002312= 52 65 73 74 61 72 ...   1957  REST    DC.B    'Restart Disassembler (y/n)? ',0
0000232F= 54 68 61 6E 6B 20 ...   1958  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002357= 4D 61 64 65 20 62 ...   1959  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000237C                          1960  
0000237C= 45 52 52 4F 52 3A ...   1961  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
000023B6= 45 52 52 4F 52 3A ...   1962  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
000023DC= 45 52 52 4F 52 3A ...   1963  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00002410                          1964  
00002410= 0D 0A 00                1965  LB      DC.B    CR,LF,0
00002413                          1966  
00002413= 09 00                   1967  HTM     DC.B    HT,0
00002415                          1968  
00002415= 20 00                   1969  SM1     DC.B    ' ',0
00002417= 20 20 00                1970  SM2     DC.B    '  ',0
0000241A= 20 20 20 00             1971  SM3     DC.B    '   ',0
0000241E= 20 20 20 20 00          1972  SM4     DC.B    '    ',0
00002423= 20 20 20 20 20 00       1973  SM5     DC.B    '     ',0
00002429= 20 20 20 20 20 20 00    1974  SM6     DC.B    '      ',0
00002430= 20 20 20 20 20 20 ...   1975  SM7     DC.B    '       ',0
00002438                          1976  
00002438= 54 45 53 54 00          1977  TESTM   DC.B    'TEST',0
0000243D                          1978  
0000243D= 00                      1979  NOTH    DC.B    '',0
0000243E= 00                      1980  NOTH2   DC.B    '',0
0000243F                          1981  
0000243F= 20 2A 45 52 52 4F ...   1982  ERRM    DC.B    ' *ERROR',0
00002447= 00                      1983  ERRMINS DC.B    '',0
00002448= 20 2A 45 52 52 4F ...   1984  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
0000246D                          1985  
0000246D= 2E 42 00                1986  MODEB   DC.B    '.B',0
00002470= 2E 57 00                1987  MODEW   DC.B    '.W',0
00002473= 2E 4C 00                1988  MODEL   DC.B    '.L',0
00002476                          1989  
00002476= 41 00                   1990  VALA    DC.B    'A',0
00002478= 44 00                   1991  VALD    DC.B    'D',0
0000247A= 23 00                   1992  VALN    DC.B    '#',0
0000247C= 30 00                   1993  VAL0    DC.B    '0',0
0000247E= 51 00                   1994  VALQ    DC.B    'Q',0
00002480= 4D 00                   1995  VALM    DC.B    'M',0
00002482                          1996  
00002482= 28 00                   1997  OPENPTR     DC.B    '(',0
00002484= 2D 28 00                1998  OPENDPTR    DC.B    '-(',0
00002487                          1999  
00002487= 29 00                   2000  CLOSEPTR    DC.B    ')',0
00002489= 29 2B 00                2001  CLOSEIPTR   DC.B    ')+',0
0000248C                          2002  
0000248C= 2C 00                   2003  COMMA   DC.B    ',',0
0000248E= 24 00                   2004  DOLLAR  DC.B    '$',0
00002490= 2F 00                   2005  SLASH   DC.B    '/',0
00002492= 2D 00                   2006  DASH    DC.B    '-',0
00002494                          2007  
00002494= 4E 4F 50 00             2008  NOPM    DC.B    'NOP',0
00002498                          2009  
00002498= 4D 4F 56 45 00          2010  MOVEM   DC.B    'MOVE',0
0000249D                          2011  
0000249D= 41 44 44 00             2012  ADDM    DC.B    'ADD',0
000024A1                          2013  
000024A1= 53 55 42 00             2014  SUBM    DC.B    'SUB',0
000024A5                          2015  
000024A5= 4C 45 41 00             2016  LEAM    DC.B    'LEA',0
000024A9                          2017  
000024A9= 41 4E 44 00             2018  ANDM    DC.B    'AND',0
000024AD= 4F 52 00                2019  ORM     DC.B    'OR',0
000024B0= 4E 4F 54 00             2020  NOTM    DC.B    'NOT',0
000024B4                          2021  
000024B4= 4C 53 00                2022  LSM    DC.B    'LS',0
000024B7= 4C 53 52 00             2023  LSRM    DC.B    'LSR',0
000024BB= 41 53 00                2024  ASM    DC.B    'AS',0
000024BE= 41 53 52 00             2025  ASRM    DC.B    'ASR',0
000024C2                          2026  
000024C2= 52 4F 00                2027  ROM    DC.B    'RO',0
000024C5= 52 4F 52 00             2028  RORM    DC.B    'ROR',0
000024C9                          2029  
000024C9= 42 47 54 00             2030  BGTM    DC.B    'BGT',0
000024CD= 42 4C 45 00             2031  BLEM    DC.B    'BLE',0
000024D1= 42 45 51 00             2032  BEQM    DC.B    'BEQ',0
000024D5                          2033  
000024D5= 4A 53 52 00             2034  JSRM    DC.B    'JSR',0
000024D9= 52 54 53 00             2035  RTSM    DC.B    'RTS',0
000024DD                          2036  
000024DD= 42 52 41 00             2037  BRAM    DC.B    'BRA',0
000024E1                          2038  
000024E1                          2039  
000024E1                          2040      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1F82
ADDCONT             1F0E
ADDDATACHECK        1F9C
ADDM                249D
ADDRMODEALL         121C
ADDSIZEEND          1F8C
ADREG               16CE
ADREGP              16E6
AEND                22FB
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                24A9
ASM                 24BB
ASRM                24BE
ASTART              22E4
AUTHOR              2357
BEQM                24D1
BGTM                24C9
BLEM                24CD
BRAM                24DD
CLOSEIPTR           2489
CLOSEPTR            2487
COMMA               248C
CR                  D
DADD                1EC0
DADDA               1F66
DADDEA              1F2C
DADDPRNTREG         1F00
DADDQ               1AE8
DAND                13AE
DANDA               1438
DANDB               13FC
DANDL               1424
DANDW               1410
DAS                 207E
DASH                2492
DATACHECKCONT       1F44
DBEQ                1C94
DBGT                1C18
DBLE                1C54
DBRA                1B8C
DBRA_16BIT          1BD4
DBRA_32BIT          1BF6
DISASM              137C
DJSR                1750
DJSR_CUSL           17E8
DJSR_CUSW           17CA
DJSR_REG            17A4
DLEA                1812
DLEAP               1848
DLS                 2072
DMOVE2              144E
DMOVEA              1550
DMOVEM              1920
DMOVEQ              1CD6
DNOP                1614
DNOT                1620
DNOTA               1680
DNOTB               1644
DNOTL               166C
DNOTW               1658
DOLLAR              248E
DOR                 1D40
DORA                1DAC
DORAD               1DFA
DORAE               1DD2
DORB                1D70
DORL                1D98
DORW                1D84
DREG                16B6
DRO                 208A
DRTS                1806
DS0                 1386
DS00                139A
DS01                1572
DS010               1590
DS0100              15CC
DS0101              1AE6
DS011               159A
DS0110              1B60
DS0111              1CD4
DS1                 1390
DS10                157C
DS100               15A4
DS1000              1D3E
DS1001              1E1A
DS101               15AE
DS1010              1EAC
DS1011              1EB2
DS11                1586
DS110               15B8
DS1100              1EB8
DS1101              1EBE
DS111               15C2
DS1110              1FA6
DS1110A             1FFA
DS1110B             2034
DS1110LSIDE         20AC
DS1110MEM           20B4
DS1110MEMA          20DA
DS1110MEM_CUSL      219E
DS1110MEM_CUSW      2180
DS1110MEM_DEC       215A
DS1110MEM_INC       2134
DS1110MEM_REG       210E
DS1110SIDE          2096
DS1110SIDEEND       20B2
DS1110_REG_D        2068
DS1110_REG_I        205E
DS1111              21BC
DSEND               21EE
DSEOF               21F0
DSERR               21C2
DSERREA             21E2
DSERRINS            21D2
DSUB                1E1C
DSUBEA              1E78
DSUBPRNTREG         1E54
END                 221E
ENDMSG              232F
ERRM                243F
ERRMEA              2448
ERRMINS             2447
EXT                 172E
EXTW                1744
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 2413
INTRO               225C
JSR010              1874
JSR111              18A4
JSR111001           18D6
JSRM                24D5
JSRPRINT2           1900
LB                  2410
LEAM                24A5
LF                  A
LSM                 24B4
LSRM                24B7
MADREG              1706
MODEB               246D
MODEL               2473
MODEW               2470
MOVECONT            1472
MOVEERRCHECK        1566
MOVEM               2498
MOVEM2              19C2
MOVEM3              19FC
MOVEM31             1A12
MOVEM32             1A18
MOVEM4              1A3E
MOVEM5              1A84
MOVEMEA             195C
MOVEMEB             198A
MOVEMEB1            19A2
MOVEMEB2            19A8
MOVEML              1954
MOVEMLOOP           1AA0
MOVEMLOOPDONE       1AE0
MOVEMLOOPINC        1ADC
MOVEMLOOPSINGLEAR   1AE2
MOVEMSHIFTL         1AC2
MOVEMSHIFTR         1ACA
MOVEMSTEP           1AA8
MOVEMSTEP1          1AB4
MOVEMSTEP2          1AD2
MSDONE              1516
MSIZE               149A
MSIZEB              14F8
MSIZEBN             14C2
MSIZEL              150C
MSIZELN             14E6
MSIZENORM           1472
MSIZEW              1502
MSIZEWN             14D4
NOPM                2494
NOTH                243D
NOTH2               243E
NOTM                24B0
OPENDPTR            2484
OPENPTR             2482
ORM                 24AD
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1F5E
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                2312
ROM                 24C2
RORM                24C5
RPAUSE              117E
RSTEP               112E
RTSM                24D9
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               2490
SM1                 2415
SM2                 2417
SM3                 241A
SM4                 241E
SM5                 2423
SM6                 2429
SM7                 2430
SRET                121A
START               1000
STARTER             0
SUBM                24A1
TEST                103A
TESTM               2438
VAL0                247C
VALA                2476
VALD                2478
VALM                2480
VALN                247A
VALQ                247E
VERR1               10F8
VERR1M              237C
VERR2               1108
VERR2M              23B6
VERR3               1118
VERR3M              23DC
VINPUT              10EE
