00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 8:35:21 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 00002286             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 0000230E             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 00002467             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 00002325             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 00002467             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 000023A6            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 1142                114          BRA     END
00001108                           115  
00001108  43F9 000023E0            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 1132                119          BRA     END
00001118                           120  
00001118  43F9 00002406            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 1122                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 00002441            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 0000243A            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 10A0                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 00002497            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 0000249A            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 0000249D            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 000024A2            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0FA2                256          BEQ     DSERR
0000124C  43F9 000024A0            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 000024AC            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 000024A0            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 000024B1            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 000024AC            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 000024A0            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 000024B3            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 000024AE            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 000024A0            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 000024B1            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0EF2                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 000024B8            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 000024B8            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0E9E                334          BNE     DSERR
00001350  43F9 000024A4            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 0212                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 021C                373          BCS     DS11
00001396  6000 020E                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 0006                381          BEQ     DAND
000013AA  6000 00CC                382          BRA     DMOVE2
000013AE                           383  
000013AE  E95C                     384  DAND    ROL.W   #4,D4
000013B0  1A04                     385          MOVE.B  D4,D5
000013B2  0205 0002                386          ANDI.B  #%0010,D5
000013B6  0C05 0002                387          CMPI.B  #%0010,D5
000013BA  6600 0E40                388          BNE     DSERRINS
000013BE                           389          
000013BE  E75C                     390          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013C0  1A04                     391          MOVE.B  D4,D5           ; Move the byte in D4 to D5
000013C2  0205 0007                392          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013C6  1C05                     393          MOVE.B  D5,D6           ; Store the register number in D6 for later use
000013C8                           394  
000013C8  E75C                     395          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013CA  1A04                     396          MOVE.B  D4,D5           ; Move the byte in D4 to D5
000013CC  0205 0007                397          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013D0  1E05                     398          MOVE.B  D5,D7           ; Store opmode in D7 for later use
000013D2  BA3C 0000                399          CMP.B   #%000,D5        ; Compare with byte size
000013D6  6700 0016                400          BEQ     DANDB
000013DA  BA3C 0001                401          CMP.B   #%001,D5        ; Compare with word size
000013DE  6700 0022                402          BEQ     DANDW
000013E2  BA3C 0002                403          CMP.B   #%010,D5        ; Compare with long size
000013E6  6700 002E                404          BEQ     DANDL
000013EA                           405  
000013EA  6000 0E2C                406          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013EE                           407  
000013EE  43F9 000024D3            408  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F4  4E4F                     409          TRAP    #15             ; Print ANDM string
000013F6  43F9 00002497            410          LEA     MODEB,A1        ; Load effective address of MODEB string
000013FC  4E4F                     411          TRAP    #15             ; Print MODEB string
000013FE  6000 002A                412          BRA     DANDA           ; Branch to addressing mode parsing
00001402                           413  
00001402  43F9 000024D3            414  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001408  4E4F                     415          TRAP    #15             ; Print ANDM string
0000140A  43F9 0000249A            416          LEA     MODEW,A1        ; Load effective address of MODEW string
00001410  4E4F                     417          TRAP    #15             ; Print MODEW string
00001412  6000 0016                418          BRA     DANDA           ; Branch to addressing mode parsing
00001416                           419  
00001416  43F9 000024D3            420  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000141C  4E4F                     421          TRAP    #15             ; Print ANDM string
0000141E  43F9 0000249D            422          LEA     MODEL,A1        ; Load effective address of MODEL string
00001424  4E4F                     423          TRAP    #15             ; Print MODEL string
00001426  6000 0002                424          BRA     DANDA           ; Branch to addressing mode parsing
0000142A                           425  
0000142A  43F9 00002448            426  DANDA   LEA     SM4,A1
00001430  4E4F                     427          TRAP    #15
00001432  ED5C                     428          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001434  1A04                     429          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001436  0205 0038                430          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
0000143A  E61D                     431          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
0000143C  1605                     432          MOVE.B  D5,D3           ; Store mode in D3 for further checks
0000143E  0204 0007                433          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001442  1C04                     434          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001444                           435  
00001444  BE3C 0004                436          CMP.B   #%100,D7        ; Compare opmode with '100'
00001448  6D00 0006                437          BLT     DANDAE          ; If opmode < '100', branch to DANDAE
Line 438 ERROR: Undefined symbol
0000144C  6000 A8C8                438          BRA     DANDAD          ; Else, branch to DANDAD
00001450                           439  
00001450  4EB8 121C                440  DANDAE  JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001454  103C 000E                441          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001458  43F9 000024B6            442          LEA     COMMA,A1        ; Load effective address of COMMA string
0000145E  4E4F                     443          TRAP    #15             ; Print comma
00001460  43F9 000024A2            444          LEA     VALD,A1
00001466  4E4F                     445          TRAP    #15
00001468  1206                     446          MOVE.B  D6,D1           ; Move ea num to D1 to print
0000146A  103C 0003                447          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
0000146E  4E4F                     448          TRAP    #15             ; Print register number
00001470  103C 000E                449          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001474  6000 0DA2                450          BRA     DSEND           ; Branch to DSEND
00001478                           451               
00001478                           452  
00001478                           453  
00001478                           454          
00001478                           455  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
00001478  4E71                     456  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000147A                           457          *size in d5 from above processing
0000147A  43F9 000024C2            458          LEA     MOVEM,A1
00001480  4E4F                     459          TRAP    #15
00001482                           460                  
00001482                           461          *dest reg to d7
00001482  E75C                     462          ROL.W   #3,D4
00001484  1E04                     463          MOVE.B  D4,D7
00001486  CE3C 0007                464          AND.B   #%111,D7
0000148A                           465          
0000148A                           466          *dest mode to d3: An means MOVEA
0000148A  E75C                     467          ROL.W   #3,D4
0000148C  1604                     468          MOVE.B  D4,D3
0000148E  C63C 0007                469          AND.B   #%111,D3
00001492  3C43                     470          MOVE.W  D3,A6
00001494                           471          
00001494  B67C 0001                472          CMP     #%001,D3
00001498  6700 00E0                473          BEQ     DMOVEA
0000149C                           474          
0000149C                           475  
0000149C                           476  MOVECONT
0000149C                           477  *printing size then first addressing moode, then comma
0000149C                           478  *size is different for move
0000149C                           479  MSIZENORM  
0000149C  103C 000E                480          MOVE.B  #14,D0
000014A0  BA3C 0001                481          CMP.B   #%01,D5
000014A4  6700 0046                482          BEQ     MSIZEBN
000014A8  BA3C 0003                483          CMP.B   #%11,D5
000014AC  6700 0050                484          BEQ     MSIZEWN
000014B0  BA3C 0002                485          CMP.B   #%10,D5
000014B4  6700 005A                486          BEQ     MSIZELN
000014B8  BA3C 0003                487          CMP.B   #%11,D5
000014BC  6700 006E                488          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014C0  6000 0D2A                489          BRA     DSERR
000014C4                           490          
000014C4                           491  MSIZE
000014C4  103C 000E                492          MOVE.B  #14,D0
000014C8  BA3C 0001                493          CMP.B   #%01,D5
000014CC  6700 0054                494          BEQ     MSIZEB
000014D0  BA3C 0003                495          CMP.B   #%11,D5
000014D4  6700 0056                496          BEQ     MSIZEW
000014D8  BA3C 0002                497          CMP.B   #%10,D5
000014DC  6700 0058                498          BEQ     MSIZEL
000014E0  BA3C 0003                499          CMP.B   #%11,D5
000014E4  6700 0046                500          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014E8  6000 0D02                501          BRA     DSERR
000014EC                           502  
000014EC  43F9 00002497            503  MSIZEBN LEA     MODEB,A1
000014F2  4E4F                     504          TRAP    #15
000014F4  43F9 0000243F            505          LEA     SM1,A1
000014FA  6000 0044                506          BRA     MSDONE
000014FE                           507  
000014FE  43F9 0000249A            508  MSIZEWN LEA     MODEW,A1
00001504  4E4F                     509          TRAP    #15
00001506  43F9 0000243F            510          LEA     SM1,A1
0000150C  6000 0032                511          BRA     MSDONE
00001510                           512  
00001510  43F9 0000249D            513  MSIZELN LEA     MODEL,A1
00001516  4E4F                     514          TRAP    #15
00001518  43F9 0000243F            515          LEA     SM1,A1
0000151E  6000 0020                516          BRA     MSDONE
00001522                           517      
00001522  43F9 00002497            518  MSIZEB  LEA     MODEB,A1
00001528  6000 0016                519          BRA     MSDONE
0000152C                           520  
0000152C  43F9 0000249A            521  MSIZEW  LEA     MODEW,A1
00001532  6000 000C                522          BRA     MSDONE
00001536                           523  
00001536  43F9 0000249D            524  MSIZEL  LEA     MODEL,A1
0000153C  6000 0002                525          BRA     MSDONE
00001540                           526  
00001540  4E4F                     527  MSDONE  TRAP    #15
00001542                           528  
00001542  43F9 00002444            529          LEA     SM3,A1
00001548  4E4F                     530          TRAP    #15
0000154A                           531          
0000154A                           532          *source mode to d3
0000154A  E75C                     533          ROL.W   #3,D4
0000154C  1604                     534          MOVE.B  D4,D3
0000154E  C63C 0007                535          AND.B   #%111,D3
00001552                           536          
00001552                           537          *source reg to d6
00001552  E75C                     538          ROL.W   #3,D4
00001554  1C04                     539          MOVE.B  D4,D6
00001556  CC3C 0007                540          AND.B   #%111,D6
0000155A                           541          
0000155A  4EB8 121C                542          JSR     ADDRMODEALL
0000155E  B67C 0001                543          CMP     #%001,D3
00001562  6700 002C                544          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
00001566  43F9 000024B6            545          LEA     COMMA,A1
0000156C  4E4F                     546          TRAP    #15
0000156E  1C07                     547          MOVE.B  D7,D6
00001570  360E                     548          MOVE.W  A6,D3
00001572  4EB8 121C                549          JSR     ADDRMODEALL
00001576  6000 0CA0                550          BRA     DSEND
0000157A                           551  
0000157A  4E71                     552  DMOVEA  NOP
0000157C  BA7C 0001                553          CMP     #%01,D5     *if size is byte, err
00001580  6700 0C6A                554          BEQ     DSERR
00001584  43F9 000024A0            555          LEA     VALA,A1        *else, print A and return
0000158A  4E4F                     556          TRAP    #15
0000158C  6000 FF36                557          BRA     MSIZE
00001590                           558  
00001590                           559  MOVEERRCHECK
00001590  BA7C 0001                560          CMP     #%01,D5
00001594  6700 0C56                561          BEQ     DSERR
00001598  6000 0C7E                562          BRA     DSEND
0000159C                           563  
0000159C                           564          
0000159C                           565  
0000159C                           566  *DS Tier 2 ----------------------------------------------------------------------------------------
0000159C                           567  
0000159C                           568  DS01                        *DS01: Tier 2 binary search for 01 side
0000159C  E34C                     569          LSL.W   #1,D4
0000159E  6500 0024                570          BCS     DS011
000015A2  6000 0016                571          BRA     DS010
000015A6                           572  
000015A6                           573  DS10                        *DS10: Tier 2 binary search for 10 side
000015A6  E34C                     574          LSL.W   #1,D4
000015A8  6500 002E                575          BCS     DS101
000015AC  6000 0020                576          BRA     DS100
000015B0                           577  
000015B0                           578  DS11                        *DS11: Tier 2 binary search for 11 side
000015B0  E34C                     579          LSL.W   #1,D4
000015B2  6500 0038                580          BCS     DS111
000015B6  6000 002A                581          BRA     DS110
000015BA                           582  
000015BA                           583  *DS Tier 3 ----------------------------------------------------------------------------------------
000015BA                           584  
000015BA                           585  DS010                       *DS010: Tier 3 binary search for 010 side
000015BA  E34C                     586          LSL.W   #1,D4
000015BC  6500 0552                587          BCS     DS0101
000015C0  6000 0034                588          BRA     DS0100
000015C4                           589  
000015C4                           590  DS011                       *DS011: Tier 3 binary search for 011 side
000015C4  E34C                     591          LSL.W   #1,D4
000015C6  6500 0736                592          BCS     DS0111
000015CA  6000 05BE                593          BRA     DS0110
000015CE                           594  
000015CE                           595  DS100                       *DS100: Tier 3 binary search for 100 side
000015CE  E34C                     596          LSL.W   #1,D4
000015D0  6500 0872                597          BCS     DS1001
000015D4  6000 0792                598          BRA     DS1000
000015D8                           599  
000015D8                           600  DS101                       *DS101: Tier 3 binary search for 101 side
000015D8  E34C                     601          LSL.W   #1,D4
000015DA  6500 0900                602          BCS     DS1011
000015DE  6000 08F6                603          BRA     DS1010
000015E2                           604  
000015E2                           605  DS110                       *DS110: Tier 3 binary search for 110 side
000015E2  E34C                     606          LSL.W   #1,D4
000015E4  6500 0902                607          BCS     DS1101
000015E8  6000 08F8                608          BRA     DS1100
000015EC                           609  
000015EC                           610  DS111                       *DS111: Tier 3 binary search for 111 side
000015EC  E34C                     611          LSL.W   #1,D4
000015EE  6500 0BF6                612          BCS     DS1111
000015F2  6000 09DC                613          BRA     DS1110
000015F6                           614  
000015F6                           615  *DS Tier 4 ----------------------------------------------------------------------------------------
000015F6                           616  
000015F6                           617  DS0100                      *DS0100: Processing for 0100 prefix
000015F6  0C44 E710                618          CMPI.W  #%1110011100010000,D4
000015FA  6700 0042                619          BEQ     DNOP
000015FE  0C44 E750                620          CMPI.W  #%1110011101010000,D4
00001602  6700 022C                621          BEQ     DRTS
00001606                           622          
00001606  3404                     623          MOVE.W  D4,D2
00001608  0242 1C00                624          ANDI.W  #%0001110000000000,D2
0000160C  0C42 1C00                625          CMPI.W  #%0001110000000000,D2
00001610  6700 022A                626          BEQ     DLEA
00001614                           627          
00001614  3404                     628          MOVE.W  D4,D2
00001616  0242 B800                629          ANDI.W  #%1011100000000000,D2
0000161A  0C42 8800                630          CMPI.W  #%1000100000000000,D2
0000161E  6700 032A                631          BEQ     DMOVEM
00001622                           632          
00001622  E95C                     633          ROL.W   #4,D4
00001624  1404                     634          MOVE.B  D4,D2
00001626  0202 000F                635          ANDI.B  #%1111,D2
0000162A                           636          
0000162A  B43C 000E                637          CMP.B   #%1110,D2
0000162E  6700 014A                638          BEQ     DJSR
00001632                           639          
00001632  B43C 0006                640          CMP.B   #%0110,D2
00001636  6700 0012                641          BEQ     DNOT
0000163A                           642          
0000163A  6000 0BC0                643          BRA     DSERRINS
0000163E                           644  
0000163E  43F9 000024BE            645  DNOP    LEA     NOPM,A1
00001644  4E4F                     646          TRAP    #15
00001646  6000 0BD0                647          BRA     DSEND
0000164A                           648          
0000164A  E55C                     649  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
0000164C  1A04                     650          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000164E  0205 0003                651          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001652                           652  
00001652  BA3C 0000                653          CMP.B   #%00,D5         ; compare with byte size
00001656  6700 0016                654          BEQ     DNOTB
0000165A  BA3C 0001                655          CMP.B   #%01,D5         ; compare with word size
0000165E  6700 0022                656          BEQ     DNOTW
00001662  BA3C 0002                657          CMP.B   #%10,D5         ; compare with long size
00001666  6700 002E                658          BEQ     DNOTL
0000166A                           659          
0000166A  6000 0BAC                660          BRA     DSEND           ; branch to DSEND in case of invalid code
0000166E                           661  
0000166E  43F9 000024DA            662  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
00001674  4E4F                     663          TRAP    #15             ; print NOTM string
00001676  43F9 00002497            664          LEA     MODEB,A1        ; load effective address of MODEB string
0000167C  4E4F                     665          TRAP    #15             ; print MODEB string
0000167E  6000 002A                666          BRA     DNOTA           ; branch to addressing mode parsing
00001682                           667  
00001682  43F9 000024DA            668  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001688  4E4F                     669          TRAP    #15             ; print NOTM string
0000168A  43F9 0000249A            670          LEA     MODEW,A1        ; load effective address of MODEW string
00001690  4E4F                     671          TRAP    #15             ; print MODEW string
00001692  6000 0016                672          BRA     DNOTA           ; branch to addressing mode parsing
00001696                           673  
00001696  43F9 000024DA            674  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
0000169C  4E4F                     675          TRAP    #15             ; print NOTM string
0000169E  43F9 0000249D            676          LEA     MODEL,A1        ; load effective address of MODEL string
000016A4  4E4F                     677          TRAP    #15             ; print MODEL string
000016A6  6000 0002                678          BRA     DNOTA           ; branch to addressing mode parsing
000016AA                           679  
000016AA  ED5C                     680  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
000016AC  1204                     681          MOVE.B  D4,D1           ; move the byte in D4 to D1
000016AE  0201 003F                682          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
000016B2                           683  
000016B2                           684          ; Now process addressing mode and register based on the value in D1
000016B2                           685  
000016B2  1A01                     686          MOVE.B  D1,D5           ; Move the byte in D1 to D5
000016B4  0205 0007                687          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000016B8  6700 0026                688          BEQ     DREG            ; If it is direct register mode
000016BC  BA3C 0002                689          CMP.B   #%010,D5        ; Compare with An
000016C0  6700 0036                690          BEQ     ADREG
000016C4  BA3C 0003                691          CMP.B   #%011,D5        ; Compare with (An)+
000016C8  6700 0046                692          BEQ     ADREGP
000016CC  BA3C 0004                693          CMP.B   #%100,D5        ; Compare with -(An)
000016D0  6700 005E                694          BEQ     MADREG
000016D4  BA3C 0007                695          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
000016D8  6700 007E                696          BEQ     EXT
000016DC                           697              
000016DC  6000 0B3A                698          BRA     DSEND
000016E0                           699  
000016E0  1C01                     700  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
000016E2  0206 0007                701          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
000016E6  DC39 000024A2            702          ADD.B   VALD,D6         ; Convert register number to ASCII
000016EC  43F9 000024A2            703          LEA     VALD,A1         ; Load effective address of Dn
000016F2  4E4F                     704          TRAP    #15             ; Print Dn
000016F4  6000 0B22                705          BRA     DSEND
000016F8                           706  
000016F8  1C01                     707  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
000016FA  0206 0007                708          ANDI.B  #%111,D6
000016FE  DC39 000024A0            709          ADD.B   VALA,D6
00001704  43F9 000024A0            710          LEA     VALA,A1
0000170A  4E4F                     711          TRAP    #15
0000170C  6000 0B0A                712          BRA     DSEND
00001710                           713  
00001710  1C01                     714  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
00001712  0206 0007                715          ANDI.B  #%111,D6
00001716  DC39 000024A0            716          ADD.B   VALA,D6
0000171C  43F9 000024A0            717          LEA     VALA,A1
00001722  4E4F                     718          TRAP    #15
00001724  43F9 000024B3            719          LEA     CLOSEIPTR,A1    ; Load effective address of )+
0000172A  4E4F                     720          TRAP    #15             ; Print )+
0000172C  6000 0AEA                721          BRA     DSEND
00001730                           722  
00001730  1C01                     723  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
00001732  0206 0007                724          ANDI.B  #%111,D6
00001736  DC39 000024A0            725          ADD.B   VALA,D6
0000173C  43F9 000024AE            726          LEA     OPENDPTR,A1     ; Load effective address of -(
00001742  4E4F                     727          TRAP    #15             ; Print -(
00001744  43F9 000024A0            728          LEA     VALA,A1
0000174A  4E4F                     729          TRAP    #15
0000174C  43F9 000024B1            730          LEA     CLOSEPTR,A1     ; Load effective address of )
00001752  4E4F                     731          TRAP    #15             ; Print )
00001754  6000 0AC2                732          BRA     DSEND
00001758                           733  
00001758  1C01                     734  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
0000175A  0206 0001                735          ANDI.B  #%1,D6
0000175E  6700 000E                736          BEQ     EXTW
00001762  43F9 000024A4            737          LEA     VALN,A1         ; Load effective address of #
00001768  4E4F                     738          TRAP    #15             ; Print #
0000176A  6000 0AAC                739          BRA     DSEND
0000176E                           740  
0000176E  43F9 000024A6            741  EXTW    LEA     VAL0,A1         ; Load effective address of 0
00001774  4E4F                     742          TRAP    #15             ; Print 0
00001776  6000 0AA0                743          BRA     DSEND
0000177A                           744  
0000177A                           745          
0000177A  E55C                     746  DJSR    ROL.W   #2,D4
0000177C  1404                     747          MOVE.B  D4,D2
0000177E  0202 0007                748          ANDI.B  #%111,D2
00001782  0C02 0002                749          CMPI.B  #%10,D2
00001786  6600 0A64                750          BNE     DSERR
0000178A                           751          
0000178A  43F9 000024FF            752          LEA     JSRM,A1
00001790  4E4F                     753          TRAP    #15
00001792                           754          
00001792  43F9 0000245A            755          LEA     SM7,A1
00001798  4E4F                     756          TRAP    #15
0000179A                           757  
0000179A  E75C                     758          ROL.W   #3,D4       * [D2] address mode
0000179C  1404                     759          MOVE.B  D4,D2
0000179E  0202 0007                760          ANDI.B  #%111,D2
000017A2                           761          
000017A2  E75C                     762          ROL.W   #3,D4       * [D1] address register
000017A4  1204                     763          MOVE.B  D4,D1
000017A6  0201 0007                764          ANDI.B  #%111,D1
000017AA                           765          
000017AA  0C02 0002                766          CMPI.B  #%010,D2
000017AE  6700 001E                767          BEQ     DJSR_REG
000017B2                           768          
000017B2  0C02 0007                769          CMPI.B  #%111,D2
000017B6  6600 0A34                770          BNE     DSERR
000017BA                           771          
000017BA  0C01 0000                772          CMPI.B  #%000,D1
000017BE  6700 0034                773          BEQ     DJSR_CUSW
000017C2                           774          
000017C2  0C01 0001                775          CMPI.B  #%001,D1
000017C6  6700 004A                776          BEQ     DJSR_CUSL
000017CA                           777          
000017CA  6000 0A4C                778          BRA     DSEND
000017CE                           779          
000017CE                           780          
000017CE                           781          
000017CE                           782  DJSR_REG        
000017CE  43F9 000024AC            783          LEA     OPENPTR,A1
000017D4  4E4F                     784          TRAP    #15
000017D6                           785          
000017D6  43F9 000024A0            786          LEA     VALA,A1
000017DC  4E4F                     787          TRAP    #15
000017DE                           788          
000017DE  103C 0003                789          MOVE.B  #3,D0
000017E2  4E4F                     790          TRAP    #15
000017E4  103C 000E                791          MOVE.B  #14,D0
000017E8                           792          
000017E8  43F9 000024B1            793          LEA     CLOSEPTR,A1
000017EE  4E4F                     794          TRAP    #15
000017F0                           795          
000017F0  6000 0A26                796          BRA     DSEND
000017F4                           797  
000017F4                           798          
000017F4                           799  DJSR_CUSW
000017F4  43F9 000024B8            800          LEA     DOLLAR,A1
000017FA  4E4F                     801          TRAP    #15
000017FC  341A                     802          MOVE.W  (A2)+,D2
000017FE  48E7 0400                803          MOVEM.L D5,-(SP)
00001802  1A3C 0030                804          MOVE.B  #48,D5
00001806  4EB8 118A                805          JSR     HEXOUT
0000180A  4CDF 0020                806          MOVEM.L (SP)+,D5
0000180E  6000 0A08                807          BRA     DSEND
00001812                           808  
00001812                           809  DJSR_CUSL
00001812  43F9 000024B8            810          LEA     DOLLAR,A1
00001818  4E4F                     811          TRAP    #15
0000181A  241A                     812          MOVE.L  (A2)+,D2
0000181C  48E7 0400                813          MOVEM.L D5,-(SP)
00001820  1A3C 0030                814          MOVE.B  #48,D5
00001824  4EB8 118A                815          JSR     HEXOUT
00001828  4CDF 0020                816          MOVEM.L (SP)+,D5
0000182C  6000 09EA                817          BRA     DSEND
00001830                           818          
00001830  43F9 00002503            819  DRTS    LEA     RTSM,A1
00001836  4E4F                     820          TRAP    #15
00001838  6000 09DE                821          BRA     DSEND
0000183C                           822          
0000183C                           823          
0000183C                           824  DLEA    *printing
0000183C  43F9 000024CF            825          LEA     LEAM,A1
00001842  4E4F                     826          TRAP    #15
00001844  43F9 0000245A            827          LEA     SM7,A1
0000184A  4E4F                     828          TRAP    #15
0000184C                           829          
0000184C                           830          *shifting out 111
0000184C  E75C                     831          ROL.W   #3,D4
0000184E                           832          
0000184E                           833          *getting destination register
0000184E  E75C                     834          ROL.W   #3,D4
00001850  1404                     835          MOVE.B  D4,D2
00001852  0202 0007                836          ANDI.B  #%111,D2
00001856                           837          
00001856                           838          *getting ea mode
00001856  E75C                     839          ROL.W   #3,D4
00001858  1604                     840          MOVE.B  D4,D3
0000185A  0203 0007                841          ANDI.B  #%111,D3
0000185E                           842          
0000185E  B63C 0002                843          CMP.B   #%010,D3
00001862  6700 000E                844          BEQ     DLEAP
00001866                           845          
00001866  B63C 0007                846          CMP.B   #%111,D3
0000186A  6700 0006                847          BEQ     DLEAP
0000186E                           848          
0000186E  6000 099C                849          BRA     DSERREA
00001872                           850          
00001872                           851          *getting ea reg
00001872  E75C                     852  DLEAP   ROL.W   #3,D4
00001874  1C04                     853          MOVE.B  D4,D6
00001876  0206 0007                854          ANDI.B  #%111,D6
0000187A                           855          
0000187A                           856          *printing
0000187A  4EB8 121C                857          JSR     ADDRMODEALL
0000187E                           858          
0000187E  43F9 000024B6            859          LEA     COMMA,A1
00001884  4E4F                     860          TRAP    #15
00001886  43F9 000024A0            861          LEA     VALA,A1
0000188C  4E4F                     862          TRAP    #15
0000188E  103C 0003                863          MOVE.B  #3,D0
00001892  1202                     864          MOVE.B  D2,D1
00001894  4E4F                     865          TRAP    #15
00001896  103C 000E                866          MOVE.B  #14,D0
0000189A                           867          
0000189A  6000 097C                868          BRA DSEND
0000189E                           869          
0000189E                           870  JSR010
0000189E  B63C 0002                871          CMP.B   #%010,D3
000018A2  6600 002A                872          BNE     JSR111
000018A6  43F9 000024AC            873          LEA     OPENPTR,A1
000018AC  4E4F                     874          TRAP    #15
000018AE  43F9 000024A0            875          LEA     VALA,A1
000018B4  4E4F                     876          TRAP    #15
000018B6  103C 0003                877          MOVE.B  #3,D0
000018BA  1206                     878          MOVE.B  D6,D1
000018BC  4E4F                     879          TRAP    #15
000018BE  103C 000E                880          MOVE.B  #14,D0
000018C2  43F9 000024B1            881          LEA     CLOSEPTR,A1
000018C8  4E4F                     882          TRAP    #15
000018CA  6000 005E                883          BRA     JSRPRINT2
000018CE                           884  JSR111
000018CE  B63C 0007                885          CMP.B   #%111,D3
000018D2  6600 0918                886          BNE     DSERR
000018D6  BC3C 0000                887          CMP.B   #%000,D6
000018DA  6600 0024                888          BNE     JSR111001
000018DE  43F9 000024B8            889          LEA     DOLLAR,A1
000018E4  4E4F                     890          TRAP    #15
000018E6  341A                     891          MOVE.W  (A2)+,D2
000018E8  48E7 0400                892          MOVEM.L D5,-(SP)    
000018EC  1A3C 0030                893          MOVE.B  #48,D5
000018F0  4EB8 118A                894          JSR     HEXOUT
000018F4  4CDF 0020                895          MOVEM.L (SP)+,D5
000018F8  103C 000E                896          MOVE.B  #14,D0
000018FC  6000 002C                897          BRA     JSRPRINT2
00001900                           898          
00001900                           899  JSR111001
00001900  BC3C 0001                900          CMP.B   #%001,D6
00001904  6600 08E6                901          BNE     DSERR
00001908  43F9 000024B8            902          LEA     DOLLAR,A1
0000190E  4E4F                     903          TRAP    #15
00001910  241A                     904          MOVE.L  (A2)+,D2
00001912  48E7 0400                905          MOVEM.L D5,-(SP)
00001916  1A3C 0030                906          MOVE.B  #48,D5
0000191A  4EB8 118A                907          JSR     HEXOUT
0000191E  4CDF 0020                908          MOVEM.L (SP)+,D5
00001922  103C 000E                909          MOVE.B  #14,D0
00001926  6000 0002                910          BRA     JSRPRINT2
0000192A                           911          
0000192A                           912  JSRPRINT2
0000192A  43F9 000024B6            913          LEA     COMMA,A1
00001930  4E4F                     914          TRAP    #15
00001932  43F9 000024A0            915          LEA     VALA,A1
00001938  4E4F                     916          TRAP    #15
0000193A  103C 0003                917          MOVE.B  #3,D0
0000193E  3207                     918          MOVE.W  D7,D1
00001940  4E4F                     919          TRAP    #15
00001942  103C 000E                920          MOVE.B  #14,D0
00001946                           921          
00001946  6000 08D0                922          BRA     DSEND
0000194A                           923          
0000194A                           924          
0000194A                           925  DMOVEM
0000194A                           926  *printing movem
0000194A  43F9 000024C2            927          LEA     MOVEM,A1
00001950  4E4F                     928          TRAP    #15
00001952  43F9 000024AA            929          LEA     VALM,A1
00001958  4E4F                     930          TRAP    #15
0000195A                           931          
0000195A                           932  *parsing initial bits
0000195A  E55C                     933          ROL.W   #2,D4
0000195C  1E04                     934          MOVE.B  D4,D7
0000195E  0207 0001                935          ANDI.B  #%1,D7      *getting dr field
00001962                           936          
00001962  E95C                     937          ROL.W   #4,D4
00001964  1A04                     938          MOVE.B  D4,D5
00001966  0205 0001                939          ANDI.B  #1,D5       *getting size field
0000196A                           940          
0000196A                           941          *printing size
0000196A  BA7C 0000                942          CMP     #0,D5
0000196E  6600 000E                943          BNE     MOVEML
00001972  43F9 0000249A            944          LEA     MODEW,A1
00001978  4E4F                     945          TRAP    #15
0000197A  6000 000A                946          BRA     MOVEMEA
0000197E                           947  MOVEML        
0000197E  43F9 0000249D            948          LEA     MODEL,A1
00001984  4E4F                     949          TRAP    #15
00001986                           950          
00001986                           951  MOVEMEA   
00001986  43F9 00002444            952          LEA     SM3,A1
0000198C  4E4F                     953          TRAP    #15
0000198E                           954          
0000198E  E75C                     955          ROL.W   #3,D4       *mode bits
00001990  1604                     956          MOVE.B  D4,D3
00001992  0203 0007                957          ANDI.B  #%111,D3
00001996  E75C                     958          ROL.W   #3,D4       *register bits
00001998  1C04                     959          MOVE.B  D4,D6
0000199A  0206 0007                960          ANDI.B  #%111,D6
0000199E  341A                     961          MOVE.W  (A2)+,D2
000019A0  BE3C 0001                962          CMP.B   #1,D7
000019A4  6600 000E                963          BNE     MOVEMEB
000019A8                           964          
000019A8  4EB8 121C                965          JSR     ADDRMODEALL
000019AC                           966          
000019AC  43F9 000024B6            967          LEA     COMMA,A1
000019B2  4E4F                     968          TRAP    #15
000019B4                           969          
000019B4                           970  MOVEMEB 
000019B4                           971          
000019B4  48E7 0100                972          MOVEM.L D7,-(SP)
000019B8                           973          
000019B8  B63C 0004                974          CMP.B   #%100,D3
000019BC  6700 000E                975          BEQ     MOVEMEB1
000019C0                           976          
000019C0  3E02                     977          MOVE.W  D2,D7
000019C2  0247 FF00                978          ANDI.W  #$FF00,D7
000019C6  E04F                     979          LSR.W   #8,D7
000019C8  6000 0008                980          BRA     MOVEMEB2
000019CC                           981          
000019CC                           982  MOVEMEB1 
000019CC  3E02                     983          MOVE.W  D2,D7
000019CE  0247 00FF                984          ANDI.W  #$FF,D7
000019D2                           985          
000019D2                           986  MOVEMEB2
000019D2                           987  
000019D2  4EB9 00001ACA            988          JSR     MOVEMLOOP
000019D8  4CDF 0080                989          MOVEM.L (SP)+,D7
000019DC  103C 0037                990          MOVE.B  #55,D0
000019E0  B83C 0008                991          CMP.B   #8,D4
000019E4  6C00 0040                992          BGE     MOVEM3
000019E8  103C 000E                993          MOVE.B  #14,D0
000019EC                           994          
000019EC  43F9 000024A0            995  MOVEM2  LEA     VALA,A1
000019F2  4E4F                     996          TRAP    #15
000019F4                           997          
000019F4  103C 0003                998          MOVE.B  #3,D0
000019F8  1204                     999          MOVE.B  D4,D1
000019FA  4E4F                    1000          TRAP    #15
000019FC  103C 000E               1001          MOVE.B  #14,D0
00001A00                          1002          
00001A00  BA3C 0001               1003          CMP.B   #1,D5
00001A04  6700 0020               1004          BEQ     MOVEM3
00001A08                          1005          
00001A08  43F9 000024BC           1006          LEA     DASH,A1
00001A0E  4E4F                    1007          TRAP    #15
00001A10  D205                    1008          ADD.B   D5,D1
00001A12  5301                    1009          SUBQ.B  #1,D1
00001A14                          1010          
00001A14  43F9 000024A0           1011          LEA     VALA,A1
00001A1A  4E4F                    1012          TRAP    #15
00001A1C  103C 0003               1013          MOVE.B  #3,D0
00001A20  4E4F                    1014          TRAP    #15
00001A22  103C 000E               1015          MOVE.B  #14,D0
00001A26                          1016          
00001A26  48E7 0100               1017  MOVEM3  MOVEM.L D7,-(SP)
00001A2A  3E02                    1018          MOVE.W  D2,D7
00001A2C                          1019          
00001A2C  B63C 0004               1020          CMP.B   #%100,D3
00001A30  6700 000A               1021          BEQ     MOVEM31
00001A34                          1022          
00001A34  0247 00FF               1023          ANDI.W  #$FF,D7
00001A38  6000 0008               1024          BRA     MOVEM32
00001A3C                          1025          
00001A3C                          1026  MOVEM31 
00001A3C  0247 FF00               1027          ANDI.W  #$FF00,D7
00001A40  E04F                    1028          LSR.W   #8,D7
00001A42                          1029  
00001A42  4EB9 00001ACA           1030  MOVEM32 JSR     MOVEMLOOP
00001A48  4CDF 0080               1031          MOVEM.L (SP)+,D7
00001A4C                          1032          
00001A4C  B03C 0037               1033          CMP.B   #55,D0
00001A50  6700 0016               1034          BEQ     MOVEM4
00001A54                          1035          
00001A54  B83C 0008               1036          CMP.B   #8,D4
00001A58  6C00 0054               1037          BGE     MOVEM5
00001A5C                          1038          
00001A5C  103C 000E               1039          MOVE.B  #14,D0
00001A60  43F9 000024BA           1040          LEA     SLASH,A1
00001A66  4E4F                    1041          TRAP    #15
00001A68                          1042  
00001A68  103C 000E               1043  MOVEM4  MOVE.B  #14,D0
00001A6C  B83C 0008               1044          CMP.B   #8,D4
00001A70  6C00 003C               1045          BGE     MOVEM5
00001A74                          1046          
00001A74  43F9 000024A2           1047          LEA     VALD,A1
00001A7A  4E4F                    1048          TRAP    #15
00001A7C                          1049          
00001A7C  103C 0003               1050          MOVE.B  #3,D0
00001A80  1204                    1051          MOVE.B  D4,D1
00001A82  4E4F                    1052          TRAP    #15
00001A84  103C 000E               1053          MOVE.B  #14,D0
00001A88                          1054          
00001A88  BA3C 0001               1055          CMP.B   #1,D5
00001A8C  6700 0020               1056          BEQ     MOVEM5
00001A90                          1057          
00001A90  43F9 000024BC           1058          LEA     DASH,A1
00001A96  4E4F                    1059          TRAP    #15
00001A98  D205                    1060          ADD.B   D5,D1
00001A9A  5301                    1061          SUBQ.B  #1,D1
00001A9C                          1062          
00001A9C  43F9 000024A2           1063          LEA     VALD,A1
00001AA2  4E4F                    1064          TRAP    #15
00001AA4  103C 0003               1065          MOVE.B  #3,D0
00001AA8  4E4F                    1066          TRAP    #15
00001AAA  103C 000E               1067          MOVE.B  #14,D0
00001AAE                          1068          
00001AAE                          1069          
00001AAE                          1070  
00001AAE  103C 000E               1071  MOVEM5  MOVE.B  #14,D0
00001AB2                          1072          
00001AB2  BE3C 0001               1073          CMP.B   #1,D7
00001AB6  6700 0760               1074          BEQ     DSEND
00001ABA                          1075          
00001ABA  43F9 000024B6           1076          LEA     COMMA,A1
00001AC0  4E4F                    1077          TRAP    #15
00001AC2                          1078          
00001AC2  4EB8 121C               1079          JSR     ADDRMODEALL
00001AC6                          1080          
00001AC6  6000 0750               1081          BRA     DSEND
00001ACA                          1082  
00001ACA                          1083  MOVEMLOOP
00001ACA  1A3C 0000               1084          MOVE.B  #0,D5
00001ACE  183C 0000               1085          MOVE.B  #0,D4
00001AD2                          1086          
00001AD2                          1087  MOVEMSTEP
00001AD2  B63C 0004               1088          CMP.B   #%100,D3
00001AD6  6700 0014               1089          BEQ     MOVEMSHIFTL
00001ADA  6000 0018               1090          BRA     MOVEMSHIFTR
00001ADE                          1091  MOVEMSTEP1
00001ADE  0C05 0000               1092          CMPI.B  #0,D5
00001AE2  6E00 0026               1093          BGT     MOVEMLOOPDONE
00001AE6  5204                    1094          ADDQ.B  #1,D4
00001AE8  6000 0012               1095          BRA     MOVEMSTEP2
00001AEC                          1096  
00001AEC                          1097  MOVEMSHIFTL
00001AEC  E30F                    1098          LSL.B   #1,D7
00001AEE  6500 0016               1099          BCS     MOVEMLOOPINC
00001AF2  60EA                    1100          BRA     MOVEMSTEP1
00001AF4                          1101  
00001AF4                          1102  MOVEMSHIFTR
00001AF4  E20F                    1103          LSR.B   #1,D7
00001AF6  6500 000E               1104          BCS     MOVEMLOOPINC
00001AFA  60E2                    1105          BRA     MOVEMSTEP1
00001AFC                          1106  
00001AFC                          1107  MOVEMSTEP2
00001AFC  B83C 0008               1108          CMP.B   #8,D4
00001B00  6DD0                    1109          BLT     MOVEMSTEP
00001B02  6000 0006               1110          BRA     MOVEMLOOPDONE
00001B06                          1111  
00001B06                          1112  MOVEMLOOPINC
00001B06  5205                    1113          ADDQ.B  #1,D5
00001B08  60F2                    1114          BRA     MOVEMSTEP2
00001B0A                          1115  
00001B0A                          1116  MOVEMLOOPDONE
00001B0A  4E75                    1117          RTS
00001B0C                          1118          
00001B0C                          1119          
00001B0C                          1120  MOVEMLOOPSINGLEAR
00001B0C                          1121          
00001B0C                          1122          
00001B0C  6000 070A               1123          BRA     DSEND
00001B10                          1124  
00001B10                          1125  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B10                          1126  
00001B10  4E71                    1127  DS0101  NOP
00001B12                          1128          
00001B12  4E71                    1129  DADDQ   NOP
00001B14  43F9 000024C7           1130          LEA     ADDM,A1
00001B1A  4E4F                    1131          TRAP    #15
00001B1C  43F9 000024A8           1132          LEA     VALQ,A1
00001B22  4E4F                    1133          TRAP    #15
00001B24                          1134          
00001B24                          1135          *parsing data to d1
00001B24  E75C                    1136          ROL.W   #3,D4
00001B26  1204                    1137          MOVE.B  D4,D1
00001B28  C23C 0007               1138          AND.B   #%111,D1
00001B2C                          1139          
00001B2C                          1140          *ensuring next bit is 0
00001B2C  E35C                    1141          ROL.W   #1,D4
00001B2E  1A04                    1142          MOVE.B  D4,D5
00001B30  CA3C 0001               1143          AND.B   #%1,D5
00001B34  BA7C 0000               1144          CMP     #0,D5
00001B38  6600 06B2               1145          BNE     DSERR
00001B3C                          1146          
00001B3C                          1147          *parsing and printing size
00001B3C  E55C                    1148          ROL.W   #2,D4
00001B3E  1A04                    1149          MOVE.B  D4,D5
00001B40  CA3C 0003               1150          AND.B   #%11,D5
00001B44  4EB8 11D2               1151          JSR     SIZE
00001B48  43F9 00002448           1152          LEA     SM4,A1
00001B4E  4E4F                    1153          TRAP    #15
00001B50                          1154          
00001B50                          1155          *parsing effective address information
00001B50                          1156          *mode:
00001B50  E75C                    1157          ROL.W   #3,D4
00001B52  1604                    1158          MOVE.B  D4,D3
00001B54  C63C 0007               1159          AND.B   #%111,D3
00001B58                          1160          
00001B58                          1161          *register:
00001B58  E71C                    1162          ROL.B   #3,D4
00001B5A  1C04                    1163          MOVE.B  D4,D6
00001B5C  CC3C 0007               1164          AND.B   #%111,D6
00001B60                          1165          
00001B60                          1166          *printing data
00001B60  43F9 000024A4           1167          LEA     VALN,A1
00001B66  4E4F                    1168          TRAP    #15
00001B68  103C 0003               1169          MOVE.B  #3,D0
00001B6C  4E4F                    1170          TRAP    #15
00001B6E  103C 000E               1171          MOVE.B  #14,D0
00001B72  43F9 000024B6           1172          LEA     COMMA,A1
00001B78  4E4F                    1173          TRAP    #15
00001B7A                          1174          
00001B7A  B67C 0004               1175          CMP     #%100,D3
00001B7E  6700 066C               1176          BEQ     DSERR
00001B82  4EB8 121C               1177          JSR     ADDRMODEALL
00001B86                          1178          
00001B86  6000 0690               1179          BRA     DSEND
00001B8A                          1180          
00001B8A                          1181  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B8A                          1182  
00001B8A                          1183  DS0110  
00001B8A  E95C                    1184          ROL.W   #4,D4   *Get next 4 bits
00001B8C  1404                    1185          MOVE.B  D4,D2   *Copy to D2
00001B8E  0202 000F               1186          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001B92                          1187          
00001B92  B43C 0000               1188          CMP.B   #%0000,D2   *BRA
00001B96  6700 001E               1189          BEQ     DBRA
00001B9A                          1190          
00001B9A  B43C 000E               1191          CMP.B   #%1110,D2   *BGT   
00001B9E  6700 00A2               1192          BEQ     DBGT
00001BA2                          1193          
00001BA2  B43C 000F               1194          CMP.B   #%1111,D2   *BLE   
00001BA6  6700 00D6               1195          BEQ     DBLE
00001BAA                          1196          
00001BAA  B43C 0007               1197          CMP.B   #%0111,D2   *BEQ   
00001BAE  6700 010E               1198          BEQ     DBEQ
00001BB2                          1199          
00001BB2  6000 0648               1200          BRA     DSERRINS
00001BB6                          1201          
00001BB6  43F9 00002507           1202  DBRA    LEA     BRAM,A1
00001BBC  4E4F                    1203          TRAP    #15
00001BBE                          1204          
00001BBE  43F9 0000245A           1205          LEA     SM7,A1
00001BC4  4E4F                    1206          TRAP    #15
00001BC6                          1207  
00001BC6  E15C                    1208          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BC8  1204                    1209          MOVE.B  D4,D1
00001BCA  0281 00001100           1210          ANDI.L  #$1100,D1
00001BD0                          1211          
00001BD0  0C01 0000               1212          CMPI.B  #%00000000,D1
00001BD4  6700 0028               1213          BEQ     DBRA_16BIT      * Word
00001BD8                          1214          
00001BD8  0C01 00FF               1215          CMPI.B  #%11111111,D1
00001BDC  6700 0042               1216          BEQ     DBRA_32BIT      * Long
00001BE0                          1217          
00001BE0                          1218          * 8 Bit Displacement
00001BE0  43F9 000024B8           1219          LEA     DOLLAR,A1
00001BE6  4E4F                    1220          TRAP    #15
00001BE8                          1221          
00001BE8  341A                    1222          MOVE.W  (A2)+,D2
00001BEA  D441                    1223          ADD.W   D1,D2
00001BEC  5842                    1224          ADD.W   #4,D2   *unsure   
00001BEE  1A3C 0030               1225          MOVE.B  #48,D5
00001BF2  4EB8 118A               1226          JSR     HEXOUT
00001BF6  6000 0620               1227          BRA     DSEND
00001BFA                          1228  
00001BFA                          1229          *Displacement is put in D1      
00001BFA                          1230          
00001BFA                          1231          
00001BFA  6000 061C               1232          BRA     DSEND
00001BFE                          1233          
00001BFE                          1234  DBRA_16BIT
00001BFE  43F9 000024B8           1235          LEA     DOLLAR,A1
00001C04  4E4F                    1236          TRAP    #15
00001C06  341A                    1237          MOVE.W  (A2)+,D2
00001C08  D44A                    1238          ADD.W   A2,D2
00001C0A  5542                    1239          SUB.W   #2,D2   *unsure
00001C0C  48E7 0400               1240          MOVEM.L D5,-(SP)    
00001C10  1A3C 0030               1241          MOVE.B  #48,D5
00001C14  4EB8 118A               1242          JSR     HEXOUT
00001C18  4CDF 0020               1243          MOVEM.L (SP)+,D5
00001C1C  6000 05FA               1244          BRA     DSEND
00001C20                          1245  
00001C20                          1246  DBRA_32BIT
00001C20  43F9 000024B8           1247          LEA     DOLLAR,A1
00001C26  4E4F                    1248          TRAP    #15
00001C28  241A                    1249          MOVE.L  (A2)+,D2
00001C2A  D48A                    1250          ADD.L   A2,D2
00001C2C  5582                    1251          SUB.L   #2,D2   *unsure
00001C2E  48E7 0400               1252          MOVEM.L D5,-(SP)
00001C32  1A3C 0030               1253          MOVE.B  #48,D5
00001C36  4EB8 118A               1254          JSR     HEXOUT
00001C3A  4CDF 0020               1255          MOVEM.L (SP)+,D5
00001C3E  6000 05D8               1256          BRA     DSEND
00001C42                          1257          
00001C42                          1258          
00001C42                          1259          
00001C42  43F9 000024F3           1260  DBGT    LEA     BGTM,A1
00001C48  4E4F                    1261          TRAP    #15
00001C4A                          1262          
00001C4A  43F9 0000245A           1263          LEA     SM7,A1
00001C50  4E4F                    1264          TRAP    #15
00001C52                          1265          
00001C52  E15C                    1266          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C54  1204                    1267          MOVE.B  D4,D1
00001C56  0241 00FF               1268          ANDI.W  #%0000000011111111,D1
00001C5A                          1269          
00001C5A  0C01 0000               1270          CMPI.B  #%00000000,D1
00001C5E  679E                    1271          BEQ     DBRA_16BIT      * Word
00001C60                          1272          
00001C60  0C01 00FF               1273          CMPI.B  #%11111111,D1
00001C64  67BA                    1274          BEQ     DBRA_32BIT      * Long
00001C66                          1275          
00001C66  43F9 000024B8           1276          LEA     DOLLAR,A1
00001C6C  4E4F                    1277          TRAP    #15
00001C6E                          1278      
00001C6E  340A                    1279          MOVE.W  A2,D2
00001C70  D441                    1280          ADD.W   D1,D2
00001C72                          1281    
00001C72  1A3C 0030               1282          MOVE.B  #48,D5
00001C76  4EB8 118A               1283          JSR     HEXOUT
00001C7A  6000 059C               1284          BRA     DSEND
00001C7E                          1285  
00001C7E  43F9 000024F7           1286  DBLE    LEA     BLEM,A1
00001C84  4E4F                    1287          TRAP    #15
00001C86                          1288          
00001C86  43F9 0000245A           1289          LEA     SM7,A1
00001C8C  4E4F                    1290          TRAP    #15
00001C8E                          1291          
00001C8E  E15C                    1292          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C90  1204                    1293          MOVE.B  D4,D1
00001C92  0241 00FF               1294          ANDI.W  #%0000000011111111,D1
00001C96                          1295          
00001C96  0C01 0000               1296          CMPI.B  #%00000000,D1
00001C9A  6700 FF62               1297          BEQ     DBRA_16BIT      * Word
00001C9E                          1298          
00001C9E  0C01 00FF               1299          CMPI.B  #%11111111,D1
00001CA2  6700 FF7C               1300          BEQ     DBRA_32BIT      * Long
00001CA6                          1301          
00001CA6  43F9 000024B8           1302          LEA     DOLLAR,A1
00001CAC  4E4F                    1303          TRAP    #15
00001CAE                          1304          
00001CAE  340A                    1305          MOVE.W  A2,D2
00001CB0  D441                    1306          ADD.W   D1,D2
00001CB2                          1307   
00001CB2  1A3C 0030               1308          MOVE.B  #48,D5
00001CB6  4EB8 118A               1309          JSR     HEXOUT
00001CBA                          1310          
00001CBA  6000 055C               1311          BRA     DSEND
00001CBE                          1312  
00001CBE  43F9 000024FB           1313  DBEQ    LEA     BEQM,A1
00001CC4  4E4F                    1314          TRAP    #15
00001CC6                          1315          
00001CC6  43F9 0000245A           1316          LEA     SM7,A1
00001CCC  4E4F                    1317          TRAP    #15
00001CCE                          1318          
00001CCE  E15C                    1319          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001CD0  1204                    1320          MOVE.B  D4,D1
00001CD2  0241 00FF               1321          ANDI.W  #%0000000011111111,D1
00001CD6                          1322          
00001CD6  0C01 0000               1323          CMPI.B  #%00000000,D1
00001CDA  6700 FF22               1324          BEQ     DBRA_16BIT      * Word
00001CDE                          1325          
00001CDE  0C01 00FF               1326          CMPI.B  #%11111111,D1
00001CE2  6700 FF3C               1327          BEQ     DBRA_32BIT      * Long
00001CE6                          1328          
00001CE6  43F9 000024B8           1329          LEA     DOLLAR,A1
00001CEC  4E4F                    1330          TRAP    #15
00001CEE                          1331  
00001CEE  340A                    1332          MOVE.W  A2,D2
00001CF0  D441                    1333          ADD.W   D1,D2
00001CF2                          1334   
00001CF2  1A3C 0030               1335          MOVE.B  #48,D5
00001CF6  4EB8 118A               1336          JSR     HEXOUT
00001CFA                          1337          
00001CFA  6000 051C               1338          BRA     DSEND
00001CFE                          1339  
00001CFE                          1340  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001CFE                          1341  
00001CFE  4E71                    1342  DS0111  NOP
00001D00                          1343          
00001D00  4E71                    1344  DMOVEQ  NOP
00001D02  43F9 000024C2           1345          LEA     MOVEM,A1
00001D08  4E4F                    1346          TRAP    #15
00001D0A  43F9 000024A8           1347          LEA     VALQ,A1
00001D10  4E4F                    1348          TRAP    #15
00001D12  43F9 00002444           1349          LEA     SM3,A1
00001D18  4E4F                    1350          TRAP    #15
00001D1A                          1351          
00001D1A                          1352          *getting register number
00001D1A  E75C                    1353          ROL.W   #3,D4
00001D1C  1A04                    1354          MOVE.B  D4,D5
00001D1E  CA3C 0007               1355          AND.B   #%111,D5
00001D22                          1356          
00001D22                          1357          *throwing error if next digit not 0
00001D22  E35C                    1358          ROL.W   #1,D4
00001D24  1C04                    1359          MOVE.B  D4,D6
00001D26  CC3C 0001               1360          AND.B   #%1,D6
00001D2A  BC3C 0000               1361          CMP.B   #0,D6
00001D2E  6600 04BC               1362          BNE     DSERR
00001D32                          1363          
00001D32                          1364          *getting data and printing information
00001D32  E15C                    1365          ROL.W   #8,D4
00001D34  1204                    1366          MOVE.B  D4,D1
00001D36  C23C 00FF               1367          AND.B   #%11111111,D1
00001D3A  43F9 000024A4           1368          LEA     VALN,A1
00001D40  4E4F                    1369          TRAP    #15
00001D42  103C 0003               1370          MOVE.B  #3,D0
00001D46  4E4F                    1371          TRAP    #15
00001D48  103C 000E               1372          MOVE.B  #14,D0
00001D4C  43F9 000024B6           1373          LEA     COMMA,A1
00001D52  4E4F                    1374          TRAP    #15
00001D54  43F9 000024A2           1375          LEA     VALD,A1
00001D5A  4E4F                    1376          TRAP    #15
00001D5C  103C 0003               1377          MOVE.B  #3,D0
00001D60  3205                    1378          MOVE.W  D5,D1
00001D62  4E4F                    1379          TRAP    #15
00001D64                          1380          
00001D64  6000 04B2               1381          BRA     DSEND
00001D68                          1382          
00001D68                          1383  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D68                          1384  
00001D68  4E71                    1385  DS1000  NOP
00001D6A                          1386          
00001D6A  E75C                    1387  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001D6C  1A04                    1388          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D6E  0205 0007               1389          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001D72  1C05                    1390          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001D74                          1391  
00001D74  E75C                    1392          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001D76  1A04                    1393          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D78  0205 0007               1394          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001D7C  1E05                    1395          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001D7E  BA3C 0000               1396          CMP.B   #%000,D5        ; Compare with byte size
00001D82  6700 0016               1397          BEQ     DORB
00001D86  BA3C 0001               1398          CMP.B   #%001,D5        ; Compare with word size
00001D8A  6700 0022               1399          BEQ     DORW
00001D8E  BA3C 0002               1400          CMP.B   #%010,D5        ; Compare with long size
00001D92  6700 002E               1401          BEQ     DORL
00001D96                          1402  
00001D96  6000 0480               1403          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001D9A                          1404  
00001D9A  43F9 000024D7           1405  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001DA0  4E4F                    1406          TRAP    #15             ; Print ORM string
00001DA2  43F9 00002497           1407          LEA     MODEB,A1        ; Load effective address of MODEB string
00001DA8  4E4F                    1408          TRAP    #15             ; Print MODEB string
00001DAA  6000 002A               1409          BRA     DORA            ; Branch to addressing mode parsing
00001DAE                          1410  
00001DAE  43F9 000024D7           1411  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001DB4  4E4F                    1412          TRAP    #15             ; Print ORM string
00001DB6  43F9 0000249A           1413          LEA     MODEW,A1        ; Load effective address of MODEW string
00001DBC  4E4F                    1414          TRAP    #15             ; Print MODEW string
00001DBE  6000 0016               1415          BRA     DORA            ; Branch to addressing mode parsing
00001DC2                          1416  
00001DC2  43F9 000024D7           1417  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001DC8  4E4F                    1418          TRAP    #15             ; Print ORM string
00001DCA  43F9 0000249D           1419          LEA     MODEL,A1        ; Load effective address of MODEL string
00001DD0  4E4F                    1420          TRAP    #15             ; Print MODEL string
00001DD2  6000 0002               1421          BRA     DORA            ; Branch to addressing mode parsing
00001DD6                          1422  
00001DD6  43F9 00002453           1423  DORA    LEA     SM6,A1
00001DDC  4E4F                    1424          TRAP    #15
00001DDE  ED5C                    1425          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001DE0  1A04                    1426          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001DE2  0205 0038               1427          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001DE6  E61D                    1428          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001DE8  1605                    1429          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001DEA  0204 0007               1430          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001DEE  1C04                    1431          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001DF0                          1432  
00001DF0  BE3C 0004               1433          CMP.B   #%100,D7        ; Compare opmode with '100'
00001DF4  6D00 0006               1434          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001DF8  6000 002A               1435          BRA     DORAD           ; Else, branch to DORAD
00001DFC                          1436  
00001DFC  4EB8 121C               1437  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E00  103C 000E               1438          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001E04  43F9 000024B6           1439          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E0A  4E4F                    1440          TRAP    #15             ; Print comma
00001E0C  43F9 000024A2           1441          LEA     VALD,A1
00001E12  4E4F                    1442          TRAP    #15
00001E14  1206                    1443          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001E16  103C 0003               1444          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E1A  4E4F                    1445          TRAP    #15             ; Print register number
00001E1C  103C 000E               1446          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E20  6000 03F6               1447          BRA     DSEND           ; Branch to DSEND
00001E24                          1448  
00001E24  1206                    1449  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001E26  103C 0003               1450          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E2A  4E4F                    1451          TRAP    #15             ; Print register number
00001E2C  103C 000E               1452          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E30  43F9 000024B6           1453          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E36  4E4F                    1454          TRAP    #15             ; Print comma
00001E38  4EB8 121C               1455          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E3C  103C 000E               1456          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E40  6000 03D6               1457          BRA     DSEND           ; Branch to DSEND                 
00001E44                          1458  
00001E44                          1459  
00001E44                          1460  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E44                          1461  
00001E44  4E71                    1462  DS1001  NOP
00001E46  4E71                    1463  DSUB    NOP
00001E48                          1464  *print sub
00001E48  43F9 000024CB           1465          LEA     SUBM,A1
00001E4E  4E4F                    1466          TRAP    #15
00001E50                          1467  
00001E50                          1468  *parse dn reg: 3 bits
00001E50                          1469  *number of the data register involved
00001E50                          1470  *nums 0-7, paired with below
00001E50  E75C                    1471          ROL.W   #3,D4       *dn reg num in d1
00001E52  1E04                    1472          MOVE.B  D4,D7
00001E54  0207 0007               1473          ANDI.B  #%111,D7
00001E58                          1474          
00001E58  3C47                    1475          MOVE.W  D7,A6       *temporary for storage
00001E5A                          1476  
00001E5A                          1477  *parse opmode: 3 bits
00001E5A                          1478  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001E5A                          1479  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001E5A                          1480  *invalid: 111, 011
00001E5A                          1481  *parse first digit separately
00001E5A  E35C                    1482          ROL.W   #1,D4       *addressing mode in d2
00001E5C  1E04                    1483          MOVE.B  D4,D7
00001E5E  0207 0001               1484          ANDI.B  #%1,D7
00001E62                          1485          
00001E62                          1486  *parsing next two digits of size
00001E62  E55C                    1487          ROL.W   #2,D4       *size in d5
00001E64  1A04                    1488          MOVE.B  D4,D5
00001E66  0205 0003               1489          ANDI.B  #%11,D5
00001E6A  4EB8 11D2               1490          JSR     SIZE
00001E6E  43F9 0000244D           1491          LEA     SM5,A1
00001E74  4E4F                    1492          TRAP    #15
00001E76                          1493          
00001E76                          1494  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001E76  BE3C 0000               1495          CMP.B   #%0,D7       *if 1, then register info printed last
00001E7A  6700 0026               1496          BEQ     DSUBEA      *branch to ea before register
00001E7E                          1497          
00001E7E                          1498  *printing register information
00001E7E                          1499  DSUBPRNTREG
00001E7E  43F9 000024A2           1500          LEA     VALD,A1
00001E84  4E4F                    1501          TRAP    #15
00001E86  320E                    1502          MOVE.W  A6,D1       *retrieving a6 register data
00001E88  103C 0003               1503          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001E8C  4E4F                    1504          TRAP    #15         *printing register number
00001E8E  103C 000E               1505          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001E92  BE3C 0000               1506          CMP.B   #%0,D7      *if info finished printing
00001E96  6700 0380               1507          BEQ     DSEND      *branch to end
00001E9A  43F9 000024B6           1508          LEA     COMMA,A1
00001EA0  4E4F                    1509          TRAP    #15
00001EA2                          1510  
00001EA2                          1511          
00001EA2                          1512  * parse ea mode: 3 bits
00001EA2                          1513  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001EA2                          1514  *address reg direct not allowed for .B operations
00001EA2                          1515  *no invalid
00001EA2                          1516  DSUBEA
00001EA2  E75C                    1517          ROL.W   #3,D4       *ea mode
00001EA4  1604                    1518          MOVE.B  D4,D3
00001EA6  0203 0007               1519          ANDI.B  #%111,D3
00001EAA                          1520  
00001EAA                          1521  *parse ea reg: 3 bits
00001EAA                          1522  *no invalid: paired with opmode below (nums 0-7)
00001EAA                          1523  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001EAA  E75C                    1524          ROL.W   #3,D4       *ea mode
00001EAC  1C04                    1525          MOVE.B  D4,D6
00001EAE  0206 0007               1526          ANDI.B  #%111,D6
00001EB2                          1527          
00001EB2  2803                    1528          MOVE.L  D3,D4   *temporarily using D4 
00001EB4                          1529          
00001EB4                          1530  *comparisons
00001EB4  B67C 0004               1531          CMP     #%100,D3
00001EB8  6700 0332               1532          BEQ     DSERR
00001EBC  4EB8 121C               1533          JSR     ADDRMODEALL
00001EC0  BE3C 0001               1534          CMP.B   #%1,D7      *if info printed
00001EC4  6700 0352               1535          BEQ     DSEND       *end
00001EC8  43F9 000024B6           1536          LEA     COMMA,A1
00001ECE  4E4F                    1537          TRAP    #15
00001ED0  60AC                    1538          BRA     DSUBPRNTREG *check d6 for size of data
00001ED2                          1539  *then take data from d4 and print (?)
00001ED2                          1540  
00001ED2  6000 0344               1541          BRA     DSEND
00001ED6                          1542  
00001ED6                          1543  
00001ED6                          1544  
00001ED6  4E71                    1545  DS1010  NOP
00001ED8  6000 0322               1546          BRA     DSERRINS
00001EDC                          1547  
00001EDC                          1548          
00001EDC                          1549  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EDC                          1550  
00001EDC  4E71                    1551  DS1011  NOP
00001EDE  6000 031C               1552          BRA     DSERRINS
00001EE2                          1553          
00001EE2                          1554  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EE2                          1555  
00001EE2  4E71                    1556  DS1100  NOP
00001EE4  6000 0316               1557          BRA     DSERRINS
00001EE8                          1558          
00001EE8                          1559  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EE8                          1560  
00001EE8  4E71                    1561  DS1101  NOP
00001EEA                          1562  
00001EEA  4E71                    1563  DADD    NOP
00001EEC  43F9 000024C7           1564          LEA     ADDM,A1
00001EF2  4E4F                    1565          TRAP    #15
00001EF4                          1566          
00001EF4                          1567          *parse dn reg: 3 bits
00001EF4                          1568  *number of the data register involved
00001EF4                          1569  *nums 0-7, paired with below
00001EF4  E75C                    1570          ROL.W   #3,D4       *dn reg num in d7
00001EF6  1E04                    1571          MOVE.B  D4,D7
00001EF8  0207 0007               1572          ANDI.B  #%111,D7
00001EFC                          1573          
00001EFC  3C47                    1574          MOVE.W  D7,A6
00001EFE                          1575  
00001EFE                          1576  *parse opmode: 3 bits
00001EFE                          1577  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001EFE                          1578  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001EFE                          1579  *invalid: 111, 011
00001EFE                          1580  *parse first digit separately
00001EFE  E35C                    1581          ROL.W   #1,D4       *addressing mode in d2
00001F00  1E04                    1582          MOVE.B  D4,D7
00001F02  0207 0001               1583          ANDI.B  #%1,D7
00001F06                          1584          
00001F06                          1585  *parsing next two digits of size
00001F06  E55C                    1586          ROL.W   #2,D4       *size in d5
00001F08  1A04                    1587          MOVE.B  D4,D5
00001F0A  0205 0003               1588          ANDI.B  #%11,D5
00001F0E  BA3C 0003               1589          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001F12  6700 007C               1590          BEQ     DADDA
00001F16  4EB8 11D2               1591          JSR     SIZE
00001F1A  43F9 0000244D           1592          LEA     SM5,A1
00001F20  4E4F                    1593          TRAP    #15
00001F22                          1594          
00001F22                          1595  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001F22  BE3C 0000               1596          CMP.B   #%0,D7       *if 0, then register info printed last
00001F26  6700 002E               1597          BEQ     DADDEA      *branch to ea before register
00001F2A                          1598          
00001F2A                          1599  *printing register information
00001F2A                          1600  DADDPRNTREG
00001F2A  BA3C 0003               1601          CMP.B   #%11,D5
00001F2E  6700 0058               1602          BEQ     PRINTA
00001F32  43F9 000024A2           1603          LEA     VALD,A1
00001F38                          1604  ADDCONT
00001F38  4E4F                    1605          TRAP    #15
00001F3A  320E                    1606          MOVE.W  A6,D1       *moving reg num to d1 to print
00001F3C  103C 0003               1607          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001F40  4E4F                    1608          TRAP    #15         *printing register number
00001F42  103C 000E               1609          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001F46  BE3C 0000               1610          CMP.B   #%0,D7      *if info finished printing
00001F4A  6700 02CC               1611          BEQ     DSEND      *branch to end
00001F4E  43F9 000024B6           1612          LEA     COMMA,A1
00001F54  4E4F                    1613          TRAP    #15
00001F56                          1614  
00001F56                          1615          
00001F56                          1616  * parse ea mode: 3 bits
00001F56                          1617  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F56                          1618  *address reg direct not allowed for .B operations
00001F56                          1619  *no invalid
00001F56                          1620  DADDEA
00001F56  E75C                    1621          ROL.W   #3,D4       *ea mode
00001F58  1604                    1622          MOVE.B  D4,D3
00001F5A  0203 0007               1623          ANDI.B  #%111,D3
00001F5E                          1624  
00001F5E                          1625  *parse ea reg: 3 bits
00001F5E                          1626  *no invalid: paired with opmode below (nums 0-7)
00001F5E                          1627  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F5E  E75C                    1628          ROL.W   #3,D4       *ea mode
00001F60  1C04                    1629          MOVE.B  D4,D6
00001F62  0206 0007               1630          ANDI.B  #%111,D6
00001F66                          1631          
00001F66                          1632  *comparisons
00001F66  B67C 0004               1633          CMP     #%100,D3
00001F6A  6700 005A               1634          BEQ     ADDDATACHECK
00001F6E                          1635  DATACHECKCONT
00001F6E  4EB8 121C               1636          JSR     ADDRMODEALL
00001F72  BE3C 0001               1637          CMP.B   #%1,D7      *if info printed
00001F76  6700 02A0               1638          BEQ     DSEND       *end
00001F7A  43F9 000024B6           1639          LEA     COMMA,A1
00001F80  4E4F                    1640          TRAP    #15
00001F82  60A6                    1641          BRA     DADDPRNTREG 
00001F84                          1642  
00001F84  6000 0292               1643          BRA     DSEND
00001F88                          1644          
00001F88  43F9 000024A0           1645  PRINTA  LEA     VALA,A1
00001F8E  60A8                    1646          BRA     ADDCONT
00001F90                          1647  
00001F90                          1648          
00001F90  4E71                    1649  DADDA   NOP
00001F92  43F9 000024A0           1650          LEA     VALA,A1
00001F98  4E4F                    1651          TRAP    #15
00001F9A  BE3C 0000               1652          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001F9E  6600 000C               1653          BNE     ADDAL
00001FA2  43F9 0000249A           1654          LEA     MODEW,A1
00001FA8  6000 000C               1655          BRA     ADDSIZEEND
00001FAC  43F9 0000249D           1656  ADDAL   LEA     MODEL,A1
00001FB2  6000 0002               1657          BRA     ADDSIZEEND
00001FB6                          1658  ADDSIZEEND
00001FB6  4E4F                    1659          TRAP    #15
00001FB8  43F9 00002448           1660          LEA     SM4,A1
00001FBE  4E4F                    1661          TRAP    #15
00001FC0  1E3C 0000               1662          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001FC4  6090                    1663          BRA     DADDEA
00001FC6                          1664  ADDDATACHECK
00001FC6  BA3C 0003               1665          CMP.B   #%11,D5
00001FCA  6700 0220               1666          BEQ     DSERR
00001FCE  609E                    1667          BRA     DATACHECKCONT
00001FD0                          1668          
00001FD0                          1669          
00001FD0                          1670  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001FD0                          1671  
00001FD0                          1672  DS1110
00001FD0  E75C                    1673          ROL.W   #3,D4           * [D2] Reading count
00001FD2  1404                    1674          MOVE.B  D4,D2
00001FD4  0202 0007               1675          ANDI.B  #%111,D2
00001FD8                          1676          
00001FD8  E35C                    1677          ROL.W   #1,D4           * [D3] Reading direction
00001FDA  1604                    1678          MOVE.B  D4,D3
00001FDC  0203 0001               1679          ANDI.B  #%1,D3
00001FE0                          1680          
00001FE0  E55C                    1681          ROL.W   #2,D4           * [D5] Reading size
00001FE2  1A04                    1682          MOVE.B  D4,D5
00001FE4  0205 0003               1683          ANDI.B  #%11,D5
00001FE8                          1684          
00001FE8  BA3C 0003               1685          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001FEC  6700 00F0               1686          BEQ     DS1110MEM
00001FF0                          1687          
00001FF0  E35C                    1688          ROL.W   #1,D4           * [D6] Reading count mode
00001FF2  1C04                    1689          MOVE.B  D4,D6
00001FF4  0206 0001               1690          ANDI.B  #%1,D6
00001FF8                          1691          
00001FF8  E55C                    1692          ROL.W   #2,D4           * [D7] reading type of shift
00001FFA  1E04                    1693          MOVE.B  D4,D7
00001FFC  0207 0003               1694          ANDI.B  #%11,D7
00002000                          1695          
00002000  E75C                    1696          ROL.W   #3,D4           * [D1] reading register
00002002  1204                    1697          MOVE.B  D4,D1
00002004  0201 0007               1698          ANDI.B  #%111,D1
00002008                          1699          
00002008  BE3C 0001               1700          CMP.B   #%01,D7   *Determine shift type
0000200C  6700 008E               1701          BEQ     DLS
00002010  BE3C 0000               1702          CMP.B   #%00,D7
00002014  6700 0092               1703          BEQ     DAS
00002018  BE3C 0003               1704          CMP.B   #%11,D7
0000201C  6700 0096               1705          BEQ     DRO
00002020                          1706          
00002020  6000 01F6               1707          BRA     DSEND               *Fallback in case of invalid code
00002024                          1708          
00002024  48E7 FFFF               1709  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00002028  4EB9 000020C0           1710          JSR     DS1110SIDE
0000202E  4CDF FFFF               1711          MOVEM.L (SP)+,A0-A7/D0-D7
00002032                          1712          
00002032  48E7 FFFF               1713          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00002036  4EB8 11D2               1714          JSR     SIZE
0000203A  4CDF FFFF               1715          MOVEM.L (SP)+,A0-A7/D0-D7
0000203E                          1716          
0000203E  103C 000E               1717          MOVE.B  #14,D0
00002042  43F9 0000244D           1718          LEA     SM5,A1
00002048  4E4F                    1719          TRAP    #15
0000204A                          1720          
0000204A  BA3C 0003               1721          CMP.B   #%11,D5
0000204E  6700 00B4               1722          BEQ     DS1110MEMA
00002052                          1723          
00002052  BC3C 0001               1724          CMP.B   #%1,D6
00002056  6700 003A               1725          BEQ     DS1110_REG_D
0000205A  6000 002C               1726          BRA     DS1110_REG_I
0000205E                          1727          
0000205E  1C01                    1728  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00002060                          1729          
00002060  103C 0003               1730          MOVE.B  #3,D0
00002064  1202                    1731          MOVE.B  D2,D1
00002066  4E4F                    1732          TRAP    #15
00002068                          1733          
00002068  103C 000E               1734          MOVE.B  #14,D0
0000206C  43F9 000024B6           1735          LEA     COMMA,A1
00002072  4E4F                    1736          TRAP    #15
00002074                          1737          
00002074  43F9 000024A2           1738          LEA     VALD,A1
0000207A  4E4F                    1739          TRAP    #15
0000207C                          1740          
0000207C  103C 0003               1741          MOVE.B  #3,D0
00002080  1206                    1742          MOVE.B  D6,D1
00002082  4E4F                    1743          TRAP    #15
00002084                          1744          
00002084  6000 0192               1745          BRA     DSEND
00002088                          1746          
00002088                          1747  DS1110_REG_I
00002088  43F9 000024A4           1748          LEA     VALN,A1
0000208E  4E4F                    1749          TRAP    #15
00002090  60CC                    1750          BRA     DS1110B
00002092                          1751  
00002092                          1752  DS1110_REG_D
00002092  43F9 000024A2           1753          LEA     VALD,A1
00002098  4E4F                    1754          TRAP    #15
0000209A  60C2                    1755          BRA     DS1110B       
0000209C                          1756          
0000209C  43F9 000024DE           1757  DLS     LEA     LSM,A1
000020A2  4E4F                    1758          TRAP    #15
000020A4  6000 FF7E               1759          BRA     DS1110A
000020A8                          1760          
000020A8  43F9 000024E5           1761  DAS     LEA     ASM,A1
000020AE  4E4F                    1762          TRAP    #15
000020B0  6000 FF72               1763          BRA     DS1110A
000020B4                          1764          
000020B4  43F9 000024EC           1765  DRO     LEA     ROM,A1
000020BA  4E4F                    1766          TRAP    #15
000020BC  6000 FF66               1767          BRA     DS1110A
000020C0                          1768          
000020C0                          1769  DS1110SIDE
000020C0  103C 0006               1770          MOVE.B  #6,D0
000020C4  B63C 0001               1771          CMP.B   #1,D3
000020C8  6700 000C               1772          BEQ     DS1110LSIDE
000020CC  123C 0052               1773          MOVE.B  #82,D1
000020D0  4E4F                    1774          TRAP    #15
000020D2  6000 0008               1775          BRA     DS1110SIDEEND
000020D6                          1776  
000020D6                          1777  DS1110LSIDE
000020D6  123C 004C               1778          MOVE.B  #76,D1
000020DA  4E4F                    1779          TRAP    #15
000020DC                          1780          
000020DC                          1781  DS1110SIDEEND
000020DC  4E75                    1782          RTS 
000020DE                          1783  
000020DE                          1784  DS1110MEM
000020DE                          1785                                  * Shift type is instead stored in D2
000020DE                          1786          
000020DE  E75C                    1787          ROL.W   #3,D4           * [D6] Reading address mode
000020E0  1C04                    1788          MOVE.B  D4,D6
000020E2  0206 0007               1789          ANDI.B  #%111,D6
000020E6                          1790          
000020E6  E75C                    1791          ROL.W   #3,D4           * [D1] Reading address register
000020E8  1204                    1792          MOVE.B  D4,D1
000020EA  0201 0007               1793          ANDI.B  #%111,D1
000020EE                          1794          
000020EE  B43C 0001               1795          CMP.B   #%01,D2
000020F2  67A8                    1796          BEQ     DLS
000020F4  B43C 0000               1797          CMP.B   #%00,D2
000020F8  67AE                    1798          BEQ     DAS
000020FA  B43C 0003               1799          CMP.B   #%11,D2
000020FE  67B4                    1800          BEQ     DRO
00002100  6000 0116               1801          BRA     DSEND
00002104                          1802          
00002104                          1803          
00002104                          1804  DS1110MEMA
00002104                          1805          
00002104  BC3C 0002               1806          CMP.B   #%010,D6
00002108  6700 002E               1807          BEQ     DS1110MEM_REG
0000210C  BC3C 0003               1808          CMP.B   #%011,D6
00002110  6700 004C               1809          BEQ     DS1110MEM_INC
00002114  BC3C 0004               1810          CMP.B   #%100,D6
00002118  6700 006A               1811          BEQ     DS1110MEM_DEC
0000211C                          1812          
0000211C  BC3C 0007               1813          CMP.B   #%111,D6
00002120  6600 00CA               1814          BNE     DSERR
00002124                          1815          
00002124  B23C 0000               1816          CMP.B   #%000,D1
00002128  6700 0080               1817          BEQ     DS1110MEM_CUSW
0000212C  B23C 0001               1818          CMP.B   #%001,D1
00002130  6700 0096               1819          BEQ     DS1110MEM_CUSL
00002134                          1820          
00002134  6000 00E2               1821          BRA     DSEND
00002138                          1822  
00002138                          1823  DS1110MEM_REG
00002138  43F9 000024AC           1824          LEA     OPENPTR,A1
0000213E  4E4F                    1825          TRAP    #15
00002140                          1826          
00002140  43F9 000024A0           1827          LEA     VALA,A1
00002146  4E4F                    1828          TRAP    #15
00002148                          1829          
00002148  103C 0003               1830          MOVE.B  #3,D0
0000214C  4E4F                    1831          TRAP    #15
0000214E  103C 000E               1832          MOVE.B  #14,D0
00002152                          1833          
00002152  43F9 000024B1           1834          LEA     CLOSEPTR,A1
00002158  4E4F                    1835          TRAP    #15
0000215A                          1836          
0000215A  6000 00BC               1837          BRA     DSEND
0000215E                          1838  
0000215E                          1839  DS1110MEM_INC
0000215E  43F9 000024AC           1840          LEA     OPENPTR,A1
00002164  4E4F                    1841          TRAP    #15
00002166                          1842          
00002166  43F9 000024A0           1843          LEA     VALA,A1
0000216C  4E4F                    1844          TRAP    #15
0000216E                          1845          
0000216E  103C 0003               1846          MOVE.B  #3,D0
00002172  4E4F                    1847          TRAP    #15
00002174  103C 000E               1848          MOVE.B  #14,D0
00002178                          1849          
00002178  43F9 000024B3           1850          LEA     CLOSEIPTR,A1
0000217E  4E4F                    1851          TRAP    #15
00002180                          1852          
00002180  6000 0096               1853          BRA     DSEND
00002184                          1854  
00002184                          1855  DS1110MEM_DEC
00002184  43F9 000024AE           1856          LEA     OPENDPTR,A1
0000218A  4E4F                    1857          TRAP    #15
0000218C                          1858          
0000218C  43F9 000024A0           1859          LEA     VALA,A1
00002192  4E4F                    1860          TRAP    #15
00002194                          1861          
00002194  103C 0003               1862          MOVE.B  #3,D0
00002198  4E4F                    1863          TRAP    #15
0000219A  103C 000E               1864          MOVE.B  #14,D0
0000219E                          1865          
0000219E  43F9 000024B1           1866          LEA     CLOSEPTR,A1
000021A4  4E4F                    1867          TRAP    #15
000021A6                          1868          
000021A6  6000 0070               1869          BRA     DSEND
000021AA                          1870          
000021AA                          1871  DS1110MEM_CUSW
000021AA  43F9 000024B8           1872          LEA     DOLLAR,A1
000021B0  4E4F                    1873          TRAP    #15
000021B2  341A                    1874          MOVE.W  (A2)+,D2
000021B4  48E7 0400               1875          MOVEM.L D5,-(SP)
000021B8  1A3C 0030               1876          MOVE.B  #48,D5
000021BC  4EB8 118A               1877          JSR     HEXOUT
000021C0  4CDF 0020               1878          MOVEM.L (SP)+,D5
000021C4  6000 0052               1879          BRA     DSEND
000021C8                          1880          
000021C8                          1881  DS1110MEM_CUSL
000021C8  43F9 000024B8           1882          LEA     DOLLAR,A1
000021CE  4E4F                    1883          TRAP    #15
000021D0  241A                    1884          MOVE.L  (A2)+,D2
000021D2  48E7 0400               1885          MOVEM.L D5,-(SP)
000021D6  1A3C 0030               1886          MOVE.B  #48,D5
000021DA  4EB8 118A               1887          JSR     HEXOUT
000021DE  4CDF 0020               1888          MOVEM.L (SP)+,D5
000021E2  6000 0034               1889          BRA     DSEND
000021E6                          1890          
000021E6                          1891  
000021E6                          1892  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000021E6                          1893  
000021E6  4E71                    1894  DS1111  NOP
000021E8  6000 002E               1895          BRA     DSEND
000021EC                          1896  
000021EC                          1897  *DS Final
000021EC                          1898  *--------------------------------------------------------------------------------------------------
000021EC                          1899  
000021EC  103C 000E               1900  DSERR   MOVE.B  #14,D0
000021F0  43F9 00002469           1901          LEA     ERRM,A1
000021F6  4E4F                    1902          TRAP    #15
000021F8  6000 001E               1903          BRA     DSEND
000021FC                          1904          
000021FC                          1905  DSERRINS
000021FC  103C 000E               1906          MOVE.B  #14,D0
00002200  43F9 00002471           1907          LEA     ERRMINS,A1
00002206  4E4F                    1908          TRAP    #15
00002208  6000 000E               1909          BRA     DSEND
0000220C                          1910  
0000220C                          1911  DSERREA
0000220C  103C 000E               1912          MOVE.B  #14,D0
00002210  43F9 00002472           1913          LEA     ERRMEA,A1
00002216  4E4F                    1914          TRAP    #15
00002218                          1915  
00002218  4E75                    1916  DSEND   RTS
0000221A                          1917  
0000221A  43F9 0000243A           1918  DSEOF   LEA     LB,A1
00002220  103C 000E               1919          MOVE.B  #14,D0
00002224  4E4F                    1920          TRAP    #15
00002226                          1921          
00002226  43F9 0000233C           1922          LEA     REST,A1
0000222C  103C 000E               1923          MOVE.B  #14,D0
00002230  4E4F                    1924          TRAP    #15
00002232                          1925          
00002232  103C 0005               1926          MOVE.B  #5,D0
00002236  4E4F                    1927          TRAP    #15
00002238                          1928          
00002238  B23C 0059               1929          CMP.B   #89,D1
0000223C  6700 EDC2               1930          BEQ     START
00002240  B23C 0079               1931          CMP.B   #121,D1
00002244  6700 EDBA               1932          BEQ     START
00002248                          1933  
00002248  43F9 0000243A           1934  END     LEA     LB,A1
0000224E  103C 000E               1935          MOVE.B  #14,D0
00002252  4E4F                    1936          TRAP    #15
00002254                          1937          
00002254  43F9 0000243A           1938          LEA     LB,A1
0000225A  103C 000E               1939          MOVE.B  #14,D0
0000225E  4E4F                    1940          TRAP    #15
00002260                          1941          
00002260  43F9 00002359           1942          LEA     ENDMSG,A1
00002266  103C 000E               1943          MOVE.B  #14,D0
0000226A  4E4F                    1944          TRAP    #15
0000226C                          1945          
0000226C  43F9 00002381           1946          LEA     AUTHOR,A1
00002272  4E4F                    1947          TRAP    #15
00002274                          1948          
00002274  43F9 0000243A           1949          LEA     LB,A1
0000227A  103C 000E               1950          MOVE.B  #14,D0
0000227E  4E4F                    1951          TRAP    #15
00002280                          1952          
00002280  103C 0009               1953          MOVE.B  #9,D0
00002284  4E4F                    1954          TRAP    #15
00002286                          1955  
00002286                          1956  *Initialized Variables
00002286                          1957  *--------------------------------------------------------------------------------------------------
00002286                          1958  
00002286  =0000000D               1959  CR      EQU     $0D
00002286  =0000000A               1960  LF      EQU     $0A
00002286  =00000009               1961  HT      EQU     $09
00002286                          1962  
00002286= 54 68 69 73 20 69 ...   1963  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
0000230E= 45 6E 74 65 72 20 ...   1964  ASTART  DC.B    'Enter start address: $',0
00002325= 45 6E 74 65 72 20 ...   1965  AEND    DC.B    'Enter end address:   $',0
0000233C= 52 65 73 74 61 72 ...   1966  REST    DC.B    'Restart Disassembler (y/n)? ',0
00002359= 54 68 61 6E 6B 20 ...   1967  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002381= 4D 61 64 65 20 62 ...   1968  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000023A6                          1969  
000023A6= 45 52 52 4F 52 3A ...   1970  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
000023E0= 45 52 52 4F 52 3A ...   1971  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
00002406= 45 52 52 4F 52 3A ...   1972  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
0000243A                          1973  
0000243A= 0D 0A 00                1974  LB      DC.B    CR,LF,0
0000243D                          1975  
0000243D= 09 00                   1976  HTM     DC.B    HT,0
0000243F                          1977  
0000243F= 20 00                   1978  SM1     DC.B    ' ',0
00002441= 20 20 00                1979  SM2     DC.B    '  ',0
00002444= 20 20 20 00             1980  SM3     DC.B    '   ',0
00002448= 20 20 20 20 00          1981  SM4     DC.B    '    ',0
0000244D= 20 20 20 20 20 00       1982  SM5     DC.B    '     ',0
00002453= 20 20 20 20 20 20 00    1983  SM6     DC.B    '      ',0
0000245A= 20 20 20 20 20 20 ...   1984  SM7     DC.B    '       ',0
00002462                          1985  
00002462= 54 45 53 54 00          1986  TESTM   DC.B    'TEST',0
00002467                          1987  
00002467= 00                      1988  NOTH    DC.B    '',0
00002468= 00                      1989  NOTH2   DC.B    '',0
00002469                          1990  
00002469= 20 2A 45 52 52 4F ...   1991  ERRM    DC.B    ' *ERROR',0
00002471= 00                      1992  ERRMINS DC.B    '',0
00002472= 20 2A 45 52 52 4F ...   1993  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
00002497                          1994  
00002497= 2E 42 00                1995  MODEB   DC.B    '.B',0
0000249A= 2E 57 00                1996  MODEW   DC.B    '.W',0
0000249D= 2E 4C 00                1997  MODEL   DC.B    '.L',0
000024A0                          1998  
000024A0= 41 00                   1999  VALA    DC.B    'A',0
000024A2= 44 00                   2000  VALD    DC.B    'D',0
000024A4= 23 00                   2001  VALN    DC.B    '#',0
000024A6= 30 00                   2002  VAL0    DC.B    '0',0
000024A8= 51 00                   2003  VALQ    DC.B    'Q',0
000024AA= 4D 00                   2004  VALM    DC.B    'M',0
000024AC                          2005  
000024AC= 28 00                   2006  OPENPTR     DC.B    '(',0
000024AE= 2D 28 00                2007  OPENDPTR    DC.B    '-(',0
000024B1                          2008  
000024B1= 29 00                   2009  CLOSEPTR    DC.B    ')',0
000024B3= 29 2B 00                2010  CLOSEIPTR   DC.B    ')+',0
000024B6                          2011  
000024B6= 2C 00                   2012  COMMA   DC.B    ',',0
000024B8= 24 00                   2013  DOLLAR  DC.B    '$',0
000024BA= 2F 00                   2014  SLASH   DC.B    '/',0
000024BC= 2D 00                   2015  DASH    DC.B    '-',0
000024BE                          2016  
000024BE= 4E 4F 50 00             2017  NOPM    DC.B    'NOP',0
000024C2                          2018  
000024C2= 4D 4F 56 45 00          2019  MOVEM   DC.B    'MOVE',0
000024C7                          2020  
000024C7= 41 44 44 00             2021  ADDM    DC.B    'ADD',0
000024CB                          2022  
000024CB= 53 55 42 00             2023  SUBM    DC.B    'SUB',0
000024CF                          2024  
000024CF= 4C 45 41 00             2025  LEAM    DC.B    'LEA',0
000024D3                          2026  
000024D3= 41 4E 44 00             2027  ANDM    DC.B    'AND',0
000024D7= 4F 52 00                2028  ORM     DC.B    'OR',0
000024DA= 4E 4F 54 00             2029  NOTM    DC.B    'NOT',0
000024DE                          2030  
000024DE= 4C 53 00                2031  LSM    DC.B    'LS',0
000024E1= 4C 53 52 00             2032  LSRM    DC.B    'LSR',0
000024E5= 41 53 00                2033  ASM    DC.B    'AS',0
000024E8= 41 53 52 00             2034  ASRM    DC.B    'ASR',0
000024EC                          2035  
000024EC= 52 4F 00                2036  ROM    DC.B    'RO',0
000024EF= 52 4F 52 00             2037  RORM    DC.B    'ROR',0
000024F3                          2038  
000024F3= 42 47 54 00             2039  BGTM    DC.B    'BGT',0
000024F7= 42 4C 45 00             2040  BLEM    DC.B    'BLE',0
000024FB= 42 45 51 00             2041  BEQM    DC.B    'BEQ',0
000024FF                          2042  
000024FF= 4A 53 52 00             2043  JSRM    DC.B    'JSR',0
00002503= 52 54 53 00             2044  RTSM    DC.B    'RTS',0
00002507                          2045  
00002507= 42 52 41 00             2046  BRAM    DC.B    'BRA',0
0000250B                          2047  
0000250B                          2048  
0000250B                          2049      END    START        ; last line of so

1 error detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1FAC
ADDCONT             1F38
ADDDATACHECK        1FC6
ADDM                24C7
ADDRMODEALL         121C
ADDSIZEEND          1FB6
ADREG               16F8
ADREGP              1710
AEND                2325
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                24D3
ASM                 24E5
ASRM                24E8
ASTART              230E
AUTHOR              2381
BEQM                24FB
BGTM                24F3
BLEM                24F7
BRAM                2507
CLOSEIPTR           24B3
CLOSEPTR            24B1
COMMA               24B6
CR                  D
DADD                1EEA
DADDA               1F90
DADDEA              1F56
DADDPRNTREG         1F2A
DADDQ               1B12
DAND                13AE
DANDA               142A
DANDAE              1450
DANDB               13EE
DANDL               1416
DANDW               1402
DAS                 20A8
DASH                24BC
DATACHECKCONT       1F6E
DBEQ                1CBE
DBGT                1C42
DBLE                1C7E
DBRA                1BB6
DBRA_16BIT          1BFE
DBRA_32BIT          1C20
DISASM              137C
DJSR                177A
DJSR_CUSL           1812
DJSR_CUSW           17F4
DJSR_REG            17CE
DLEA                183C
DLEAP               1872
DLS                 209C
DMOVE2              1478
DMOVEA              157A
DMOVEM              194A
DMOVEQ              1D00
DNOP                163E
DNOT                164A
DNOTA               16AA
DNOTB               166E
DNOTL               1696
DNOTW               1682
DOLLAR              24B8
DOR                 1D6A
DORA                1DD6
DORAD               1E24
DORAE               1DFC
DORB                1D9A
DORL                1DC2
DORW                1DAE
DREG                16E0
DRO                 20B4
DRTS                1830
DS0                 1386
DS00                139A
DS01                159C
DS010               15BA
DS0100              15F6
DS0101              1B10
DS011               15C4
DS0110              1B8A
DS0111              1CFE
DS1                 1390
DS10                15A6
DS100               15CE
DS1000              1D68
DS1001              1E44
DS101               15D8
DS1010              1ED6
DS1011              1EDC
DS11                15B0
DS110               15E2
DS1100              1EE2
DS1101              1EE8
DS111               15EC
DS1110              1FD0
DS1110A             2024
DS1110B             205E
DS1110LSIDE         20D6
DS1110MEM           20DE
DS1110MEMA          2104
DS1110MEM_CUSL      21C8
DS1110MEM_CUSW      21AA
DS1110MEM_DEC       2184
DS1110MEM_INC       215E
DS1110MEM_REG       2138
DS1110SIDE          20C0
DS1110SIDEEND       20DC
DS1110_REG_D        2092
DS1110_REG_I        2088
DS1111              21E6
DSEND               2218
DSEOF               221A
DSERR               21EC
DSERREA             220C
DSERRINS            21FC
DSUB                1E46
DSUBEA              1EA2
DSUBPRNTREG         1E7E
END                 2248
ENDMSG              2359
ERRM                2469
ERRMEA              2472
ERRMINS             2471
EXT                 1758
EXTW                176E
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 243D
INTRO               2286
JSR010              189E
JSR111              18CE
JSR111001           1900
JSRM                24FF
JSRPRINT2           192A
LB                  243A
LEAM                24CF
LF                  A
LSM                 24DE
LSRM                24E1
MADREG              1730
MODEB               2497
MODEL               249D
MODEW               249A
MOVECONT            149C
MOVEERRCHECK        1590
MOVEM               24C2
MOVEM2              19EC
MOVEM3              1A26
MOVEM31             1A3C
MOVEM32             1A42
MOVEM4              1A68
MOVEM5              1AAE
MOVEMEA             1986
MOVEMEB             19B4
MOVEMEB1            19CC
MOVEMEB2            19D2
MOVEML              197E
MOVEMLOOP           1ACA
MOVEMLOOPDONE       1B0A
MOVEMLOOPINC        1B06
MOVEMLOOPSINGLEAR   1B0C
MOVEMSHIFTL         1AEC
MOVEMSHIFTR         1AF4
MOVEMSTEP           1AD2
MOVEMSTEP1          1ADE
MOVEMSTEP2          1AFC
MSDONE              1540
MSIZE               14C4
MSIZEB              1522
MSIZEBN             14EC
MSIZEL              1536
MSIZELN             1510
MSIZENORM           149C
MSIZEW              152C
MSIZEWN             14FE
NOPM                24BE
NOTH                2467
NOTH2               2468
NOTM                24DA
OPENDPTR            24AE
OPENPTR             24AC
ORM                 24D7
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1F88
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                233C
ROM                 24EC
RORM                24EF
RPAUSE              117E
RSTEP               112E
RTSM                2503
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               24BA
SM1                 243F
SM2                 2441
SM3                 2444
SM4                 2448
SM5                 244D
SM6                 2453
SM7                 245A
SRET                121A
START               1000
STARTER             0
SUBM                24CB
TEST                103A
TESTM               2462
VAL0                24A6
VALA                24A0
VALD                24A2
VALM                24AA
VALN                24A4
VALQ                24A8
VERR1               10F8
VERR1M              23A6
VERR2               1108
VERR2M              23E0
VERR3               1118
VERR3M              2406
VINPUT              10EE
