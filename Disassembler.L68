00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/25/2023 11:39:05 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: Ben Schipunov contribution to the disassembler
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000                            14  
00001000  43F9 00001522             15          LEA     INTRO,A1    *Intro text
00001006  103C 000E                 16          MOVE.B  #14,D0
0000100A  4E4F                      17          TRAP    #15
0000100C                            18          
0000100C  43F9 000015AA             19          LEA     ASTART,A1   *Input prompt text #1
00001012  4E4F                      20          TRAP    #15
00001014                            21  
00001014  103C 0002                 22          MOVE.B  #2,D0       *String prompt #1
00001018  4E4F                      23          TRAP    #15
0000101A                            24          
0000101A  B27C 0008                 25          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000101E  6E00 00B2                 26          BGT     VERR3
00001022                            27          
00001022  4EB9 00001050             28          JSR     PARSE       *Parse string #1
00001028                            29          
00001028                            30  
00001028  2641                      31          MOVE.L  D1,A3
0000102A                            32          
0000102A  43F9 000015C1             33          LEA     AEND,A1     *Input prompt text #2
00001030  103C 000E                 34          MOVE.B  #14,D0
00001034  4E4F                      35          TRAP    #15
00001036                            36          
00001036  103C 0002                 37          MOVE.B  #2,D0       *String prompt #2
0000103A  4E4F                      38          TRAP    #15
0000103C                            39          
0000103C  B27C 0008                 40          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001040  6E00 0090                 41          BGT     VERR3
00001044                            42          
00001044  4EB9 00001050             43          JSR     PARSE       *Parse string #2
0000104A                            44          
0000104A  2841                      45          MOVE.L  D1,A4
0000104C                            46          
0000104C  6000 005A                 47          BRA     VINPUT      *Verify inputs
00001050                            48          
00001050                            49  *--------------------------------------------------------------------------------------------------
00001050                            50  
00001050                            51  PARSE                       *PARSE: Initialize variables involved in parsing
00001050  123C 0000                 52          MOVE.B  #0,D1       * [D1] parse output
00001054  143C 0008                 53          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
00001058                            54          
00001058                            55  PSTEP                       *PSTEP: Step in parsing for loop
00001058  1019                      56          MOVE.B  (A1)+,D0    *Read next byte from A1
0000105A  B03C 0000                 57          CMP.B   #0,D0       *Check if reached end of string input
0000105E  6700 0046                 58          BEQ     PDONE       *Break the for loop if reached end
00001062  E989                      59          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
00001064  B03C 003A                 60          CMP.B   #58,D0      *Distinguish between letter and number
00001068  6D00 001A                 61          BLT     PNUM        *Handle number
0000106C                            62  
0000106C  0400 0037                 63  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
00001070  0C00 000F                 64          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
00001074  6E00 0006                 65          BGT     PCAPS       *Handle lowercase
00001078  6000 000E                 66          BRA     PSTEP2
0000107C                            67       
0000107C  0400 0020                 68  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
00001080  6000 0006                 69          BRA     PSTEP2
00001084                            70  
00001084  0400 0030                 71  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
00001088                            72          
00001088  0C00 000F                 73  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
0000108C  6E00 0034                 74          BGT     VERR2
00001090  0C00 0000                 75          CMPI.B   #0,D0
00001094  6D00 002C                 76          BLT     VERR2
00001098  D280                      77          ADD.L   D0,D1       *Append hex char to parse output
0000109A  5302                      78          SUBQ.B  #1,D2       *Decrement the counter
0000109C  0C02 0000                 79          CMPI.B   #0,D2      *Compare if we reached max count
000010A0  6700 0004                 80          BEQ     PDONE       *Complete parsing
000010A4  60B2                      81          BRA     PSTEP       *Or else continue loop
000010A6                            82  
000010A6  4E75                      83  PDONE   RTS
000010A8                            84  
000010A8                            85  *--------------------------------------------------------------------------------------------------
000010A8                            86  
000010A8  B9CB                      87  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010AA  6D00 0006                 88          BLT     VERR1
000010AE  6000 0032                 89          BRA     READLN
000010B2                            90  
000010B2  43F9 000015D8             91  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010B8  103C 000E                 92          MOVE.B  #14,D0
000010BC  4E4F                      93          TRAP    #15
000010BE  6000 045C                 94          BRA     END
000010C2                            95  
000010C2  43F9 00001612             96  VERR2   LEA     VERR2M,A1   *Throw range error
000010C8  103C 000E                 97          MOVE.B  #14,D0
000010CC  4E4F                      98          TRAP    #15
000010CE  6000 044C                 99          BRA     END
000010D2                           100  
000010D2  43F9 00001638            101  VERR3   LEA     VERR3M,A1   *Throw length error
000010D8  103C 000E                102          MOVE.B  #14,D0
000010DC  4E4F                     103          TRAP    #15
000010DE  6000 043C                104          BRA     END
000010E2                           105          
000010E2                           106  *--------------------------------------------------------------------------------------------------
000010E2                           107  
000010E2                           108  READLN                              *READLN: Start READLN for loop
000010E2  244B                     109          MOVE.L  A3,A2               *Set current address to start address
000010E4  1A3C 0000                110          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
000010E8                           111  
000010E8                           112  RSTEP                               *RSTEP: 
000010E8  381A                     113          MOVE.W  (A2)+,D4
000010EA  340A                     114          MOVE.W  A2,D2
000010EC  5542                     115          SUBQ.W  #2,D2
000010EE                           116          
000010EE  48E7 0400                117          MOVEM.L D5,-(SP)
000010F2  1A3C 0000                118          MOVE.B  #0,D5
000010F6  4EB9 00001144            119          JSR     HEXOUT              *Run printing operation for HEX address
000010FC  4CDF 0020                120          MOVEM.L (SP)+,D5
00001100                           121          
00001100  43F9 00001673            122          LEA     SM2,A1              *Horizontal tab indent after printing hex
00001106  103C 000E                123          MOVE.B  #14,D0
0000110A  4E4F                     124          TRAP    #15
0000110C                           125          
0000110C  48E7 7F0F                126          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001110  4EB9 000011D6            127          JSR     DISASM              *Run disassembly for current machine code
00001116  4CDF F0FE                128          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
0000111A                           129          
0000111A  5205                     130          ADDQ.B  #1,D5       *Increment counter by 1
0000111C  BA3C 0020                131          CMP.B   #32,D5      *Check if we reached 32 lines
00001120  6700 0016                132          BEQ     RPAUSE      *Branch to pausing code
00001124                           133          
00001124  43F9 0000166C            134          LEA     LB,A1       *Print line break
0000112A  103C 000E                135          MOVE.B  #14,D0      
0000112E  4E4F                     136          TRAP    #15
00001130                           137          
00001130                           138  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001130  B9CA                     139          CMP.L   A2,A4       *Check if we reached the end address
00001132  6D00 03E8                140          BLT     END         *End loop if so
00001136  60B0                     141          BRA     RSTEP       *Or else continue the loop
00001138                           142          
00001138                           143  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
00001138  1A3C 0000                144          MOVE.B  #0,D5       * Reset D5 counter
0000113C  103C 0005                145          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001140  4E4F                     146          TRAP    #15         * Only used for waiting for user to hit ENTER
00001142  60EC                     147          BRA     RCONT       *Continue with READLN loop
00001144                           148  
00001144                           149  *--------------------------------------------------------------------------------------------------
00001144                           150  
00001144                           151  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
00001144  103C 0006                152          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
00001148  163C 0008                153          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
0000114C                           154          
0000114C                           155  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
0000114C  E99A                     156          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
0000114E  2202                     157          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001150  0281 0000000F            158          ANDI.L  #$F,D1      * Filter to the right four bits
00001156  B23C 000A                159          CMP.B   #10,D1      *Distinguish between number and letter
0000115A  6D00 000A                160          BLT     HNUM        *Branch to number handling, or continue to letter handling
0000115E                           161          
0000115E                           162  HHEX                        *HHEX: Handle letters from HEXOUT for loop
0000115E  0601 0037                163          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001162  6000 0006                164          BRA     HSTEP2      *Branch to step 2 of the iteration
00001166                           165  
00001166                           166  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
00001166  0601 0030                167          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
0000116A                           168  
0000116A                           169  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
0000116A  5303                     170          SUBQ.B  #1,D3       *Decrement counter for longword tracking
0000116C                           171          
0000116C  B205                     172          CMP.B   D5,D1
0000116E  6700 0004                173          BEQ     HSKIP2
00001172                           174          
00001172  4E4F                     175          TRAP #15            *Will print the ASCII value stored in D1
00001174  0C03 0000                176  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
00001178  6700 0010                177          BEQ     HDONE       *End loop if done
0000117C                           178          
0000117C  B23C 0030                179          CMP.B   #48,D1
00001180  6700 0006                180          BEQ     HSKIP3
00001184                           181          
00001184  1A3C 0000                182          MOVE.B  #0,D5
00001188                           183          
00001188  60C2                     184  HSKIP3  BRA     HSTEP       *Or else continue loop
0000118A                           185          
0000118A  4E75                     186  HDONE   RTS
0000118C                           187  
0000118C                           188  
0000118C                           189  *--------------------------------------------------------------------------------------------------
0000118C                           190  
0000118C  103C 000E                191  SIZE    MOVE.B  #14,D0
00001190  BA3C 0000                192          CMP.B   #%00,D5
00001194  6700 001E                193          BEQ     SIZEB
00001198  BA3C 0001                194          CMP.B   #%01,D5
0000119C  6700 0020                195          BEQ     SIZEW
000011A0  BA3C 0002                196          CMP.B   #%10,D5
000011A4  6700 0022                197          BEQ     SIZEL
000011A8  BA3C 0003                198          CMP.B   #%11,D5
000011AC  6700 0010                199          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011B0  6000 0022                200          BRA     SRET
000011B4                           201          
000011B4  43F9 00001693            202  SIZEB   LEA     MODEB,A1
000011BA  6000 0016                203          BRA     SDONE
000011BE                           204  
000011BE  43F9 00001696            205  SIZEW   LEA     MODEW,A1
000011C4  6000 000C                206          BRA     SDONE
000011C8                           207  
000011C8  43F9 00001699            208  SIZEL   LEA     MODEL,A1
000011CE  6000 0002                209          BRA     SDONE
000011D2                           210  
000011D2  4E4F                     211  SDONE   TRAP    #15
000011D4                           212  
000011D4  4E75                     213  SRET    RTS
000011D6                           214  
000011D6                           215  *--------------------------------------------------------------------------------------------------
000011D6                           216  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
000011D6                           217  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
000011D6                           218  
000011D6                           219  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
000011D6                           220  
000011D6                           221  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
000011D6                           222  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
000011D6                           223  
000011D6                           224  DISASM                      *DISASM: Disassemble a machine code
000011D6  E34C                     225          LSL.W   #1,D4       * Tier 0 binary search
000011D8  6500 0010                226          BCS     DS1
000011DC  6000 0002                227          BRA     DS0
000011E0                           228  
000011E0                           229  *DS Tier 1 ----------------------------------------------------------------------------------------
000011E0                           230  
000011E0                           231  DS0                         *DS0: Tier 1 binary search for 0 side
000011E0  E34C                     232          LSL.W   #1,D4       
000011E2  6500 002A                233          BCS     DS01
000011E6  6000 000C                234          BRA     DS00
000011EA                           235  
000011EA                           236  DS1                         *DS1: Tier 1 binary search for 1 side
000011EA  E34C                     237          LSL.W   #1,D4       
000011EC  6500 0034                238          BCS     DS11
000011F0  6000 0026                239          BRA     DS10
000011F4                           240  
000011F4                           241  DS00                        *DS00: Disassembly processing for 00 prefix
000011F4  E55C                     242          ROL.W   #2,D4       
000011F6  3A04                     243          MOVE.W  D4,D5
000011F8  0204 0003                244          ANDI.B  #%11,D4
000011FC  0C04 0000                245          CMPI.B  #%00,D4
00001200  6700 0006                246          BEQ     DAND
00001204  6000 0314                247          BRA     DSEND
00001208                           248  
00001208  4E71                     249  DAND    NOP                 *DAND: Disassembly function serving DAND        
0000120A                           250          
0000120A  4E71                     251  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000120C                           252          
0000120C                           253  
0000120C  4E71                     254  DMOVEA  NOP
0000120E                           255  
0000120E                           256  *DS Tier 2 ----------------------------------------------------------------------------------------
0000120E                           257  
0000120E                           258  DS01                        *DS01: Tier 2 binary search for 01 side
0000120E  E34C                     259          LSL.W   #1,D4
00001210  6500 0024                260          BCS     DS011
00001214  6000 0016                261          BRA     DS010
00001218                           262  
00001218                           263  DS10                        *DS10: Tier 2 binary search for 10 side
00001218  E34C                     264          LSL.W   #1,D4
0000121A  6500 002E                265          BCS     DS101
0000121E  6000 0020                266          BRA     DS100
00001222                           267  
00001222                           268  DS11                        *DS11: Tier 2 binary search for 11 side
00001222  E34C                     269          LSL.W   #1,D4
00001224  6500 0038                270          BCS     DS111
00001228  6000 002A                271          BRA     DS110
0000122C                           272  
0000122C                           273  *DS Tier 3 ----------------------------------------------------------------------------------------
0000122C                           274  
0000122C                           275  DS010                       *DS010: Tier 3 binary search for 010 side
0000122C  E34C                     276          LSL.W   #1,D4
0000122E  6500 0062                277          BCS     DS0101
00001232  6000 0034                278          BRA     DS0100
00001236                           279  
00001236                           280  DS011                       *DS011: Tier 3 binary search for 011 side
00001236  E34C                     281          LSL.W   #1,D4
00001238  6500 0076                282          BCS     DS0111
0000123C  6000 0060                283          BRA     DS0110
00001240                           284  
00001240                           285  DS100                       *DS100: Tier 3 binary search for 100 side
00001240  E34C                     286          LSL.W   #1,D4
00001242  6500 0084                287          BCS     DS1001
00001246  6000 0074                288          BRA     DS1000
0000124A                           289  
0000124A                           290  DS101                       *DS101: Tier 3 binary search for 101 side
0000124A  E34C                     291          LSL.W   #1,D4
0000124C  6500 008C                292          BCS     DS1011
00001250  6000 0082                293          BRA     DS1010
00001254                           294  
00001254                           295  DS110                       *DS110: Tier 3 binary search for 110 side
00001254  E34C                     296          LSL.W   #1,D4
00001256  6500 008E                297          BCS     DS1101
0000125A  6000 0084                298          BRA     DS1100
0000125E                           299  
0000125E                           300  DS111                       *DS111: Tier 3 binary search for 111 side
0000125E  E34C                     301          LSL.W   #1,D4
00001260  6500 02A6                302          BCS     DS1111
00001264  6000 008C                303          BRA     DS1110
00001268                           304  
00001268                           305  *DS Tier 4 ----------------------------------------------------------------------------------------
00001268                           306  
00001268                           307  DS0100                      *DS0100: Processing for 0100 prefix
00001268  0C44 E710                308          CMPI.W  #%1110011100010000,D4
0000126C  6700 0006                309          BEQ     DNOP
00001270  6000 02A8                310          BRA     DSEND
00001274                           311  
00001274  43F9 000016B0            312  DNOP    LEA     NOPM,A1
0000127A  4E4F                     313          TRAP    #15
0000127C  6000 029C                314          BRA     DSEND
00001280                           315          
00001280  4E71                     316  DNOT    NOP
00001282  6000 0296                317          BRA     DSEND
00001286                           318          
00001286  4E71                     319  DJSR    NOP
00001288  6000 0290                320          BRA     DSEND
0000128C                           321          
0000128C  4E71                     322  DRTS    NOP
0000128E  6000 028A                323          BRA     DSEND
00001292                           324  
00001292                           325  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001292                           326  
00001292  4E71                     327  DS0101  NOP
00001294  6000 0284                328          BRA     DSEND
00001298                           329          
00001298  4E71                     330  DADDQ   NOP
0000129A  6000 027E                331          BRA     DSEND
0000129E                           332          
0000129E                           333  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000129E                           334  
0000129E  4E71                     335  DS0110  NOP
000012A0  6000 0278                336          BRA     DSEND
000012A4                           337          
000012A4  4E71                     338  DBCC    NOP
000012A6  6000 0272                339          BRA     DSEND
000012AA                           340          
000012AA  4E71                     341  DBRA    NOP
000012AC  6000 026C                342          BRA     DSEND
000012B0                           343          
000012B0                           344  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012B0                           345  
000012B0  4E71                     346  DS0111  NOP
000012B2  6000 0266                347          BRA     DSEND
000012B6                           348          
000012B6  4E71                     349  DMOVEQ  NOP
000012B8  6000 0260                350          BRA     DSEND
000012BC                           351          
000012BC                           352  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012BC                           353  
000012BC  4E71                     354  DS1000  NOP
000012BE  6000 025A                355          BRA     DSEND
000012C2                           356          
000012C2  4E71                     357  DOR     NOP
000012C4  6000 0254                358          BRA     DSEND
000012C8                           359          
000012C8                           360  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012C8                           361  
000012C8  4E71                     362  DS1001  NOP
000012CA  6000 024E                363          BRA     DSEND
000012CE                           364          
000012CE  4E71                     365  DSUB    NOP
000012D0  6000 0248                366          BRA     DSEND
000012D4                           367          
000012D4                           368  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012D4                           369  
000012D4  4E71                     370  DS1010  NOP
000012D6  6000 0242                371          BRA     DSEND
000012DA                           372          
000012DA                           373  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012DA                           374  
000012DA  4E71                     375  DS1011  NOP
000012DC  6000 023C                376          BRA     DSEND
000012E0                           377          
000012E0                           378  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012E0                           379  
000012E0  4E71                     380  DS1100  NOP
000012E2  6000 0236                381          BRA     DSEND
000012E6                           382          
000012E6                           383  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012E6                           384  
000012E6  4E71                     385  DS1101  NOP
000012E8  6000 0230                386          BRA     DSEND
000012EC                           387          
000012EC  4E71                     388  DADDA   NOP
000012EE  6000 022A                389          BRA     DSEND
000012F2                           390          
000012F2                           391  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000012F2                           392  
000012F2                           393  DS1110
000012F2  E75C                     394          ROL.W   #3,D4           * [D2] Reading count
000012F4  1404                     395          MOVE.B  D4,D2
000012F6  0202 0007                396          ANDI.B  #%111,D2
000012FA                           397          
000012FA  E35C                     398          ROL.W   #1,D4           * [D3] Reading direction
000012FC  1604                     399          MOVE.B  D4,D3
000012FE  0203 0001                400          ANDI.B  #%1,D3
00001302                           401          
00001302  E55C                     402          ROL.W   #2,D4           * [D5] Reading size
00001304  1A04                     403          MOVE.B  D4,D5
00001306  0205 0003                404          ANDI.B  #%11,D5
0000130A                           405          
0000130A  BA3C 0003                406          CMP.B   #%11,D5   * Start processing code as memory if size is 11
0000130E  6700 00F0                407          BEQ     DS1110MEM
00001312                           408          
00001312  E35C                     409          ROL.W   #1,D4           * [D6] Reading count mode
00001314  1C04                     410          MOVE.B  D4,D6
00001316  0206 0001                411          ANDI.B  #%1,D6
0000131A                           412          
0000131A  E55C                     413          ROL.W   #2,D4           * [D7] reading type of shift
0000131C  1E04                     414          MOVE.B  D4,D7
0000131E  0207 0003                415          ANDI.B  #%11,D7
00001322                           416          
00001322  E75C                     417          ROL.W   #3,D4           * [D1] reading register
00001324  1204                     418          MOVE.B  D4,D1
00001326  0201 0007                419          ANDI.B  #%111,D1
0000132A                           420          
0000132A  BE3C 0001                421          CMP.B   #%01,D7   *Determine shift type
0000132E  6700 008E                422          BEQ     DLS
00001332  BE3C 0000                423          CMP.B   #%00,D7
00001336  6700 0092                424          BEQ     DAS
0000133A  BE3C 0003                425          CMP.B   #%11,D7
0000133E  6700 0096                426          BEQ     DRO
00001342                           427          
00001342  6000 01D6                428          BRA     DSEND               *Fallback in case of invalid code
00001346                           429          
00001346  48E7 FFFF                430  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
0000134A  4EB9 000013E2            431          JSR     DS1110SIDE
00001350  4CDF FFFF                432          MOVEM.L (SP)+,A0-A7/D0-D7
00001354                           433          
00001354  48E7 FFFF                434          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001358  4EB8 118C                435          JSR     SIZE
0000135C  4CDF FFFF                436          MOVEM.L (SP)+,A0-A7/D0-D7
00001360                           437          
00001360  103C 000E                438          MOVE.B  #14,D0
00001364  43F9 0000167F            439          LEA     SM5,A1
0000136A  4E4F                     440          TRAP    #15
0000136C                           441          
0000136C  BA3C 0003                442          CMP.B   #%11,D5
00001370  6700 00B4                443          BEQ     DS1110MEMA
00001374                           444          
00001374  BC3C 0001                445          CMP.B   #%1,D6
00001378  6700 003A                446          BEQ     DS1110_REG_D
0000137C  6000 002C                447          BRA     DS1110_REG_I
00001380                           448          
00001380  1C01                     449  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001382                           450          
00001382  103C 0003                451          MOVE.B  #3,D0
00001386  1202                     452          MOVE.B  D2,D1
00001388  4E4F                     453          TRAP    #15
0000138A                           454          
0000138A  103C 000E                455          MOVE.B  #14,D0
0000138E  43F9 000016AC            456          LEA     COMMA,A1
00001394  4E4F                     457          TRAP    #15
00001396                           458          
00001396  43F9 0000169E            459          LEA     VALD,A1
0000139C  4E4F                     460          TRAP    #15
0000139E                           461          
0000139E  103C 0003                462          MOVE.B  #3,D0
000013A2  1206                     463          MOVE.B  D6,D1
000013A4  4E4F                     464          TRAP    #15
000013A6                           465          
000013A6  6000 0172                466          BRA     DSEND
000013AA                           467          
000013AA                           468  DS1110_REG_I
000013AA  43F9 000016A0            469          LEA     VALN,A1
000013B0  4E4F                     470          TRAP    #15
000013B2  60CC                     471          BRA     DS1110B
000013B4                           472  
000013B4                           473  DS1110_REG_D
000013B4  43F9 0000169E            474          LEA     VALD,A1
000013BA  4E4F                     475          TRAP    #15
000013BC  60C2                     476          BRA     DS1110B       
000013BE                           477          
000013BE  43F9 000016D0            478  DLS     LEA     LSM,A1
000013C4  4E4F                     479          TRAP    #15
000013C6  6000 FF7E                480          BRA     DS1110A
000013CA                           481          
000013CA  43F9 000016D7            482  DAS     LEA     ASM,A1
000013D0  4E4F                     483          TRAP    #15
000013D2  6000 FF72                484          BRA     DS1110A
000013D6                           485          
000013D6  43F9 000016DE            486  DRO     LEA     ROM,A1
000013DC  4E4F                     487          TRAP    #15
000013DE  6000 FF66                488          BRA     DS1110A
000013E2                           489          
000013E2                           490  DS1110SIDE
000013E2  103C 0006                491          MOVE.B  #6,D0
000013E6  B63C 0001                492          CMP.B   #1,D3
000013EA  6700 000C                493          BEQ     DS1110LSIDE
000013EE  123C 0052                494          MOVE.B  #82,D1
000013F2  4E4F                     495          TRAP    #15
000013F4  6000 0008                496          BRA     DS1110SIDEEND
000013F8                           497  
000013F8                           498  DS1110LSIDE
000013F8  123C 004C                499          MOVE.B  #76,D1
000013FC  4E4F                     500          TRAP    #15
000013FE                           501          
000013FE                           502  DS1110SIDEEND
000013FE  4E75                     503          RTS 
00001400                           504  
00001400                           505  DS1110MEM
00001400                           506                                  * Shift type is instead stored in D2
00001400                           507          
00001400  E75C                     508          ROL.W   #3,D4           * [D6] Reading address mode
00001402  1C04                     509          MOVE.B  D4,D6
00001404  0206 0007                510          ANDI.B  #%111,D6
00001408                           511          
00001408  E75C                     512          ROL.W   #3,D4           * [D1] Reading address register
0000140A  1204                     513          MOVE.B  D4,D1
0000140C  0201 0007                514          ANDI.B  #%111,D1
00001410                           515          
00001410  B43C 0001                516          CMP.B   #%01,D2
00001414  67A8                     517          BEQ     DLS
00001416  B43C 0000                518          CMP.B   #%00,D2
0000141A  67AE                     519          BEQ     DAS
0000141C  B43C 0003                520          CMP.B   #%11,D2
00001420  67B4                     521          BEQ     DRO
00001422  6000 00F6                522          BRA     DSEND
00001426                           523          
00001426                           524          
00001426                           525  DS1110MEMA
00001426                           526          
00001426  BC3C 0002                527          CMP.B   #%010,D6
0000142A  6700 002E                528          BEQ     DS1110MEM_REG
0000142E  BC3C 0003                529          CMP.B   #%011,D6
00001432  6700 004C                530          BEQ     DS1110MEM_INC
00001436  BC3C 0004                531          CMP.B   #%100,D6
0000143A  6700 006A                532          BEQ     DS1110MEM_DEC
0000143E                           533          
0000143E  BC3C 0007                534          CMP.B   #%111,D6
00001442  6600 00CA                535          BNE     DSERR
00001446                           536          
00001446  B23C 0000                537          CMP.B   #%000,D1
0000144A  6700 0080                538          BEQ     DS1110MEM_CUSW
0000144E  B23C 0001                539          CMP.B   #%001,D1
00001452  6700 0096                540          BEQ     DS1110MEM_CUSL
00001456                           541          
00001456  6000 00C2                542          BRA     DSEND
0000145A                           543  
0000145A                           544  DS1110MEM_REG
0000145A  43F9 000016A2            545          LEA     OPENPTR,A1
00001460  4E4F                     546          TRAP    #15
00001462                           547          
00001462  43F9 0000169C            548          LEA     VALA,A1
00001468  4E4F                     549          TRAP    #15
0000146A                           550          
0000146A  103C 0003                551          MOVE.B  #3,D0
0000146E  4E4F                     552          TRAP    #15
00001470  103C 000E                553          MOVE.B  #14,D0
00001474                           554          
00001474  43F9 000016A7            555          LEA     CLOSEPTR,A1
0000147A  4E4F                     556          TRAP    #15
0000147C                           557          
0000147C  6000 009C                558          BRA     DSEND
00001480                           559  
00001480                           560  DS1110MEM_INC
00001480  43F9 000016A2            561          LEA     OPENPTR,A1
00001486  4E4F                     562          TRAP    #15
00001488                           563          
00001488  43F9 0000169C            564          LEA     VALA,A1
0000148E  4E4F                     565          TRAP    #15
00001490                           566          
00001490  103C 0003                567          MOVE.B  #3,D0
00001494  4E4F                     568          TRAP    #15
00001496  103C 000E                569          MOVE.B  #14,D0
0000149A                           570          
0000149A  43F9 000016A9            571          LEA     CLOSEIPTR,A1
000014A0  4E4F                     572          TRAP    #15
000014A2                           573          
000014A2  6000 0076                574          BRA     DSEND
000014A6                           575  
000014A6                           576  DS1110MEM_DEC
000014A6  43F9 000016A4            577          LEA     OPENDPTR,A1
000014AC  4E4F                     578          TRAP    #15
000014AE                           579          
000014AE  43F9 0000169C            580          LEA     VALA,A1
000014B4  4E4F                     581          TRAP    #15
000014B6                           582          
000014B6  103C 0003                583          MOVE.B  #3,D0
000014BA  4E4F                     584          TRAP    #15
000014BC  103C 000E                585          MOVE.B  #14,D0
000014C0                           586          
000014C0  43F9 000016A7            587          LEA     CLOSEPTR,A1
000014C6  4E4F                     588          TRAP    #15
000014C8                           589          
000014C8  6000 0050                590          BRA     DSEND
000014CC                           591          
000014CC                           592  DS1110MEM_CUSW
000014CC  43F9 000016AE            593          LEA     DOLLAR,A1
000014D2  4E4F                     594          TRAP    #15
000014D4  341A                     595          MOVE.W  (A2)+,D2
000014D6  48E7 0400                596          MOVEM.L D5,-(SP)
000014DA  1A3C 0030                597          MOVE.B  #48,D5
000014DE  4EB8 1144                598          JSR     HEXOUT
000014E2  4CDF 0020                599          MOVEM.L (SP)+,D5
000014E6  6000 0032                600          BRA     DSEND
000014EA                           601          
000014EA                           602  DS1110MEM_CUSL
000014EA  43F9 000016AE            603          LEA     DOLLAR,A1
000014F0  4E4F                     604          TRAP    #15
000014F2  241A                     605          MOVE.L  (A2)+,D2
000014F4  48E7 0400                606          MOVEM.L D5,-(SP)
000014F8  1A3C 0030                607          MOVE.B  #48,D5
000014FC  4EB8 1144                608          JSR     HEXOUT
00001500  4CDF 0020                609          MOVEM.L (SP)+,D5
00001504  6000 0014                610          BRA     DSEND
00001508                           611          
00001508                           612  
00001508                           613  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001508                           614  
00001508  4E71                     615  DS1111  NOP
0000150A  6000 000E                616          BRA     DSEND
0000150E                           617  
0000150E                           618  *DS Final
0000150E                           619  *--------------------------------------------------------------------------------------------------
0000150E                           620  
0000150E  103C 000E                621  DSERR   MOVE.B  #14,D0
00001512  43F9 0000168A            622          LEA     ERRM,A1
00001518  4E4F                     623          TRAP    #15
0000151A                           624  
0000151A  4E75                     625  DSEND   RTS
0000151C                           626  
0000151C  103C 0009                627  END     MOVE.B  #9,D0
00001520  4E4F                     628          TRAP    #15
00001522                           629  
00001522                           630  *Initialized Variables
00001522                           631  *--------------------------------------------------------------------------------------------------
00001522                           632  
00001522  =0000000D                633  CR      EQU     $0D
00001522  =0000000A                634  LF      EQU     $0A
00001522  =00000009                635  HT      EQU     $09
00001522                           636  
00001522= 54 68 69 73 20 69 ...    637  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000015AA= 45 6E 74 65 72 20 ...    638  ASTART  DC.B    'Enter start address: $',0
000015C1= 45 6E 74 65 72 20 ...    639  AEND    DC.B    'Enter end address:   $',0
000015D8                           640  
000015D8= 45 52 52 4F 52 3A ...    641  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00001612= 45 52 52 4F 52 3A ...    642  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
00001638= 45 52 52 4F 52 3A ...    643  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
0000166C                           644  
0000166C= 0D 0A 00                 645  LB      DC.B    CR,LF,0
0000166F                           646  
0000166F= 09 00                    647  HTM     DC.B    HT,0
00001671                           648  
00001671= 20 00                    649  SM1     DC.B    ' ',0
00001673= 20 20 00                 650  SM2     DC.B    '  ',0
00001676= 20 20 20 00              651  SM3     DC.B    '   ',0
0000167A= 20 20 20 20 00           652  SM4     DC.B    '    ',0
0000167F= 20 20 20 20 20 00        653  SM5     DC.B    '     ',0
00001685                           654  
00001685= 54 45 53 54 00           655  TESTM   DC.B    'TEST',0
0000168A                           656  
0000168A= 20 20 2A 45 52 52 ...    657  ERRM    DC.B    '  *ERROR',0
00001693                           658  
00001693= 2E 42 00                 659  MODEB   DC.B    '.B',0
00001696= 2E 57 00                 660  MODEW   DC.B    '.W',0
00001699= 2E 4C 00                 661  MODEL   DC.B    '.L',0
0000169C                           662  
0000169C= 41 00                    663  VALA    DC.B    'A',0
0000169E= 44 00                    664  VALD    DC.B    'D',0
000016A0= 23 00                    665  VALN    DC.B    '#',0
000016A2                           666  
000016A2= 28 00                    667  OPENPTR     DC.B    '(',0
000016A4= 2D 28 00                 668  OPENDPTR    DC.B    '-(',0
000016A7                           669  
000016A7= 29 00                    670  CLOSEPTR    DC.B    ')',0
000016A9= 29 2B 00                 671  CLOSEIPTR   DC.B    ')+',0
000016AC                           672  
000016AC= 2C 00                    673  COMMA   DC.B    ',',0
000016AE= 24 00                    674  DOLLAR  DC.B    '$',0
000016B0                           675  
000016B0= 4E 4F 50 00              676  NOPM    DC.B    'NOP',0
000016B4                           677  
000016B4= 4D 4F 56 45 00           678  MOVEM   DC.B    'MOVE',0
000016B9                           679  
000016B9= 41 44 44 00              680  ADDM    DC.B    'ADD',0
000016BD                           681  
000016BD= 53 55 42 00              682  SUBM    DC.B    'SUB',0
000016C1                           683  
000016C1= 4C 45 41 00              684  LEAM    DC.B    'LEA',0
000016C5                           685  
000016C5= 41 4E 44 00              686  ANDM    DC.B    'AND',0
000016C9= 4F 52 00                 687  ORM     DC.B    'OR',0
000016CC= 4E 4F 54 00              688  NOTM    DC.B    'NOT',0
000016D0                           689  
000016D0= 4C 53 00                 690  LSM    DC.B    'LS',0
000016D3= 4C 53 52 00              691  LSRM    DC.B    'LSR',0
000016D7= 41 53 00                 692  ASM    DC.B    'AS',0
000016DA= 41 53 52 00              693  ASRM    DC.B    'ASR',0
000016DE                           694  
000016DE= 52 4F 00                 695  ROM    DC.B    'RO',0
000016E1= 52 4F 52 00              696  RORM    DC.B    'ROR',0
000016E5                           697  
000016E5= 42 47 54 00              698  BGTM    DC.B    'BGT',0
000016E9= 42 4C 45 00              699  BLEM    DC.B    'BLE',0
000016ED= 42 45 51 00              700  BEQM    DC.B    'BEQ',0
000016F1                           701  
000016F1= 4A 53 52 00              702  JSRM    DC.B    'JSR',0
000016F5= 52 54 53 00              703  RTSM    DC.B    'RTS',0
000016F9                           704  
000016F9= 42 52 41 00              705  BRAM    DC.B    'BRA',0
000016FD                           706  
000016FD                           707  
000016FD                           708      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDM                16B9
AEND                15C1
ANDM                16C5
ASM                 16D7
ASRM                16DA
ASTART              15AA
BEQM                16ED
BGTM                16E5
BLEM                16E9
BRAM                16F9
CLOSEIPTR           16A9
CLOSEPTR            16A7
COMMA               16AC
CR                  D
DADDA               12EC
DADDQ               1298
DAND                1208
DAS                 13CA
DBCC                12A4
DBRA                12AA
DISASM              11D6
DJSR                1286
DLS                 13BE
DMOVE2              120A
DMOVEA              120C
DMOVEQ              12B6
DNOP                1274
DNOT                1280
DOLLAR              16AE
DOR                 12C2
DRO                 13D6
DRTS                128C
DS0                 11E0
DS00                11F4
DS01                120E
DS010               122C
DS0100              1268
DS0101              1292
DS011               1236
DS0110              129E
DS0111              12B0
DS1                 11EA
DS10                1218
DS100               1240
DS1000              12BC
DS1001              12C8
DS101               124A
DS1010              12D4
DS1011              12DA
DS11                1222
DS110               1254
DS1100              12E0
DS1101              12E6
DS111               125E
DS1110              12F2
DS1110A             1346
DS1110B             1380
DS1110LSIDE         13F8
DS1110MEM           1400
DS1110MEMA          1426
DS1110MEM_CUSL      14EA
DS1110MEM_CUSW      14CC
DS1110MEM_DEC       14A6
DS1110MEM_INC       1480
DS1110MEM_REG       145A
DS1110SIDE          13E2
DS1110SIDEEND       13FE
DS1110_REG_D        13B4
DS1110_REG_I        13AA
DS1111              1508
DSEND               151A
DSERR               150E
DSUB                12CE
END                 151C
ERRM                168A
HDONE               118A
HEXOUT              1144
HHEX                115E
HNUM                1166
HSKIP2              1174
HSKIP3              1188
HSTEP               114C
HSTEP2              116A
HT                  9
HTM                 166F
INTRO               1522
JSRM                16F1
LB                  166C
LEAM                16C1
LF                  A
LSM                 16D0
LSRM                16D3
MODEB               1693
MODEL               1699
MODEW               1696
MOVEM               16B4
NOPM                16B0
NOTM                16CC
OPENDPTR            16A4
OPENPTR             16A2
ORM                 16C9
PARSE               1050
PCAPS               107C
PDONE               10A6
PHEX                106C
PNUM                1084
PSTEP               1058
PSTEP2              1088
RCONT               1130
READLN              10E2
ROM                 16DE
RORM                16E1
RPAUSE              1138
RSTEP               10E8
RTSM                16F5
SDONE               11D2
SIZE                118C
SIZEB               11B4
SIZEL               11C8
SIZEW               11BE
SM1                 1671
SM2                 1673
SM3                 1676
SM4                 167A
SM5                 167F
SRET                11D4
START               1000
STARTER             0
SUBM                16BD
TESTM               1685
VALA                169C
VALD                169E
VALN                16A0
VERR1               10B2
VERR1M              15D8
VERR2               10C2
VERR2M              1612
VERR3               10D2
VERR3M              1638
VINPUT              10A8
