00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 5:48:59 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  NONINIT    
0000102A  43F9 00001FFC             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 00002084             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 0000221D             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00CC                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 0000209B             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 0000221D             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 00A4                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 003E                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 0036                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0050                104          BRA     READLN
000010E8                           105  
000010E8  103C 000B                106  VERR1   MOVE.B  #11,D0
000010EC  323C FF00                107          MOVE.W  #$FF00,D1
000010F0  4E4F                     108          TRAP    #15
000010F2                           109          
000010F2  43F9 0000211C            110          LEA     VERR1M,A1   *Throw parsing error
000010F8  103C 000E                111          MOVE.B  #14,D0
000010FC  4E4F                     112          TRAP    #15
000010FE  6000 FF2A                113          BRA     NONINIT
00001102                           114  
00001102  103C 000B                115  VERR2   MOVE.B  #11,D0
00001106  323C FF00                116          MOVE.W  #$FF00,D1
0000110A  4E4F                     117          TRAP    #15
0000110C                           118          
0000110C  43F9 00002156            119          LEA     VERR2M,A1   *Throw range error
00001112  103C 000E                120          MOVE.B  #14,D0
00001116  4E4F                     121          TRAP    #15
00001118  6000 FF10                122          BRA     NONINIT
0000111C                           123  
0000111C  103C 000B                124  VERR3   MOVE.B  #11,D0
00001120  323C FF00                125          MOVE.W  #$FF00,D1
00001124  4E4F                     126          TRAP    #15
00001126                           127          
00001126  43F9 0000219C            128          LEA     VERR3M,A1   *Throw length error
0000112C  103C 000E                129          MOVE.B  #14,D0
00001130  4E4F                     130          TRAP    #15
00001132  6000 FEF6                131          BRA     NONINIT
00001136                           132          
00001136                           133  *--------------------------------------------------------------------------------------------------
00001136                           134  
00001136                           135  READLN                              *READLN: Start READLN for loop
00001136  103C 000B                136          MOVE.B  #11,D0              *Clear screen for fun
0000113A  323C FF00                137          MOVE.W  #$FF00,D1
0000113E  4E4F                     138          TRAP    #15
00001140  103C 000E                139          MOVE.B  #14,D0
00001144                           140          
00001144  244B                     141          MOVE.L  A3,A2               *Set current address to start address
00001146  1A3C 0000                142          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000114A                           143  
0000114A                           144  RSTEP                               *RSTEP: 
0000114A  381A                     145          MOVE.W  (A2)+,D4
0000114C  340A                     146          MOVE.W  A2,D2
0000114E  5542                     147          SUBQ.W  #2,D2
00001150                           148          
00001150  48E7 0400                149          MOVEM.L D5,-(SP)
00001154  1A3C 0000                150          MOVE.B  #0,D5
00001158  4EB9 000011A6            151          JSR     HEXOUT              *Run printing operation for HEX address
0000115E  4CDF 0020                152          MOVEM.L (SP)+,D5
00001162                           153          
00001162  43F9 000021F7            154          LEA     SM2,A1              *Horizontal tab indent after printing hex
00001168  103C 000E                155          MOVE.B  #14,D0
0000116C  4E4F                     156          TRAP    #15
0000116E                           157          
0000116E  48E7 7F0F                158          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001172  4EB9 00001398            159          JSR     DISASM              *Run disassembly for current machine code
00001178  4CDF F0FE                160          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
0000117C                           161          
0000117C  5205                     162          ADDQ.B  #1,D5       *Increment counter by 1
0000117E  BA3C 0020                163          CMP.B   #32,D5      *Check if we reached 32 lines
00001182  6700 0016                164          BEQ     RPAUSE      *Branch to pausing code
00001186                           165          
00001186  43F9 000021F0            166          LEA     LB,A1       *Print line break
0000118C  103C 000E                167          MOVE.B  #14,D0      
00001190  4E4F                     168          TRAP    #15
00001192                           169          
00001192                           170  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001192  B9CA                     171          CMP.L   A2,A4       *Check if we reached the end address
00001194  6D00 0DFA                172          BLT     DSEOF       *End loop if so
00001198  60B0                     173          BRA     RSTEP       *Or else continue the loop
0000119A                           174          
0000119A                           175  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000119A  1A3C 0000                176          MOVE.B  #0,D5       * Reset D5 counter
0000119E  103C 0005                177          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
000011A2  4E4F                     178          TRAP    #15         * Only used for waiting for user to hit ENTER
000011A4  60EC                     179          BRA     RCONT       *Continue with READLN loop
000011A6                           180  
000011A6                           181  *--------------------------------------------------------------------------------------------------
000011A6                           182  
000011A6                           183  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
000011A6  103C 0006                184          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
000011AA  163C 0008                185          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
000011AE                           186          
000011AE                           187  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
000011AE  E99A                     188          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
000011B0  2202                     189          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
000011B2  0281 0000000F            190          ANDI.L  #$F,D1      * Filter to the right four bits
000011B8  B23C 000A                191          CMP.B   #10,D1      *Distinguish between number and letter
000011BC  6D00 000A                192          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011C0                           193          
000011C0                           194  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011C0  0601 0037                195          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011C4  6000 0006                196          BRA     HSTEP2      *Branch to step 2 of the iteration
000011C8                           197  
000011C8                           198  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011C8  0601 0030                199          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011CC                           200  
000011CC                           201  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011CC  5303                     202          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011CE                           203          
000011CE  B205                     204          CMP.B   D5,D1
000011D0  6700 0004                205          BEQ     HSKIP2
000011D4                           206          
000011D4  4E4F                     207          TRAP #15            *Will print the ASCII value stored in D1
000011D6  0C03 0000                208  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011DA  6700 0010                209          BEQ     HDONE       *End loop if done
000011DE                           210          
000011DE  B23C 0030                211          CMP.B   #48,D1
000011E2  6700 0006                212          BEQ     HSKIP3
000011E6                           213          
000011E6  1A3C 0000                214          MOVE.B  #0,D5
000011EA                           215          
000011EA  60C2                     216  HSKIP3  BRA     HSTEP       *Or else continue loop
000011EC                           217          
000011EC  4E75                     218  HDONE   RTS
000011EE                           219  
000011EE                           220  
000011EE                           221  *--------------------------------------------------------------------------------------------------
000011EE                           222  
000011EE  103C 000E                223  SIZE    MOVE.B  #14,D0
000011F2  BA3C 0000                224          CMP.B   #%00,D5
000011F6  6700 001E                225          BEQ     SIZEB
000011FA  BA3C 0001                226          CMP.B   #%01,D5
000011FE  6700 0020                227          BEQ     SIZEW
00001202  BA3C 0002                228          CMP.B   #%10,D5
00001206  6700 0022                229          BEQ     SIZEL
0000120A  BA3C 0003                230          CMP.B   #%11,D5
0000120E  6700 0010                231          BEQ     SIZEW       *Assume WORD type on memory pointer things
00001212  6000 0022                232          BRA     SRET
00001216                           233          
00001216  43F9 0000224D            234  SIZEB   LEA     MODEB,A1
0000121C  6000 0016                235          BRA     SDONE
00001220                           236  
00001220  43F9 00002250            237  SIZEW   LEA     MODEW,A1
00001226  6000 000C                238          BRA     SDONE
0000122A                           239  
0000122A  43F9 00002253            240  SIZEL   LEA     MODEL,A1
00001230  6000 0002                241          BRA     SDONE
00001234                           242  
00001234  4E4F                     243  SDONE   TRAP    #15
00001236                           244  
00001236  4E75                     245  SRET    RTS
00001238                           246  
00001238                           247  *-----------------------------------------------------------------------------------
00001238                           248  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
00001238                           249  *uses d1, d0, and a1
00001238                           250  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
00001238                           251  *uses d1, d0, and a1
00001238                           252  ADDRMODEALL
00001238                           253  *comparisons
00001238  B67C 0000                254  AM000   CMP     #%000,D3
0000123C  6600 001A                255          BNE     AM001
00001240  43F9 00002258            256          LEA     VALD,A1
00001246  4E4F                     257          TRAP    #15
00001248  1206                     258          MOVE.B  D6,D1       *moving ea num to d1 to print
0000124A  103C 0003                259          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124E  4E4F                     260          TRAP    #15         *printing register number
00001250  103C 000E                261          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001254  6000 013C                262          BRA     AMEND
00001258                           263  
00001258                           264          
00001258  B67C 0001                265  AM001   CMP     #%001,D3
0000125C  6600 0022                266          BNE     AM010
00001260  BA7C 0000                267          CMP     #00,D5
00001264  6700 0CFC                268          BEQ     DSERR
00001268  43F9 00002256            269          LEA     VALA,A1
0000126E  4E4F                     270          TRAP    #15
00001270  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
00001272  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001276  4E4F                     273          TRAP    #15         *printing register number
00001278  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
0000127C  6000 0114                275          BRA     AMEND
00001280                           276  
00001280  B67C 0002                277  AM010   CMP     #%010,D3
00001284  6600 002A                278          BNE     AM011
00001288  43F9 00002260            279          LEA     OPENPTR,A1
0000128E  4E4F                     280          TRAP    #15
00001290  43F9 00002256            281          LEA     VALA,A1
00001296  4E4F                     282          TRAP    #15
00001298  1206                     283          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129A  103C 0003                284          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000129E  4E4F                     285          TRAP    #15         *printing register number
000012A0  103C 000E                286          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A4  43F9 00002265            287          LEA     CLOSEPTR,A1
000012AA  4E4F                     288          TRAP    #15
000012AC  6000 00E4                289          BRA     AMEND
000012B0                           290  
000012B0  B67C 0003                291  AM011   CMP     #%011,D3
000012B4  6600 002A                292          BNE     AM100
000012B8  43F9 00002260            293          LEA     OPENPTR,A1
000012BE  4E4F                     294          TRAP    #15
000012C0  43F9 00002256            295          LEA     VALA,A1
000012C6  4E4F                     296          TRAP    #15
000012C8  1206                     297          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CA  103C 0003                298          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012CE  4E4F                     299          TRAP    #15         *printing register number
000012D0  103C 000E                300          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D4  43F9 00002267            301          LEA     CLOSEIPTR,A1
000012DA  4E4F                     302          TRAP    #15
000012DC  6000 00B4                303          BRA     AMEND
000012E0                           304  
000012E0  B67C 0004                305  AM100   CMP     #%100,D3
000012E4  6600 002A                306          BNE     AM111
000012E8  43F9 00002262            307          LEA     OPENDPTR,A1
000012EE  4E4F                     308          TRAP    #15
000012F0  43F9 00002256            309          LEA     VALA,A1
000012F6  4E4F                     310          TRAP    #15
000012F8  1206                     311          MOVE.B  D6,D1       *moving ea num to d1 to print
000012FA  103C 0003                312          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012FE  4E4F                     313          TRAP    #15         *printing register number
00001300  103C 000E                314          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001304  43F9 00002265            315          LEA     CLOSEPTR,A1
0000130A  4E4F                     316          TRAP    #15
0000130C  6000 0084                317          BRA     AMEND
00001310                           318  
00001310  B67C 0007                319  AM111   CMP     #%111,D3
00001314  6600 0C4C                320          BNE     DSERR
00001318  BC7C 0000                321          CMP     #%000,D6
0000131C  6600 0020                322          BNE     AM111001
00001320  43F9 0000226C            323          LEA     DOLLAR,A1
00001326  4E4F                     324          TRAP    #15
00001328  341A                     325          MOVE.W  (A2)+,D2
0000132A  48E7 0400                326          MOVEM.L D5,-(SP)    
0000132E  1A3C 0030                327          MOVE.B  #48,D5
00001332  4EB8 11A6                328          JSR     HEXOUT
00001336  4CDF 0020                329          MOVEM.L (SP)+,D5
0000133A  6000 0056                330          BRA     AMEND
0000133E                           331          
0000133E                           332  AM111001
0000133E  BC7C 0001                333          CMP     #%001,D6
00001342  6600 0020                334          BNE     AM111100
00001346  43F9 0000226C            335          LEA     DOLLAR,A1
0000134C  4E4F                     336          TRAP    #15
0000134E  241A                     337          MOVE.L  (A2)+,D2
00001350  48E7 0400                338          MOVEM.L D5,-(SP)
00001354  1A3C 0030                339          MOVE.B  #48,D5
00001358  4EB8 11A6                340          JSR     HEXOUT
0000135C  4CDF 0020                341          MOVEM.L (SP)+,D5
00001360  6000 0030                342          BRA     AMEND
00001364                           343          
00001364                           344  AM111100
00001364  BC7C 0004                345          CMP     #%100,D6
00001368  6600 0BF8                346          BNE     DSERR
0000136C  43F9 0000225A            347          LEA     VALN,A1
00001372  4E4F                     348          TRAP    #15
00001374  341A                     349          MOVE.W  (A2)+,D2
00001376  48E7 0400                350          MOVEM.L D5,-(SP)    
0000137A  103C 0003                351          MOVE.B  #3,D0
0000137E  3202                     352          MOVE.W  D2,D1
00001380  4E4F                     353          TRAP    #15
00001382  103C 000E                354          MOVE.B  #14,D0
00001386  4CDF 0020                355          MOVEM.L (SP)+,D5
0000138A  323C 0000                356          MOVE.W  #0,D1
0000138E  6000 0002                357          BRA     AMEND
00001392                           358          
00001392  103C 000E                359  AMEND   MOVE.B  #14,D0
00001396  4E75                     360          RTS
00001398                           361  
00001398                           362  *--------------------------------------------------------------------------------------------------
00001398                           363  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
00001398                           364  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
00001398                           365  
00001398                           366  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
00001398                           367  
00001398                           368  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
00001398                           369  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
00001398                           370  
00001398                           371  DISASM                      *DISASM: Disassemble a machine code
00001398  E34C                     372          LSL.W   #1,D4       * Tier 0 binary search
0000139A  6500 0010                373          BCS     DS1
0000139E  6000 0002                374          BRA     DS0
000013A2                           375  
000013A2                           376  *DS Tier 1 ----------------------------------------------------------------------------------------
000013A2                           377  
000013A2                           378  DS0                         *DS0: Tier 1 binary search for 0 side
000013A2  E34C                     379          LSL.W   #1,D4       
000013A4  6500 00E2                380          BCS     DS01
000013A8  6000 000C                381          BRA     DS00
000013AC                           382  
000013AC                           383  DS1                         *DS1: Tier 1 binary search for 1 side
000013AC  E34C                     384          LSL.W   #1,D4       
000013AE  6500 00EC                385          BCS     DS11
000013B2  6000 00DE                386          BRA     DS10
000013B6                           387  
000013B6                           388  DS00                        *DS00: Disassembly processing for 00 prefix
000013B6  E55C                     389          ROL.W   #2,D4       
000013B8  1A04                     390          MOVE.B  D4,D5
000013BA  0205 0003                391          ANDI.B  #%11,D5
000013BE  6000 0002                392          BRA     DMOVE2
000013C2                           393  
000013C2                           394   
000013C2                           395  
000013C2                           396  
000013C2                           397          
000013C2                           398  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
000013C2  4E71                     399  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
000013C4                           400          *size in d5 from above processing
000013C4  43F9 00002272            401          LEA     MOVEM,A1
000013CA  4E4F                     402          TRAP    #15
000013CC                           403                  
000013CC                           404          *dest reg to d7
000013CC  E75C                     405          ROL.W   #3,D4
000013CE  1E04                     406          MOVE.B  D4,D7
000013D0  CE3C 0007                407          AND.B   #%111,D7
000013D4                           408          
000013D4                           409          *dest mode to d3: An means MOVEA
000013D4  E75C                     410          ROL.W   #3,D4
000013D6  1604                     411          MOVE.B  D4,D3
000013D8  C63C 0007                412          AND.B   #%111,D3
000013DC  3C43                     413          MOVE.W  D3,A6
000013DE                           414          
000013DE  B67C 0001                415          CMP     #%001,D3
000013E2  6700 0082                416          BEQ     DMOVEA
000013E6                           417  MOVECONT
000013E6                           418  *printing size then first addressing moode, then comma
000013E6                           419  *size is different for move
000013E6  103C 000E                420  MSIZE   MOVE.B  #14,D0
000013EA  BA3C 0001                421          CMP.B   #%01,D5
000013EE  6700 001E                422          BEQ     MSIZEB
000013F2  BA3C 0003                423          CMP.B   #%11,D5
000013F6  6700 0020                424          BEQ     MSIZEW
000013FA  BA3C 0002                425          CMP.B   #%10,D5
000013FE  6700 0022                426          BEQ     MSIZEL
00001402  BA3C 0003                427          CMP.B   #%11,D5
00001406  6700 0010                428          BEQ     MSIZEW       *Assume WORD type on memory pointer things
0000140A  6000 0B56                429          BRA     DSERR
0000140E                           430          
0000140E  43F9 0000224D            431  MSIZEB  LEA     MODEB,A1
00001414  6000 0016                432          BRA     MSDONE
00001418                           433  
00001418  43F9 00002250            434  MSIZEW  LEA     MODEW,A1
0000141E  6000 000C                435          BRA     MSDONE
00001422                           436  
00001422  43F9 00002253            437  MSIZEL  LEA     MODEL,A1
00001428  6000 0002                438          BRA     MSDONE
0000142C                           439  
0000142C  4E4F                     440  MSDONE  TRAP    #15
0000142E                           441  
0000142E  43F9 000021FE            442          LEA     SM4,A1
00001434  4E4F                     443          TRAP    #15
00001436                           444          
00001436                           445          *source mode to d3
00001436  E75C                     446          ROL.W   #3,D4
00001438  1604                     447          MOVE.B  D4,D3
0000143A  C63C 0007                448          AND.B   #%111,D3
0000143E                           449          
0000143E                           450          *source reg to d6
0000143E  E75C                     451          ROL.W   #3,D4
00001440  1C04                     452          MOVE.B  D4,D6
00001442  CC3C 0007                453          AND.B   #%111,D6
00001446                           454          
00001446  4EB8 1238                455          JSR     ADDRMODEALL
0000144A  B67C 0001                456          CMP     #%001,D3
0000144E  6700 002C                457          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
00001452  43F9 0000226A            458          LEA     COMMA,A1
00001458  4E4F                     459          TRAP    #15
0000145A  1C07                     460          MOVE.B  D7,D6
0000145C  360E                     461          MOVE.W  A6,D3
0000145E  4EB8 1238                462          JSR     ADDRMODEALL
00001462  6000 0B2A                463          BRA     DSEND
00001466                           464  
00001466  4E71                     465  DMOVEA  NOP
00001468  BA7C 0001                466          CMP     #%01,D5     *if size is byte, err
0000146C  6700 0AF4                467          BEQ     DSERR
00001470  43F9 00002256            468          LEA     VALA,A1        *else, print A and return
00001476  4E4F                     469          TRAP    #15
00001478  6000 FF6C                470          BRA     MOVECONT
0000147C                           471  
0000147C                           472  MOVEERRCHECK
0000147C  BA7C 0001                473          CMP     #%01,D5
00001480  6700 0AE0                474          BEQ     DSERR
00001484  6000 0B08                475          BRA     DSEND
00001488                           476  
00001488                           477          
00001488                           478  
00001488                           479  *DS Tier 2 ----------------------------------------------------------------------------------------
00001488                           480  
00001488                           481  DS01                        *DS01: Tier 2 binary search for 01 side
00001488  E34C                     482          LSL.W   #1,D4
0000148A  6500 0024                483          BCS     DS011
0000148E  6000 0016                484          BRA     DS010
00001492                           485  
00001492                           486  DS10                        *DS10: Tier 2 binary search for 10 side
00001492  E34C                     487          LSL.W   #1,D4
00001494  6500 002E                488          BCS     DS101
00001498  6000 0020                489          BRA     DS100
0000149C                           490  
0000149C                           491  DS11                        *DS11: Tier 2 binary search for 11 side
0000149C  E34C                     492          LSL.W   #1,D4
0000149E  6500 0038                493          BCS     DS111
000014A2  6000 002A                494          BRA     DS110
000014A6                           495  
000014A6                           496  *DS Tier 3 ----------------------------------------------------------------------------------------
000014A6                           497  
000014A6                           498  DS010                       *DS010: Tier 3 binary search for 010 side
000014A6  E34C                     499          LSL.W   #1,D4
000014A8  6500 037E                500          BCS     DS0101
000014AC  6000 0034                501          BRA     DS0100
000014B0                           502  
000014B0                           503  DS011                       *DS011: Tier 3 binary search for 011 side
000014B0  E34C                     504          LSL.W   #1,D4
000014B2  6500 0562                505          BCS     DS0111
000014B6  6000 03EA                506          BRA     DS0110
000014BA                           507  
000014BA                           508  DS100                       *DS100: Tier 3 binary search for 100 side
000014BA  E34C                     509          LSL.W   #1,D4
000014BC  6500 0660                510          BCS     DS1001
000014C0  6000 05BE                511          BRA     DS1000
000014C4                           512  
000014C4                           513  DS101                       *DS101: Tier 3 binary search for 101 side
000014C4  E34C                     514          LSL.W   #1,D4
000014C6  6500 06EE                515          BCS     DS1011
000014CA  6000 06E4                516          BRA     DS1010
000014CE                           517  
000014CE                           518  DS110                       *DS110: Tier 3 binary search for 110 side
000014CE  E34C                     519          LSL.W   #1,D4
000014D0  6500 078C                520          BCS     DS1101
000014D4  6000 06E6                521          BRA     DS1100
000014D8                           522  
000014D8                           523  DS111                       *DS111: Tier 3 binary search for 111 side
000014D8  E34C                     524          LSL.W   #1,D4
000014DA  6500 0A80                525          BCS     DS1111
000014DE  6000 0866                526          BRA     DS1110
000014E2                           527  
000014E2                           528  *DS Tier 4 ----------------------------------------------------------------------------------------
000014E2                           529  
000014E2                           530  DS0100                      *DS0100: Processing for 0100 prefix
000014E2  0C44 E710                531          CMPI.W  #%1110011100010000,D4
000014E6  6700 0034                532          BEQ     DNOP
000014EA  0C44 E750                533          CMPI.W  #%1110011101010000,D4
000014EE  6700 021E                534          BEQ     DRTS
000014F2                           535          
000014F2  3404                     536          MOVE.W  D4,D2
000014F4  0242 1C00                537          ANDI.W  #%0001110000000000,D2
000014F8  0C42 1C00                538          CMPI.W  #%0001110000000000,D2
000014FC  6700 021C                539          BEQ     DLEA
00001500                           540          
00001500  E95C                     541          ROL.W   #4,D4
00001502  1404                     542          MOVE.B  D4,D2
00001504  0202 000F                543          ANDI.B  #%1111,D2
00001508                           544          
00001508  B43C 000E                545          CMP.B   #%1110,D2
0000150C  6700 014A                546          BEQ     DJSR
00001510                           547          
00001510  B43C 0006                548          CMP.B   #%0110,D2
00001514  6700 0012                549          BEQ     DNOT
00001518                           550          
00001518  6000 0A58                551          BRA     DSERRINS
0000151C                           552  
0000151C  43F9 0000226E            553  DNOP    LEA     NOPM,A1
00001522  4E4F                     554          TRAP    #15
00001524  6000 0A68                555          BRA     DSEND
00001528                           556          
00001528  E55C                     557  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
0000152A  1A04                     558          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000152C  0205 0003                559          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001530                           560  
00001530  BA3C 0000                561          CMP.B   #%00,D5         ; compare with byte size
00001534  6700 0016                562          BEQ     DNOTB
00001538  BA3C 0001                563          CMP.B   #%01,D5         ; compare with word size
0000153C  6700 0022                564          BEQ     DNOTW
00001540  BA3C 0002                565          CMP.B   #%10,D5         ; compare with long size
00001544  6700 002E                566          BEQ     DNOTL
00001548                           567          
00001548  6000 0A44                568          BRA     DSEND           ; branch to DSEND in case of invalid code
0000154C                           569  
0000154C  43F9 0000228A            570  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
00001552  4E4F                     571          TRAP    #15             ; print NOTM string
00001554  43F9 0000224D            572          LEA     MODEB,A1        ; load effective address of MODEB string
0000155A  4E4F                     573          TRAP    #15             ; print MODEB string
0000155C  6000 002A                574          BRA     DNOTA           ; branch to addressing mode parsing
00001560                           575  
00001560  43F9 0000228A            576  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001566  4E4F                     577          TRAP    #15             ; print NOTM string
00001568  43F9 00002250            578          LEA     MODEW,A1        ; load effective address of MODEW string
0000156E  4E4F                     579          TRAP    #15             ; print MODEW string
00001570  6000 0016                580          BRA     DNOTA           ; branch to addressing mode parsing
00001574                           581  
00001574  43F9 0000228A            582  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
0000157A  4E4F                     583          TRAP    #15             ; print NOTM string
0000157C  43F9 00002253            584          LEA     MODEL,A1        ; load effective address of MODEL string
00001582  4E4F                     585          TRAP    #15             ; print MODEL string
00001584  6000 0002                586          BRA     DNOTA           ; branch to addressing mode parsing
00001588                           587  
00001588  ED5C                     588  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
0000158A  1204                     589          MOVE.B  D4,D1           ; move the byte in D4 to D1
0000158C  0201 003F                590          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
00001590                           591  
00001590                           592          ; Now process addressing mode and register based on the value in D1
00001590                           593  
00001590  1A01                     594          MOVE.B  D1,D5           ; Move the byte in D1 to D5
00001592  0205 0007                595          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001596  6700 0026                596          BEQ     DREG            ; If it is direct register mode
0000159A  BA3C 0002                597          CMP.B   #%010,D5        ; Compare with An
0000159E  6700 0036                598          BEQ     ADREG
000015A2  BA3C 0003                599          CMP.B   #%011,D5        ; Compare with (An)+
000015A6  6700 0046                600          BEQ     ADREGP
000015AA  BA3C 0004                601          CMP.B   #%100,D5        ; Compare with -(An)
000015AE  6700 005E                602          BEQ     MADREG
000015B2  BA3C 0007                603          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
000015B6  6700 007E                604          BEQ     EXT
000015BA                           605              
000015BA  6000 09D2                606          BRA     DSEND
000015BE                           607  
000015BE  1C01                     608  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
000015C0  0206 0007                609          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
000015C4  DC39 00002258            610          ADD.B   VALD,D6         ; Convert register number to ASCII
000015CA  43F9 00002258            611          LEA     VALD,A1         ; Load effective address of Dn
000015D0  4E4F                     612          TRAP    #15             ; Print Dn
000015D2  6000 09BA                613          BRA     DSEND
000015D6                           614  
000015D6  1C01                     615  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
000015D8  0206 0007                616          ANDI.B  #%111,D6
000015DC  DC39 00002256            617          ADD.B   VALA,D6
000015E2  43F9 00002256            618          LEA     VALA,A1
000015E8  4E4F                     619          TRAP    #15
000015EA  6000 09A2                620          BRA     DSEND
000015EE                           621  
000015EE  1C01                     622  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
000015F0  0206 0007                623          ANDI.B  #%111,D6
000015F4  DC39 00002256            624          ADD.B   VALA,D6
000015FA  43F9 00002256            625          LEA     VALA,A1
00001600  4E4F                     626          TRAP    #15
00001602  43F9 00002267            627          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001608  4E4F                     628          TRAP    #15             ; Print )+
0000160A  6000 0982                629          BRA     DSEND
0000160E                           630  
0000160E  1C01                     631  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
00001610  0206 0007                632          ANDI.B  #%111,D6
00001614  DC39 00002256            633          ADD.B   VALA,D6
0000161A  43F9 00002262            634          LEA     OPENDPTR,A1     ; Load effective address of -(
00001620  4E4F                     635          TRAP    #15             ; Print -(
00001622  43F9 00002256            636          LEA     VALA,A1
00001628  4E4F                     637          TRAP    #15
0000162A  43F9 00002265            638          LEA     CLOSEPTR,A1     ; Load effective address of )
00001630  4E4F                     639          TRAP    #15             ; Print )
00001632  6000 095A                640          BRA     DSEND
00001636                           641  
00001636  1C01                     642  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001638  0206 0001                643          ANDI.B  #%1,D6
0000163C  6700 000E                644          BEQ     EXTW
00001640  43F9 0000225A            645          LEA     VALN,A1         ; Load effective address of #
00001646  4E4F                     646          TRAP    #15             ; Print #
00001648  6000 0944                647          BRA     DSEND
0000164C                           648  
0000164C  43F9 0000225C            649  EXTW    LEA     VAL0,A1         ; Load effective address of 0
00001652  4E4F                     650          TRAP    #15             ; Print 0
00001654  6000 0938                651          BRA     DSEND
00001658                           652  
00001658                           653          
00001658  E55C                     654  DJSR    ROL.W   #2,D4
0000165A  1404                     655          MOVE.B  D4,D2
0000165C  0202 0007                656          ANDI.B  #%111,D2
00001660  0C02 0002                657          CMPI.B  #%10,D2
00001664  6600 08FC                658          BNE     DSERR
00001668                           659          
00001668  43F9 000022AF            660          LEA     JSRM,A1
0000166E  4E4F                     661          TRAP    #15
00001670                           662          
00001670  43F9 00002210            663          LEA     SM7,A1
00001676  4E4F                     664          TRAP    #15
00001678                           665  
00001678  E75C                     666          ROL.W   #3,D4       * [D2] address mode
0000167A  1404                     667          MOVE.B  D4,D2
0000167C  0202 0007                668          ANDI.B  #%111,D2
00001680                           669          
00001680  E75C                     670          ROL.W   #3,D4       * [D1] address register
00001682  1204                     671          MOVE.B  D4,D1
00001684  0201 0007                672          ANDI.B  #%111,D1
00001688                           673          
00001688  0C02 0002                674          CMPI.B  #%010,D2
0000168C  6700 001E                675          BEQ     DJSR_REG
00001690                           676          
00001690  0C02 0007                677          CMPI.B  #%111,D2
00001694  6600 08CC                678          BNE     DSERR
00001698                           679          
00001698  0C01 0000                680          CMPI.B  #%000,D1
0000169C  6700 0034                681          BEQ     DJSR_CUSW
000016A0                           682          
000016A0  0C01 0001                683          CMPI.B  #%001,D1
000016A4  6700 004A                684          BEQ     DJSR_CUSL
000016A8                           685          
000016A8  6000 08E4                686          BRA     DSEND
000016AC                           687          
000016AC                           688          
000016AC                           689          
000016AC                           690  DJSR_REG        
000016AC  43F9 00002260            691          LEA     OPENPTR,A1
000016B2  4E4F                     692          TRAP    #15
000016B4                           693          
000016B4  43F9 00002256            694          LEA     VALA,A1
000016BA  4E4F                     695          TRAP    #15
000016BC                           696          
000016BC  103C 0003                697          MOVE.B  #3,D0
000016C0  4E4F                     698          TRAP    #15
000016C2  103C 000E                699          MOVE.B  #14,D0
000016C6                           700          
000016C6  43F9 00002265            701          LEA     CLOSEPTR,A1
000016CC  4E4F                     702          TRAP    #15
000016CE                           703          
000016CE  6000 08BE                704          BRA     DSEND
000016D2                           705  
000016D2                           706          
000016D2                           707  DJSR_CUSW
000016D2  43F9 0000226C            708          LEA     DOLLAR,A1
000016D8  4E4F                     709          TRAP    #15
000016DA  341A                     710          MOVE.W  (A2)+,D2
000016DC  48E7 0400                711          MOVEM.L D5,-(SP)
000016E0  1A3C 0030                712          MOVE.B  #48,D5
000016E4  4EB8 11A6                713          JSR     HEXOUT
000016E8  4CDF 0020                714          MOVEM.L (SP)+,D5
000016EC  6000 08A0                715          BRA     DSEND
000016F0                           716  
000016F0                           717  DJSR_CUSL
000016F0  43F9 0000226C            718          LEA     DOLLAR,A1
000016F6  4E4F                     719          TRAP    #15
000016F8  241A                     720          MOVE.L  (A2)+,D2
000016FA  48E7 0400                721          MOVEM.L D5,-(SP)
000016FE  1A3C 0030                722          MOVE.B  #48,D5
00001702  4EB8 11A6                723          JSR     HEXOUT
00001706  4CDF 0020                724          MOVEM.L (SP)+,D5
0000170A  6000 0882                725          BRA     DSEND
0000170E                           726          
0000170E  43F9 000022B3            727  DRTS    LEA     RTSM,A1
00001714  4E4F                     728          TRAP    #15
00001716  6000 0876                729          BRA     DSEND
0000171A                           730          
0000171A                           731          
0000171A                           732  DLEA    *printing
0000171A  43F9 0000227F            733          LEA     LEAM,A1
00001720  4E4F                     734          TRAP    #15
00001722  43F9 00002210            735          LEA     SM7,A1
00001728  4E4F                     736          TRAP    #15
0000172A                           737          
0000172A                           738          *shifting out 111
0000172A  E75C                     739          ROL.W   #3,D4
0000172C                           740          
0000172C                           741          *getting destination register
0000172C  E75C                     742          ROL.W   #3,D4
0000172E  1404                     743          MOVE.B  D4,D2
00001730  0202 0007                744          ANDI.B  #%111,D2
00001734                           745          
00001734                           746          *getting ea mode
00001734  E75C                     747          ROL.W   #3,D4
00001736  1604                     748          MOVE.B  D4,D3
00001738  0203 0007                749          ANDI.B  #%111,D3
0000173C                           750          
0000173C  B63C 0002                751          CMP.B   #%010,D3
00001740  6700 000E                752          BEQ     DLEAP
00001744                           753          
00001744  B63C 0007                754          CMP.B   #%111,D3
00001748  6700 0006                755          BEQ     DLEAP
0000174C                           756          
0000174C  6000 0834                757          BRA     DSERREA
00001750                           758          
00001750                           759          *getting ea reg
00001750  E75C                     760  DLEAP   ROL.W   #3,D4
00001752  1C04                     761          MOVE.B  D4,D6
00001754  0206 0007                762          ANDI.B  #%111,D6
00001758                           763          
00001758                           764          *printing
00001758  4EB8 1238                765          JSR     ADDRMODEALL
0000175C                           766          
0000175C  43F9 0000226A            767          LEA     COMMA,A1
00001762  4E4F                     768          TRAP    #15
00001764  43F9 00002256            769          LEA     VALA,A1
0000176A  4E4F                     770          TRAP    #15
0000176C  103C 0003                771          MOVE.B  #3,D0
00001770  1202                     772          MOVE.B  D2,D1
00001772  4E4F                     773          TRAP    #15
00001774  103C 000E                774          MOVE.B  #14,D0
00001778                           775          
00001778  6000 0814                776          BRA DSEND
0000177C                           777          
0000177C                           778  JSR010
0000177C  B63C 0002                779          CMP.B   #%010,D3
00001780  6600 002A                780          BNE     JSR111
00001784  43F9 00002260            781          LEA     OPENPTR,A1
0000178A  4E4F                     782          TRAP    #15
0000178C  43F9 00002256            783          LEA     VALA,A1
00001792  4E4F                     784          TRAP    #15
00001794  103C 0003                785          MOVE.B  #3,D0
00001798  1206                     786          MOVE.B  D6,D1
0000179A  4E4F                     787          TRAP    #15
0000179C  103C 000E                788          MOVE.B  #14,D0
000017A0  43F9 00002265            789          LEA     CLOSEPTR,A1
000017A6  4E4F                     790          TRAP    #15
000017A8  6000 005E                791          BRA     JSRPRINT2
000017AC                           792  JSR111
000017AC  B63C 0007                793          CMP.B   #%111,D3
000017B0  6600 07B0                794          BNE     DSERR
000017B4  BC3C 0000                795          CMP.B   #%000,D6
000017B8  6600 0024                796          BNE     JSR111001
000017BC  43F9 0000226C            797          LEA     DOLLAR,A1
000017C2  4E4F                     798          TRAP    #15
000017C4  341A                     799          MOVE.W  (A2)+,D2
000017C6  48E7 0400                800          MOVEM.L D5,-(SP)    
000017CA  1A3C 0030                801          MOVE.B  #48,D5
000017CE  4EB8 11A6                802          JSR     HEXOUT
000017D2  4CDF 0020                803          MOVEM.L (SP)+,D5
000017D6  103C 000E                804          MOVE.B  #14,D0
000017DA  6000 002C                805          BRA     JSRPRINT2
000017DE                           806          
000017DE                           807  JSR111001
000017DE  BC3C 0001                808          CMP.B   #%001,D6
000017E2  6600 077E                809          BNE     DSERR
000017E6  43F9 0000226C            810          LEA     DOLLAR,A1
000017EC  4E4F                     811          TRAP    #15
000017EE  241A                     812          MOVE.L  (A2)+,D2
000017F0  48E7 0400                813          MOVEM.L D5,-(SP)
000017F4  1A3C 0030                814          MOVE.B  #48,D5
000017F8  4EB8 11A6                815          JSR     HEXOUT
000017FC  4CDF 0020                816          MOVEM.L (SP)+,D5
00001800  103C 000E                817          MOVE.B  #14,D0
00001804  6000 0002                818          BRA     JSRPRINT2
00001808                           819          
00001808                           820  JSRPRINT2
00001808  43F9 0000226A            821          LEA     COMMA,A1
0000180E  4E4F                     822          TRAP    #15
00001810  43F9 00002256            823          LEA     VALA,A1
00001816  4E4F                     824          TRAP    #15
00001818  103C 0003                825          MOVE.B  #3,D0
0000181C  3207                     826          MOVE.W  D7,D1
0000181E  4E4F                     827          TRAP    #15
00001820  103C 000E                828          MOVE.B  #14,D0
00001824                           829          
00001824  6000 0768                830          BRA     DSEND
00001828                           831          
00001828                           832  
00001828                           833  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001828                           834  
00001828  4E71                     835  DS0101  NOP
0000182A                           836          
0000182A  4E71                     837  DADDQ   NOP
0000182C  43F9 00002277            838          LEA     ADDM,A1
00001832  4E4F                     839          TRAP    #15
00001834  43F9 0000225E            840          LEA     VALQ,A1
0000183A  4E4F                     841          TRAP    #15
0000183C                           842          
0000183C                           843          *parsing data to d1
0000183C  E75C                     844          ROL.W   #3,D4
0000183E  1204                     845          MOVE.B  D4,D1
00001840  C23C 0007                846          AND.B   #%111,D1
00001844                           847          
00001844                           848          *ensuring next bit is 0
00001844  E35C                     849          ROL.W   #1,D4
00001846  1A04                     850          MOVE.B  D4,D5
00001848  CA3C 0001                851          AND.B   #%1,D5
0000184C  BA7C 0000                852          CMP     #0,D5
00001850  6600 0710                853          BNE     DSERR
00001854                           854          
00001854                           855          *parsing and printing size
00001854  E55C                     856          ROL.W   #2,D4
00001856  1A04                     857          MOVE.B  D4,D5
00001858  CA3C 0003                858          AND.B   #%11,D5
0000185C  4EB8 11EE                859          JSR     SIZE
00001860  43F9 00002210            860          LEA     SM7,A1
00001866  4E4F                     861          TRAP    #15
00001868                           862          
00001868                           863          *parsing effective address information
00001868                           864          *mode:
00001868  E75C                     865          ROL.W   #3,D4
0000186A  1604                     866          MOVE.B  D4,D3
0000186C  C63C 0007                867          AND.B   #%111,D3
00001870                           868          
00001870                           869          *register:
00001870  E71C                     870          ROL.B   #3,D4
00001872  1C04                     871          MOVE.B  D4,D6
00001874  CC3C 0007                872          AND.B   #%111,D6
00001878                           873          
00001878                           874          *printing data
00001878  43F9 0000225A            875          LEA     VALN,A1
0000187E  4E4F                     876          TRAP    #15
00001880  103C 0003                877          MOVE.B  #3,D0
00001884  4E4F                     878          TRAP    #15
00001886  103C 000E                879          MOVE.B  #14,D0
0000188A  43F9 0000226A            880          LEA     COMMA,A1
00001890  4E4F                     881          TRAP    #15
00001892                           882          
00001892  B67C 0004                883          CMP     #%100,D3
00001896  6700 06CA                884          BEQ     DSERR
0000189A  4EB8 1238                885          JSR     ADDRMODEALL
0000189E                           886          
0000189E  6000 06EE                887          BRA     DSEND
000018A2                           888          
000018A2                           889  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000018A2                           890  
000018A2                           891  DS0110  
000018A2  E95C                     892          ROL.W   #4,D4   *Get next 4 bits
000018A4  1404                     893          MOVE.B  D4,D2   *Copy to D2
000018A6  0202 000F                894          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
000018AA                           895          
000018AA  B43C 0000                896          CMP.B   #%0000,D2   *BRA
000018AE  6700 001E                897          BEQ     DBRA
000018B2                           898          
000018B2  B43C 000E                899          CMP.B   #%1110,D2   *BGT   
000018B6  6700 00A2                900          BEQ     DBGT
000018BA                           901          
000018BA  B43C 000F                902          CMP.B   #%1111,D2   *BLE   
000018BE  6700 00D6                903          BEQ     DBLE
000018C2                           904          
000018C2  B43C 0007                905          CMP.B   #%0111,D2   *BEQ   
000018C6  6700 010E                906          BEQ     DBEQ
000018CA                           907          
000018CA  6000 06A6                908          BRA     DSERRINS
000018CE                           909          
000018CE  43F9 000022B7            910  DBRA    LEA     BRAM,A1
000018D4  4E4F                     911          TRAP    #15
000018D6                           912          
000018D6  43F9 00002210            913          LEA     SM7,A1
000018DC  4E4F                     914          TRAP    #15
000018DE                           915  
000018DE  E15C                     916          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000018E0  1204                     917          MOVE.B  D4,D1
000018E2  0281 00001100            918          ANDI.L  #$1100,D1
000018E8                           919          
000018E8  0C01 0000                920          CMPI.B  #%00000000,D1
000018EC  6700 0028                921          BEQ     DBRA_16BIT      * Word
000018F0                           922          
000018F0  0C01 00FF                923          CMPI.B  #%11111111,D1
000018F4  6700 0042                924          BEQ     DBRA_32BIT      * Long
000018F8                           925          
000018F8                           926          * 8 Bit Displacement
000018F8  43F9 0000226C            927          LEA     DOLLAR,A1
000018FE  4E4F                     928          TRAP    #15
00001900                           929          
00001900  341A                     930          MOVE.W  (A2)+,D2
00001902  D441                     931          ADD.W   D1,D2
00001904  5842                     932          ADD.W   #4,D2   *unsure   
00001906  1A3C 0030                933          MOVE.B  #48,D5
0000190A  4EB8 11A6                934          JSR     HEXOUT
0000190E  6000 067E                935          BRA     DSEND
00001912                           936  
00001912                           937          *Displacement is put in D1      
00001912                           938          
00001912                           939          
00001912  6000 067A                940          BRA     DSEND
00001916                           941          
00001916                           942  DBRA_16BIT
00001916  43F9 0000226C            943          LEA     DOLLAR,A1
0000191C  4E4F                     944          TRAP    #15
0000191E  341A                     945          MOVE.W  (A2)+,D2
00001920  D44A                     946          ADD.W   A2,D2
00001922  5542                     947          SUB.W   #2,D2   *unsure
00001924  48E7 0400                948          MOVEM.L D5,-(SP)    
00001928  1A3C 0030                949          MOVE.B  #48,D5
0000192C  4EB8 11A6                950          JSR     HEXOUT
00001930  4CDF 0020                951          MOVEM.L (SP)+,D5
00001934  6000 0658                952          BRA     DSEND
00001938                           953  
00001938                           954  DBRA_32BIT
00001938  43F9 0000226C            955          LEA     DOLLAR,A1
0000193E  4E4F                     956          TRAP    #15
00001940  241A                     957          MOVE.L  (A2)+,D2
00001942  D48A                     958          ADD.L   A2,D2
00001944  5582                     959          SUB.L   #2,D2   *unsure
00001946  48E7 0400                960          MOVEM.L D5,-(SP)
0000194A  1A3C 0030                961          MOVE.B  #48,D5
0000194E  4EB8 11A6                962          JSR     HEXOUT
00001952  4CDF 0020                963          MOVEM.L (SP)+,D5
00001956  6000 0636                964          BRA     DSEND
0000195A                           965          
0000195A                           966          
0000195A                           967          
0000195A  43F9 000022A3            968  DBGT    LEA     BGTM,A1
00001960  4E4F                     969          TRAP    #15
00001962                           970          
00001962  43F9 00002210            971          LEA     SM7,A1
00001968  4E4F                     972          TRAP    #15
0000196A                           973          
0000196A  E15C                     974          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000196C  1204                     975          MOVE.B  D4,D1
0000196E  0241 00FF                976          ANDI.W  #%0000000011111111,D1
00001972                           977          
00001972  0C01 0000                978          CMPI.B  #%00000000,D1
00001976  679E                     979          BEQ     DBRA_16BIT      * Word
00001978                           980          
00001978  0C01 00FF                981          CMPI.B  #%11111111,D1
0000197C  67BA                     982          BEQ     DBRA_32BIT      * Long
0000197E                           983          
0000197E  43F9 0000226C            984          LEA     DOLLAR,A1
00001984  4E4F                     985          TRAP    #15
00001986                           986      
00001986  340A                     987          MOVE.W  A2,D2
00001988  D441                     988          ADD.W   D1,D2
0000198A                           989    
0000198A  1A3C 0030                990          MOVE.B  #48,D5
0000198E  4EB8 11A6                991          JSR     HEXOUT
00001992  6000 05FA                992          BRA     DSEND
00001996                           993  
00001996  43F9 000022A7            994  DBLE    LEA     BLEM,A1
0000199C  4E4F                     995          TRAP    #15
0000199E                           996          
0000199E  43F9 00002210            997          LEA     SM7,A1
000019A4  4E4F                     998          TRAP    #15
000019A6                           999          
000019A6  E15C                    1000          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019A8  1204                    1001          MOVE.B  D4,D1
000019AA  0241 00FF               1002          ANDI.W  #%0000000011111111,D1
000019AE                          1003          
000019AE  0C01 0000               1004          CMPI.B  #%00000000,D1
000019B2  6700 FF62               1005          BEQ     DBRA_16BIT      * Word
000019B6                          1006          
000019B6  0C01 00FF               1007          CMPI.B  #%11111111,D1
000019BA  6700 FF7C               1008          BEQ     DBRA_32BIT      * Long
000019BE                          1009          
000019BE  43F9 0000226C           1010          LEA     DOLLAR,A1
000019C4  4E4F                    1011          TRAP    #15
000019C6                          1012          
000019C6  340A                    1013          MOVE.W  A2,D2
000019C8  D441                    1014          ADD.W   D1,D2
000019CA                          1015   
000019CA  1A3C 0030               1016          MOVE.B  #48,D5
000019CE  4EB8 11A6               1017          JSR     HEXOUT
000019D2                          1018          
000019D2  6000 05BA               1019          BRA     DSEND
000019D6                          1020  
000019D6  43F9 000022AB           1021  DBEQ    LEA     BEQM,A1
000019DC  4E4F                    1022          TRAP    #15
000019DE                          1023          
000019DE  43F9 00002210           1024          LEA     SM7,A1
000019E4  4E4F                    1025          TRAP    #15
000019E6                          1026          
000019E6  E15C                    1027          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019E8  1204                    1028          MOVE.B  D4,D1
000019EA  0241 00FF               1029          ANDI.W  #%0000000011111111,D1
000019EE                          1030          
000019EE  0C01 0000               1031          CMPI.B  #%00000000,D1
000019F2  6700 FF22               1032          BEQ     DBRA_16BIT      * Word
000019F6                          1033          
000019F6  0C01 00FF               1034          CMPI.B  #%11111111,D1
000019FA  6700 FF3C               1035          BEQ     DBRA_32BIT      * Long
000019FE                          1036          
000019FE  43F9 0000226C           1037          LEA     DOLLAR,A1
00001A04  4E4F                    1038          TRAP    #15
00001A06                          1039  
00001A06  340A                    1040          MOVE.W  A2,D2
00001A08  D441                    1041          ADD.W   D1,D2
00001A0A                          1042   
00001A0A  1A3C 0030               1043          MOVE.B  #48,D5
00001A0E  4EB8 11A6               1044          JSR     HEXOUT
00001A12                          1045          
00001A12  6000 057A               1046          BRA     DSEND
00001A16                          1047  
00001A16                          1048  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A16                          1049  
00001A16  4E71                    1050  DS0111  NOP
00001A18                          1051          
00001A18  4E71                    1052  DMOVEQ  NOP
00001A1A  43F9 00002272           1053          LEA     MOVEM,A1
00001A20  4E4F                    1054          TRAP    #15
00001A22  43F9 0000225E           1055          LEA     VALQ,A1
00001A28  4E4F                    1056          TRAP    #15
00001A2A  43F9 000021FE           1057          LEA     SM4,A1
00001A30  4E4F                    1058          TRAP    #15
00001A32                          1059          
00001A32                          1060          *getting register number
00001A32  E75C                    1061          ROL.W   #3,D4
00001A34  1A04                    1062          MOVE.B  D4,D5
00001A36  CA3C 0007               1063          AND.B   #%111,D5
00001A3A                          1064          
00001A3A                          1065          *throwing error if next digit not 0
00001A3A  E35C                    1066          ROL.W   #1,D4
00001A3C  1C04                    1067          MOVE.B  D4,D6
00001A3E  CC3C 0001               1068          AND.B   #%1,D6
00001A42  BC3C 0000               1069          CMP.B   #0,D6
00001A46  6600 051A               1070          BNE     DSERR
00001A4A                          1071          
00001A4A                          1072          *getting data and printing information
00001A4A  E15C                    1073          ROL.W   #8,D4
00001A4C  1204                    1074          MOVE.B  D4,D1
00001A4E  C23C 00FF               1075          AND.B   #%11111111,D1
00001A52  43F9 0000225A           1076          LEA     VALN,A1
00001A58  4E4F                    1077          TRAP    #15
00001A5A  103C 0003               1078          MOVE.B  #3,D0
00001A5E  4E4F                    1079          TRAP    #15
00001A60  103C 000E               1080          MOVE.B  #14,D0
00001A64  43F9 0000226A           1081          LEA     COMMA,A1
00001A6A  4E4F                    1082          TRAP    #15
00001A6C  43F9 00002258           1083          LEA     VALD,A1
00001A72  4E4F                    1084          TRAP    #15
00001A74  103C 0003               1085          MOVE.B  #3,D0
00001A78  3205                    1086          MOVE.W  D5,D1
00001A7A  4E4F                    1087          TRAP    #15
00001A7C                          1088          
00001A7C  6000 0510               1089          BRA     DSEND
00001A80                          1090          
00001A80                          1091  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A80                          1092  
00001A80  4E71                    1093  DS1000  NOP
00001A82                          1094          
00001A82  E75C                    1095  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001A84  1A04                    1096          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001A86  0205 0007               1097          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001A8A  1C05                    1098          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001A8C  43F9 00002258           1099          LEA     VALD,A1         ; Load effective address of VALD string
00001A92  4E4F                    1100          TRAP    #15             ; Print D
00001A94  103C 0003               1101          MOVE.B  #3,D0           ; Move 3 to D0 to print register number
00001A98  1206                    1102          MOVE.B  D6,D1           ; Move the register number in D6 to D1
00001A9A  4E4F                    1103          TRAP    #15             ; Print the register number
00001A9C                          1104  
00001A9C  43F9 0000226A           1105          LEA     COMMA,A1        ; Load effective address of COMMA string
00001AA2  4E4F                    1106          TRAP    #15             ; Print comma
00001AA4                          1107  
00001AA4  E75C                    1108          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001AA6  1A04                    1109          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001AA8  0205 0007               1110          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001AAC  BA3C 0000               1111          CMP.B   #%000,D5        ; Compare with byte size
00001AB0  6700 0016               1112          BEQ     DORB
00001AB4  BA3C 0001               1113          CMP.B   #%001,D5        ; Compare with word size
00001AB8  6700 0022               1114          BEQ     DORW
00001ABC  BA3C 0002               1115          CMP.B   #%010,D5        ; Compare with long size
00001AC0  6700 002E               1116          BEQ     DORL
00001AC4                          1117          
00001AC4  6000 04C8               1118          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001AC8                          1119  
00001AC8  43F9 00002287           1120  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001ACE  4E4F                    1121          TRAP    #15             ; Print ORM string
00001AD0  43F9 0000224D           1122          LEA     MODEB,A1        ; Load effective address of MODEB string
00001AD6  4E4F                    1123          TRAP    #15             ; Print MODEB string
00001AD8  6000 002A               1124          BRA     DORA            ; Branch to addressing mode parsing
00001ADC                          1125  
00001ADC  43F9 00002287           1126  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001AE2  4E4F                    1127          TRAP    #15             ; Print ORM string
00001AE4  43F9 00002250           1128          LEA     MODEW,A1        ; Load effective address of MODEW string
00001AEA  4E4F                    1129          TRAP    #15             ; Print MODEW string
00001AEC  6000 0016               1130          BRA     DORA            ; Branch to addressing mode parsing
00001AF0                          1131  
00001AF0  43F9 00002287           1132  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001AF6  4E4F                    1133          TRAP    #15             ; Print ORM string
00001AF8  43F9 00002253           1134          LEA     MODEL,A1        ; Load effective address of MODEL string
00001AFE  4E4F                    1135          TRAP    #15             ; Print MODEL string
00001B00  6000 0002               1136          BRA     DORA            ; Branch to addressing mode parsing
00001B04                          1137  
00001B04  ED5C                    1138  DORA    ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001B06  1A04                    1139          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001B08  0205 0038               1140          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001B0C  E61D                    1141          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001B0E  1605                    1142          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001B10  0204 0007               1143          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001B14  1C04                    1144          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001B16                          1145  
00001B16  4EB8 1238               1146          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001B1A                          1147                      
00001B1A  6000 0472               1148          BRA     DSEND                     
00001B1E                          1149  
00001B1E                          1150  
00001B1E                          1151  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B1E                          1152  
00001B1E  4E71                    1153  DS1001  NOP
00001B20  4E71                    1154  DSUB    NOP
00001B22                          1155  *print sub
00001B22  43F9 0000227B           1156          LEA     SUBM,A1
00001B28  4E4F                    1157          TRAP    #15
00001B2A                          1158  
00001B2A                          1159  *parse dn reg: 3 bits
00001B2A                          1160  *number of the data register involved
00001B2A                          1161  *nums 0-7, paired with below
00001B2A  E75C                    1162          ROL.W   #3,D4       *dn reg num in d1
00001B2C  1E04                    1163          MOVE.B  D4,D7
00001B2E  0207 0007               1164          ANDI.B  #%111,D7
00001B32                          1165          
00001B32  3C47                    1166          MOVE.W  D7,A6       *temporary for storage
00001B34                          1167  
00001B34                          1168  *parse opmode: 3 bits
00001B34                          1169  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001B34                          1170  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001B34                          1171  *invalid: 111, 011
00001B34                          1172  *parse first digit separately
00001B34  E35C                    1173          ROL.W   #1,D4       *addressing mode in d2
00001B36  1E04                    1174          MOVE.B  D4,D7
00001B38  0207 0001               1175          ANDI.B  #%1,D7
00001B3C                          1176          
00001B3C                          1177  *parsing next two digits of size
00001B3C  E55C                    1178          ROL.W   #2,D4       *size in d5
00001B3E  1A04                    1179          MOVE.B  D4,D5
00001B40  0205 0003               1180          ANDI.B  #%11,D5
00001B44  4EB8 11EE               1181          JSR     SIZE
00001B48  43F9 00002210           1182          LEA     SM7,A1
00001B4E  4E4F                    1183          TRAP    #15
00001B50                          1184          
00001B50                          1185  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001B50  BE3C 0000               1186          CMP.B   #%0,D7       *if 1, then register info printed last
00001B54  6700 0026               1187          BEQ     DSUBEA      *branch to ea before register
00001B58                          1188          
00001B58                          1189  *printing register information
00001B58                          1190  DSUBPRNTREG
00001B58  43F9 00002258           1191          LEA     VALD,A1
00001B5E  4E4F                    1192          TRAP    #15
00001B60  320E                    1193          MOVE.W  A6,D1       *retrieving a6 register data
00001B62  103C 0003               1194          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001B66  4E4F                    1195          TRAP    #15         *printing register number
00001B68  103C 000E               1196          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001B6C  BE3C 0000               1197          CMP.B   #%0,D7      *if info finished printing
00001B70  6700 041C               1198          BEQ     DSEND      *branch to end
00001B74  43F9 0000226A           1199          LEA     COMMA,A1
00001B7A  4E4F                    1200          TRAP    #15
00001B7C                          1201  
00001B7C                          1202          
00001B7C                          1203  * parse ea mode: 3 bits
00001B7C                          1204  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001B7C                          1205  *address reg direct not allowed for .B operations
00001B7C                          1206  *no invalid
00001B7C                          1207  DSUBEA
00001B7C  E75C                    1208          ROL.W   #3,D4       *ea mode
00001B7E  1604                    1209          MOVE.B  D4,D3
00001B80  0203 0007               1210          ANDI.B  #%111,D3
00001B84                          1211  
00001B84                          1212  *parse ea reg: 3 bits
00001B84                          1213  *no invalid: paired with opmode below (nums 0-7)
00001B84                          1214  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001B84  E75C                    1215          ROL.W   #3,D4       *ea mode
00001B86  1C04                    1216          MOVE.B  D4,D6
00001B88  0206 0007               1217          ANDI.B  #%111,D6
00001B8C                          1218          
00001B8C  2803                    1219          MOVE.L  D3,D4   *temporarily using D4 
00001B8E                          1220          
00001B8E                          1221  *comparisons
00001B8E  B67C 0004               1222          CMP     #%100,D3
00001B92  6700 03CE               1223          BEQ     DSERR
00001B96  4EB8 1238               1224          JSR     ADDRMODEALL
00001B9A  BE3C 0001               1225          CMP.B   #%1,D7      *if info printed
00001B9E  6700 03EE               1226          BEQ     DSEND       *end
00001BA2  43F9 0000226A           1227          LEA     COMMA,A1
00001BA8  4E4F                    1228          TRAP    #15
00001BAA  60AC                    1229          BRA     DSUBPRNTREG *check d6 for size of data
00001BAC                          1230  *then take data from d4 and print (?)
00001BAC                          1231  
00001BAC  6000 03E0               1232          BRA     DSEND
00001BB0                          1233  
00001BB0                          1234  
00001BB0                          1235  
00001BB0  4E71                    1236  DS1010  NOP
00001BB2  6000 03BE               1237          BRA     DSERRINS
00001BB6                          1238  
00001BB6                          1239          
00001BB6                          1240  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BB6                          1241  
00001BB6  4E71                    1242  DS1011  NOP
00001BB8  6000 03B8               1243          BRA     DSERRINS
00001BBC                          1244          
00001BBC                          1245  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BBC                          1246  
00001BBC  4E71                    1247  DS1100  NOP
00001BBE                          1248          
00001BBE  E95C                    1249  DAND    ROL.W   #4,D4
00001BC0  1A04                    1250          MOVE.B  D4,D5
00001BC2  0205 0002               1251          ANDI.B  #%0010,D5
00001BC6  0C05 0002               1252          CMPI.B  #%0010,D5
00001BCA  6600 03A6               1253          BNE     DSERRINS
00001BCE                          1254          
00001BCE  E55C                    1255          ROL.W   #2,D4
00001BD0  1A04                    1256          MOVE.B  D4,D5
00001BD2  0205 0007               1257          ANDI.B  #%111,D5
00001BD6                          1258          
00001BD6  E75C                    1259          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001BD8  1604                    1260          MOVE.B  D4,D3           ; Move the byte in D4 to D5
00001BDA  0203 0007               1261          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
00001BDE                          1262          
00001BDE  E75C                    1263          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001BE0  1C04                    1264          MOVE.B  D4,D6           ; Move the byte in D4 to D5
00001BE2  0206 0007               1265          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
00001BE6                          1266          
00001BE6  43F9 00002258           1267          LEA     VALD,A1         ; Load effective address of Dn
00001BEC  4E4F                    1268          TRAP    #15             ; Print Dn
00001BEE  1E05                    1269          MOVE.B  D5,D7           ; Store the register number for later use
00001BF0                          1270  
00001BF0                          1271          
00001BF0  BA3C 0000               1272          CMP.B   #%000,D5        ; Compare with byte size
00001BF4  6700 0016               1273          BEQ     DANDB
00001BF8  BA3C 0001               1274          CMP.B   #%001,D5        ; Compare with word size
00001BFC  6700 0022               1275          BEQ     DANDW
00001C00  BA3C 0002               1276          CMP.B   #%010,D5        ; Compare with long size
00001C04  6700 002E               1277          BEQ     DANDL
00001C08                          1278          
00001C08  6000 0384               1279          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001C0C                          1280  
00001C0C  43F9 00002283           1281  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001C12  4E4F                    1282          TRAP    #15             ; Print ANDM string
00001C14  43F9 0000224D           1283          LEA     MODEB,A1        ; Load effective address of MODEB string
00001C1A  4E4F                    1284          TRAP    #15             ; Print MODEB string
00001C1C  6000 002A               1285          BRA     DANDA           ; Branch to addressing mode parsing
00001C20                          1286  
00001C20  43F9 00002283           1287  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001C26  4E4F                    1288          TRAP    #15             ; Print ANDM string
00001C28  43F9 00002250           1289          LEA     MODEW,A1        ; Load effective address of MODEW string
00001C2E  4E4F                    1290          TRAP    #15             ; Print MODEW string
00001C30  6000 0016               1291          BRA     DANDA           ; Branch to addressing mode parsing
00001C34                          1292  
00001C34  43F9 00002283           1293  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001C3A  4E4F                    1294          TRAP    #15             ; Print ANDM string
00001C3C  43F9 00002253           1295          LEA     MODEL,A1        ; Load effective address of MODEL string
00001C42  4E4F                    1296          TRAP    #15             ; Print MODEL string
00001C44  6000 0002               1297          BRA     DANDA           ; Branch to addressing mode parsing
00001C48                          1298  
00001C48  43F9 00002203           1299  DANDA   LEA     SM5,A1
00001C4E  4E4F                    1300          TRAP    #15
00001C50                          1301  
00001C50  0204 0007               1302          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001C54  1C04                    1303          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001C56                          1304  
00001C56  4EB8 1238               1305          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001C5A                          1306  
00001C5A  6000 0332               1307          BRA     DSEND                
00001C5E                          1308          
00001C5E                          1309  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C5E                          1310  
00001C5E  4E71                    1311  DS1101  NOP
00001C60                          1312  
00001C60  4E71                    1313  DADD    NOP
00001C62  43F9 00002277           1314          LEA     ADDM,A1
00001C68  4E4F                    1315          TRAP    #15
00001C6A                          1316          
00001C6A                          1317          *parse dn reg: 3 bits
00001C6A                          1318  *number of the data register involved
00001C6A                          1319  *nums 0-7, paired with below
00001C6A  E75C                    1320          ROL.W   #3,D4       *dn reg num in d7
00001C6C  1E04                    1321          MOVE.B  D4,D7
00001C6E  0207 0007               1322          ANDI.B  #%111,D7
00001C72                          1323          
00001C72  3C47                    1324          MOVE.W  D7,A6
00001C74                          1325  
00001C74                          1326  *parse opmode: 3 bits
00001C74                          1327  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C74                          1328  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C74                          1329  *invalid: 111, 011
00001C74                          1330  *parse first digit separately
00001C74  E35C                    1331          ROL.W   #1,D4       *addressing mode in d2
00001C76  1E04                    1332          MOVE.B  D4,D7
00001C78  0207 0001               1333          ANDI.B  #%1,D7
00001C7C                          1334          
00001C7C                          1335  *parsing next two digits of size
00001C7C  E55C                    1336          ROL.W   #2,D4       *size in d5
00001C7E  1A04                    1337          MOVE.B  D4,D5
00001C80  0205 0003               1338          ANDI.B  #%11,D5
00001C84  BA3C 0003               1339          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001C88  6700 007C               1340          BEQ     DADDA
00001C8C  4EB8 11EE               1341          JSR     SIZE
00001C90  43F9 00002210           1342          LEA     SM7,A1
00001C96  4E4F                    1343          TRAP    #15
00001C98                          1344          
00001C98                          1345  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C98  BE3C 0000               1346          CMP.B   #%0,D7       *if 0, then register info printed last
00001C9C  6700 002E               1347          BEQ     DADDEA      *branch to ea before register
00001CA0                          1348          
00001CA0                          1349  *printing register information
00001CA0                          1350  DADDPRNTREG
00001CA0  BA3C 0003               1351          CMP.B   #%11,D5
00001CA4  6700 0058               1352          BEQ     PRINTA
00001CA8  43F9 00002258           1353          LEA     VALD,A1
00001CAE                          1354  ADDCONT
00001CAE  4E4F                    1355          TRAP    #15
00001CB0  320E                    1356          MOVE.W  A6,D1       *moving reg num to d1 to print
00001CB2  103C 0003               1357          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001CB6  4E4F                    1358          TRAP    #15         *printing register number
00001CB8  103C 000E               1359          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001CBC  BE3C 0000               1360          CMP.B   #%0,D7      *if info finished printing
00001CC0  6700 02CC               1361          BEQ     DSEND      *branch to end
00001CC4  43F9 0000226A           1362          LEA     COMMA,A1
00001CCA  4E4F                    1363          TRAP    #15
00001CCC                          1364  
00001CCC                          1365          
00001CCC                          1366  * parse ea mode: 3 bits
00001CCC                          1367  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001CCC                          1368  *address reg direct not allowed for .B operations
00001CCC                          1369  *no invalid
00001CCC                          1370  DADDEA
00001CCC  E75C                    1371          ROL.W   #3,D4       *ea mode
00001CCE  1604                    1372          MOVE.B  D4,D3
00001CD0  0203 0007               1373          ANDI.B  #%111,D3
00001CD4                          1374  
00001CD4                          1375  *parse ea reg: 3 bits
00001CD4                          1376  *no invalid: paired with opmode below (nums 0-7)
00001CD4                          1377  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001CD4  E75C                    1378          ROL.W   #3,D4       *ea mode
00001CD6  1C04                    1379          MOVE.B  D4,D6
00001CD8  0206 0007               1380          ANDI.B  #%111,D6
00001CDC                          1381          
00001CDC                          1382  *comparisons
00001CDC  B67C 0004               1383          CMP     #%100,D3
00001CE0  6700 005A               1384          BEQ     ADDDATACHECK
00001CE4                          1385  DATACHECKCONT
00001CE4  4EB8 1238               1386          JSR     ADDRMODEALL
00001CE8  BE3C 0001               1387          CMP.B   #%1,D7      *if info printed
00001CEC  6700 02A0               1388          BEQ     DSEND       *end
00001CF0  43F9 0000226A           1389          LEA     COMMA,A1
00001CF6  4E4F                    1390          TRAP    #15
00001CF8  60A6                    1391          BRA     DADDPRNTREG 
00001CFA                          1392  
00001CFA  6000 0292               1393          BRA     DSEND
00001CFE                          1394          
00001CFE  43F9 00002256           1395  PRINTA  LEA     VALA,A1
00001D04  60A8                    1396          BRA     ADDCONT
00001D06                          1397  
00001D06                          1398          
00001D06  4E71                    1399  DADDA   NOP
00001D08  43F9 00002256           1400          LEA     VALA,A1
00001D0E  4E4F                    1401          TRAP    #15
00001D10  BE3C 0000               1402          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001D14  6600 000C               1403          BNE     ADDAL
00001D18  43F9 00002250           1404          LEA     MODEW,A1
00001D1E  6000 000C               1405          BRA     ADDSIZEEND
00001D22  43F9 00002253           1406  ADDAL   LEA     MODEL,A1
00001D28  6000 0002               1407          BRA     ADDSIZEEND
00001D2C                          1408  ADDSIZEEND
00001D2C  4E4F                    1409          TRAP    #15
00001D2E  43F9 00002210           1410          LEA     SM7,A1
00001D34  4E4F                    1411          TRAP    #15
00001D36  1E3C 0000               1412          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D3A  6090                    1413          BRA     DADDEA
00001D3C                          1414  ADDDATACHECK
00001D3C  BA3C 0003               1415          CMP.B   #%11,D5
00001D40  6700 0220               1416          BEQ     DSERR
00001D44  609E                    1417          BRA     DATACHECKCONT
00001D46                          1418          
00001D46                          1419          
00001D46                          1420  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D46                          1421  
00001D46                          1422  DS1110
00001D46  E75C                    1423          ROL.W   #3,D4           * [D2] Reading count
00001D48  1404                    1424          MOVE.B  D4,D2
00001D4A  0202 0007               1425          ANDI.B  #%111,D2
00001D4E                          1426          
00001D4E  E35C                    1427          ROL.W   #1,D4           * [D3] Reading direction
00001D50  1604                    1428          MOVE.B  D4,D3
00001D52  0203 0001               1429          ANDI.B  #%1,D3
00001D56                          1430          
00001D56  E55C                    1431          ROL.W   #2,D4           * [D5] Reading size
00001D58  1A04                    1432          MOVE.B  D4,D5
00001D5A  0205 0003               1433          ANDI.B  #%11,D5
00001D5E                          1434          
00001D5E  BA3C 0003               1435          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D62  6700 00F0               1436          BEQ     DS1110MEM
00001D66                          1437          
00001D66  E35C                    1438          ROL.W   #1,D4           * [D6] Reading count mode
00001D68  1C04                    1439          MOVE.B  D4,D6
00001D6A  0206 0001               1440          ANDI.B  #%1,D6
00001D6E                          1441          
00001D6E  E55C                    1442          ROL.W   #2,D4           * [D7] reading type of shift
00001D70  1E04                    1443          MOVE.B  D4,D7
00001D72  0207 0003               1444          ANDI.B  #%11,D7
00001D76                          1445          
00001D76  E75C                    1446          ROL.W   #3,D4           * [D1] reading register
00001D78  1204                    1447          MOVE.B  D4,D1
00001D7A  0201 0007               1448          ANDI.B  #%111,D1
00001D7E                          1449          
00001D7E  BE3C 0001               1450          CMP.B   #%01,D7   *Determine shift type
00001D82  6700 008E               1451          BEQ     DLS
00001D86  BE3C 0000               1452          CMP.B   #%00,D7
00001D8A  6700 0092               1453          BEQ     DAS
00001D8E  BE3C 0003               1454          CMP.B   #%11,D7
00001D92  6700 0096               1455          BEQ     DRO
00001D96                          1456          
00001D96  6000 01F6               1457          BRA     DSEND               *Fallback in case of invalid code
00001D9A                          1458          
00001D9A  48E7 FFFF               1459  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001D9E  4EB9 00001E36           1460          JSR     DS1110SIDE
00001DA4  4CDF FFFF               1461          MOVEM.L (SP)+,A0-A7/D0-D7
00001DA8                          1462          
00001DA8  48E7 FFFF               1463          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001DAC  4EB8 11EE               1464          JSR     SIZE
00001DB0  4CDF FFFF               1465          MOVEM.L (SP)+,A0-A7/D0-D7
00001DB4                          1466          
00001DB4  103C 000E               1467          MOVE.B  #14,D0
00001DB8  43F9 00002203           1468          LEA     SM5,A1
00001DBE  4E4F                    1469          TRAP    #15
00001DC0                          1470          
00001DC0  BA3C 0003               1471          CMP.B   #%11,D5
00001DC4  6700 00B4               1472          BEQ     DS1110MEMA
00001DC8                          1473          
00001DC8  BC3C 0001               1474          CMP.B   #%1,D6
00001DCC  6700 003A               1475          BEQ     DS1110_REG_D
00001DD0  6000 002C               1476          BRA     DS1110_REG_I
00001DD4                          1477          
00001DD4  1C01                    1478  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001DD6                          1479          
00001DD6  103C 0003               1480          MOVE.B  #3,D0
00001DDA  1202                    1481          MOVE.B  D2,D1
00001DDC  4E4F                    1482          TRAP    #15
00001DDE                          1483          
00001DDE  103C 000E               1484          MOVE.B  #14,D0
00001DE2  43F9 0000226A           1485          LEA     COMMA,A1
00001DE8  4E4F                    1486          TRAP    #15
00001DEA                          1487          
00001DEA  43F9 00002258           1488          LEA     VALD,A1
00001DF0  4E4F                    1489          TRAP    #15
00001DF2                          1490          
00001DF2  103C 0003               1491          MOVE.B  #3,D0
00001DF6  1206                    1492          MOVE.B  D6,D1
00001DF8  4E4F                    1493          TRAP    #15
00001DFA                          1494          
00001DFA  6000 0192               1495          BRA     DSEND
00001DFE                          1496          
00001DFE                          1497  DS1110_REG_I
00001DFE  43F9 0000225A           1498          LEA     VALN,A1
00001E04  4E4F                    1499          TRAP    #15
00001E06  60CC                    1500          BRA     DS1110B
00001E08                          1501  
00001E08                          1502  DS1110_REG_D
00001E08  43F9 00002258           1503          LEA     VALD,A1
00001E0E  4E4F                    1504          TRAP    #15
00001E10  60C2                    1505          BRA     DS1110B       
00001E12                          1506          
00001E12  43F9 0000228E           1507  DLS     LEA     LSM,A1
00001E18  4E4F                    1508          TRAP    #15
00001E1A  6000 FF7E               1509          BRA     DS1110A
00001E1E                          1510          
00001E1E  43F9 00002295           1511  DAS     LEA     ASM,A1
00001E24  4E4F                    1512          TRAP    #15
00001E26  6000 FF72               1513          BRA     DS1110A
00001E2A                          1514          
00001E2A  43F9 0000229C           1515  DRO     LEA     ROM,A1
00001E30  4E4F                    1516          TRAP    #15
00001E32  6000 FF66               1517          BRA     DS1110A
00001E36                          1518          
00001E36                          1519  DS1110SIDE
00001E36  103C 0006               1520          MOVE.B  #6,D0
00001E3A  B63C 0001               1521          CMP.B   #1,D3
00001E3E  6700 000C               1522          BEQ     DS1110LSIDE
00001E42  123C 0052               1523          MOVE.B  #82,D1
00001E46  4E4F                    1524          TRAP    #15
00001E48  6000 0008               1525          BRA     DS1110SIDEEND
00001E4C                          1526  
00001E4C                          1527  DS1110LSIDE
00001E4C  123C 004C               1528          MOVE.B  #76,D1
00001E50  4E4F                    1529          TRAP    #15
00001E52                          1530          
00001E52                          1531  DS1110SIDEEND
00001E52  4E75                    1532          RTS 
00001E54                          1533  
00001E54                          1534  DS1110MEM
00001E54                          1535                                  * Shift type is instead stored in D2
00001E54                          1536          
00001E54  E75C                    1537          ROL.W   #3,D4           * [D6] Reading address mode
00001E56  1C04                    1538          MOVE.B  D4,D6
00001E58  0206 0007               1539          ANDI.B  #%111,D6
00001E5C                          1540          
00001E5C  E75C                    1541          ROL.W   #3,D4           * [D1] Reading address register
00001E5E  1204                    1542          MOVE.B  D4,D1
00001E60  0201 0007               1543          ANDI.B  #%111,D1
00001E64                          1544          
00001E64  B43C 0001               1545          CMP.B   #%01,D2
00001E68  67A8                    1546          BEQ     DLS
00001E6A  B43C 0000               1547          CMP.B   #%00,D2
00001E6E  67AE                    1548          BEQ     DAS
00001E70  B43C 0003               1549          CMP.B   #%11,D2
00001E74  67B4                    1550          BEQ     DRO
00001E76  6000 0116               1551          BRA     DSEND
00001E7A                          1552          
00001E7A                          1553          
00001E7A                          1554  DS1110MEMA
00001E7A                          1555          
00001E7A  BC3C 0002               1556          CMP.B   #%010,D6
00001E7E  6700 002E               1557          BEQ     DS1110MEM_REG
00001E82  BC3C 0003               1558          CMP.B   #%011,D6
00001E86  6700 004C               1559          BEQ     DS1110MEM_INC
00001E8A  BC3C 0004               1560          CMP.B   #%100,D6
00001E8E  6700 006A               1561          BEQ     DS1110MEM_DEC
00001E92                          1562          
00001E92  BC3C 0007               1563          CMP.B   #%111,D6
00001E96  6600 00CA               1564          BNE     DSERR
00001E9A                          1565          
00001E9A  B23C 0000               1566          CMP.B   #%000,D1
00001E9E  6700 0080               1567          BEQ     DS1110MEM_CUSW
00001EA2  B23C 0001               1568          CMP.B   #%001,D1
00001EA6  6700 0096               1569          BEQ     DS1110MEM_CUSL
00001EAA                          1570          
00001EAA  6000 00E2               1571          BRA     DSEND
00001EAE                          1572  
00001EAE                          1573  DS1110MEM_REG
00001EAE  43F9 00002260           1574          LEA     OPENPTR,A1
00001EB4  4E4F                    1575          TRAP    #15
00001EB6                          1576          
00001EB6  43F9 00002256           1577          LEA     VALA,A1
00001EBC  4E4F                    1578          TRAP    #15
00001EBE                          1579          
00001EBE  103C 0003               1580          MOVE.B  #3,D0
00001EC2  4E4F                    1581          TRAP    #15
00001EC4  103C 000E               1582          MOVE.B  #14,D0
00001EC8                          1583          
00001EC8  43F9 00002265           1584          LEA     CLOSEPTR,A1
00001ECE  4E4F                    1585          TRAP    #15
00001ED0                          1586          
00001ED0  6000 00BC               1587          BRA     DSEND
00001ED4                          1588  
00001ED4                          1589  DS1110MEM_INC
00001ED4  43F9 00002260           1590          LEA     OPENPTR,A1
00001EDA  4E4F                    1591          TRAP    #15
00001EDC                          1592          
00001EDC  43F9 00002256           1593          LEA     VALA,A1
00001EE2  4E4F                    1594          TRAP    #15
00001EE4                          1595          
00001EE4  103C 0003               1596          MOVE.B  #3,D0
00001EE8  4E4F                    1597          TRAP    #15
00001EEA  103C 000E               1598          MOVE.B  #14,D0
00001EEE                          1599          
00001EEE  43F9 00002267           1600          LEA     CLOSEIPTR,A1
00001EF4  4E4F                    1601          TRAP    #15
00001EF6                          1602          
00001EF6  6000 0096               1603          BRA     DSEND
00001EFA                          1604  
00001EFA                          1605  DS1110MEM_DEC
00001EFA  43F9 00002262           1606          LEA     OPENDPTR,A1
00001F00  4E4F                    1607          TRAP    #15
00001F02                          1608          
00001F02  43F9 00002256           1609          LEA     VALA,A1
00001F08  4E4F                    1610          TRAP    #15
00001F0A                          1611          
00001F0A  103C 0003               1612          MOVE.B  #3,D0
00001F0E  4E4F                    1613          TRAP    #15
00001F10  103C 000E               1614          MOVE.B  #14,D0
00001F14                          1615          
00001F14  43F9 00002265           1616          LEA     CLOSEPTR,A1
00001F1A  4E4F                    1617          TRAP    #15
00001F1C                          1618          
00001F1C  6000 0070               1619          BRA     DSEND
00001F20                          1620          
00001F20                          1621  DS1110MEM_CUSW
00001F20  43F9 0000226C           1622          LEA     DOLLAR,A1
00001F26  4E4F                    1623          TRAP    #15
00001F28  341A                    1624          MOVE.W  (A2)+,D2
00001F2A  48E7 0400               1625          MOVEM.L D5,-(SP)
00001F2E  1A3C 0030               1626          MOVE.B  #48,D5
00001F32  4EB8 11A6               1627          JSR     HEXOUT
00001F36  4CDF 0020               1628          MOVEM.L (SP)+,D5
00001F3A  6000 0052               1629          BRA     DSEND
00001F3E                          1630          
00001F3E                          1631  DS1110MEM_CUSL
00001F3E  43F9 0000226C           1632          LEA     DOLLAR,A1
00001F44  4E4F                    1633          TRAP    #15
00001F46  241A                    1634          MOVE.L  (A2)+,D2
00001F48  48E7 0400               1635          MOVEM.L D5,-(SP)
00001F4C  1A3C 0030               1636          MOVE.B  #48,D5
00001F50  4EB8 11A6               1637          JSR     HEXOUT
00001F54  4CDF 0020               1638          MOVEM.L (SP)+,D5
00001F58  6000 0034               1639          BRA     DSEND
00001F5C                          1640          
00001F5C                          1641  
00001F5C                          1642  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F5C                          1643  
00001F5C  4E71                    1644  DS1111  NOP
00001F5E  6000 002E               1645          BRA     DSEND
00001F62                          1646  
00001F62                          1647  *DS Final
00001F62                          1648  *--------------------------------------------------------------------------------------------------
00001F62                          1649  
00001F62  103C 000E               1650  DSERR   MOVE.B  #14,D0
00001F66  43F9 0000221F           1651          LEA     ERRM,A1
00001F6C  4E4F                    1652          TRAP    #15
00001F6E  6000 001E               1653          BRA     DSEND
00001F72                          1654          
00001F72                          1655  DSERRINS
00001F72  103C 000E               1656          MOVE.B  #14,D0
00001F76  43F9 00002227           1657          LEA     ERRMINS,A1
00001F7C  4E4F                    1658          TRAP    #15
00001F7E  6000 000E               1659          BRA     DSEND
00001F82                          1660  
00001F82                          1661  DSERREA
00001F82  103C 000E               1662          MOVE.B  #14,D0
00001F86  43F9 00002228           1663          LEA     ERRMEA,A1
00001F8C  4E4F                    1664          TRAP    #15
00001F8E                          1665  
00001F8E  4E75                    1666  DSEND   RTS
00001F90                          1667  
00001F90  43F9 000021F0           1668  DSEOF   LEA     LB,A1
00001F96  103C 000E               1669          MOVE.B  #14,D0
00001F9A  4E4F                    1670          TRAP    #15
00001F9C                          1671          
00001F9C  43F9 000020B2           1672          LEA     REST,A1
00001FA2  103C 000E               1673          MOVE.B  #14,D0
00001FA6  4E4F                    1674          TRAP    #15
00001FA8                          1675          
00001FA8  103C 0005               1676          MOVE.B  #5,D0
00001FAC  4E4F                    1677          TRAP    #15
00001FAE                          1678          
00001FAE  B23C 0059               1679          CMP.B   #89,D1
00001FB2  6700 F04C               1680          BEQ     START
00001FB6  B23C 0079               1681          CMP.B   #121,D1
00001FBA  6700 F044               1682          BEQ     START
00001FBE                          1683  
00001FBE  43F9 000021F0           1684  END     LEA     LB,A1
00001FC4  103C 000E               1685          MOVE.B  #14,D0
00001FC8  4E4F                    1686          TRAP    #15
00001FCA                          1687          
00001FCA  43F9 000021F0           1688          LEA     LB,A1
00001FD0  103C 000E               1689          MOVE.B  #14,D0
00001FD4  4E4F                    1690          TRAP    #15
00001FD6                          1691          
00001FD6  43F9 000020CF           1692          LEA     ENDMSG,A1
00001FDC  103C 000E               1693          MOVE.B  #14,D0
00001FE0  4E4F                    1694          TRAP    #15
00001FE2                          1695          
00001FE2  43F9 000020F7           1696          LEA     AUTHOR,A1
00001FE8  4E4F                    1697          TRAP    #15
00001FEA                          1698          
00001FEA  43F9 000021F0           1699          LEA     LB,A1
00001FF0  103C 000E               1700          MOVE.B  #14,D0
00001FF4  4E4F                    1701          TRAP    #15
00001FF6                          1702          
00001FF6  103C 0009               1703          MOVE.B  #9,D0
00001FFA  4E4F                    1704          TRAP    #15
00001FFC                          1705  
00001FFC                          1706  *Initialized Variables
00001FFC                          1707  *--------------------------------------------------------------------------------------------------
00001FFC                          1708  
00001FFC  =0000000D               1709  CR      EQU     $0D
00001FFC  =0000000A               1710  LF      EQU     $0A
00001FFC  =00000009               1711  HT      EQU     $09
00001FFC                          1712  
00001FFC= 54 68 69 73 20 69 ...   1713  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002084= 45 6E 74 65 72 20 ...   1714  ASTART  DC.B    'Enter start address: $',0
0000209B= 45 6E 74 65 72 20 ...   1715  AEND    DC.B    'Enter end address:   $',0
000020B2= 52 65 73 74 61 72 ...   1716  REST    DC.B    'Restart Disassembler (y/n)? ',0
000020CF= 54 68 61 6E 6B 20 ...   1717  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000020F7= 4D 61 64 65 20 62 ...   1718  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000211C                          1719  
0000211C= 45 52 52 4F 52 3A ...   1720  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002156= 45 52 52 4F 52 3A ...   1721  VERR2M  DC.B    'ERROR: Invalid characters in input! Please type the inputs again!',CR,LF,CR,LF,0
0000219C= 45 52 52 4F 52 3A ...   1722  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters! Please type the inputs again!',CR,LF,CR,LF,0
000021F0                          1723  
000021F0= 0D 0A 00                1724  LB      DC.B    CR,LF,0
000021F3                          1725  
000021F3= 09 00                   1726  HTM     DC.B    HT,0
000021F5                          1727  
000021F5= 20 00                   1728  SM1     DC.B    ' ',0
000021F7= 20 20 00                1729  SM2     DC.B    '  ',0
000021FA= 20 20 20 00             1730  SM3     DC.B    '   ',0
000021FE= 20 20 20 20 00          1731  SM4     DC.B    '    ',0
00002203= 20 20 20 20 20 00       1732  SM5     DC.B    '     ',0
00002209= 20 20 20 20 20 20 00    1733  SM6     DC.B    '      ',0
00002210= 20 20 20 20 20 20 ...   1734  SM7     DC.B    '       ',0
00002218                          1735  
00002218= 54 45 53 54 00          1736  TESTM   DC.B    'TEST',0
0000221D                          1737  
0000221D= 00                      1738  NOTH    DC.B    '',0
0000221E= 00                      1739  NOTH2   DC.B    '',0
0000221F                          1740  
0000221F= 20 2A 45 52 52 4F ...   1741  ERRM    DC.B    ' *ERROR',0
00002227= 00                      1742  ERRMINS DC.B    '',0
00002228= 20 2A 45 52 52 4F ...   1743  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
0000224D                          1744  
0000224D= 2E 42 00                1745  MODEB   DC.B    '.B',0
00002250= 2E 57 00                1746  MODEW   DC.B    '.W',0
00002253= 2E 4C 00                1747  MODEL   DC.B    '.L',0
00002256                          1748  
00002256= 41 00                   1749  VALA    DC.B    'A',0
00002258= 44 00                   1750  VALD    DC.B    'D',0
0000225A= 23 00                   1751  VALN    DC.B    '#',0
0000225C= 30 00                   1752  VAL0    DC.B    '0',0
0000225E= 51 00                   1753  VALQ    DC.B    'Q',0
00002260                          1754  
00002260= 28 00                   1755  OPENPTR     DC.B    '(',0
00002262= 2D 28 00                1756  OPENDPTR    DC.B    '-(',0
00002265                          1757  
00002265= 29 00                   1758  CLOSEPTR    DC.B    ')',0
00002267= 29 2B 00                1759  CLOSEIPTR   DC.B    ')+',0
0000226A                          1760  
0000226A= 2C 00                   1761  COMMA   DC.B    ',',0
0000226C= 24 00                   1762  DOLLAR  DC.B    '$',0
0000226E                          1763  
0000226E= 4E 4F 50 00             1764  NOPM    DC.B    'NOP',0
00002272                          1765  
00002272= 4D 4F 56 45 00          1766  MOVEM   DC.B    'MOVE',0
00002277                          1767  
00002277= 41 44 44 00             1768  ADDM    DC.B    'ADD',0
0000227B                          1769  
0000227B= 53 55 42 00             1770  SUBM    DC.B    'SUB',0
0000227F                          1771  
0000227F= 4C 45 41 00             1772  LEAM    DC.B    'LEA',0
00002283                          1773  
00002283= 41 4E 44 00             1774  ANDM    DC.B    'AND',0
00002287= 4F 52 00                1775  ORM     DC.B    'OR',0
0000228A= 4E 4F 54 00             1776  NOTM    DC.B    'NOT',0
0000228E                          1777  
0000228E= 4C 53 00                1778  LSM    DC.B    'LS',0
00002291= 4C 53 52 00             1779  LSRM    DC.B    'LSR',0
00002295= 41 53 00                1780  ASM    DC.B    'AS',0
00002298= 41 53 52 00             1781  ASRM    DC.B    'ASR',0
0000229C                          1782  
0000229C= 52 4F 00                1783  ROM    DC.B    'RO',0
0000229F= 52 4F 52 00             1784  RORM    DC.B    'ROR',0
000022A3                          1785  
000022A3= 42 47 54 00             1786  BGTM    DC.B    'BGT',0
000022A7= 42 4C 45 00             1787  BLEM    DC.B    'BLE',0
000022AB= 42 45 51 00             1788  BEQM    DC.B    'BEQ',0
000022AF                          1789  
000022AF= 4A 53 52 00             1790  JSRM    DC.B    'JSR',0
000022B3= 52 54 53 00             1791  RTSM    DC.B    'RTS',0
000022B7                          1792  
000022B7= 42 52 41 00             1793  BRAM    DC.B    'BRA',0
000022BB                          1794  
000022BB                          1795  
000022BB                          1796      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1D22
ADDCONT             1CAE
ADDDATACHECK        1D3C
ADDM                2277
ADDRMODEALL         1238
ADDSIZEEND          1D2C
ADREG               15D6
ADREGP              15EE
AEND                209B
AM000               1238
AM001               1258
AM010               1280
AM011               12B0
AM100               12E0
AM111               1310
AM111001            133E
AM111100            1364
AMEND               1392
ANDM                2283
ASM                 2295
ASRM                2298
ASTART              2084
AUTHOR              20F7
BEQM                22AB
BGTM                22A3
BLEM                22A7
BRAM                22B7
CLOSEIPTR           2267
CLOSEPTR            2265
COMMA               226A
CR                  D
DADD                1C60
DADDA               1D06
DADDEA              1CCC
DADDPRNTREG         1CA0
DADDQ               182A
DAND                1BBE
DANDA               1C48
DANDB               1C0C
DANDL               1C34
DANDW               1C20
DAS                 1E1E
DATACHECKCONT       1CE4
DBEQ                19D6
DBGT                195A
DBLE                1996
DBRA                18CE
DBRA_16BIT          1916
DBRA_32BIT          1938
DISASM              1398
DJSR                1658
DJSR_CUSL           16F0
DJSR_CUSW           16D2
DJSR_REG            16AC
DLEA                171A
DLEAP               1750
DLS                 1E12
DMOVE2              13C2
DMOVEA              1466
DMOVEQ              1A18
DNOP                151C
DNOT                1528
DNOTA               1588
DNOTB               154C
DNOTL               1574
DNOTW               1560
DOLLAR              226C
DOR                 1A82
DORA                1B04
DORB                1AC8
DORL                1AF0
DORW                1ADC
DREG                15BE
DRO                 1E2A
DRTS                170E
DS0                 13A2
DS00                13B6
DS01                1488
DS010               14A6
DS0100              14E2
DS0101              1828
DS011               14B0
DS0110              18A2
DS0111              1A16
DS1                 13AC
DS10                1492
DS100               14BA
DS1000              1A80
DS1001              1B1E
DS101               14C4
DS1010              1BB0
DS1011              1BB6
DS11                149C
DS110               14CE
DS1100              1BBC
DS1101              1C5E
DS111               14D8
DS1110              1D46
DS1110A             1D9A
DS1110B             1DD4
DS1110LSIDE         1E4C
DS1110MEM           1E54
DS1110MEMA          1E7A
DS1110MEM_CUSL      1F3E
DS1110MEM_CUSW      1F20
DS1110MEM_DEC       1EFA
DS1110MEM_INC       1ED4
DS1110MEM_REG       1EAE
DS1110SIDE          1E36
DS1110SIDEEND       1E52
DS1110_REG_D        1E08
DS1110_REG_I        1DFE
DS1111              1F5C
DSEND               1F8E
DSEOF               1F90
DSERR               1F62
DSERREA             1F82
DSERRINS            1F72
DSUB                1B20
DSUBEA              1B7C
DSUBPRNTREG         1B58
END                 1FBE
ENDMSG              20CF
ERRM                221F
ERRMEA              2228
ERRMINS             2227
EXT                 1636
EXTW                164C
HDONE               11EC
HEXOUT              11A6
HHEX                11C0
HNUM                11C8
HSKIP2              11D6
HSKIP3              11EA
HSTEP               11AE
HSTEP2              11CC
HT                  9
HTM                 21F3
INTRO               1FFC
JSR010              177C
JSR111              17AC
JSR111001           17DE
JSRM                22AF
JSRPRINT2           1808
LB                  21F0
LEAM                227F
LF                  A
LSM                 228E
LSRM                2291
MADREG              160E
MODEB               224D
MODEL               2253
MODEW               2250
MOVECONT            13E6
MOVEERRCHECK        147C
MOVEM               2272
MSDONE              142C
MSIZE               13E6
MSIZEB              140E
MSIZEL              1422
MSIZEW              1418
NONINIT             102A
NOPM                226E
NOTH                221D
NOTH2               221E
NOTM                228A
OPENDPTR            2262
OPENPTR             2260
ORM                 2287
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1CFE
PSTEP               108E
PSTEP2              10BE
RCONT               1192
READLN              1136
REST                20B2
ROM                 229C
RORM                229F
RPAUSE              119A
RSTEP               114A
RTSM                22B3
SDONE               1234
SIZE                11EE
SIZEB               1216
SIZEL               122A
SIZEW               1220
SM1                 21F5
SM2                 21F7
SM3                 21FA
SM4                 21FE
SM5                 2203
SM6                 2209
SM7                 2210
SRET                1236
START               1000
STARTER             0
SUBM                227B
TESTM               2218
VAL0                225C
VALA                2256
VALD                2258
VALN                225A
VALQ                225E
VERR1               10E8
VERR1M              211C
VERR2               1102
VERR2M              2156
VERR3               111C
VERR3M              219C
VINPUT              10DE
