00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 5:33:54 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 00001FCE             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 00002056             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 000021AF             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 0000206D             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 000021AF             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 000020EE            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 0E9A                109          BRA     END
000010F8                           110  
000010F8  43F9 00002128            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 0E8A                114          BRA     END
00001108                           115  
00001108  43F9 0000214E            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 0E7A                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  103C 000B                124          MOVE.B  #11,D0              *Clear screen for fun
0000111C  323C FF00                125          MOVE.W  #$FF00,D1
00001120  4E4F                     126          TRAP    #15
00001122  103C 000E                127          MOVE.B  #14,D0
00001126                           128          
00001126  244B                     129          MOVE.L  A3,A2               *Set current address to start address
00001128  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112C                           131  
0000112C                           132  RSTEP                               *RSTEP: 
0000112C  381A                     133          MOVE.W  (A2)+,D4
0000112E  340A                     134          MOVE.W  A2,D2
00001130  5542                     135          SUBQ.W  #2,D2
00001132                           136          
00001132  48E7 0400                137          MOVEM.L D5,-(SP)
00001136  1A3C 0000                138          MOVE.B  #0,D5
0000113A  4EB9 00001188            139          JSR     HEXOUT              *Run printing operation for HEX address
00001140  4CDF 0020                140          MOVEM.L (SP)+,D5
00001144                           141          
00001144  43F9 00002189            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114A  103C 000E                143          MOVE.B  #14,D0
0000114E  4E4F                     144          TRAP    #15
00001150                           145          
00001150  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001154  4EB9 0000137A            147          JSR     DISASM              *Run disassembly for current machine code
0000115A  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
0000115E                           149          
0000115E  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001160  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001164  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
00001168                           153          
00001168  43F9 00002182            154          LEA     LB,A1       *Print line break
0000116E  103C 000E                155          MOVE.B  #14,D0      
00001172  4E4F                     156          TRAP    #15
00001174                           157          
00001174                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001174  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001176  6D00 0DEA                160          BLT     DSEOF       *End loop if so
0000117A  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117C                           162          
0000117C                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117C  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001180  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001184  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001186  60EC                     167          BRA     RCONT       *Continue with READLN loop
00001188                           168  
00001188                           169  *--------------------------------------------------------------------------------------------------
00001188                           170  
00001188                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
00001188  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118C  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001190                           174          
00001190                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001190  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001192  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001194  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119A  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
0000119E  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A2                           181          
000011A2                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A2  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A6  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AA                           185  
000011AA                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AA  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011AE                           188  
000011AE                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011AE  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B0                           191          
000011B0  B205                     192          CMP.B   D5,D1
000011B2  6700 0004                193          BEQ     HSKIP2
000011B6                           194          
000011B6  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011B8  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BC  6700 0010                197          BEQ     HDONE       *End loop if done
000011C0                           198          
000011C0  B23C 0030                199          CMP.B   #48,D1
000011C4  6700 0006                200          BEQ     HSKIP3
000011C8                           201          
000011C8  1A3C 0000                202          MOVE.B  #0,D5
000011CC                           203          
000011CC  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011CE                           205          
000011CE  4E75                     206  HDONE   RTS
000011D0                           207  
000011D0                           208  
000011D0                           209  *--------------------------------------------------------------------------------------------------
000011D0                           210  
000011D0  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D4  BA3C 0000                212          CMP.B   #%00,D5
000011D8  6700 001E                213          BEQ     SIZEB
000011DC  BA3C 0001                214          CMP.B   #%01,D5
000011E0  6700 0020                215          BEQ     SIZEW
000011E4  BA3C 0002                216          CMP.B   #%10,D5
000011E8  6700 0022                217          BEQ     SIZEL
000011EC  BA3C 0003                218          CMP.B   #%11,D5
000011F0  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F4  6000 0022                220          BRA     SRET
000011F8                           221          
000011F8  43F9 000021DF            222  SIZEB   LEA     MODEB,A1
000011FE  6000 0016                223          BRA     SDONE
00001202                           224  
00001202  43F9 000021E2            225  SIZEW   LEA     MODEW,A1
00001208  6000 000C                226          BRA     SDONE
0000120C                           227  
0000120C  43F9 000021E5            228  SIZEL   LEA     MODEL,A1
00001212  6000 0002                229          BRA     SDONE
00001216                           230  
00001216  4E4F                     231  SDONE   TRAP    #15
00001218                           232  
00001218  4E75                     233  SRET    RTS
0000121A                           234  
0000121A                           235  *-----------------------------------------------------------------------------------
0000121A                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121A                           237  *uses d1, d0, and a1
0000121A                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121A                           239  *uses d1, d0, and a1
0000121A                           240  ADDRMODEALL
0000121A                           241  *comparisons
0000121A  B67C 0000                242  AM000   CMP     #%000,D3
0000121E  6600 001A                243          BNE     AM001
00001222  43F9 000021EA            244          LEA     VALD,A1
00001228  4E4F                     245          TRAP    #15
0000122A  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122C  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001230  4E4F                     248          TRAP    #15         *printing register number
00001232  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001236  6000 013C                250          BRA     AMEND
0000123A                           251  
0000123A                           252          
0000123A  B67C 0001                253  AM001   CMP     #%001,D3
0000123E  6600 0022                254          BNE     AM010
00001242  BA7C 0000                255          CMP     #00,D5
00001246  6700 0CEC                256          BEQ     DSERR
0000124A  43F9 000021E8            257          LEA     VALA,A1
00001250  4E4F                     258          TRAP    #15
00001252  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001254  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001258  4E4F                     261          TRAP    #15         *printing register number
0000125A  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
0000125E  6000 0114                263          BRA     AMEND
00001262                           264  
00001262  B67C 0002                265  AM010   CMP     #%010,D3
00001266  6600 002A                266          BNE     AM011
0000126A  43F9 000021F2            267          LEA     OPENPTR,A1
00001270  4E4F                     268          TRAP    #15
00001272  43F9 000021E8            269          LEA     VALA,A1
00001278  4E4F                     270          TRAP    #15
0000127A  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127C  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001280  4E4F                     273          TRAP    #15         *printing register number
00001282  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001286  43F9 000021F7            275          LEA     CLOSEPTR,A1
0000128C  4E4F                     276          TRAP    #15
0000128E  6000 00E4                277          BRA     AMEND
00001292                           278  
00001292  B67C 0003                279  AM011   CMP     #%011,D3
00001296  6600 002A                280          BNE     AM100
0000129A  43F9 000021F2            281          LEA     OPENPTR,A1
000012A0  4E4F                     282          TRAP    #15
000012A2  43F9 000021E8            283          LEA     VALA,A1
000012A8  4E4F                     284          TRAP    #15
000012AA  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AC  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B0  4E4F                     287          TRAP    #15         *printing register number
000012B2  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B6  43F9 000021F9            289          LEA     CLOSEIPTR,A1
000012BC  4E4F                     290          TRAP    #15
000012BE  6000 00B4                291          BRA     AMEND
000012C2                           292  
000012C2  B67C 0004                293  AM100   CMP     #%100,D3
000012C6  6600 002A                294          BNE     AM111
000012CA  43F9 000021F4            295          LEA     OPENDPTR,A1
000012D0  4E4F                     296          TRAP    #15
000012D2  43F9 000021E8            297          LEA     VALA,A1
000012D8  4E4F                     298          TRAP    #15
000012DA  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DC  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E0  4E4F                     301          TRAP    #15         *printing register number
000012E2  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E6  43F9 000021F7            303          LEA     CLOSEPTR,A1
000012EC  4E4F                     304          TRAP    #15
000012EE  6000 0084                305          BRA     AMEND
000012F2                           306  
000012F2  B67C 0007                307  AM111   CMP     #%111,D3
000012F6  6600 0C3C                308          BNE     DSERR
000012FA  BC7C 0000                309          CMP     #%000,D6
000012FE  6600 0020                310          BNE     AM111001
00001302  43F9 000021FE            311          LEA     DOLLAR,A1
00001308  4E4F                     312          TRAP    #15
0000130A  341A                     313          MOVE.W  (A2)+,D2
0000130C  48E7 0400                314          MOVEM.L D5,-(SP)    
00001310  1A3C 0030                315          MOVE.B  #48,D5
00001314  4EB8 1188                316          JSR     HEXOUT
00001318  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131C  6000 0056                318          BRA     AMEND
00001320                           319          
00001320                           320  AM111001
00001320  BC7C 0001                321          CMP     #%001,D6
00001324  6600 0020                322          BNE     AM111100
00001328  43F9 000021FE            323          LEA     DOLLAR,A1
0000132E  4E4F                     324          TRAP    #15
00001330  241A                     325          MOVE.L  (A2)+,D2
00001332  48E7 0400                326          MOVEM.L D5,-(SP)
00001336  1A3C 0030                327          MOVE.B  #48,D5
0000133A  4EB8 1188                328          JSR     HEXOUT
0000133E  4CDF 0020                329          MOVEM.L (SP)+,D5
00001342  6000 0030                330          BRA     AMEND
00001346                           331          
00001346                           332  AM111100
00001346  BC7C 0004                333          CMP     #%100,D6
0000134A  6600 0BE8                334          BNE     DSERR
0000134E  43F9 000021EC            335          LEA     VALN,A1
00001354  4E4F                     336          TRAP    #15
00001356  341A                     337          MOVE.W  (A2)+,D2
00001358  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135C  103C 0003                339          MOVE.B  #3,D0
00001360  3202                     340          MOVE.W  D2,D1
00001362  4E4F                     341          TRAP    #15
00001364  103C 000E                342          MOVE.B  #14,D0
00001368  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136C  323C 0000                344          MOVE.W  #0,D1
00001370  6000 0002                345          BRA     AMEND
00001374                           346          
00001374  103C 000E                347  AMEND   MOVE.B  #14,D0
00001378  4E75                     348          RTS
0000137A                           349  
0000137A                           350  *--------------------------------------------------------------------------------------------------
0000137A                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137A                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137A                           353  
0000137A                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137A                           355  
0000137A                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137A                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137A                           358  
0000137A                           359  DISASM                      *DISASM: Disassemble a machine code
0000137A  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137C  6500 0010                361          BCS     DS1
00001380  6000 0002                362          BRA     DS0
00001384                           363  
00001384                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001384                           365  
00001384                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001384  E34C                     367          LSL.W   #1,D4       
00001386  6500 00E2                368          BCS     DS01
0000138A  6000 000C                369          BRA     DS00
0000138E                           370  
0000138E                           371  DS1                         *DS1: Tier 1 binary search for 1 side
0000138E  E34C                     372          LSL.W   #1,D4       
00001390  6500 00EC                373          BCS     DS11
00001394  6000 00DE                374          BRA     DS10
00001398                           375  
00001398                           376  DS00                        *DS00: Disassembly processing for 00 prefix
00001398  E55C                     377          ROL.W   #2,D4       
0000139A  1A04                     378          MOVE.B  D4,D5
0000139C  0205 0003                379          ANDI.B  #%11,D5
000013A0  6000 0002                380          BRA     DMOVE2
000013A4                           381  
000013A4                           382   
000013A4                           383  
000013A4                           384  
000013A4                           385          
000013A4                           386  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
000013A4  4E71                     387  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
000013A6                           388          *size in d5 from above processing
000013A6  43F9 00002204            389          LEA     MOVEM,A1
000013AC  4E4F                     390          TRAP    #15
000013AE                           391                  
000013AE                           392          *dest reg to d7
000013AE  E75C                     393          ROL.W   #3,D4
000013B0  1E04                     394          MOVE.B  D4,D7
000013B2  CE3C 0007                395          AND.B   #%111,D7
000013B6                           396          
000013B6                           397          *dest mode to d3: An means MOVEA
000013B6  E75C                     398          ROL.W   #3,D4
000013B8  1604                     399          MOVE.B  D4,D3
000013BA  C63C 0007                400          AND.B   #%111,D3
000013BE  3C43                     401          MOVE.W  D3,A6
000013C0                           402          
000013C0  B67C 0001                403          CMP     #%001,D3
000013C4  6700 0082                404          BEQ     DMOVEA
000013C8                           405  MOVECONT
000013C8                           406  *printing size then first addressing moode, then comma
000013C8                           407  *size is different for move
000013C8  103C 000E                408  MSIZE   MOVE.B  #14,D0
000013CC  BA3C 0001                409          CMP.B   #%01,D5
000013D0  6700 001E                410          BEQ     MSIZEB
000013D4  BA3C 0003                411          CMP.B   #%11,D5
000013D8  6700 0020                412          BEQ     MSIZEW
000013DC  BA3C 0002                413          CMP.B   #%10,D5
000013E0  6700 0022                414          BEQ     MSIZEL
000013E4  BA3C 0003                415          CMP.B   #%11,D5
000013E8  6700 0010                416          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000013EC  6000 0B46                417          BRA     DSERR
000013F0                           418          
000013F0  43F9 000021DF            419  MSIZEB  LEA     MODEB,A1
000013F6  6000 0016                420          BRA     MSDONE
000013FA                           421  
000013FA  43F9 000021E2            422  MSIZEW  LEA     MODEW,A1
00001400  6000 000C                423          BRA     MSDONE
00001404                           424  
00001404  43F9 000021E5            425  MSIZEL  LEA     MODEL,A1
0000140A  6000 0002                426          BRA     MSDONE
0000140E                           427  
0000140E  4E4F                     428  MSDONE  TRAP    #15
00001410                           429  
00001410  43F9 000021A2            430          LEA     SM7,A1
00001416  4E4F                     431          TRAP    #15
00001418                           432          
00001418                           433          *source mode to d3
00001418  E75C                     434          ROL.W   #3,D4
0000141A  1604                     435          MOVE.B  D4,D3
0000141C  C63C 0007                436          AND.B   #%111,D3
00001420                           437          
00001420                           438          *source reg to d6
00001420  E75C                     439          ROL.W   #3,D4
00001422  1C04                     440          MOVE.B  D4,D6
00001424  CC3C 0007                441          AND.B   #%111,D6
00001428                           442          
00001428  4EB8 121A                443          JSR     ADDRMODEALL
0000142C  B67C 0001                444          CMP     #%001,D3
00001430  6700 002C                445          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
00001434  43F9 000021FC            446          LEA     COMMA,A1
0000143A  4E4F                     447          TRAP    #15
0000143C  1C07                     448          MOVE.B  D7,D6
0000143E  360E                     449          MOVE.W  A6,D3
00001440  4EB8 121A                450          JSR     ADDRMODEALL
00001444  6000 0B1A                451          BRA     DSEND
00001448                           452  
00001448  4E71                     453  DMOVEA  NOP
0000144A  BA7C 0001                454          CMP     #%01,D5     *if size is byte, err
0000144E  6700 0AE4                455          BEQ     DSERR
00001452  43F9 000021E8            456          LEA     VALA,A1        *else, print A and return
00001458  4E4F                     457          TRAP    #15
0000145A  6000 FF6C                458          BRA     MOVECONT
0000145E                           459  
0000145E                           460  MOVEERRCHECK
0000145E  BA7C 0001                461          CMP     #%01,D5
00001462  6700 0AD0                462          BEQ     DSERR
00001466  6000 0AF8                463          BRA     DSEND
0000146A                           464  
0000146A                           465          
0000146A                           466  
0000146A                           467  *DS Tier 2 ----------------------------------------------------------------------------------------
0000146A                           468  
0000146A                           469  DS01                        *DS01: Tier 2 binary search for 01 side
0000146A  E34C                     470          LSL.W   #1,D4
0000146C  6500 0024                471          BCS     DS011
00001470  6000 0016                472          BRA     DS010
00001474                           473  
00001474                           474  DS10                        *DS10: Tier 2 binary search for 10 side
00001474  E34C                     475          LSL.W   #1,D4
00001476  6500 002E                476          BCS     DS101
0000147A  6000 0020                477          BRA     DS100
0000147E                           478  
0000147E                           479  DS11                        *DS11: Tier 2 binary search for 11 side
0000147E  E34C                     480          LSL.W   #1,D4
00001480  6500 0038                481          BCS     DS111
00001484  6000 002A                482          BRA     DS110
00001488                           483  
00001488                           484  *DS Tier 3 ----------------------------------------------------------------------------------------
00001488                           485  
00001488                           486  DS010                       *DS010: Tier 3 binary search for 010 side
00001488  E34C                     487          LSL.W   #1,D4
0000148A  6500 037E                488          BCS     DS0101
0000148E  6000 0034                489          BRA     DS0100
00001492                           490  
00001492                           491  DS011                       *DS011: Tier 3 binary search for 011 side
00001492  E34C                     492          LSL.W   #1,D4
00001494  6500 0562                493          BCS     DS0111
00001498  6000 03EA                494          BRA     DS0110
0000149C                           495  
0000149C                           496  DS100                       *DS100: Tier 3 binary search for 100 side
0000149C  E34C                     497          LSL.W   #1,D4
0000149E  6500 0650                498          BCS     DS1001
000014A2  6000 05BE                499          BRA     DS1000
000014A6                           500  
000014A6                           501  DS101                       *DS101: Tier 3 binary search for 101 side
000014A6  E34C                     502          LSL.W   #1,D4
000014A8  6500 06DE                503          BCS     DS1011
000014AC  6000 06D4                504          BRA     DS1010
000014B0                           505  
000014B0                           506  DS110                       *DS110: Tier 3 binary search for 110 side
000014B0  E34C                     507          LSL.W   #1,D4
000014B2  6500 077C                508          BCS     DS1101
000014B6  6000 06D6                509          BRA     DS1100
000014BA                           510  
000014BA                           511  DS111                       *DS111: Tier 3 binary search for 111 side
000014BA  E34C                     512          LSL.W   #1,D4
000014BC  6500 0A70                513          BCS     DS1111
000014C0  6000 0856                514          BRA     DS1110
000014C4                           515  
000014C4                           516  *DS Tier 4 ----------------------------------------------------------------------------------------
000014C4                           517  
000014C4                           518  DS0100                      *DS0100: Processing for 0100 prefix
000014C4  0C44 E710                519          CMPI.W  #%1110011100010000,D4
000014C8  6700 0034                520          BEQ     DNOP
000014CC  0C44 E750                521          CMPI.W  #%1110011101010000,D4
000014D0  6700 021E                522          BEQ     DRTS
000014D4                           523          
000014D4  3404                     524          MOVE.W  D4,D2
000014D6  0242 1C00                525          ANDI.W  #%0001110000000000,D2
000014DA  0C42 1C00                526          CMPI.W  #%0001110000000000,D2
000014DE  6700 021C                527          BEQ     DLEA
000014E2                           528          
000014E2  E95C                     529          ROL.W   #4,D4
000014E4  1404                     530          MOVE.B  D4,D2
000014E6  0202 000F                531          ANDI.B  #%1111,D2
000014EA                           532          
000014EA  B43C 000E                533          CMP.B   #%1110,D2
000014EE  6700 014A                534          BEQ     DJSR
000014F2                           535          
000014F2  B43C 0006                536          CMP.B   #%0110,D2
000014F6  6700 0012                537          BEQ     DNOT
000014FA                           538          
000014FA  6000 0A48                539          BRA     DSERRINS
000014FE                           540  
000014FE  43F9 00002200            541  DNOP    LEA     NOPM,A1
00001504  4E4F                     542          TRAP    #15
00001506  6000 0A58                543          BRA     DSEND
0000150A                           544          
0000150A  E55C                     545  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
0000150C  1A04                     546          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000150E  0205 0003                547          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001512                           548  
00001512  BA3C 0000                549          CMP.B   #%00,D5         ; compare with byte size
00001516  6700 0016                550          BEQ     DNOTB
0000151A  BA3C 0001                551          CMP.B   #%01,D5         ; compare with word size
0000151E  6700 0022                552          BEQ     DNOTW
00001522  BA3C 0002                553          CMP.B   #%10,D5         ; compare with long size
00001526  6700 002E                554          BEQ     DNOTL
0000152A                           555          
0000152A  6000 0A34                556          BRA     DSEND           ; branch to DSEND in case of invalid code
0000152E                           557  
0000152E  43F9 0000221C            558  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
00001534  4E4F                     559          TRAP    #15             ; print NOTM string
00001536  43F9 000021DF            560          LEA     MODEB,A1        ; load effective address of MODEB string
0000153C  4E4F                     561          TRAP    #15             ; print MODEB string
0000153E  6000 002A                562          BRA     DNOTA           ; branch to addressing mode parsing
00001542                           563  
00001542  43F9 0000221C            564  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001548  4E4F                     565          TRAP    #15             ; print NOTM string
0000154A  43F9 000021E2            566          LEA     MODEW,A1        ; load effective address of MODEW string
00001550  4E4F                     567          TRAP    #15             ; print MODEW string
00001552  6000 0016                568          BRA     DNOTA           ; branch to addressing mode parsing
00001556                           569  
00001556  43F9 0000221C            570  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
0000155C  4E4F                     571          TRAP    #15             ; print NOTM string
0000155E  43F9 000021E5            572          LEA     MODEL,A1        ; load effective address of MODEL string
00001564  4E4F                     573          TRAP    #15             ; print MODEL string
00001566  6000 0002                574          BRA     DNOTA           ; branch to addressing mode parsing
0000156A                           575  
0000156A  ED5C                     576  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
0000156C  1204                     577          MOVE.B  D4,D1           ; move the byte in D4 to D1
0000156E  0201 003F                578          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
00001572                           579  
00001572                           580          ; Now process addressing mode and register based on the value in D1
00001572                           581  
00001572  1A01                     582          MOVE.B  D1,D5           ; Move the byte in D1 to D5
00001574  0205 0007                583          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001578  6700 0026                584          BEQ     DREG            ; If it is direct register mode
0000157C  BA3C 0002                585          CMP.B   #%010,D5        ; Compare with An
00001580  6700 0036                586          BEQ     ADREG
00001584  BA3C 0003                587          CMP.B   #%011,D5        ; Compare with (An)+
00001588  6700 0046                588          BEQ     ADREGP
0000158C  BA3C 0004                589          CMP.B   #%100,D5        ; Compare with -(An)
00001590  6700 005E                590          BEQ     MADREG
00001594  BA3C 0007                591          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001598  6700 007E                592          BEQ     EXT
0000159C                           593              
0000159C  6000 09C2                594          BRA     DSEND
000015A0                           595  
000015A0  1C01                     596  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
000015A2  0206 0007                597          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
000015A6  DC39 000021EA            598          ADD.B   VALD,D6         ; Convert register number to ASCII
000015AC  43F9 000021EA            599          LEA     VALD,A1         ; Load effective address of Dn
000015B2  4E4F                     600          TRAP    #15             ; Print Dn
000015B4  6000 09AA                601          BRA     DSEND
000015B8                           602  
000015B8  1C01                     603  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
000015BA  0206 0007                604          ANDI.B  #%111,D6
000015BE  DC39 000021E8            605          ADD.B   VALA,D6
000015C4  43F9 000021E8            606          LEA     VALA,A1
000015CA  4E4F                     607          TRAP    #15
000015CC  6000 0992                608          BRA     DSEND
000015D0                           609  
000015D0  1C01                     610  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
000015D2  0206 0007                611          ANDI.B  #%111,D6
000015D6  DC39 000021E8            612          ADD.B   VALA,D6
000015DC  43F9 000021E8            613          LEA     VALA,A1
000015E2  4E4F                     614          TRAP    #15
000015E4  43F9 000021F9            615          LEA     CLOSEIPTR,A1    ; Load effective address of )+
000015EA  4E4F                     616          TRAP    #15             ; Print )+
000015EC  6000 0972                617          BRA     DSEND
000015F0                           618  
000015F0  1C01                     619  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
000015F2  0206 0007                620          ANDI.B  #%111,D6
000015F6  DC39 000021E8            621          ADD.B   VALA,D6
000015FC  43F9 000021F4            622          LEA     OPENDPTR,A1     ; Load effective address of -(
00001602  4E4F                     623          TRAP    #15             ; Print -(
00001604  43F9 000021E8            624          LEA     VALA,A1
0000160A  4E4F                     625          TRAP    #15
0000160C  43F9 000021F7            626          LEA     CLOSEPTR,A1     ; Load effective address of )
00001612  4E4F                     627          TRAP    #15             ; Print )
00001614  6000 094A                628          BRA     DSEND
00001618                           629  
00001618  1C01                     630  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
0000161A  0206 0001                631          ANDI.B  #%1,D6
0000161E  6700 000E                632          BEQ     EXTW
00001622  43F9 000021EC            633          LEA     VALN,A1         ; Load effective address of #
00001628  4E4F                     634          TRAP    #15             ; Print #
0000162A  6000 0934                635          BRA     DSEND
0000162E                           636  
0000162E  43F9 000021EE            637  EXTW    LEA     VAL0,A1         ; Load effective address of 0
00001634  4E4F                     638          TRAP    #15             ; Print 0
00001636  6000 0928                639          BRA     DSEND
0000163A                           640  
0000163A                           641          
0000163A  E55C                     642  DJSR    ROL.W   #2,D4
0000163C  1404                     643          MOVE.B  D4,D2
0000163E  0202 0007                644          ANDI.B  #%111,D2
00001642  0C02 0002                645          CMPI.B  #%10,D2
00001646  6600 08EC                646          BNE     DSERR
0000164A                           647          
0000164A  43F9 00002241            648          LEA     JSRM,A1
00001650  4E4F                     649          TRAP    #15
00001652                           650          
00001652  43F9 000021A2            651          LEA     SM7,A1
00001658  4E4F                     652          TRAP    #15
0000165A                           653  
0000165A  E75C                     654          ROL.W   #3,D4       * [D2] address mode
0000165C  1404                     655          MOVE.B  D4,D2
0000165E  0202 0007                656          ANDI.B  #%111,D2
00001662                           657          
00001662  E75C                     658          ROL.W   #3,D4       * [D1] address register
00001664  1204                     659          MOVE.B  D4,D1
00001666  0201 0007                660          ANDI.B  #%111,D1
0000166A                           661          
0000166A  0C02 0002                662          CMPI.B  #%010,D2
0000166E  6700 001E                663          BEQ     DJSR_REG
00001672                           664          
00001672  0C02 0007                665          CMPI.B  #%111,D2
00001676  6600 08BC                666          BNE     DSERR
0000167A                           667          
0000167A  0C01 0000                668          CMPI.B  #%000,D1
0000167E  6700 0034                669          BEQ     DJSR_CUSW
00001682                           670          
00001682  0C01 0001                671          CMPI.B  #%001,D1
00001686  6700 004A                672          BEQ     DJSR_CUSL
0000168A                           673          
0000168A  6000 08D4                674          BRA     DSEND
0000168E                           675          
0000168E                           676          
0000168E                           677          
0000168E                           678  DJSR_REG        
0000168E  43F9 000021F2            679          LEA     OPENPTR,A1
00001694  4E4F                     680          TRAP    #15
00001696                           681          
00001696  43F9 000021E8            682          LEA     VALA,A1
0000169C  4E4F                     683          TRAP    #15
0000169E                           684          
0000169E  103C 0003                685          MOVE.B  #3,D0
000016A2  4E4F                     686          TRAP    #15
000016A4  103C 000E                687          MOVE.B  #14,D0
000016A8                           688          
000016A8  43F9 000021F7            689          LEA     CLOSEPTR,A1
000016AE  4E4F                     690          TRAP    #15
000016B0                           691          
000016B0  6000 08AE                692          BRA     DSEND
000016B4                           693  
000016B4                           694          
000016B4                           695  DJSR_CUSW
000016B4  43F9 000021FE            696          LEA     DOLLAR,A1
000016BA  4E4F                     697          TRAP    #15
000016BC  341A                     698          MOVE.W  (A2)+,D2
000016BE  48E7 0400                699          MOVEM.L D5,-(SP)
000016C2  1A3C 0030                700          MOVE.B  #48,D5
000016C6  4EB8 1188                701          JSR     HEXOUT
000016CA  4CDF 0020                702          MOVEM.L (SP)+,D5
000016CE  6000 0890                703          BRA     DSEND
000016D2                           704  
000016D2                           705  DJSR_CUSL
000016D2  43F9 000021FE            706          LEA     DOLLAR,A1
000016D8  4E4F                     707          TRAP    #15
000016DA  241A                     708          MOVE.L  (A2)+,D2
000016DC  48E7 0400                709          MOVEM.L D5,-(SP)
000016E0  1A3C 0030                710          MOVE.B  #48,D5
000016E4  4EB8 1188                711          JSR     HEXOUT
000016E8  4CDF 0020                712          MOVEM.L (SP)+,D5
000016EC  6000 0872                713          BRA     DSEND
000016F0                           714          
000016F0  43F9 00002245            715  DRTS    LEA     RTSM,A1
000016F6  4E4F                     716          TRAP    #15
000016F8  6000 0866                717          BRA     DSEND
000016FC                           718          
000016FC                           719          
000016FC                           720  DLEA    *printing
000016FC  43F9 00002211            721          LEA     LEAM,A1
00001702  4E4F                     722          TRAP    #15
00001704  43F9 000021A2            723          LEA     SM7,A1
0000170A  4E4F                     724          TRAP    #15
0000170C                           725          
0000170C                           726          *shifting out 111
0000170C  E75C                     727          ROL.W   #3,D4
0000170E                           728          
0000170E                           729          *getting destination register
0000170E  E75C                     730          ROL.W   #3,D4
00001710  1404                     731          MOVE.B  D4,D2
00001712  0202 0007                732          ANDI.B  #%111,D2
00001716                           733          
00001716                           734          *getting ea mode
00001716  E75C                     735          ROL.W   #3,D4
00001718  1604                     736          MOVE.B  D4,D3
0000171A  0203 0007                737          ANDI.B  #%111,D3
0000171E                           738          
0000171E  B63C 0002                739          CMP.B   #%010,D3
00001722  6700 000E                740          BEQ     DLEAP
00001726                           741          
00001726  B63C 0007                742          CMP.B   #%111,D3
0000172A  6700 0006                743          BEQ     DLEAP
0000172E                           744          
0000172E  6000 0824                745          BRA     DSERREA
00001732                           746          
00001732                           747          *getting ea reg
00001732  E75C                     748  DLEAP   ROL.W   #3,D4
00001734  1C04                     749          MOVE.B  D4,D6
00001736  0206 0007                750          ANDI.B  #%111,D6
0000173A                           751          
0000173A                           752          *printing
0000173A  4EB8 121A                753          JSR     ADDRMODEALL
0000173E                           754          
0000173E  43F9 000021FC            755          LEA     COMMA,A1
00001744  4E4F                     756          TRAP    #15
00001746  43F9 000021E8            757          LEA     VALA,A1
0000174C  4E4F                     758          TRAP    #15
0000174E  103C 0003                759          MOVE.B  #3,D0
00001752  1202                     760          MOVE.B  D2,D1
00001754  4E4F                     761          TRAP    #15
00001756  103C 000E                762          MOVE.B  #14,D0
0000175A                           763          
0000175A  6000 0804                764          BRA DSEND
0000175E                           765          
0000175E                           766  JSR010
0000175E  B63C 0002                767          CMP.B   #%010,D3
00001762  6600 002A                768          BNE     JSR111
00001766  43F9 000021F2            769          LEA     OPENPTR,A1
0000176C  4E4F                     770          TRAP    #15
0000176E  43F9 000021E8            771          LEA     VALA,A1
00001774  4E4F                     772          TRAP    #15
00001776  103C 0003                773          MOVE.B  #3,D0
0000177A  1206                     774          MOVE.B  D6,D1
0000177C  4E4F                     775          TRAP    #15
0000177E  103C 000E                776          MOVE.B  #14,D0
00001782  43F9 000021F7            777          LEA     CLOSEPTR,A1
00001788  4E4F                     778          TRAP    #15
0000178A  6000 005E                779          BRA     JSRPRINT2
0000178E                           780  JSR111
0000178E  B63C 0007                781          CMP.B   #%111,D3
00001792  6600 07A0                782          BNE     DSERR
00001796  BC3C 0000                783          CMP.B   #%000,D6
0000179A  6600 0024                784          BNE     JSR111001
0000179E  43F9 000021FE            785          LEA     DOLLAR,A1
000017A4  4E4F                     786          TRAP    #15
000017A6  341A                     787          MOVE.W  (A2)+,D2
000017A8  48E7 0400                788          MOVEM.L D5,-(SP)    
000017AC  1A3C 0030                789          MOVE.B  #48,D5
000017B0  4EB8 1188                790          JSR     HEXOUT
000017B4  4CDF 0020                791          MOVEM.L (SP)+,D5
000017B8  103C 000E                792          MOVE.B  #14,D0
000017BC  6000 002C                793          BRA     JSRPRINT2
000017C0                           794          
000017C0                           795  JSR111001
000017C0  BC3C 0001                796          CMP.B   #%001,D6
000017C4  6600 076E                797          BNE     DSERR
000017C8  43F9 000021FE            798          LEA     DOLLAR,A1
000017CE  4E4F                     799          TRAP    #15
000017D0  241A                     800          MOVE.L  (A2)+,D2
000017D2  48E7 0400                801          MOVEM.L D5,-(SP)
000017D6  1A3C 0030                802          MOVE.B  #48,D5
000017DA  4EB8 1188                803          JSR     HEXOUT
000017DE  4CDF 0020                804          MOVEM.L (SP)+,D5
000017E2  103C 000E                805          MOVE.B  #14,D0
000017E6  6000 0002                806          BRA     JSRPRINT2
000017EA                           807          
000017EA                           808  JSRPRINT2
000017EA  43F9 000021FC            809          LEA     COMMA,A1
000017F0  4E4F                     810          TRAP    #15
000017F2  43F9 000021E8            811          LEA     VALA,A1
000017F8  4E4F                     812          TRAP    #15
000017FA  103C 0003                813          MOVE.B  #3,D0
000017FE  3207                     814          MOVE.W  D7,D1
00001800  4E4F                     815          TRAP    #15
00001802  103C 000E                816          MOVE.B  #14,D0
00001806                           817          
00001806  6000 0758                818          BRA     DSEND
0000180A                           819          
0000180A                           820  
0000180A                           821  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000180A                           822  
0000180A  4E71                     823  DS0101  NOP
0000180C                           824          
0000180C  4E71                     825  DADDQ   NOP
0000180E  43F9 00002209            826          LEA     ADDM,A1
00001814  4E4F                     827          TRAP    #15
00001816  43F9 000021F0            828          LEA     VALQ,A1
0000181C  4E4F                     829          TRAP    #15
0000181E                           830          
0000181E                           831          *parsing data to d1
0000181E  E75C                     832          ROL.W   #3,D4
00001820  1204                     833          MOVE.B  D4,D1
00001822  C23C 0007                834          AND.B   #%111,D1
00001826                           835          
00001826                           836          *ensuring next bit is 0
00001826  E35C                     837          ROL.W   #1,D4
00001828  1A04                     838          MOVE.B  D4,D5
0000182A  CA3C 0001                839          AND.B   #%1,D5
0000182E  BA7C 0000                840          CMP     #0,D5
00001832  6600 0700                841          BNE     DSERR
00001836                           842          
00001836                           843          *parsing and printing size
00001836  E55C                     844          ROL.W   #2,D4
00001838  1A04                     845          MOVE.B  D4,D5
0000183A  CA3C 0003                846          AND.B   #%11,D5
0000183E  4EB8 11D0                847          JSR     SIZE
00001842  43F9 000021A2            848          LEA     SM7,A1
00001848  4E4F                     849          TRAP    #15
0000184A                           850          
0000184A                           851          *parsing effective address information
0000184A                           852          *mode:
0000184A  E75C                     853          ROL.W   #3,D4
0000184C  1604                     854          MOVE.B  D4,D3
0000184E  C63C 0007                855          AND.B   #%111,D3
00001852                           856          
00001852                           857          *register:
00001852  E71C                     858          ROL.B   #3,D4
00001854  1C04                     859          MOVE.B  D4,D6
00001856  CC3C 0007                860          AND.B   #%111,D6
0000185A                           861          
0000185A                           862          *printing data
0000185A  43F9 000021EC            863          LEA     VALN,A1
00001860  4E4F                     864          TRAP    #15
00001862  103C 0003                865          MOVE.B  #3,D0
00001866  4E4F                     866          TRAP    #15
00001868  103C 000E                867          MOVE.B  #14,D0
0000186C  43F9 000021FC            868          LEA     COMMA,A1
00001872  4E4F                     869          TRAP    #15
00001874                           870          
00001874  B67C 0004                871          CMP     #%100,D3
00001878  6700 06BA                872          BEQ     DSERR
0000187C  4EB8 121A                873          JSR     ADDRMODEALL
00001880                           874          
00001880  6000 06DE                875          BRA     DSEND
00001884                           876          
00001884                           877  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001884                           878  
00001884                           879  DS0110  
00001884  E95C                     880          ROL.W   #4,D4   *Get next 4 bits
00001886  1404                     881          MOVE.B  D4,D2   *Copy to D2
00001888  0202 000F                882          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
0000188C                           883          
0000188C  B43C 0000                884          CMP.B   #%0000,D2   *BRA
00001890  6700 001E                885          BEQ     DBRA
00001894                           886          
00001894  B43C 000E                887          CMP.B   #%1110,D2   *BGT   
00001898  6700 00A2                888          BEQ     DBGT
0000189C                           889          
0000189C  B43C 000F                890          CMP.B   #%1111,D2   *BLE   
000018A0  6700 00D6                891          BEQ     DBLE
000018A4                           892          
000018A4  B43C 0007                893          CMP.B   #%0111,D2   *BEQ   
000018A8  6700 010E                894          BEQ     DBEQ
000018AC                           895          
000018AC  6000 0696                896          BRA     DSERRINS
000018B0                           897          
000018B0  43F9 00002249            898  DBRA    LEA     BRAM,A1
000018B6  4E4F                     899          TRAP    #15
000018B8                           900          
000018B8  43F9 000021A2            901          LEA     SM7,A1
000018BE  4E4F                     902          TRAP    #15
000018C0                           903  
000018C0  E15C                     904          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000018C2  1204                     905          MOVE.B  D4,D1
000018C4  0281 00001100            906          ANDI.L  #$1100,D1
000018CA                           907          
000018CA  0C01 0000                908          CMPI.B  #%00000000,D1
000018CE  6700 0028                909          BEQ     DBRA_16BIT      * Word
000018D2                           910          
000018D2  0C01 00FF                911          CMPI.B  #%11111111,D1
000018D6  6700 0042                912          BEQ     DBRA_32BIT      * Long
000018DA                           913          
000018DA                           914          * 8 Bit Displacement
000018DA  43F9 000021FE            915          LEA     DOLLAR,A1
000018E0  4E4F                     916          TRAP    #15
000018E2                           917          
000018E2  341A                     918          MOVE.W  (A2)+,D2
000018E4  D441                     919          ADD.W   D1,D2
000018E6  5842                     920          ADD.W   #4,D2   *unsure   
000018E8  1A3C 0030                921          MOVE.B  #48,D5
000018EC  4EB8 1188                922          JSR     HEXOUT
000018F0  6000 066E                923          BRA     DSEND
000018F4                           924  
000018F4                           925          *Displacement is put in D1      
000018F4                           926          
000018F4                           927          
000018F4  6000 066A                928          BRA     DSEND
000018F8                           929          
000018F8                           930  DBRA_16BIT
000018F8  43F9 000021FE            931          LEA     DOLLAR,A1
000018FE  4E4F                     932          TRAP    #15
00001900  341A                     933          MOVE.W  (A2)+,D2
00001902  D44A                     934          ADD.W   A2,D2
00001904  5542                     935          SUB.W   #2,D2   *unsure
00001906  48E7 0400                936          MOVEM.L D5,-(SP)    
0000190A  1A3C 0030                937          MOVE.B  #48,D5
0000190E  4EB8 1188                938          JSR     HEXOUT
00001912  4CDF 0020                939          MOVEM.L (SP)+,D5
00001916  6000 0648                940          BRA     DSEND
0000191A                           941  
0000191A                           942  DBRA_32BIT
0000191A  43F9 000021FE            943          LEA     DOLLAR,A1
00001920  4E4F                     944          TRAP    #15
00001922  241A                     945          MOVE.L  (A2)+,D2
00001924  D48A                     946          ADD.L   A2,D2
00001926  5582                     947          SUB.L   #2,D2   *unsure
00001928  48E7 0400                948          MOVEM.L D5,-(SP)
0000192C  1A3C 0030                949          MOVE.B  #48,D5
00001930  4EB8 1188                950          JSR     HEXOUT
00001934  4CDF 0020                951          MOVEM.L (SP)+,D5
00001938  6000 0626                952          BRA     DSEND
0000193C                           953          
0000193C                           954          
0000193C                           955          
0000193C  43F9 00002235            956  DBGT    LEA     BGTM,A1
00001942  4E4F                     957          TRAP    #15
00001944                           958          
00001944  43F9 000021A2            959          LEA     SM7,A1
0000194A  4E4F                     960          TRAP    #15
0000194C                           961          
0000194C  E15C                     962          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000194E  1204                     963          MOVE.B  D4,D1
00001950  0241 00FF                964          ANDI.W  #%0000000011111111,D1
00001954                           965          
00001954  0C01 0000                966          CMPI.B  #%00000000,D1
00001958  679E                     967          BEQ     DBRA_16BIT      * Word
0000195A                           968          
0000195A  0C01 00FF                969          CMPI.B  #%11111111,D1
0000195E  67BA                     970          BEQ     DBRA_32BIT      * Long
00001960                           971          
00001960  43F9 000021FE            972          LEA     DOLLAR,A1
00001966  4E4F                     973          TRAP    #15
00001968                           974      
00001968  340A                     975          MOVE.W  A2,D2
0000196A  D441                     976          ADD.W   D1,D2
0000196C                           977    
0000196C  1A3C 0030                978          MOVE.B  #48,D5
00001970  4EB8 1188                979          JSR     HEXOUT
00001974  6000 05EA                980          BRA     DSEND
00001978                           981  
00001978  43F9 00002239            982  DBLE    LEA     BLEM,A1
0000197E  4E4F                     983          TRAP    #15
00001980                           984          
00001980  43F9 000021A2            985          LEA     SM7,A1
00001986  4E4F                     986          TRAP    #15
00001988                           987          
00001988  E15C                     988          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000198A  1204                     989          MOVE.B  D4,D1
0000198C  0241 00FF                990          ANDI.W  #%0000000011111111,D1
00001990                           991          
00001990  0C01 0000                992          CMPI.B  #%00000000,D1
00001994  6700 FF62                993          BEQ     DBRA_16BIT      * Word
00001998                           994          
00001998  0C01 00FF                995          CMPI.B  #%11111111,D1
0000199C  6700 FF7C                996          BEQ     DBRA_32BIT      * Long
000019A0                           997          
000019A0  43F9 000021FE            998          LEA     DOLLAR,A1
000019A6  4E4F                     999          TRAP    #15
000019A8                          1000          
000019A8  340A                    1001          MOVE.W  A2,D2
000019AA  D441                    1002          ADD.W   D1,D2
000019AC                          1003   
000019AC  1A3C 0030               1004          MOVE.B  #48,D5
000019B0  4EB8 1188               1005          JSR     HEXOUT
000019B4                          1006          
000019B4  6000 05AA               1007          BRA     DSEND
000019B8                          1008  
000019B8  43F9 0000223D           1009  DBEQ    LEA     BEQM,A1
000019BE  4E4F                    1010          TRAP    #15
000019C0                          1011          
000019C0  43F9 000021A2           1012          LEA     SM7,A1
000019C6  4E4F                    1013          TRAP    #15
000019C8                          1014          
000019C8  E15C                    1015          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019CA  1204                    1016          MOVE.B  D4,D1
000019CC  0241 00FF               1017          ANDI.W  #%0000000011111111,D1
000019D0                          1018          
000019D0  0C01 0000               1019          CMPI.B  #%00000000,D1
000019D4  6700 FF22               1020          BEQ     DBRA_16BIT      * Word
000019D8                          1021          
000019D8  0C01 00FF               1022          CMPI.B  #%11111111,D1
000019DC  6700 FF3C               1023          BEQ     DBRA_32BIT      * Long
000019E0                          1024          
000019E0  43F9 000021FE           1025          LEA     DOLLAR,A1
000019E6  4E4F                    1026          TRAP    #15
000019E8                          1027  
000019E8  340A                    1028          MOVE.W  A2,D2
000019EA  D441                    1029          ADD.W   D1,D2
000019EC                          1030   
000019EC  1A3C 0030               1031          MOVE.B  #48,D5
000019F0  4EB8 1188               1032          JSR     HEXOUT
000019F4                          1033          
000019F4  6000 056A               1034          BRA     DSEND
000019F8                          1035  
000019F8                          1036  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000019F8                          1037  
000019F8  4E71                    1038  DS0111  NOP
000019FA                          1039          
000019FA  4E71                    1040  DMOVEQ  NOP
000019FC  43F9 00002204           1041          LEA     MOVEM,A1
00001A02  4E4F                    1042          TRAP    #15
00001A04  43F9 000021F0           1043          LEA     VALQ,A1
00001A0A  4E4F                    1044          TRAP    #15
00001A0C  43F9 000021A2           1045          LEA     SM7,A1
00001A12  4E4F                    1046          TRAP    #15
00001A14                          1047          
00001A14                          1048          *getting register number
00001A14  E75C                    1049          ROL.W   #3,D4
00001A16  1A04                    1050          MOVE.B  D4,D5
00001A18  CA3C 0007               1051          AND.B   #%111,D5
00001A1C                          1052          
00001A1C                          1053          *throwing error if next digit not 0
00001A1C  E35C                    1054          ROL.W   #1,D4
00001A1E  1C04                    1055          MOVE.B  D4,D6
00001A20  CC3C 0001               1056          AND.B   #%1,D6
00001A24  BC3C 0000               1057          CMP.B   #0,D6
00001A28  6600 050A               1058          BNE     DSERR
00001A2C                          1059          
00001A2C                          1060          *getting data and printing information
00001A2C  E15C                    1061          ROL.W   #8,D4
00001A2E  1204                    1062          MOVE.B  D4,D1
00001A30  C23C 00FF               1063          AND.B   #%11111111,D1
00001A34  43F9 000021EC           1064          LEA     VALN,A1
00001A3A  4E4F                    1065          TRAP    #15
00001A3C  103C 0003               1066          MOVE.B  #3,D0
00001A40  4E4F                    1067          TRAP    #15
00001A42  103C 000E               1068          MOVE.B  #14,D0
00001A46  43F9 000021FC           1069          LEA     COMMA,A1
00001A4C  4E4F                    1070          TRAP    #15
00001A4E  43F9 000021EA           1071          LEA     VALD,A1
00001A54  4E4F                    1072          TRAP    #15
00001A56  103C 0003               1073          MOVE.B  #3,D0
00001A5A  3205                    1074          MOVE.W  D5,D1
00001A5C  4E4F                    1075          TRAP    #15
00001A5E                          1076          
00001A5E  6000 0500               1077          BRA     DSEND
00001A62                          1078          
00001A62                          1079  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A62                          1080  
00001A62  4E71                    1081  DS1000  NOP
00001A64                          1082          
00001A64  E75C                    1083  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001A66  1A04                    1084          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001A68  0205 0007               1085          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001A6C  1C05                    1086          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001A6E                          1087  
00001A6E  E75C                    1088          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001A70  1A04                    1089          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001A72  0205 0007               1090          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001A76  BA3C 0000               1091          CMP.B   #%000,D5        ; Compare with byte size
00001A7A  6700 0016               1092          BEQ     DORB
00001A7E  BA3C 0001               1093          CMP.B   #%001,D5        ; Compare with word size
00001A82  6700 0022               1094          BEQ     DORW
00001A86  BA3C 0002               1095          CMP.B   #%010,D5        ; Compare with long size
00001A8A  6700 002E               1096          BEQ     DORL
00001A8E                          1097          
00001A8E  6000 04D0               1098          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001A92                          1099  
00001A92  43F9 00002219           1100  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001A98  4E4F                    1101          TRAP    #15             ; Print ORM string
00001A9A  43F9 000021DF           1102          LEA     MODEB,A1        ; Load effective address of MODEB string
00001AA0  4E4F                    1103          TRAP    #15             ; Print MODEB string
00001AA2  6000 002A               1104          BRA     DORA            ; Branch to addressing mode parsing
00001AA6                          1105  
00001AA6  43F9 00002219           1106  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001AAC  4E4F                    1107          TRAP    #15             ; Print ORM string
00001AAE  43F9 000021E2           1108          LEA     MODEW,A1        ; Load effective address of MODEW string
00001AB4  4E4F                    1109          TRAP    #15             ; Print MODEW string
00001AB6  6000 0016               1110          BRA     DORA            ; Branch to addressing mode parsing
00001ABA                          1111  
00001ABA  43F9 00002219           1112  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001AC0  4E4F                    1113          TRAP    #15             ; Print ORM string
00001AC2  43F9 000021E5           1114          LEA     MODEL,A1        ; Load effective address of MODEL string
00001AC8  4E4F                    1115          TRAP    #15             ; Print MODEL string
00001ACA  6000 0002               1116          BRA     DORA            ; Branch to addressing mode parsing
00001ACE                          1117  
00001ACE  43F9 0000219B           1118  DORA    LEA     SM6,A1
00001AD4  4E4F                    1119          TRAP    #15
00001AD6  ED5C                    1120          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001AD8  1A04                    1121          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001ADA  0205 0038               1122          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001ADE  E61D                    1123          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001AE0  1605                    1124          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001AE2  0204 0007               1125          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001AE6  1C04                    1126          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001AE8                          1127  
00001AE8  4EB8 121A               1128          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001AEC                          1129  
00001AEC  6000 0472               1130          BRA     DSEND                    
00001AF0                          1131  
00001AF0                          1132  
00001AF0                          1133  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AF0                          1134  
00001AF0  4E71                    1135  DS1001  NOP
00001AF2  4E71                    1136  DSUB    NOP
00001AF4                          1137  *print sub
00001AF4  43F9 0000220D           1138          LEA     SUBM,A1
00001AFA  4E4F                    1139          TRAP    #15
00001AFC                          1140  
00001AFC                          1141  *parse dn reg: 3 bits
00001AFC                          1142  *number of the data register involved
00001AFC                          1143  *nums 0-7, paired with below
00001AFC  E75C                    1144          ROL.W   #3,D4       *dn reg num in d1
00001AFE  1E04                    1145          MOVE.B  D4,D7
00001B00  0207 0007               1146          ANDI.B  #%111,D7
00001B04                          1147          
00001B04  3C47                    1148          MOVE.W  D7,A6       *temporary for storage
00001B06                          1149  
00001B06                          1150  *parse opmode: 3 bits
00001B06                          1151  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001B06                          1152  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001B06                          1153  *invalid: 111, 011
00001B06                          1154  *parse first digit separately
00001B06  E35C                    1155          ROL.W   #1,D4       *addressing mode in d2
00001B08  1E04                    1156          MOVE.B  D4,D7
00001B0A  0207 0001               1157          ANDI.B  #%1,D7
00001B0E                          1158          
00001B0E                          1159  *parsing next two digits of size
00001B0E  E55C                    1160          ROL.W   #2,D4       *size in d5
00001B10  1A04                    1161          MOVE.B  D4,D5
00001B12  0205 0003               1162          ANDI.B  #%11,D5
00001B16  4EB8 11D0               1163          JSR     SIZE
00001B1A  43F9 000021A2           1164          LEA     SM7,A1
00001B20  4E4F                    1165          TRAP    #15
00001B22                          1166          
00001B22                          1167  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001B22  BE3C 0000               1168          CMP.B   #%0,D7       *if 1, then register info printed last
00001B26  6700 0026               1169          BEQ     DSUBEA      *branch to ea before register
00001B2A                          1170          
00001B2A                          1171  *printing register information
00001B2A                          1172  DSUBPRNTREG
00001B2A  43F9 000021EA           1173          LEA     VALD,A1
00001B30  4E4F                    1174          TRAP    #15
00001B32  320E                    1175          MOVE.W  A6,D1       *retrieving a6 register data
00001B34  103C 0003               1176          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001B38  4E4F                    1177          TRAP    #15         *printing register number
00001B3A  103C 000E               1178          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001B3E  BE3C 0000               1179          CMP.B   #%0,D7      *if info finished printing
00001B42  6700 041C               1180          BEQ     DSEND      *branch to end
00001B46  43F9 000021FC           1181          LEA     COMMA,A1
00001B4C  4E4F                    1182          TRAP    #15
00001B4E                          1183  
00001B4E                          1184          
00001B4E                          1185  * parse ea mode: 3 bits
00001B4E                          1186  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001B4E                          1187  *address reg direct not allowed for .B operations
00001B4E                          1188  *no invalid
00001B4E                          1189  DSUBEA
00001B4E  E75C                    1190          ROL.W   #3,D4       *ea mode
00001B50  1604                    1191          MOVE.B  D4,D3
00001B52  0203 0007               1192          ANDI.B  #%111,D3
00001B56                          1193  
00001B56                          1194  *parse ea reg: 3 bits
00001B56                          1195  *no invalid: paired with opmode below (nums 0-7)
00001B56                          1196  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001B56  E75C                    1197          ROL.W   #3,D4       *ea mode
00001B58  1C04                    1198          MOVE.B  D4,D6
00001B5A  0206 0007               1199          ANDI.B  #%111,D6
00001B5E                          1200          
00001B5E  2803                    1201          MOVE.L  D3,D4   *temporarily using D4 
00001B60                          1202          
00001B60                          1203  *comparisons
00001B60  B67C 0004               1204          CMP     #%100,D3
00001B64  6700 03CE               1205          BEQ     DSERR
00001B68  4EB8 121A               1206          JSR     ADDRMODEALL
00001B6C  BE3C 0001               1207          CMP.B   #%1,D7      *if info printed
00001B70  6700 03EE               1208          BEQ     DSEND       *end
00001B74  43F9 000021FC           1209          LEA     COMMA,A1
00001B7A  4E4F                    1210          TRAP    #15
00001B7C  60AC                    1211          BRA     DSUBPRNTREG *check d6 for size of data
00001B7E                          1212  *then take data from d4 and print (?)
00001B7E                          1213  
00001B7E  6000 03E0               1214          BRA     DSEND
00001B82                          1215  
00001B82                          1216  
00001B82                          1217  
00001B82  4E71                    1218  DS1010  NOP
00001B84  6000 03BE               1219          BRA     DSERRINS
00001B88                          1220  
00001B88                          1221          
00001B88                          1222  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B88                          1223  
00001B88  4E71                    1224  DS1011  NOP
00001B8A  6000 03B8               1225          BRA     DSERRINS
00001B8E                          1226          
00001B8E                          1227  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B8E                          1228  
00001B8E  4E71                    1229  DS1100  NOP
00001B90                          1230          
00001B90  E95C                    1231  DAND    ROL.W   #4,D4
00001B92  1A04                    1232          MOVE.B  D4,D5
00001B94  0205 0002               1233          ANDI.B  #%0010,D5
00001B98  0C05 0002               1234          CMPI.B  #%0010,D5
00001B9C  6600 03A6               1235          BNE     DSERRINS
00001BA0                          1236          
00001BA0  E55C                    1237          ROL.W   #2,D4
00001BA2  1A04                    1238          MOVE.B  D4,D5
00001BA4  0205 0007               1239          ANDI.B  #%111,D5
00001BA8                          1240          
00001BA8  E75C                    1241          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001BAA  1604                    1242          MOVE.B  D4,D3           ; Move the byte in D4 to D5
00001BAC  0203 0007               1243          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
00001BB0                          1244          
00001BB0  E75C                    1245          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001BB2  1C04                    1246          MOVE.B  D4,D6           ; Move the byte in D4 to D5
00001BB4  0206 0007               1247          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
00001BB8                          1248          
00001BB8  43F9 000021EA           1249          LEA     VALD,A1         ; Load effective address of Dn
00001BBE  4E4F                    1250          TRAP    #15             ; Print Dn
00001BC0  1E05                    1251          MOVE.B  D5,D7           ; Store the register number for later use
00001BC2                          1252  
00001BC2                          1253          
00001BC2  BA3C 0000               1254          CMP.B   #%000,D5        ; Compare with byte size
00001BC6  6700 0016               1255          BEQ     DANDB
00001BCA  BA3C 0001               1256          CMP.B   #%001,D5        ; Compare with word size
00001BCE  6700 0022               1257          BEQ     DANDW
00001BD2  BA3C 0002               1258          CMP.B   #%010,D5        ; Compare with long size
00001BD6  6700 002E               1259          BEQ     DANDL
00001BDA                          1260          
00001BDA  6000 0384               1261          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001BDE                          1262  
00001BDE  43F9 00002215           1263  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001BE4  4E4F                    1264          TRAP    #15             ; Print ANDM string
00001BE6  43F9 000021DF           1265          LEA     MODEB,A1        ; Load effective address of MODEB string
00001BEC  4E4F                    1266          TRAP    #15             ; Print MODEB string
00001BEE  6000 002A               1267          BRA     DANDA           ; Branch to addressing mode parsing
00001BF2                          1268  
00001BF2  43F9 00002215           1269  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001BF8  4E4F                    1270          TRAP    #15             ; Print ANDM string
00001BFA  43F9 000021E2           1271          LEA     MODEW,A1        ; Load effective address of MODEW string
00001C00  4E4F                    1272          TRAP    #15             ; Print MODEW string
00001C02  6000 0016               1273          BRA     DANDA           ; Branch to addressing mode parsing
00001C06                          1274  
00001C06  43F9 00002215           1275  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001C0C  4E4F                    1276          TRAP    #15             ; Print ANDM string
00001C0E  43F9 000021E5           1277          LEA     MODEL,A1        ; Load effective address of MODEL string
00001C14  4E4F                    1278          TRAP    #15             ; Print MODEL string
00001C16  6000 0002               1279          BRA     DANDA           ; Branch to addressing mode parsing
00001C1A                          1280  
00001C1A  43F9 00002195           1281  DANDA   LEA     SM5,A1
00001C20  4E4F                    1282          TRAP    #15
00001C22                          1283  
00001C22  0204 0007               1284          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001C26  1C04                    1285          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001C28                          1286  
00001C28  4EB8 121A               1287          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001C2C                          1288  
00001C2C  6000 0332               1289          BRA     DSEND                
00001C30                          1290          
00001C30                          1291  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C30                          1292  
00001C30  4E71                    1293  DS1101  NOP
00001C32                          1294  
00001C32  4E71                    1295  DADD    NOP
00001C34  43F9 00002209           1296          LEA     ADDM,A1
00001C3A  4E4F                    1297          TRAP    #15
00001C3C                          1298          
00001C3C                          1299          *parse dn reg: 3 bits
00001C3C                          1300  *number of the data register involved
00001C3C                          1301  *nums 0-7, paired with below
00001C3C  E75C                    1302          ROL.W   #3,D4       *dn reg num in d7
00001C3E  1E04                    1303          MOVE.B  D4,D7
00001C40  0207 0007               1304          ANDI.B  #%111,D7
00001C44                          1305          
00001C44  3C47                    1306          MOVE.W  D7,A6
00001C46                          1307  
00001C46                          1308  *parse opmode: 3 bits
00001C46                          1309  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C46                          1310  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C46                          1311  *invalid: 111, 011
00001C46                          1312  *parse first digit separately
00001C46  E35C                    1313          ROL.W   #1,D4       *addressing mode in d2
00001C48  1E04                    1314          MOVE.B  D4,D7
00001C4A  0207 0001               1315          ANDI.B  #%1,D7
00001C4E                          1316          
00001C4E                          1317  *parsing next two digits of size
00001C4E  E55C                    1318          ROL.W   #2,D4       *size in d5
00001C50  1A04                    1319          MOVE.B  D4,D5
00001C52  0205 0003               1320          ANDI.B  #%11,D5
00001C56  BA3C 0003               1321          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001C5A  6700 007C               1322          BEQ     DADDA
00001C5E  4EB8 11D0               1323          JSR     SIZE
00001C62  43F9 000021A2           1324          LEA     SM7,A1
00001C68  4E4F                    1325          TRAP    #15
00001C6A                          1326          
00001C6A                          1327  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C6A  BE3C 0000               1328          CMP.B   #%0,D7       *if 0, then register info printed last
00001C6E  6700 002E               1329          BEQ     DADDEA      *branch to ea before register
00001C72                          1330          
00001C72                          1331  *printing register information
00001C72                          1332  DADDPRNTREG
00001C72  BA3C 0003               1333          CMP.B   #%11,D5
00001C76  6700 0058               1334          BEQ     PRINTA
00001C7A  43F9 000021EA           1335          LEA     VALD,A1
00001C80                          1336  ADDCONT
00001C80  4E4F                    1337          TRAP    #15
00001C82  320E                    1338          MOVE.W  A6,D1       *moving reg num to d1 to print
00001C84  103C 0003               1339          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C88  4E4F                    1340          TRAP    #15         *printing register number
00001C8A  103C 000E               1341          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C8E  BE3C 0000               1342          CMP.B   #%0,D7      *if info finished printing
00001C92  6700 02CC               1343          BEQ     DSEND      *branch to end
00001C96  43F9 000021FC           1344          LEA     COMMA,A1
00001C9C  4E4F                    1345          TRAP    #15
00001C9E                          1346  
00001C9E                          1347          
00001C9E                          1348  * parse ea mode: 3 bits
00001C9E                          1349  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C9E                          1350  *address reg direct not allowed for .B operations
00001C9E                          1351  *no invalid
00001C9E                          1352  DADDEA
00001C9E  E75C                    1353          ROL.W   #3,D4       *ea mode
00001CA0  1604                    1354          MOVE.B  D4,D3
00001CA2  0203 0007               1355          ANDI.B  #%111,D3
00001CA6                          1356  
00001CA6                          1357  *parse ea reg: 3 bits
00001CA6                          1358  *no invalid: paired with opmode below (nums 0-7)
00001CA6                          1359  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001CA6  E75C                    1360          ROL.W   #3,D4       *ea mode
00001CA8  1C04                    1361          MOVE.B  D4,D6
00001CAA  0206 0007               1362          ANDI.B  #%111,D6
00001CAE                          1363          
00001CAE                          1364  *comparisons
00001CAE  B67C 0004               1365          CMP     #%100,D3
00001CB2  6700 005A               1366          BEQ     ADDDATACHECK
00001CB6                          1367  DATACHECKCONT
00001CB6  4EB8 121A               1368          JSR     ADDRMODEALL
00001CBA  BE3C 0001               1369          CMP.B   #%1,D7      *if info printed
00001CBE  6700 02A0               1370          BEQ     DSEND       *end
00001CC2  43F9 000021FC           1371          LEA     COMMA,A1
00001CC8  4E4F                    1372          TRAP    #15
00001CCA  60A6                    1373          BRA     DADDPRNTREG 
00001CCC                          1374  
00001CCC  6000 0292               1375          BRA     DSEND
00001CD0                          1376          
00001CD0  43F9 000021E8           1377  PRINTA  LEA     VALA,A1
00001CD6  60A8                    1378          BRA     ADDCONT
00001CD8                          1379  
00001CD8                          1380          
00001CD8  4E71                    1381  DADDA   NOP
00001CDA  43F9 000021E8           1382          LEA     VALA,A1
00001CE0  4E4F                    1383          TRAP    #15
00001CE2  BE3C 0000               1384          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001CE6  6600 000C               1385          BNE     ADDAL
00001CEA  43F9 000021E2           1386          LEA     MODEW,A1
00001CF0  6000 000C               1387          BRA     ADDSIZEEND
00001CF4  43F9 000021E5           1388  ADDAL   LEA     MODEL,A1
00001CFA  6000 0002               1389          BRA     ADDSIZEEND
00001CFE                          1390  ADDSIZEEND
00001CFE  4E4F                    1391          TRAP    #15
00001D00  43F9 000021A2           1392          LEA     SM7,A1
00001D06  4E4F                    1393          TRAP    #15
00001D08  1E3C 0000               1394          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D0C  6090                    1395          BRA     DADDEA
00001D0E                          1396  ADDDATACHECK
00001D0E  BA3C 0003               1397          CMP.B   #%11,D5
00001D12  6700 0220               1398          BEQ     DSERR
00001D16  609E                    1399          BRA     DATACHECKCONT
00001D18                          1400          
00001D18                          1401          
00001D18                          1402  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D18                          1403  
00001D18                          1404  DS1110
00001D18  E75C                    1405          ROL.W   #3,D4           * [D2] Reading count
00001D1A  1404                    1406          MOVE.B  D4,D2
00001D1C  0202 0007               1407          ANDI.B  #%111,D2
00001D20                          1408          
00001D20  E35C                    1409          ROL.W   #1,D4           * [D3] Reading direction
00001D22  1604                    1410          MOVE.B  D4,D3
00001D24  0203 0001               1411          ANDI.B  #%1,D3
00001D28                          1412          
00001D28  E55C                    1413          ROL.W   #2,D4           * [D5] Reading size
00001D2A  1A04                    1414          MOVE.B  D4,D5
00001D2C  0205 0003               1415          ANDI.B  #%11,D5
00001D30                          1416          
00001D30  BA3C 0003               1417          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D34  6700 00F0               1418          BEQ     DS1110MEM
00001D38                          1419          
00001D38  E35C                    1420          ROL.W   #1,D4           * [D6] Reading count mode
00001D3A  1C04                    1421          MOVE.B  D4,D6
00001D3C  0206 0001               1422          ANDI.B  #%1,D6
00001D40                          1423          
00001D40  E55C                    1424          ROL.W   #2,D4           * [D7] reading type of shift
00001D42  1E04                    1425          MOVE.B  D4,D7
00001D44  0207 0003               1426          ANDI.B  #%11,D7
00001D48                          1427          
00001D48  E75C                    1428          ROL.W   #3,D4           * [D1] reading register
00001D4A  1204                    1429          MOVE.B  D4,D1
00001D4C  0201 0007               1430          ANDI.B  #%111,D1
00001D50                          1431          
00001D50  BE3C 0001               1432          CMP.B   #%01,D7   *Determine shift type
00001D54  6700 008E               1433          BEQ     DLS
00001D58  BE3C 0000               1434          CMP.B   #%00,D7
00001D5C  6700 0092               1435          BEQ     DAS
00001D60  BE3C 0003               1436          CMP.B   #%11,D7
00001D64  6700 0096               1437          BEQ     DRO
00001D68                          1438          
00001D68  6000 01F6               1439          BRA     DSEND               *Fallback in case of invalid code
00001D6C                          1440          
00001D6C  48E7 FFFF               1441  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001D70  4EB9 00001E08           1442          JSR     DS1110SIDE
00001D76  4CDF FFFF               1443          MOVEM.L (SP)+,A0-A7/D0-D7
00001D7A                          1444          
00001D7A  48E7 FFFF               1445          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001D7E  4EB8 11D0               1446          JSR     SIZE
00001D82  4CDF FFFF               1447          MOVEM.L (SP)+,A0-A7/D0-D7
00001D86                          1448          
00001D86  103C 000E               1449          MOVE.B  #14,D0
00001D8A  43F9 00002195           1450          LEA     SM5,A1
00001D90  4E4F                    1451          TRAP    #15
00001D92                          1452          
00001D92  BA3C 0003               1453          CMP.B   #%11,D5
00001D96  6700 00B4               1454          BEQ     DS1110MEMA
00001D9A                          1455          
00001D9A  BC3C 0001               1456          CMP.B   #%1,D6
00001D9E  6700 003A               1457          BEQ     DS1110_REG_D
00001DA2  6000 002C               1458          BRA     DS1110_REG_I
00001DA6                          1459          
00001DA6  1C01                    1460  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001DA8                          1461          
00001DA8  103C 0003               1462          MOVE.B  #3,D0
00001DAC  1202                    1463          MOVE.B  D2,D1
00001DAE  4E4F                    1464          TRAP    #15
00001DB0                          1465          
00001DB0  103C 000E               1466          MOVE.B  #14,D0
00001DB4  43F9 000021FC           1467          LEA     COMMA,A1
00001DBA  4E4F                    1468          TRAP    #15
00001DBC                          1469          
00001DBC  43F9 000021EA           1470          LEA     VALD,A1
00001DC2  4E4F                    1471          TRAP    #15
00001DC4                          1472          
00001DC4  103C 0003               1473          MOVE.B  #3,D0
00001DC8  1206                    1474          MOVE.B  D6,D1
00001DCA  4E4F                    1475          TRAP    #15
00001DCC                          1476          
00001DCC  6000 0192               1477          BRA     DSEND
00001DD0                          1478          
00001DD0                          1479  DS1110_REG_I
00001DD0  43F9 000021EC           1480          LEA     VALN,A1
00001DD6  4E4F                    1481          TRAP    #15
00001DD8  60CC                    1482          BRA     DS1110B
00001DDA                          1483  
00001DDA                          1484  DS1110_REG_D
00001DDA  43F9 000021EA           1485          LEA     VALD,A1
00001DE0  4E4F                    1486          TRAP    #15
00001DE2  60C2                    1487          BRA     DS1110B       
00001DE4                          1488          
00001DE4  43F9 00002220           1489  DLS     LEA     LSM,A1
00001DEA  4E4F                    1490          TRAP    #15
00001DEC  6000 FF7E               1491          BRA     DS1110A
00001DF0                          1492          
00001DF0  43F9 00002227           1493  DAS     LEA     ASM,A1
00001DF6  4E4F                    1494          TRAP    #15
00001DF8  6000 FF72               1495          BRA     DS1110A
00001DFC                          1496          
00001DFC  43F9 0000222E           1497  DRO     LEA     ROM,A1
00001E02  4E4F                    1498          TRAP    #15
00001E04  6000 FF66               1499          BRA     DS1110A
00001E08                          1500          
00001E08                          1501  DS1110SIDE
00001E08  103C 0006               1502          MOVE.B  #6,D0
00001E0C  B63C 0001               1503          CMP.B   #1,D3
00001E10  6700 000C               1504          BEQ     DS1110LSIDE
00001E14  123C 0052               1505          MOVE.B  #82,D1
00001E18  4E4F                    1506          TRAP    #15
00001E1A  6000 0008               1507          BRA     DS1110SIDEEND
00001E1E                          1508  
00001E1E                          1509  DS1110LSIDE
00001E1E  123C 004C               1510          MOVE.B  #76,D1
00001E22  4E4F                    1511          TRAP    #15
00001E24                          1512          
00001E24                          1513  DS1110SIDEEND
00001E24  4E75                    1514          RTS 
00001E26                          1515  
00001E26                          1516  DS1110MEM
00001E26                          1517                                  * Shift type is instead stored in D2
00001E26                          1518          
00001E26  E75C                    1519          ROL.W   #3,D4           * [D6] Reading address mode
00001E28  1C04                    1520          MOVE.B  D4,D6
00001E2A  0206 0007               1521          ANDI.B  #%111,D6
00001E2E                          1522          
00001E2E  E75C                    1523          ROL.W   #3,D4           * [D1] Reading address register
00001E30  1204                    1524          MOVE.B  D4,D1
00001E32  0201 0007               1525          ANDI.B  #%111,D1
00001E36                          1526          
00001E36  B43C 0001               1527          CMP.B   #%01,D2
00001E3A  67A8                    1528          BEQ     DLS
00001E3C  B43C 0000               1529          CMP.B   #%00,D2
00001E40  67AE                    1530          BEQ     DAS
00001E42  B43C 0003               1531          CMP.B   #%11,D2
00001E46  67B4                    1532          BEQ     DRO
00001E48  6000 0116               1533          BRA     DSEND
00001E4C                          1534          
00001E4C                          1535          
00001E4C                          1536  DS1110MEMA
00001E4C                          1537          
00001E4C  BC3C 0002               1538          CMP.B   #%010,D6
00001E50  6700 002E               1539          BEQ     DS1110MEM_REG
00001E54  BC3C 0003               1540          CMP.B   #%011,D6
00001E58  6700 004C               1541          BEQ     DS1110MEM_INC
00001E5C  BC3C 0004               1542          CMP.B   #%100,D6
00001E60  6700 006A               1543          BEQ     DS1110MEM_DEC
00001E64                          1544          
00001E64  BC3C 0007               1545          CMP.B   #%111,D6
00001E68  6600 00CA               1546          BNE     DSERR
00001E6C                          1547          
00001E6C  B23C 0000               1548          CMP.B   #%000,D1
00001E70  6700 0080               1549          BEQ     DS1110MEM_CUSW
00001E74  B23C 0001               1550          CMP.B   #%001,D1
00001E78  6700 0096               1551          BEQ     DS1110MEM_CUSL
00001E7C                          1552          
00001E7C  6000 00E2               1553          BRA     DSEND
00001E80                          1554  
00001E80                          1555  DS1110MEM_REG
00001E80  43F9 000021F2           1556          LEA     OPENPTR,A1
00001E86  4E4F                    1557          TRAP    #15
00001E88                          1558          
00001E88  43F9 000021E8           1559          LEA     VALA,A1
00001E8E  4E4F                    1560          TRAP    #15
00001E90                          1561          
00001E90  103C 0003               1562          MOVE.B  #3,D0
00001E94  4E4F                    1563          TRAP    #15
00001E96  103C 000E               1564          MOVE.B  #14,D0
00001E9A                          1565          
00001E9A  43F9 000021F7           1566          LEA     CLOSEPTR,A1
00001EA0  4E4F                    1567          TRAP    #15
00001EA2                          1568          
00001EA2  6000 00BC               1569          BRA     DSEND
00001EA6                          1570  
00001EA6                          1571  DS1110MEM_INC
00001EA6  43F9 000021F2           1572          LEA     OPENPTR,A1
00001EAC  4E4F                    1573          TRAP    #15
00001EAE                          1574          
00001EAE  43F9 000021E8           1575          LEA     VALA,A1
00001EB4  4E4F                    1576          TRAP    #15
00001EB6                          1577          
00001EB6  103C 0003               1578          MOVE.B  #3,D0
00001EBA  4E4F                    1579          TRAP    #15
00001EBC  103C 000E               1580          MOVE.B  #14,D0
00001EC0                          1581          
00001EC0  43F9 000021F9           1582          LEA     CLOSEIPTR,A1
00001EC6  4E4F                    1583          TRAP    #15
00001EC8                          1584          
00001EC8  6000 0096               1585          BRA     DSEND
00001ECC                          1586  
00001ECC                          1587  DS1110MEM_DEC
00001ECC  43F9 000021F4           1588          LEA     OPENDPTR,A1
00001ED2  4E4F                    1589          TRAP    #15
00001ED4                          1590          
00001ED4  43F9 000021E8           1591          LEA     VALA,A1
00001EDA  4E4F                    1592          TRAP    #15
00001EDC                          1593          
00001EDC  103C 0003               1594          MOVE.B  #3,D0
00001EE0  4E4F                    1595          TRAP    #15
00001EE2  103C 000E               1596          MOVE.B  #14,D0
00001EE6                          1597          
00001EE6  43F9 000021F7           1598          LEA     CLOSEPTR,A1
00001EEC  4E4F                    1599          TRAP    #15
00001EEE                          1600          
00001EEE  6000 0070               1601          BRA     DSEND
00001EF2                          1602          
00001EF2                          1603  DS1110MEM_CUSW
00001EF2  43F9 000021FE           1604          LEA     DOLLAR,A1
00001EF8  4E4F                    1605          TRAP    #15
00001EFA  341A                    1606          MOVE.W  (A2)+,D2
00001EFC  48E7 0400               1607          MOVEM.L D5,-(SP)
00001F00  1A3C 0030               1608          MOVE.B  #48,D5
00001F04  4EB8 1188               1609          JSR     HEXOUT
00001F08  4CDF 0020               1610          MOVEM.L (SP)+,D5
00001F0C  6000 0052               1611          BRA     DSEND
00001F10                          1612          
00001F10                          1613  DS1110MEM_CUSL
00001F10  43F9 000021FE           1614          LEA     DOLLAR,A1
00001F16  4E4F                    1615          TRAP    #15
00001F18  241A                    1616          MOVE.L  (A2)+,D2
00001F1A  48E7 0400               1617          MOVEM.L D5,-(SP)
00001F1E  1A3C 0030               1618          MOVE.B  #48,D5
00001F22  4EB8 1188               1619          JSR     HEXOUT
00001F26  4CDF 0020               1620          MOVEM.L (SP)+,D5
00001F2A  6000 0034               1621          BRA     DSEND
00001F2E                          1622          
00001F2E                          1623  
00001F2E                          1624  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F2E                          1625  
00001F2E  4E71                    1626  DS1111  NOP
00001F30  6000 002E               1627          BRA     DSEND
00001F34                          1628  
00001F34                          1629  *DS Final
00001F34                          1630  *--------------------------------------------------------------------------------------------------
00001F34                          1631  
00001F34  103C 000E               1632  DSERR   MOVE.B  #14,D0
00001F38  43F9 000021B1           1633          LEA     ERRM,A1
00001F3E  4E4F                    1634          TRAP    #15
00001F40  6000 001E               1635          BRA     DSEND
00001F44                          1636          
00001F44                          1637  DSERRINS
00001F44  103C 000E               1638          MOVE.B  #14,D0
00001F48  43F9 000021B9           1639          LEA     ERRMINS,A1
00001F4E  4E4F                    1640          TRAP    #15
00001F50  6000 000E               1641          BRA     DSEND
00001F54                          1642  
00001F54                          1643  DSERREA
00001F54  103C 000E               1644          MOVE.B  #14,D0
00001F58  43F9 000021BA           1645          LEA     ERRMEA,A1
00001F5E  4E4F                    1646          TRAP    #15
00001F60                          1647  
00001F60  4E75                    1648  DSEND   RTS
00001F62                          1649  
00001F62  43F9 00002182           1650  DSEOF   LEA     LB,A1
00001F68  103C 000E               1651          MOVE.B  #14,D0
00001F6C  4E4F                    1652          TRAP    #15
00001F6E                          1653          
00001F6E  43F9 00002084           1654          LEA     REST,A1
00001F74  103C 000E               1655          MOVE.B  #14,D0
00001F78  4E4F                    1656          TRAP    #15
00001F7A                          1657          
00001F7A  103C 0005               1658          MOVE.B  #5,D0
00001F7E  4E4F                    1659          TRAP    #15
00001F80                          1660          
00001F80  B23C 0059               1661          CMP.B   #89,D1
00001F84  6700 F07A               1662          BEQ     START
00001F88  B23C 0079               1663          CMP.B   #121,D1
00001F8C  6700 F072               1664          BEQ     START
00001F90                          1665  
00001F90  43F9 00002182           1666  END     LEA     LB,A1
00001F96  103C 000E               1667          MOVE.B  #14,D0
00001F9A  4E4F                    1668          TRAP    #15
00001F9C                          1669          
00001F9C  43F9 00002182           1670          LEA     LB,A1
00001FA2  103C 000E               1671          MOVE.B  #14,D0
00001FA6  4E4F                    1672          TRAP    #15
00001FA8                          1673          
00001FA8  43F9 000020A1           1674          LEA     ENDMSG,A1
00001FAE  103C 000E               1675          MOVE.B  #14,D0
00001FB2  4E4F                    1676          TRAP    #15
00001FB4                          1677          
00001FB4  43F9 000020C9           1678          LEA     AUTHOR,A1
00001FBA  4E4F                    1679          TRAP    #15
00001FBC                          1680          
00001FBC  43F9 00002182           1681          LEA     LB,A1
00001FC2  103C 000E               1682          MOVE.B  #14,D0
00001FC6  4E4F                    1683          TRAP    #15
00001FC8                          1684          
00001FC8  103C 0009               1685          MOVE.B  #9,D0
00001FCC  4E4F                    1686          TRAP    #15
00001FCE                          1687  
00001FCE                          1688  *Initialized Variables
00001FCE                          1689  *--------------------------------------------------------------------------------------------------
00001FCE                          1690  
00001FCE  =0000000D               1691  CR      EQU     $0D
00001FCE  =0000000A               1692  LF      EQU     $0A
00001FCE  =00000009               1693  HT      EQU     $09
00001FCE                          1694  
00001FCE= 54 68 69 73 20 69 ...   1695  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002056= 45 6E 74 65 72 20 ...   1696  ASTART  DC.B    'Enter start address: $',0
0000206D= 45 6E 74 65 72 20 ...   1697  AEND    DC.B    'Enter end address:   $',0
00002084= 52 65 73 74 61 72 ...   1698  REST    DC.B    'Restart Disassembler (y/n)? ',0
000020A1= 54 68 61 6E 6B 20 ...   1699  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000020C9= 4D 61 64 65 20 62 ...   1700  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000020EE                          1701  
000020EE= 45 52 52 4F 52 3A ...   1702  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002128= 45 52 52 4F 52 3A ...   1703  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000214E= 45 52 52 4F 52 3A ...   1704  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00002182                          1705  
00002182= 0D 0A 00                1706  LB      DC.B    CR,LF,0
00002185                          1707  
00002185= 09 00                   1708  HTM     DC.B    HT,0
00002187                          1709  
00002187= 20 00                   1710  SM1     DC.B    ' ',0
00002189= 20 20 00                1711  SM2     DC.B    '  ',0
0000218C= 20 20 20 00             1712  SM3     DC.B    '   ',0
00002190= 20 20 20 20 00          1713  SM4     DC.B    '    ',0
00002195= 20 20 20 20 20 00       1714  SM5     DC.B    '     ',0
0000219B= 20 20 20 20 20 20 00    1715  SM6     DC.B    '      ',0
000021A2= 20 20 20 20 20 20 ...   1716  SM7     DC.B    '       ',0
000021AA                          1717  
000021AA= 54 45 53 54 00          1718  TESTM   DC.B    'TEST',0
000021AF                          1719  
000021AF= 00                      1720  NOTH    DC.B    '',0
000021B0= 00                      1721  NOTH2   DC.B    '',0
000021B1                          1722  
000021B1= 20 2A 45 52 52 4F ...   1723  ERRM    DC.B    ' *ERROR',0
000021B9= 00                      1724  ERRMINS DC.B    '',0
000021BA= 20 2A 45 52 52 4F ...   1725  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
000021DF                          1726  
000021DF= 2E 42 00                1727  MODEB   DC.B    '.B',0
000021E2= 2E 57 00                1728  MODEW   DC.B    '.W',0
000021E5= 2E 4C 00                1729  MODEL   DC.B    '.L',0
000021E8                          1730  
000021E8= 41 00                   1731  VALA    DC.B    'A',0
000021EA= 44 00                   1732  VALD    DC.B    'D',0
000021EC= 23 00                   1733  VALN    DC.B    '#',0
000021EE= 30 00                   1734  VAL0    DC.B    '0',0
000021F0= 51 00                   1735  VALQ    DC.B    'Q',0
000021F2                          1736  
000021F2= 28 00                   1737  OPENPTR     DC.B    '(',0
000021F4= 2D 28 00                1738  OPENDPTR    DC.B    '-(',0
000021F7                          1739  
000021F7= 29 00                   1740  CLOSEPTR    DC.B    ')',0
000021F9= 29 2B 00                1741  CLOSEIPTR   DC.B    ')+',0
000021FC                          1742  
000021FC= 2C 00                   1743  COMMA   DC.B    ',',0
000021FE= 24 00                   1744  DOLLAR  DC.B    '$',0
00002200                          1745  
00002200= 4E 4F 50 00             1746  NOPM    DC.B    'NOP',0
00002204                          1747  
00002204= 4D 4F 56 45 00          1748  MOVEM   DC.B    'MOVE',0
00002209                          1749  
00002209= 41 44 44 00             1750  ADDM    DC.B    'ADD',0
0000220D                          1751  
0000220D= 53 55 42 00             1752  SUBM    DC.B    'SUB',0
00002211                          1753  
00002211= 4C 45 41 00             1754  LEAM    DC.B    'LEA',0
00002215                          1755  
00002215= 41 4E 44 00             1756  ANDM    DC.B    'AND',0
00002219= 4F 52 00                1757  ORM     DC.B    'OR',0
0000221C= 4E 4F 54 00             1758  NOTM    DC.B    'NOT',0
00002220                          1759  
00002220= 4C 53 00                1760  LSM    DC.B    'LS',0
00002223= 4C 53 52 00             1761  LSRM    DC.B    'LSR',0
00002227= 41 53 00                1762  ASM    DC.B    'AS',0
0000222A= 41 53 52 00             1763  ASRM    DC.B    'ASR',0
0000222E                          1764  
0000222E= 52 4F 00                1765  ROM    DC.B    'RO',0
00002231= 52 4F 52 00             1766  RORM    DC.B    'ROR',0
00002235                          1767  
00002235= 42 47 54 00             1768  BGTM    DC.B    'BGT',0
00002239= 42 4C 45 00             1769  BLEM    DC.B    'BLE',0
0000223D= 42 45 51 00             1770  BEQM    DC.B    'BEQ',0
00002241                          1771  
00002241= 4A 53 52 00             1772  JSRM    DC.B    'JSR',0
00002245= 52 54 53 00             1773  RTSM    DC.B    'RTS',0
00002249                          1774  
00002249= 42 52 41 00             1775  BRAM    DC.B    'BRA',0
0000224D                          1776  
0000224D                          1777  
0000224D                          1778      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1CF4
ADDCONT             1C80
ADDDATACHECK        1D0E
ADDM                2209
ADDRMODEALL         121A
ADDSIZEEND          1CFE
ADREG               15B8
ADREGP              15D0
AEND                206D
AM000               121A
AM001               123A
AM010               1262
AM011               1292
AM100               12C2
AM111               12F2
AM111001            1320
AM111100            1346
AMEND               1374
ANDM                2215
ASM                 2227
ASRM                222A
ASTART              2056
AUTHOR              20C9
BEQM                223D
BGTM                2235
BLEM                2239
BRAM                2249
CLOSEIPTR           21F9
CLOSEPTR            21F7
COMMA               21FC
CR                  D
DADD                1C32
DADDA               1CD8
DADDEA              1C9E
DADDPRNTREG         1C72
DADDQ               180C
DAND                1B90
DANDA               1C1A
DANDB               1BDE
DANDL               1C06
DANDW               1BF2
DAS                 1DF0
DATACHECKCONT       1CB6
DBEQ                19B8
DBGT                193C
DBLE                1978
DBRA                18B0
DBRA_16BIT          18F8
DBRA_32BIT          191A
DISASM              137A
DJSR                163A
DJSR_CUSL           16D2
DJSR_CUSW           16B4
DJSR_REG            168E
DLEA                16FC
DLEAP               1732
DLS                 1DE4
DMOVE2              13A4
DMOVEA              1448
DMOVEQ              19FA
DNOP                14FE
DNOT                150A
DNOTA               156A
DNOTB               152E
DNOTL               1556
DNOTW               1542
DOLLAR              21FE
DOR                 1A64
DORA                1ACE
DORB                1A92
DORL                1ABA
DORW                1AA6
DREG                15A0
DRO                 1DFC
DRTS                16F0
DS0                 1384
DS00                1398
DS01                146A
DS010               1488
DS0100              14C4
DS0101              180A
DS011               1492
DS0110              1884
DS0111              19F8
DS1                 138E
DS10                1474
DS100               149C
DS1000              1A62
DS1001              1AF0
DS101               14A6
DS1010              1B82
DS1011              1B88
DS11                147E
DS110               14B0
DS1100              1B8E
DS1101              1C30
DS111               14BA
DS1110              1D18
DS1110A             1D6C
DS1110B             1DA6
DS1110LSIDE         1E1E
DS1110MEM           1E26
DS1110MEMA          1E4C
DS1110MEM_CUSL      1F10
DS1110MEM_CUSW      1EF2
DS1110MEM_DEC       1ECC
DS1110MEM_INC       1EA6
DS1110MEM_REG       1E80
DS1110SIDE          1E08
DS1110SIDEEND       1E24
DS1110_REG_D        1DDA
DS1110_REG_I        1DD0
DS1111              1F2E
DSEND               1F60
DSEOF               1F62
DSERR               1F34
DSERREA             1F54
DSERRINS            1F44
DSUB                1AF2
DSUBEA              1B4E
DSUBPRNTREG         1B2A
END                 1F90
ENDMSG              20A1
ERRM                21B1
ERRMEA              21BA
ERRMINS             21B9
EXT                 1618
EXTW                162E
HDONE               11CE
HEXOUT              1188
HHEX                11A2
HNUM                11AA
HSKIP2              11B8
HSKIP3              11CC
HSTEP               1190
HSTEP2              11AE
HT                  9
HTM                 2185
INTRO               1FCE
JSR010              175E
JSR111              178E
JSR111001           17C0
JSRM                2241
JSRPRINT2           17EA
LB                  2182
LEAM                2211
LF                  A
LSM                 2220
LSRM                2223
MADREG              15F0
MODEB               21DF
MODEL               21E5
MODEW               21E2
MOVECONT            13C8
MOVEERRCHECK        145E
MOVEM               2204
MSDONE              140E
MSIZE               13C8
MSIZEB              13F0
MSIZEL              1404
MSIZEW              13FA
NOPM                2200
NOTH                21AF
NOTH2               21B0
NOTM                221C
OPENDPTR            21F4
OPENPTR             21F2
ORM                 2219
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1CD0
PSTEP               108E
PSTEP2              10BE
RCONT               1174
READLN              1118
REST                2084
ROM                 222E
RORM                2231
RPAUSE              117C
RSTEP               112C
RTSM                2245
SDONE               1216
SIZE                11D0
SIZEB               11F8
SIZEL               120C
SIZEW               1202
SM1                 2187
SM2                 2189
SM3                 218C
SM4                 2190
SM5                 2195
SM6                 219B
SM7                 21A2
SRET                1218
START               1000
STARTER             0
SUBM                220D
TEST                102A
TESTM               21AA
VAL0                21EE
VALA                21E8
VALD                21EA
VALN                21EC
VALQ                21F0
VERR1               10E8
VERR1M              20EE
VERR2               10F8
VERR2M              2128
VERR3               1108
VERR3M              214E
VINPUT              10DE
