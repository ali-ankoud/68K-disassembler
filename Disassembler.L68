00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 9:04:47 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 000022A4             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 0000232C             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 00002485             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 00002343             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 00002485             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 000023C4            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 1160                114          BRA     END
00001108                           115  
00001108  43F9 000023FE            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 1150                119          BRA     END
00001118                           120  
00001118  43F9 00002424            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 1140                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 0000245F            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 00002458            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 10BE                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 000024B5            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 000024B8            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 000024BB            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 000024C0            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0FC0                256          BEQ     DSERR
0000124C  43F9 000024BE            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 000024CA            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 000024BE            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 000024CF            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 000024CA            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 000024BE            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 000024D1            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 000024CC            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 000024BE            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 000024CF            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0F10                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 000024D6            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 000024D6            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0EBC                334          BNE     DSERR
00001350  43F9 000024C2            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 0148                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 0152                373          BCS     DS11
00001396  6000 0144                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 0148                381          BEQ     DS010
000013AA  6000 0002                382          BRA     DMOVE2
000013AE                           383          
000013AE                           384  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
000013AE  4E71                     385  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
000013B0                           386          *size in d5 from above processing
000013B0  43F9 000024E0            387          LEA     MOVEM,A1
000013B6  4E4F                     388          TRAP    #15
000013B8                           389                  
000013B8                           390          *dest reg to d7
000013B8  E75C                     391          ROL.W   #3,D4
000013BA  1E04                     392          MOVE.B  D4,D7
000013BC  CE3C 0007                393          AND.B   #%111,D7
000013C0                           394          
000013C0                           395          *dest mode to d3: An means MOVEA
000013C0  E75C                     396          ROL.W   #3,D4
000013C2  1604                     397          MOVE.B  D4,D3
000013C4  C63C 0007                398          AND.B   #%111,D3
000013C8  3C43                     399          MOVE.W  D3,A6
000013CA                           400          
000013CA  B67C 0001                401          CMP     #%001,D3
000013CE  6700 00E0                402          BEQ     DMOVEA
000013D2                           403  MOVECONT
000013D2                           404  *printing size then first addressing moode, then comma
000013D2                           405  *size is different for move
000013D2  103C 000E                406  MSIZEN  MOVE.B  #14,D0
000013D6  BA3C 0001                407          CMP.B   #%01,D5
000013DA  6700 001E                408          BEQ     MSIZEBN
000013DE  BA3C 0003                409          CMP.B   #%11,D5
000013E2  6700 0028                410          BEQ     MSIZEWN
000013E6  BA3C 0002                411          CMP.B   #%10,D5
000013EA  6700 0032                412          BEQ     MSIZELN
000013EE  BA3C 0003                413          CMP.B   #%11,D5
000013F2  6700 006E                414          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000013F6  6000 0E12                415          BRA     DSERR
000013FA                           416          
000013FA  43F9 000024B5            417  MSIZEBN LEA     MODEB,A1
00001400  4E4F                     418          TRAP    #15
00001402  43F9 0000245D            419          LEA     SM1,A1
00001408  6000 006C                420          BRA     MSDONE
0000140C                           421  
0000140C  43F9 000024B8            422  MSIZEWN LEA     MODEW,A1
00001412  4E4F                     423          TRAP    #15
00001414  43F9 0000245D            424          LEA     SM1,A1
0000141A  6000 005A                425          BRA     MSDONE
0000141E                           426  
0000141E  43F9 000024BB            427  MSIZELN LEA     MODEL,A1
00001424  4E4F                     428          TRAP    #15
00001426  43F9 0000245D            429          LEA     SM1,A1
0000142C  6000 0048                430          BRA     MSDONE
00001430                           431  
00001430  103C 000E                432  MSIZE   MOVE.B  #14,D0
00001434  BA3C 0001                433          CMP.B   #%01,D5
00001438  6700 001E                434          BEQ     MSIZEB
0000143C  BA3C 0003                435          CMP.B   #%11,D5
00001440  6700 0020                436          BEQ     MSIZEW
00001444  BA3C 0002                437          CMP.B   #%10,D5
00001448  6700 0022                438          BEQ     MSIZEL
0000144C  BA3C 0003                439          CMP.B   #%11,D5
00001450  6700 0010                440          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001454  6000 0DB4                441          BRA     DSERR
00001458                           442          
00001458  43F9 000024B5            443  MSIZEB  LEA     MODEB,A1
0000145E  6000 0016                444          BRA     MSDONE
00001462                           445  
00001462  43F9 000024B8            446  MSIZEW  LEA     MODEW,A1
00001468  6000 000C                447          BRA     MSDONE
0000146C                           448  
0000146C  43F9 000024BB            449  MSIZEL  LEA     MODEL,A1
00001472  6000 0002                450          BRA     MSDONE
00001476                           451  
00001476  4E4F                     452  MSDONE  TRAP    #15
00001478                           453  
00001478  43F9 00002462            454          LEA     SM3,A1
0000147E  4E4F                     455          TRAP    #15
00001480                           456          
00001480                           457          *source mode to d3
00001480  E75C                     458          ROL.W   #3,D4
00001482  1604                     459          MOVE.B  D4,D3
00001484  C63C 0007                460          AND.B   #%111,D3
00001488                           461          
00001488                           462          *source reg to d6
00001488  E75C                     463          ROL.W   #3,D4
0000148A  1C04                     464          MOVE.B  D4,D6
0000148C  CC3C 0007                465          AND.B   #%111,D6
00001490                           466          
00001490  4EB8 121C                467          JSR     ADDRMODEALL
00001494  B67C 0001                468          CMP     #%001,D3
00001498  6700 002C                469          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
0000149C  43F9 000024D4            470          LEA     COMMA,A1
000014A2  4E4F                     471          TRAP    #15
000014A4  1C07                     472          MOVE.B  D7,D6
000014A6  360E                     473          MOVE.W  A6,D3
000014A8  4EB8 121C                474          JSR     ADDRMODEALL
000014AC  6000 0D88                475          BRA     DSEND
000014B0                           476  
000014B0  4E71                     477  DMOVEA  NOP
000014B2  BA7C 0001                478          CMP     #%01,D5     *if size is byte, err
000014B6  6700 0D52                479          BEQ     DSERR
000014BA  43F9 000024BE            480          LEA     VALA,A1        *else, print A and return
000014C0  4E4F                     481          TRAP    #15
000014C2  6000 FF6C                482          BRA     MSIZE
000014C6                           483  
000014C6                           484  MOVEERRCHECK
000014C6  BA7C 0001                485          CMP     #%01,D5
000014CA  6700 0D3E                486          BEQ     DSERR
000014CE  6000 0D66                487          BRA     DSEND
000014D2                           488  
000014D2                           489          
000014D2                           490  
000014D2                           491  *DS Tier 2 ----------------------------------------------------------------------------------------
000014D2                           492  
000014D2                           493  DS01                        *DS01: Tier 2 binary search for 01 side
000014D2  E34C                     494          LSL.W   #1,D4
000014D4  6500 0024                495          BCS     DS011
000014D8  6000 0016                496          BRA     DS010
000014DC                           497  
000014DC                           498  DS10                        *DS10: Tier 2 binary search for 10 side
000014DC  E34C                     499          LSL.W   #1,D4
000014DE  6500 002E                500          BCS     DS101
000014E2  6000 0020                501          BRA     DS100
000014E6                           502  
000014E6                           503  DS11                        *DS11: Tier 2 binary search for 11 side
000014E6  E34C                     504          LSL.W   #1,D4
000014E8  6500 0038                505          BCS     DS111
000014EC  6000 002A                506          BRA     DS110
000014F0                           507  
000014F0                           508  *DS Tier 3 ----------------------------------------------------------------------------------------
000014F0                           509  
000014F0                           510  DS010                       *DS010: Tier 3 binary search for 010 side
000014F0  E34C                     511          LSL.W   #1,D4
000014F2  6500 0562                512          BCS     DS0101
000014F6  6000 0034                513          BRA     DS0100
000014FA                           514  
000014FA                           515  DS011                       *DS011: Tier 3 binary search for 011 side
000014FA  E34C                     516          LSL.W   #1,D4
000014FC  6500 0746                517          BCS     DS0111
00001500  6000 05CE                518          BRA     DS0110
00001504                           519  
00001504                           520  DS100                       *DS100: Tier 3 binary search for 100 side
00001504  E34C                     521          LSL.W   #1,D4
00001506  6500 0882                522          BCS     DS1001
0000150A  6000 07A2                523          BRA     DS1000
0000150E                           524  
0000150E                           525  DS101                       *DS101: Tier 3 binary search for 101 side
0000150E  E34C                     526          LSL.W   #1,D4
00001510  6500 0910                527          BCS     DS1011
00001514  6000 0906                528          BRA     DS1010
00001518                           529  
00001518                           530  DS110                       *DS110: Tier 3 binary search for 110 side
00001518  E34C                     531          LSL.W   #1,D4
0000151A  6500 09EA                532          BCS     DS1101
0000151E  6000 0908                533          BRA     DAND
00001522                           534  
00001522                           535  DS111                       *DS111: Tier 3 binary search for 111 side
00001522  E34C                     536          LSL.W   #1,D4
00001524  6500 0CDE                537          BCS     DS1111
00001528  6000 0AC4                538          BRA     DS1110
0000152C                           539  
0000152C                           540  *DS Tier 4 ----------------------------------------------------------------------------------------
0000152C                           541  
0000152C                           542  DS0100                      *DS0100: Processing for 0100 prefix
0000152C  0C44 E710                543          CMPI.W  #%1110011100010000,D4
00001530  6700 0042                544          BEQ     DNOP
00001534  0C44 E750                545          CMPI.W  #%1110011101010000,D4
00001538  6700 022C                546          BEQ     DRTS
0000153C                           547          
0000153C  3404                     548          MOVE.W  D4,D2
0000153E  0242 1C00                549          ANDI.W  #%0001110000000000,D2
00001542  0C42 1C00                550          CMPI.W  #%0001110000000000,D2
00001546  6700 022A                551          BEQ     DLEA
0000154A                           552          
0000154A  3404                     553          MOVE.W  D4,D2
0000154C  0242 B800                554          ANDI.W  #%1011100000000000,D2
00001550  0C42 8800                555          CMPI.W  #%1000100000000000,D2
00001554  6700 0332                556          BEQ     DMOVEM
00001558                           557          
00001558  E95C                     558          ROL.W   #4,D4
0000155A  1404                     559          MOVE.B  D4,D2
0000155C  0202 000F                560          ANDI.B  #%1111,D2
00001560                           561          
00001560  B43C 000E                562          CMP.B   #%1110,D2
00001564  6700 014A                563          BEQ     DJSR
00001568                           564          
00001568  B43C 0006                565          CMP.B   #%0110,D2
0000156C  6700 0012                566          BEQ     DNOT
00001570                           567          
00001570  6000 0CA8                568          BRA     DSERRINS
00001574                           569  
00001574  43F9 000024DC            570  DNOP    LEA     NOPM,A1
0000157A  4E4F                     571          TRAP    #15
0000157C  6000 0CB8                572          BRA     DSEND
00001580                           573          
00001580  E55C                     574  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
00001582  1A04                     575          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001584  0205 0003                576          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001588                           577  
00001588  BA3C 0000                578          CMP.B   #%00,D5         ; compare with byte size
0000158C  6700 0016                579          BEQ     DNOTB
00001590  BA3C 0001                580          CMP.B   #%01,D5         ; compare with word size
00001594  6700 0022                581          BEQ     DNOTW
00001598  BA3C 0002                582          CMP.B   #%10,D5         ; compare with long size
0000159C  6700 002E                583          BEQ     DNOTL
000015A0                           584          
000015A0  6000 0C94                585          BRA     DSEND           ; branch to DSEND in case of invalid code
000015A4                           586  
000015A4  43F9 000024F8            587  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015AA  4E4F                     588          TRAP    #15             ; print NOTM string
000015AC  43F9 000024B5            589          LEA     MODEB,A1        ; load effective address of MODEB string
000015B2  4E4F                     590          TRAP    #15             ; print MODEB string
000015B4  6000 002A                591          BRA     DNOTA           ; branch to addressing mode parsing
000015B8                           592  
000015B8  43F9 000024F8            593  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
000015BE  4E4F                     594          TRAP    #15             ; print NOTM string
000015C0  43F9 000024B8            595          LEA     MODEW,A1        ; load effective address of MODEW string
000015C6  4E4F                     596          TRAP    #15             ; print MODEW string
000015C8  6000 0016                597          BRA     DNOTA           ; branch to addressing mode parsing
000015CC                           598  
000015CC  43F9 000024F8            599  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
000015D2  4E4F                     600          TRAP    #15             ; print NOTM string
000015D4  43F9 000024BB            601          LEA     MODEL,A1        ; load effective address of MODEL string
000015DA  4E4F                     602          TRAP    #15             ; print MODEL string
000015DC  6000 0002                603          BRA     DNOTA           ; branch to addressing mode parsing
000015E0                           604  
000015E0  ED5C                     605  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
000015E2  1204                     606          MOVE.B  D4,D1           ; move the byte in D4 to D1
000015E4  0201 003F                607          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
000015E8                           608  
000015E8                           609          ; Now process addressing mode and register based on the value in D1
000015E8                           610  
000015E8  1A01                     611          MOVE.B  D1,D5           ; Move the byte in D1 to D5
000015EA  0205 0007                612          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000015EE  6700 0026                613          BEQ     DREG            ; If it is direct register mode
000015F2  BA3C 0002                614          CMP.B   #%010,D5        ; Compare with An
000015F6  6700 0036                615          BEQ     ADREG
000015FA  BA3C 0003                616          CMP.B   #%011,D5        ; Compare with (An)+
000015FE  6700 0046                617          BEQ     ADREGP
00001602  BA3C 0004                618          CMP.B   #%100,D5        ; Compare with -(An)
00001606  6700 005E                619          BEQ     MADREG
0000160A  BA3C 0007                620          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
0000160E  6700 007E                621          BEQ     EXT
00001612                           622              
00001612  6000 0C22                623          BRA     DSEND
00001616                           624  
00001616  1C01                     625  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
00001618  0206 0007                626          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
0000161C  DC39 000024C0            627          ADD.B   VALD,D6         ; Convert register number to ASCII
00001622  43F9 000024C0            628          LEA     VALD,A1         ; Load effective address of Dn
00001628  4E4F                     629          TRAP    #15             ; Print Dn
0000162A  6000 0C0A                630          BRA     DSEND
0000162E                           631  
0000162E  1C01                     632  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001630  0206 0007                633          ANDI.B  #%111,D6
00001634  DC39 000024BE            634          ADD.B   VALA,D6
0000163A  43F9 000024BE            635          LEA     VALA,A1
00001640  4E4F                     636          TRAP    #15
00001642  6000 0BF2                637          BRA     DSEND
00001646                           638  
00001646  1C01                     639  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
00001648  0206 0007                640          ANDI.B  #%111,D6
0000164C  DC39 000024BE            641          ADD.B   VALA,D6
00001652  43F9 000024BE            642          LEA     VALA,A1
00001658  4E4F                     643          TRAP    #15
0000165A  43F9 000024D1            644          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001660  4E4F                     645          TRAP    #15             ; Print )+
00001662  6000 0BD2                646          BRA     DSEND
00001666                           647  
00001666  1C01                     648  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
00001668  0206 0007                649          ANDI.B  #%111,D6
0000166C  DC39 000024BE            650          ADD.B   VALA,D6
00001672  43F9 000024CC            651          LEA     OPENDPTR,A1     ; Load effective address of -(
00001678  4E4F                     652          TRAP    #15             ; Print -(
0000167A  43F9 000024BE            653          LEA     VALA,A1
00001680  4E4F                     654          TRAP    #15
00001682  43F9 000024CF            655          LEA     CLOSEPTR,A1     ; Load effective address of )
00001688  4E4F                     656          TRAP    #15             ; Print )
0000168A  6000 0BAA                657          BRA     DSEND
0000168E                           658  
0000168E  1C01                     659  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001690  0206 0001                660          ANDI.B  #%1,D6
00001694  6700 000E                661          BEQ     EXTW
00001698  43F9 000024C2            662          LEA     VALN,A1         ; Load effective address of #
0000169E  4E4F                     663          TRAP    #15             ; Print #
000016A0  6000 0B94                664          BRA     DSEND
000016A4                           665  
000016A4  43F9 000024C4            666  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016AA  4E4F                     667          TRAP    #15             ; Print 0
000016AC  6000 0B88                668          BRA     DSEND
000016B0                           669  
000016B0                           670          
000016B0  E55C                     671  DJSR    ROL.W   #2,D4
000016B2  1404                     672          MOVE.B  D4,D2
000016B4  0202 0007                673          ANDI.B  #%111,D2
000016B8  0C02 0002                674          CMPI.B  #%10,D2
000016BC  6600 0B4C                675          BNE     DSERR
000016C0                           676          
000016C0  43F9 0000251D            677          LEA     JSRM,A1
000016C6  4E4F                     678          TRAP    #15
000016C8                           679          
000016C8  43F9 00002478            680          LEA     SM7,A1
000016CE  4E4F                     681          TRAP    #15
000016D0                           682  
000016D0  E75C                     683          ROL.W   #3,D4       * [D2] address mode
000016D2  1404                     684          MOVE.B  D4,D2
000016D4  0202 0007                685          ANDI.B  #%111,D2
000016D8                           686          
000016D8  E75C                     687          ROL.W   #3,D4       * [D1] address register
000016DA  1204                     688          MOVE.B  D4,D1
000016DC  0201 0007                689          ANDI.B  #%111,D1
000016E0                           690          
000016E0  0C02 0002                691          CMPI.B  #%010,D2
000016E4  6700 001E                692          BEQ     DJSR_REG
000016E8                           693          
000016E8  0C02 0007                694          CMPI.B  #%111,D2
000016EC  6600 0B1C                695          BNE     DSERR
000016F0                           696          
000016F0  0C01 0000                697          CMPI.B  #%000,D1
000016F4  6700 0034                698          BEQ     DJSR_CUSW
000016F8                           699          
000016F8  0C01 0001                700          CMPI.B  #%001,D1
000016FC  6700 004A                701          BEQ     DJSR_CUSL
00001700                           702          
00001700  6000 0B34                703          BRA     DSEND
00001704                           704          
00001704                           705          
00001704                           706          
00001704                           707  DJSR_REG        
00001704  43F9 000024CA            708          LEA     OPENPTR,A1
0000170A  4E4F                     709          TRAP    #15
0000170C                           710          
0000170C  43F9 000024BE            711          LEA     VALA,A1
00001712  4E4F                     712          TRAP    #15
00001714                           713          
00001714  103C 0003                714          MOVE.B  #3,D0
00001718  4E4F                     715          TRAP    #15
0000171A  103C 000E                716          MOVE.B  #14,D0
0000171E                           717          
0000171E  43F9 000024CF            718          LEA     CLOSEPTR,A1
00001724  4E4F                     719          TRAP    #15
00001726                           720          
00001726  6000 0B0E                721          BRA     DSEND
0000172A                           722  
0000172A                           723          
0000172A                           724  DJSR_CUSW
0000172A  43F9 000024D6            725          LEA     DOLLAR,A1
00001730  4E4F                     726          TRAP    #15
00001732  341A                     727          MOVE.W  (A2)+,D2
00001734  48E7 0400                728          MOVEM.L D5,-(SP)
00001738  1A3C 0030                729          MOVE.B  #48,D5
0000173C  4EB8 118A                730          JSR     HEXOUT
00001740  4CDF 0020                731          MOVEM.L (SP)+,D5
00001744  6000 0AF0                732          BRA     DSEND
00001748                           733  
00001748                           734  DJSR_CUSL
00001748  43F9 000024D6            735          LEA     DOLLAR,A1
0000174E  4E4F                     736          TRAP    #15
00001750  241A                     737          MOVE.L  (A2)+,D2
00001752  48E7 0400                738          MOVEM.L D5,-(SP)
00001756  1A3C 0030                739          MOVE.B  #48,D5
0000175A  4EB8 118A                740          JSR     HEXOUT
0000175E  4CDF 0020                741          MOVEM.L (SP)+,D5
00001762  6000 0AD2                742          BRA     DSEND
00001766                           743          
00001766  43F9 00002521            744  DRTS    LEA     RTSM,A1
0000176C  4E4F                     745          TRAP    #15
0000176E  6000 0AC6                746          BRA     DSEND
00001772                           747          
00001772                           748          
00001772                           749  DLEA    *printing
00001772  43F9 000024ED            750          LEA     LEAM,A1
00001778  4E4F                     751          TRAP    #15
0000177A  43F9 00002478            752          LEA     SM7,A1
00001780  4E4F                     753          TRAP    #15
00001782                           754          
00001782                           755          *getting destination register
00001782  E75C                     756          ROL.W   #3,D4
00001784  1404                     757          MOVE.B  D4,D2
00001786  0202 0007                758          ANDI.B  #%111,D2
0000178A                           759          
0000178A                           760          *shifting out 111
0000178A  E75C                     761          ROL.W   #3,D4
0000178C                           762          
0000178C                           763          *getting ea mode
0000178C  E75C                     764          ROL.W   #3,D4
0000178E  1604                     765          MOVE.B  D4,D3
00001790  0203 0007                766          ANDI.B  #%111,D3
00001794                           767          
00001794  B63C 0002                768          CMP.B   #%010,D3
00001798  6700 000E                769          BEQ     DLEAP
0000179C                           770          
0000179C  B63C 0007                771          CMP.B   #%111,D3
000017A0  6700 0006                772          BEQ     DLEAP
000017A4                           773          
000017A4  6000 0A84                774          BRA     DSERREA
000017A8                           775          
000017A8                           776          *getting ea reg
000017A8  E75C                     777  DLEAP   ROL.W   #3,D4
000017AA  1C04                     778          MOVE.B  D4,D6
000017AC  0206 0007                779          ANDI.B  #%111,D6
000017B0                           780          
000017B0                           781          *printing
000017B0  48E7 2000                782          MOVEM.L D2,-(SP)
000017B4  4EB8 121C                783          JSR     ADDRMODEALL
000017B8  4CDF 0004                784          MOVEM.L (SP)+,D2
000017BC                           785          
000017BC  43F9 000024D4            786          LEA     COMMA,A1
000017C2  4E4F                     787          TRAP    #15
000017C4  43F9 000024BE            788          LEA     VALA,A1
000017CA  4E4F                     789          TRAP    #15
000017CC  103C 0003                790          MOVE.B  #3,D0
000017D0  1202                     791          MOVE.B  D2,D1
000017D2  4E4F                     792          TRAP    #15
000017D4  103C 000E                793          MOVE.B  #14,D0
000017D8                           794          
000017D8  6000 0A5C                795          BRA DSEND
000017DC                           796          
000017DC                           797  JSR010
000017DC  B63C 0002                798          CMP.B   #%010,D3
000017E0  6600 002A                799          BNE     JSR111
000017E4  43F9 000024CA            800          LEA     OPENPTR,A1
000017EA  4E4F                     801          TRAP    #15
000017EC  43F9 000024BE            802          LEA     VALA,A1
000017F2  4E4F                     803          TRAP    #15
000017F4  103C 0003                804          MOVE.B  #3,D0
000017F8  1206                     805          MOVE.B  D6,D1
000017FA  4E4F                     806          TRAP    #15
000017FC  103C 000E                807          MOVE.B  #14,D0
00001800  43F9 000024CF            808          LEA     CLOSEPTR,A1
00001806  4E4F                     809          TRAP    #15
00001808  6000 005E                810          BRA     JSRPRINT2
0000180C                           811  JSR111
0000180C  B63C 0007                812          CMP.B   #%111,D3
00001810  6600 09F8                813          BNE     DSERR
00001814  BC3C 0000                814          CMP.B   #%000,D6
00001818  6600 0024                815          BNE     JSR111001
0000181C  43F9 000024D6            816          LEA     DOLLAR,A1
00001822  4E4F                     817          TRAP    #15
00001824  341A                     818          MOVE.W  (A2)+,D2
00001826  48E7 0400                819          MOVEM.L D5,-(SP)    
0000182A  1A3C 0030                820          MOVE.B  #48,D5
0000182E  4EB8 118A                821          JSR     HEXOUT
00001832  4CDF 0020                822          MOVEM.L (SP)+,D5
00001836  103C 000E                823          MOVE.B  #14,D0
0000183A  6000 002C                824          BRA     JSRPRINT2
0000183E                           825          
0000183E                           826  JSR111001
0000183E  BC3C 0001                827          CMP.B   #%001,D6
00001842  6600 09C6                828          BNE     DSERR
00001846  43F9 000024D6            829          LEA     DOLLAR,A1
0000184C  4E4F                     830          TRAP    #15
0000184E  241A                     831          MOVE.L  (A2)+,D2
00001850  48E7 0400                832          MOVEM.L D5,-(SP)
00001854  1A3C 0030                833          MOVE.B  #48,D5
00001858  4EB8 118A                834          JSR     HEXOUT
0000185C  4CDF 0020                835          MOVEM.L (SP)+,D5
00001860  103C 000E                836          MOVE.B  #14,D0
00001864  6000 0002                837          BRA     JSRPRINT2
00001868                           838          
00001868                           839  JSRPRINT2
00001868  43F9 000024D4            840          LEA     COMMA,A1
0000186E  4E4F                     841          TRAP    #15
00001870  43F9 000024BE            842          LEA     VALA,A1
00001876  4E4F                     843          TRAP    #15
00001878  103C 0003                844          MOVE.B  #3,D0
0000187C  3207                     845          MOVE.W  D7,D1
0000187E  4E4F                     846          TRAP    #15
00001880  103C 000E                847          MOVE.B  #14,D0
00001884                           848          
00001884  6000 09B0                849          BRA     DSEND
00001888                           850          
00001888                           851          
00001888                           852  DMOVEM
00001888                           853  *printing movem
00001888  43F9 000024E0            854          LEA     MOVEM,A1
0000188E  4E4F                     855          TRAP    #15
00001890  43F9 000024C8            856          LEA     VALM,A1
00001896  4E4F                     857          TRAP    #15
00001898                           858          
00001898                           859  *parsing initial bits
00001898  E55C                     860          ROL.W   #2,D4
0000189A  1E04                     861          MOVE.B  D4,D7
0000189C  0207 0001                862          ANDI.B  #%1,D7      *getting dr field
000018A0                           863          
000018A0  E95C                     864          ROL.W   #4,D4
000018A2  1A04                     865          MOVE.B  D4,D5
000018A4  0205 0001                866          ANDI.B  #1,D5       *getting size field
000018A8                           867          
000018A8                           868          *printing size
000018A8  BA7C 0000                869          CMP     #0,D5
000018AC  6600 000E                870          BNE     MOVEML
000018B0  43F9 000024B8            871          LEA     MODEW,A1
000018B6  4E4F                     872          TRAP    #15
000018B8  6000 000A                873          BRA     MOVEMEA
000018BC                           874  MOVEML        
000018BC  43F9 000024BB            875          LEA     MODEL,A1
000018C2  4E4F                     876          TRAP    #15
000018C4                           877          
000018C4                           878  MOVEMEA   
000018C4  43F9 00002462            879          LEA     SM3,A1
000018CA  4E4F                     880          TRAP    #15
000018CC                           881          
000018CC  E75C                     882          ROL.W   #3,D4       *mode bits
000018CE  1604                     883          MOVE.B  D4,D3
000018D0  0203 0007                884          ANDI.B  #%111,D3
000018D4  E75C                     885          ROL.W   #3,D4       *register bits
000018D6  1C04                     886          MOVE.B  D4,D6
000018D8  0206 0007                887          ANDI.B  #%111,D6
000018DC                           888          
000018DC  341A                     889          MOVE.W  (A2)+,D2
000018DE                           890          
000018DE  BE3C 0001                891          CMP.B   #1,D7
000018E2  6600 0016                892          BNE     MOVEMEB
000018E6                           893          
000018E6  48E7 2000                894          MOVEM.L D2,-(SP)
000018EA  4EB8 121C                895          JSR     ADDRMODEALL
000018EE  4CDF 0004                896          MOVEM.L (SP)+,D2
000018F2                           897          
000018F2  43F9 000024D4            898          LEA     COMMA,A1
000018F8  4E4F                     899          TRAP    #15
000018FA                           900          
000018FA                           901  MOVEMEB 
000018FA                           902          
000018FA  48E7 0100                903          MOVEM.L D7,-(SP)
000018FE                           904          
000018FE  B63C 0004                905          CMP.B   #%100,D3
00001902  6700 000E                906          BEQ     MOVEMEB1
00001906                           907          
00001906  3E02                     908          MOVE.W  D2,D7
00001908  0247 FF00                909          ANDI.W  #$FF00,D7
0000190C  E04F                     910          LSR.W   #8,D7
0000190E  6000 0008                911          BRA     MOVEMEB2
00001912                           912          
00001912                           913  MOVEMEB1 
00001912  3E02                     914          MOVE.W  D2,D7
00001914  0247 00FF                915          ANDI.W  #$FF,D7
00001918                           916          
00001918                           917  MOVEMEB2
00001918                           918  
00001918  4EB9 00001A10            919          JSR     MOVEMLOOP
0000191E  4CDF 0080                920          MOVEM.L (SP)+,D7
00001922  103C 0037                921          MOVE.B  #55,D0
00001926  B83C 0008                922          CMP.B   #8,D4
0000192A  6C00 0040                923          BGE     MOVEM3
0000192E  103C 000E                924          MOVE.B  #14,D0
00001932                           925          
00001932  43F9 000024BE            926  MOVEM2  LEA     VALA,A1
00001938  4E4F                     927          TRAP    #15
0000193A                           928          
0000193A  103C 0003                929          MOVE.B  #3,D0
0000193E  1204                     930          MOVE.B  D4,D1
00001940  4E4F                     931          TRAP    #15
00001942  103C 000E                932          MOVE.B  #14,D0
00001946                           933          
00001946  BA3C 0001                934          CMP.B   #1,D5
0000194A  6700 0020                935          BEQ     MOVEM3
0000194E                           936          
0000194E  43F9 000024DA            937          LEA     DASH,A1
00001954  4E4F                     938          TRAP    #15
00001956  D205                     939          ADD.B   D5,D1
00001958  5301                     940          SUBQ.B  #1,D1
0000195A                           941          
0000195A  43F9 000024BE            942          LEA     VALA,A1
00001960  4E4F                     943          TRAP    #15
00001962  103C 0003                944          MOVE.B  #3,D0
00001966  4E4F                     945          TRAP    #15
00001968  103C 000E                946          MOVE.B  #14,D0
0000196C                           947          
0000196C  48E7 0100                948  MOVEM3  MOVEM.L D7,-(SP)
00001970  3E02                     949          MOVE.W  D2,D7
00001972                           950          
00001972  B63C 0004                951          CMP.B   #%100,D3
00001976  6700 000A                952          BEQ     MOVEM31
0000197A                           953          
0000197A  0247 00FF                954          ANDI.W  #$FF,D7
0000197E  6000 0008                955          BRA     MOVEM32
00001982                           956          
00001982                           957  MOVEM31 
00001982  0247 FF00                958          ANDI.W  #$FF00,D7
00001986  E04F                     959          LSR.W   #8,D7
00001988                           960  
00001988  4EB9 00001A10            961  MOVEM32 JSR     MOVEMLOOP
0000198E  4CDF 0080                962          MOVEM.L (SP)+,D7
00001992                           963          
00001992  B03C 0037                964          CMP.B   #55,D0
00001996  6700 0016                965          BEQ     MOVEM4
0000199A                           966          
0000199A  B83C 0008                967          CMP.B   #8,D4
0000199E  6C00 0054                968          BGE     MOVEM5
000019A2                           969          
000019A2  103C 000E                970          MOVE.B  #14,D0
000019A6  43F9 000024D8            971          LEA     SLASH,A1
000019AC  4E4F                     972          TRAP    #15
000019AE                           973  
000019AE  103C 000E                974  MOVEM4  MOVE.B  #14,D0
000019B2  B83C 0008                975          CMP.B   #8,D4
000019B6  6C00 003C                976          BGE     MOVEM5
000019BA                           977          
000019BA  43F9 000024C0            978          LEA     VALD,A1
000019C0  4E4F                     979          TRAP    #15
000019C2                           980          
000019C2  103C 0003                981          MOVE.B  #3,D0
000019C6  1204                     982          MOVE.B  D4,D1
000019C8  4E4F                     983          TRAP    #15
000019CA  103C 000E                984          MOVE.B  #14,D0
000019CE                           985          
000019CE  BA3C 0001                986          CMP.B   #1,D5
000019D2  6700 0020                987          BEQ     MOVEM5
000019D6                           988          
000019D6  43F9 000024DA            989          LEA     DASH,A1
000019DC  4E4F                     990          TRAP    #15
000019DE  D205                     991          ADD.B   D5,D1
000019E0  5301                     992          SUBQ.B  #1,D1
000019E2                           993          
000019E2  43F9 000024C0            994          LEA     VALD,A1
000019E8  4E4F                     995          TRAP    #15
000019EA  103C 0003                996          MOVE.B  #3,D0
000019EE  4E4F                     997          TRAP    #15
000019F0  103C 000E                998          MOVE.B  #14,D0
000019F4                           999          
000019F4                          1000          
000019F4                          1001  
000019F4  103C 000E               1002  MOVEM5  MOVE.B  #14,D0
000019F8                          1003          
000019F8  BE3C 0001               1004          CMP.B   #1,D7
000019FC  6700 0838               1005          BEQ     DSEND
00001A00                          1006          
00001A00  43F9 000024D4           1007          LEA     COMMA,A1
00001A06  4E4F                    1008          TRAP    #15
00001A08                          1009          
00001A08  4EB8 121C               1010          JSR     ADDRMODEALL
00001A0C                          1011          
00001A0C  6000 0828               1012          BRA     DSEND
00001A10                          1013  
00001A10                          1014  MOVEMLOOP
00001A10  1A3C 0000               1015          MOVE.B  #0,D5
00001A14  183C 0000               1016          MOVE.B  #0,D4
00001A18                          1017          
00001A18                          1018  MOVEMSTEP
00001A18  B63C 0004               1019          CMP.B   #%100,D3
00001A1C  6700 0014               1020          BEQ     MOVEMSHIFTL
00001A20  6000 0018               1021          BRA     MOVEMSHIFTR
00001A24                          1022  MOVEMSTEP1
00001A24  0C05 0000               1023          CMPI.B  #0,D5
00001A28  6E00 0026               1024          BGT     MOVEMLOOPDONE
00001A2C  5204                    1025          ADDQ.B  #1,D4
00001A2E  6000 0012               1026          BRA     MOVEMSTEP2
00001A32                          1027  
00001A32                          1028  MOVEMSHIFTL
00001A32  E30F                    1029          LSL.B   #1,D7
00001A34  6500 0016               1030          BCS     MOVEMLOOPINC
00001A38  60EA                    1031          BRA     MOVEMSTEP1
00001A3A                          1032  
00001A3A                          1033  MOVEMSHIFTR
00001A3A  E20F                    1034          LSR.B   #1,D7
00001A3C  6500 000E               1035          BCS     MOVEMLOOPINC
00001A40  60E2                    1036          BRA     MOVEMSTEP1
00001A42                          1037  
00001A42                          1038  MOVEMSTEP2
00001A42  B83C 0008               1039          CMP.B   #8,D4
00001A46  6DD0                    1040          BLT     MOVEMSTEP
00001A48  6000 0006               1041          BRA     MOVEMLOOPDONE
00001A4C                          1042  
00001A4C                          1043  MOVEMLOOPINC
00001A4C  5205                    1044          ADDQ.B  #1,D5
00001A4E  60F2                    1045          BRA     MOVEMSTEP2
00001A50                          1046  
00001A50                          1047  MOVEMLOOPDONE
00001A50  4E75                    1048          RTS
00001A52                          1049          
00001A52                          1050          
00001A52                          1051  MOVEMLOOPSINGLEAR
00001A52                          1052          
00001A52                          1053          
00001A52  6000 07E2               1054          BRA     DSEND
00001A56                          1055  
00001A56                          1056  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A56                          1057  
00001A56  4E71                    1058  DS0101  NOP
00001A58                          1059          
00001A58  4E71                    1060  DADDQ   NOP
00001A5A  43F9 000024E5           1061          LEA     ADDM,A1
00001A60  4E4F                    1062          TRAP    #15
00001A62  43F9 000024C6           1063          LEA     VALQ,A1
00001A68  4E4F                    1064          TRAP    #15
00001A6A                          1065          
00001A6A                          1066          *parsing data to d1
00001A6A  E75C                    1067          ROL.W   #3,D4
00001A6C  1204                    1068          MOVE.B  D4,D1
00001A6E  C23C 0007               1069          AND.B   #%111,D1
00001A72                          1070          
00001A72                          1071          *ensuring next bit is 0
00001A72  E35C                    1072          ROL.W   #1,D4
00001A74  1A04                    1073          MOVE.B  D4,D5
00001A76  CA3C 0001               1074          AND.B   #%1,D5
00001A7A  BA7C 0000               1075          CMP     #0,D5
00001A7E  6600 078A               1076          BNE     DSERR
00001A82                          1077          
00001A82                          1078          *parsing and printing size
00001A82  E55C                    1079          ROL.W   #2,D4
00001A84  1A04                    1080          MOVE.B  D4,D5
00001A86  CA3C 0003               1081          AND.B   #%11,D5
00001A8A  4EB8 11D2               1082          JSR     SIZE
00001A8E  43F9 00002466           1083          LEA     SM4,A1
00001A94  4E4F                    1084          TRAP    #15
00001A96                          1085          
00001A96                          1086          *parsing effective address information
00001A96                          1087          *mode:
00001A96  E75C                    1088          ROL.W   #3,D4
00001A98  1604                    1089          MOVE.B  D4,D3
00001A9A  C63C 0007               1090          AND.B   #%111,D3
00001A9E                          1091          
00001A9E                          1092          *register:
00001A9E  E71C                    1093          ROL.B   #3,D4
00001AA0  1C04                    1094          MOVE.B  D4,D6
00001AA2  CC3C 0007               1095          AND.B   #%111,D6
00001AA6                          1096          
00001AA6                          1097          *printing data
00001AA6  43F9 000024C2           1098          LEA     VALN,A1
00001AAC  4E4F                    1099          TRAP    #15
00001AAE  103C 0003               1100          MOVE.B  #3,D0
00001AB2  4E4F                    1101          TRAP    #15
00001AB4  103C 000E               1102          MOVE.B  #14,D0
00001AB8  43F9 000024D4           1103          LEA     COMMA,A1
00001ABE  4E4F                    1104          TRAP    #15
00001AC0                          1105          
00001AC0  B67C 0004               1106          CMP     #%100,D3
00001AC4  6700 0744               1107          BEQ     DSERR
00001AC8  4EB8 121C               1108          JSR     ADDRMODEALL
00001ACC                          1109          
00001ACC  6000 0768               1110          BRA     DSEND
00001AD0                          1111          
00001AD0                          1112  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AD0                          1113  
00001AD0                          1114  DS0110  
00001AD0  E95C                    1115          ROL.W   #4,D4   *Get next 4 bits
00001AD2  1404                    1116          MOVE.B  D4,D2   *Copy to D2
00001AD4  0202 000F               1117          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001AD8                          1118          
00001AD8  B43C 0000               1119          CMP.B   #%0000,D2   *BRA
00001ADC  6700 001E               1120          BEQ     DBRA
00001AE0                          1121          
00001AE0  B43C 000E               1122          CMP.B   #%1110,D2   *BGT   
00001AE4  6700 00A2               1123          BEQ     DBGT
00001AE8                          1124          
00001AE8  B43C 000F               1125          CMP.B   #%1111,D2   *BLE   
00001AEC  6700 00D6               1126          BEQ     DBLE
00001AF0                          1127          
00001AF0  B43C 0007               1128          CMP.B   #%0111,D2   *BEQ   
00001AF4  6700 010E               1129          BEQ     DBEQ
00001AF8                          1130          
00001AF8  6000 0720               1131          BRA     DSERRINS
00001AFC                          1132          
00001AFC  43F9 00002525           1133  DBRA    LEA     BRAM,A1
00001B02  4E4F                    1134          TRAP    #15
00001B04                          1135          
00001B04  43F9 00002478           1136          LEA     SM7,A1
00001B0A  4E4F                    1137          TRAP    #15
00001B0C                          1138  
00001B0C  E15C                    1139          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B0E  1204                    1140          MOVE.B  D4,D1
00001B10  0281 00001100           1141          ANDI.L  #$1100,D1
00001B16                          1142          
00001B16  0C01 0000               1143          CMPI.B  #%00000000,D1
00001B1A  6700 0028               1144          BEQ     DBRA_16BIT      * Word
00001B1E                          1145          
00001B1E  0C01 00FF               1146          CMPI.B  #%11111111,D1
00001B22  6700 0042               1147          BEQ     DBRA_32BIT      * Long
00001B26                          1148          
00001B26                          1149          * 8 Bit Displacement
00001B26  43F9 000024D6           1150          LEA     DOLLAR,A1
00001B2C  4E4F                    1151          TRAP    #15
00001B2E                          1152          
00001B2E  341A                    1153          MOVE.W  (A2)+,D2
00001B30  D441                    1154          ADD.W   D1,D2
00001B32  5842                    1155          ADD.W   #4,D2   *unsure   
00001B34  1A3C 0030               1156          MOVE.B  #48,D5
00001B38  4EB8 118A               1157          JSR     HEXOUT
00001B3C  6000 06F8               1158          BRA     DSEND
00001B40                          1159  
00001B40                          1160          *Displacement is put in D1      
00001B40                          1161          
00001B40                          1162          
00001B40  6000 06F4               1163          BRA     DSEND
00001B44                          1164          
00001B44                          1165  DBRA_16BIT
00001B44  43F9 000024D6           1166          LEA     DOLLAR,A1
00001B4A  4E4F                    1167          TRAP    #15
00001B4C  341A                    1168          MOVE.W  (A2)+,D2
00001B4E  D44A                    1169          ADD.W   A2,D2
00001B50  5542                    1170          SUB.W   #2,D2   *unsure
00001B52  48E7 0400               1171          MOVEM.L D5,-(SP)    
00001B56  1A3C 0030               1172          MOVE.B  #48,D5
00001B5A  4EB8 118A               1173          JSR     HEXOUT
00001B5E  4CDF 0020               1174          MOVEM.L (SP)+,D5
00001B62  6000 06D2               1175          BRA     DSEND
00001B66                          1176  
00001B66                          1177  DBRA_32BIT
00001B66  43F9 000024D6           1178          LEA     DOLLAR,A1
00001B6C  4E4F                    1179          TRAP    #15
00001B6E  241A                    1180          MOVE.L  (A2)+,D2
00001B70  D48A                    1181          ADD.L   A2,D2
00001B72  5582                    1182          SUB.L   #2,D2   *unsure
00001B74  48E7 0400               1183          MOVEM.L D5,-(SP)
00001B78  1A3C 0030               1184          MOVE.B  #48,D5
00001B7C  4EB8 118A               1185          JSR     HEXOUT
00001B80  4CDF 0020               1186          MOVEM.L (SP)+,D5
00001B84  6000 06B0               1187          BRA     DSEND
00001B88                          1188          
00001B88                          1189          
00001B88                          1190          
00001B88  43F9 00002511           1191  DBGT    LEA     BGTM,A1
00001B8E  4E4F                    1192          TRAP    #15
00001B90                          1193          
00001B90  43F9 00002478           1194          LEA     SM7,A1
00001B96  4E4F                    1195          TRAP    #15
00001B98                          1196          
00001B98  E15C                    1197          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B9A  1204                    1198          MOVE.B  D4,D1
00001B9C  0241 00FF               1199          ANDI.W  #%0000000011111111,D1
00001BA0                          1200          
00001BA0  0C01 0000               1201          CMPI.B  #%00000000,D1
00001BA4  679E                    1202          BEQ     DBRA_16BIT      * Word
00001BA6                          1203          
00001BA6  0C01 00FF               1204          CMPI.B  #%11111111,D1
00001BAA  67BA                    1205          BEQ     DBRA_32BIT      * Long
00001BAC                          1206          
00001BAC  43F9 000024D6           1207          LEA     DOLLAR,A1
00001BB2  4E4F                    1208          TRAP    #15
00001BB4                          1209      
00001BB4  340A                    1210          MOVE.W  A2,D2
00001BB6  D441                    1211          ADD.W   D1,D2
00001BB8                          1212    
00001BB8  1A3C 0030               1213          MOVE.B  #48,D5
00001BBC  4EB8 118A               1214          JSR     HEXOUT
00001BC0  6000 0674               1215          BRA     DSEND
00001BC4                          1216  
00001BC4  43F9 00002515           1217  DBLE    LEA     BLEM,A1
00001BCA  4E4F                    1218          TRAP    #15
00001BCC                          1219          
00001BCC  43F9 00002478           1220          LEA     SM7,A1
00001BD2  4E4F                    1221          TRAP    #15
00001BD4                          1222          
00001BD4  E15C                    1223          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BD6  1204                    1224          MOVE.B  D4,D1
00001BD8  0241 00FF               1225          ANDI.W  #%0000000011111111,D1
00001BDC                          1226          
00001BDC  0C01 0000               1227          CMPI.B  #%00000000,D1
00001BE0  6700 FF62               1228          BEQ     DBRA_16BIT      * Word
00001BE4                          1229          
00001BE4  0C01 00FF               1230          CMPI.B  #%11111111,D1
00001BE8  6700 FF7C               1231          BEQ     DBRA_32BIT      * Long
00001BEC                          1232          
00001BEC  43F9 000024D6           1233          LEA     DOLLAR,A1
00001BF2  4E4F                    1234          TRAP    #15
00001BF4                          1235          
00001BF4  340A                    1236          MOVE.W  A2,D2
00001BF6  D441                    1237          ADD.W   D1,D2
00001BF8                          1238   
00001BF8  1A3C 0030               1239          MOVE.B  #48,D5
00001BFC  4EB8 118A               1240          JSR     HEXOUT
00001C00                          1241          
00001C00  6000 0634               1242          BRA     DSEND
00001C04                          1243  
00001C04  43F9 00002519           1244  DBEQ    LEA     BEQM,A1
00001C0A  4E4F                    1245          TRAP    #15
00001C0C                          1246          
00001C0C  43F9 00002478           1247          LEA     SM7,A1
00001C12  4E4F                    1248          TRAP    #15
00001C14                          1249          
00001C14  E15C                    1250          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C16  1204                    1251          MOVE.B  D4,D1
00001C18  0241 00FF               1252          ANDI.W  #%0000000011111111,D1
00001C1C                          1253          
00001C1C  0C01 0000               1254          CMPI.B  #%00000000,D1
00001C20  6700 FF22               1255          BEQ     DBRA_16BIT      * Word
00001C24                          1256          
00001C24  0C01 00FF               1257          CMPI.B  #%11111111,D1
00001C28  6700 FF3C               1258          BEQ     DBRA_32BIT      * Long
00001C2C                          1259          
00001C2C  43F9 000024D6           1260          LEA     DOLLAR,A1
00001C32  4E4F                    1261          TRAP    #15
00001C34                          1262  
00001C34  340A                    1263          MOVE.W  A2,D2
00001C36  D441                    1264          ADD.W   D1,D2
00001C38                          1265   
00001C38  1A3C 0030               1266          MOVE.B  #48,D5
00001C3C  4EB8 118A               1267          JSR     HEXOUT
00001C40                          1268          
00001C40  6000 05F4               1269          BRA     DSEND
00001C44                          1270  
00001C44                          1271  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C44                          1272  
00001C44  4E71                    1273  DS0111  NOP
00001C46                          1274          
00001C46  4E71                    1275  DMOVEQ  NOP
00001C48  43F9 000024E0           1276          LEA     MOVEM,A1
00001C4E  4E4F                    1277          TRAP    #15
00001C50  43F9 000024C6           1278          LEA     VALQ,A1
00001C56  4E4F                    1279          TRAP    #15
00001C58  43F9 0000246B           1280          LEA     SM5,A1
00001C5E  4E4F                    1281          TRAP    #15
00001C60                          1282          
00001C60                          1283          *getting register number
00001C60  E75C                    1284          ROL.W   #3,D4
00001C62  1A04                    1285          MOVE.B  D4,D5
00001C64  CA3C 0007               1286          AND.B   #%111,D5
00001C68                          1287          
00001C68                          1288          *throwing error if next digit not 0
00001C68  E35C                    1289          ROL.W   #1,D4
00001C6A  1C04                    1290          MOVE.B  D4,D6
00001C6C  CC3C 0001               1291          AND.B   #%1,D6
00001C70  BC3C 0000               1292          CMP.B   #0,D6
00001C74  6600 0594               1293          BNE     DSERR
00001C78                          1294          
00001C78                          1295          *getting data and printing information
00001C78  E15C                    1296          ROL.W   #8,D4
00001C7A  1204                    1297          MOVE.B  D4,D1
00001C7C  C23C 00FF               1298          AND.B   #%11111111,D1
00001C80  43F9 000024C2           1299          LEA     VALN,A1
00001C86  4E4F                    1300          TRAP    #15
00001C88  103C 0003               1301          MOVE.B  #3,D0
00001C8C  4E4F                    1302          TRAP    #15
00001C8E  103C 000E               1303          MOVE.B  #14,D0
00001C92  43F9 000024D4           1304          LEA     COMMA,A1
00001C98  4E4F                    1305          TRAP    #15
00001C9A  43F9 000024C0           1306          LEA     VALD,A1
00001CA0  4E4F                    1307          TRAP    #15
00001CA2  103C 0003               1308          MOVE.B  #3,D0
00001CA6  3205                    1309          MOVE.W  D5,D1
00001CA8  4E4F                    1310          TRAP    #15
00001CAA                          1311          
00001CAA  6000 058A               1312          BRA     DSEND
00001CAE                          1313          
00001CAE                          1314  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001CAE                          1315  
00001CAE  4E71                    1316  DS1000  NOP
00001CB0                          1317          
00001CB0  E75C                    1318  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001CB2  1A04                    1319          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CB4  0205 0007               1320          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CB8  1C05                    1321          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001CBA                          1322  
00001CBA  E75C                    1323          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001CBC  1A04                    1324          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CBE  0205 0007               1325          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CC2  1E05                    1326          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001CC4  BA3C 0000               1327          CMP.B   #%000,D5        ; Compare with byte size
00001CC8  6700 0016               1328          BEQ     DORB
00001CCC  BA3C 0001               1329          CMP.B   #%001,D5        ; Compare with word size
00001CD0  6700 0022               1330          BEQ     DORW
00001CD4  BA3C 0002               1331          CMP.B   #%010,D5        ; Compare with long size
00001CD8  6700 002E               1332          BEQ     DORL
00001CDC                          1333  
00001CDC  6000 0558               1334          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001CE0                          1335  
00001CE0  43F9 000024F5           1336  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001CE6  4E4F                    1337          TRAP    #15             ; Print ORM string
00001CE8  43F9 000024B5           1338          LEA     MODEB,A1        ; Load effective address of MODEB string
00001CEE  4E4F                    1339          TRAP    #15             ; Print MODEB string
00001CF0  6000 002A               1340          BRA     DORA            ; Branch to addressing mode parsing
00001CF4                          1341  
00001CF4  43F9 000024F5           1342  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001CFA  4E4F                    1343          TRAP    #15             ; Print ORM string
00001CFC  43F9 000024B8           1344          LEA     MODEW,A1        ; Load effective address of MODEW string
00001D02  4E4F                    1345          TRAP    #15             ; Print MODEW string
00001D04  6000 0016               1346          BRA     DORA            ; Branch to addressing mode parsing
00001D08                          1347  
00001D08  43F9 000024F5           1348  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001D0E  4E4F                    1349          TRAP    #15             ; Print ORM string
00001D10  43F9 000024BB           1350          LEA     MODEL,A1        ; Load effective address of MODEL string
00001D16  4E4F                    1351          TRAP    #15             ; Print MODEL string
00001D18  6000 0002               1352          BRA     DORA            ; Branch to addressing mode parsing
00001D1C                          1353  
00001D1C  43F9 00002471           1354  DORA    LEA     SM6,A1
00001D22  4E4F                    1355          TRAP    #15
00001D24  ED5C                    1356          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001D26  1A04                    1357          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D28  0205 0038               1358          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001D2C  E61D                    1359          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001D2E  1605                    1360          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001D30  0204 0007               1361          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001D34  1C04                    1362          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001D36                          1363  
00001D36  BE3C 0004               1364          CMP.B   #%100,D7        ; Compare opmode with '100'
00001D3A  6D00 0006               1365          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001D3E  6000 002A               1366          BRA     DORAD           ; Else, branch to DORAD
00001D42                          1367  
00001D42  4EB8 121C               1368  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D46  103C 000E               1369          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001D4A  43F9 000024D4           1370          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D50  4E4F                    1371          TRAP    #15             ; Print comma
00001D52  43F9 000024C0           1372          LEA     VALD,A1
00001D58  4E4F                    1373          TRAP    #15
00001D5A  1206                    1374          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D5C  103C 0003               1375          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D60  4E4F                    1376          TRAP    #15             ; Print register number
00001D62  103C 000E               1377          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D66  6000 04CE               1378          BRA     DSEND           ; Branch to DSEND
00001D6A                          1379  
00001D6A  1206                    1380  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D6C  103C 0003               1381          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D70  4E4F                    1382          TRAP    #15             ; Print register number
00001D72  103C 000E               1383          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D76  43F9 000024D4           1384          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D7C  4E4F                    1385          TRAP    #15             ; Print comma
00001D7E  4EB8 121C               1386          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D82  103C 000E               1387          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D86  6000 04AE               1388          BRA     DSEND           ; Branch to DSEND                 
00001D8A                          1389  
00001D8A                          1390  
00001D8A                          1391  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D8A                          1392  
00001D8A  4E71                    1393  DS1001  NOP
00001D8C  4E71                    1394  DSUB    NOP
00001D8E                          1395  *print sub
00001D8E  43F9 000024E9           1396          LEA     SUBM,A1
00001D94  4E4F                    1397          TRAP    #15
00001D96                          1398  
00001D96                          1399  *parse dn reg: 3 bits
00001D96                          1400  *number of the data register involved
00001D96                          1401  *nums 0-7, paired with below
00001D96  E75C                    1402          ROL.W   #3,D4       *dn reg num in d1
00001D98  1E04                    1403          MOVE.B  D4,D7
00001D9A  0207 0007               1404          ANDI.B  #%111,D7
00001D9E                          1405          
00001D9E  3C47                    1406          MOVE.W  D7,A6       *temporary for storage
00001DA0                          1407  
00001DA0                          1408  *parse opmode: 3 bits
00001DA0                          1409  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001DA0                          1410  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001DA0                          1411  *invalid: 111, 011
00001DA0                          1412  *parse first digit separately
00001DA0  E35C                    1413          ROL.W   #1,D4       *addressing mode in d2
00001DA2  1E04                    1414          MOVE.B  D4,D7
00001DA4  0207 0001               1415          ANDI.B  #%1,D7
00001DA8                          1416          
00001DA8                          1417  *parsing next two digits of size
00001DA8  E55C                    1418          ROL.W   #2,D4       *size in d5
00001DAA  1A04                    1419          MOVE.B  D4,D5
00001DAC  0205 0003               1420          ANDI.B  #%11,D5
00001DB0  4EB8 11D2               1421          JSR     SIZE
00001DB4  43F9 0000246B           1422          LEA     SM5,A1
00001DBA  4E4F                    1423          TRAP    #15
00001DBC                          1424          
00001DBC                          1425  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001DBC  BE3C 0000               1426          CMP.B   #%0,D7       *if 1, then register info printed last
00001DC0  6700 0026               1427          BEQ     DSUBEA      *branch to ea before register
00001DC4                          1428          
00001DC4                          1429  *printing register information
00001DC4                          1430  DSUBPRNTREG
00001DC4  43F9 000024C0           1431          LEA     VALD,A1
00001DCA  4E4F                    1432          TRAP    #15
00001DCC  320E                    1433          MOVE.W  A6,D1       *retrieving a6 register data
00001DCE  103C 0003               1434          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001DD2  4E4F                    1435          TRAP    #15         *printing register number
00001DD4  103C 000E               1436          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001DD8  BE3C 0000               1437          CMP.B   #%0,D7      *if info finished printing
00001DDC  6700 0458               1438          BEQ     DSEND      *branch to end
00001DE0  43F9 000024D4           1439          LEA     COMMA,A1
00001DE6  4E4F                    1440          TRAP    #15
00001DE8                          1441  
00001DE8                          1442          
00001DE8                          1443  * parse ea mode: 3 bits
00001DE8                          1444  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001DE8                          1445  *address reg direct not allowed for .B operations
00001DE8                          1446  *no invalid
00001DE8                          1447  DSUBEA
00001DE8  E75C                    1448          ROL.W   #3,D4       *ea mode
00001DEA  1604                    1449          MOVE.B  D4,D3
00001DEC  0203 0007               1450          ANDI.B  #%111,D3
00001DF0                          1451  
00001DF0                          1452  *parse ea reg: 3 bits
00001DF0                          1453  *no invalid: paired with opmode below (nums 0-7)
00001DF0                          1454  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001DF0  E75C                    1455          ROL.W   #3,D4       *ea mode
00001DF2  1C04                    1456          MOVE.B  D4,D6
00001DF4  0206 0007               1457          ANDI.B  #%111,D6
00001DF8                          1458          
00001DF8  2803                    1459          MOVE.L  D3,D4   *temporarily using D4 
00001DFA                          1460          
00001DFA                          1461  *comparisons
00001DFA  B67C 0004               1462          CMP     #%100,D3
00001DFE  6700 040A               1463          BEQ     DSERR
00001E02  4EB8 121C               1464          JSR     ADDRMODEALL
00001E06  BE3C 0001               1465          CMP.B   #%1,D7      *if info printed
00001E0A  6700 042A               1466          BEQ     DSEND       *end
00001E0E  43F9 000024D4           1467          LEA     COMMA,A1
00001E14  4E4F                    1468          TRAP    #15
00001E16  60AC                    1469          BRA     DSUBPRNTREG *check d6 for size of data
00001E18                          1470  *then take data from d4 and print (?)
00001E18                          1471  
00001E18  6000 041C               1472          BRA     DSEND
00001E1C                          1473  
00001E1C                          1474  
00001E1C                          1475  
00001E1C  4E71                    1476  DS1010  NOP
00001E1E  6000 03FA               1477          BRA     DSERRINS
00001E22                          1478  
00001E22                          1479          
00001E22                          1480  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E22                          1481  
00001E22  4E71                    1482  DS1011  NOP
00001E24  6000 03F4               1483          BRA     DSERRINS
00001E28                          1484          
00001E28                          1485  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E28                          1486  
00001E28                          1487  DAND    
00001E28  E75C                    1488          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001E2A  1A04                    1489          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E2C  0205 0007               1490          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001E30  1C05                    1491          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001E32                          1492  
00001E32  E75C                    1493          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001E34  1A04                    1494          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E36  0205 0007               1495          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001E3A  1E05                    1496          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001E3C  BA3C 0000               1497          CMP.B   #%000,D5        ; Compare with byte size
00001E40  6700 0016               1498          BEQ     DANDB
00001E44  BA3C 0001               1499          CMP.B   #%001,D5        ; Compare with word size
00001E48  6700 0022               1500          BEQ     DANDW
00001E4C  BA3C 0002               1501          CMP.B   #%010,D5        ; Compare with long size
00001E50  6700 002E               1502          BEQ     DANDL
00001E54                          1503  
00001E54  6000 03E0               1504          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001E58                          1505  
00001E58  43F9 000024F1           1506  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E5E  4E4F                    1507          TRAP    #15             ; Print ANDM string
00001E60  43F9 000024B5           1508          LEA     MODEB,A1        ; Load effective address of MODEB string
00001E66  4E4F                    1509          TRAP    #15             ; Print MODEB string
00001E68  6000 002A               1510          BRA     DANDA           ; Branch to addressing mode parsing
00001E6C                          1511  
00001E6C  43F9 000024F1           1512  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E72  4E4F                    1513          TRAP    #15             ; Print ANDM string
00001E74  43F9 000024B8           1514          LEA     MODEW,A1        ; Load effective address of MODEW string
00001E7A  4E4F                    1515          TRAP    #15             ; Print MODEW string
00001E7C  6000 0016               1516          BRA     DANDA           ; Branch to addressing mode parsing
00001E80                          1517  
00001E80  43F9 000024F1           1518  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E86  4E4F                    1519          TRAP    #15             ; Print ANDM string
00001E88  43F9 000024BB           1520          LEA     MODEL,A1        ; Load effective address of MODEL string
00001E8E  4E4F                    1521          TRAP    #15             ; Print MODEL string
00001E90  6000 0002               1522          BRA     DANDA           ; Branch to addressing mode parsing
00001E94                          1523  
00001E94  43F9 0000246B           1524  DANDA   LEA     SM5,A1
00001E9A  4E4F                    1525          TRAP    #15
00001E9C  ED5C                    1526          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001E9E  1A04                    1527          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001EA0  0205 0038               1528          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001EA4  E61D                    1529          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001EA6  1605                    1530          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001EA8  0204 0007               1531          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001EAC  1C04                    1532          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001EAE                          1533  
00001EAE  BE3C 0004               1534          CMP.B   #%100,D7        ; Compare opmode with '100'
00001EB2  6D00 0006               1535          BLT     DANDAE          ; If opmode < '100', branch to DANDAE
00001EB6  6000 002A               1536          BRA     DANDAD          ; Else, branch to DANDAD
00001EBA                          1537  
00001EBA  4EB8 121C               1538  DANDAE  JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001EBE  103C 000E               1539          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001EC2  43F9 000024D4           1540          LEA     COMMA,A1        ; Load effective address of COMMA string
00001EC8  4E4F                    1541          TRAP    #15             ; Print comma
00001ECA  43F9 000024C0           1542          LEA     VALD,A1
00001ED0  4E4F                    1543          TRAP    #15
00001ED2  1206                    1544          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001ED4  103C 0003               1545          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001ED8  4E4F                    1546          TRAP    #15             ; Print register number
00001EDA  103C 000E               1547          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EDE  6000 0356               1548          BRA     DSEND           ; Branch to DSEND
00001EE2                          1549  
00001EE2  1206                    1550  DANDAD  MOVE.B  D6,D1           ; Move ea num to D1 to print
00001EE4  103C 0003               1551          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001EE8  4E4F                    1552          TRAP    #15             ; Print register number
00001EEA  103C 000E               1553          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EEE  43F9 000024D4           1554          LEA     COMMA,A1        ; Load effective address of COMMA string
00001EF4  4E4F                    1555          TRAP    #15             ; Print comma
00001EF6  4EB8 121C               1556          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001EFA  103C 000E               1557          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EFE  6000 0336               1558          BRA     DSEND           ; Branch to DSEND 
00001F02                          1559  
00001F02                          1560  
00001F02  6000 0332               1561          BRA     DSEND       
00001F06                          1562          
00001F06                          1563  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F06                          1564  
00001F06  4E71                    1565  DS1101  NOP
00001F08                          1566  
00001F08  4E71                    1567  DADD    NOP
00001F0A  43F9 000024E5           1568          LEA     ADDM,A1
00001F10  4E4F                    1569          TRAP    #15
00001F12                          1570          
00001F12                          1571          *parse dn reg: 3 bits
00001F12                          1572  *number of the data register involved
00001F12                          1573  *nums 0-7, paired with below
00001F12  E75C                    1574          ROL.W   #3,D4       *dn reg num in d7
00001F14  1E04                    1575          MOVE.B  D4,D7
00001F16  0207 0007               1576          ANDI.B  #%111,D7
00001F1A                          1577          
00001F1A  3C47                    1578          MOVE.W  D7,A6
00001F1C                          1579  
00001F1C                          1580  *parse opmode: 3 bits
00001F1C                          1581  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001F1C                          1582  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001F1C                          1583  *invalid: 111, 011
00001F1C                          1584  *parse first digit separately
00001F1C  E35C                    1585          ROL.W   #1,D4       *addressing mode in d2
00001F1E  1E04                    1586          MOVE.B  D4,D7
00001F20  0207 0001               1587          ANDI.B  #%1,D7
00001F24                          1588          
00001F24                          1589  *parsing next two digits of size
00001F24  E55C                    1590          ROL.W   #2,D4       *size in d5
00001F26  1A04                    1591          MOVE.B  D4,D5
00001F28  0205 0003               1592          ANDI.B  #%11,D5
00001F2C  BA3C 0003               1593          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001F30  6700 007C               1594          BEQ     DADDA
00001F34  4EB8 11D2               1595          JSR     SIZE
00001F38  43F9 0000246B           1596          LEA     SM5,A1
00001F3E  4E4F                    1597          TRAP    #15
00001F40                          1598          
00001F40                          1599  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001F40  BE3C 0000               1600          CMP.B   #%0,D7       *if 0, then register info printed last
00001F44  6700 002E               1601          BEQ     DADDEA      *branch to ea before register
00001F48                          1602          
00001F48                          1603  *printing register information
00001F48                          1604  DADDPRNTREG
00001F48  BA3C 0003               1605          CMP.B   #%11,D5
00001F4C  6700 0058               1606          BEQ     PRINTA
00001F50  43F9 000024C0           1607          LEA     VALD,A1
00001F56                          1608  ADDCONT
00001F56  4E4F                    1609          TRAP    #15
00001F58  320E                    1610          MOVE.W  A6,D1       *moving reg num to d1 to print
00001F5A  103C 0003               1611          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001F5E  4E4F                    1612          TRAP    #15         *printing register number
00001F60  103C 000E               1613          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001F64  BE3C 0000               1614          CMP.B   #%0,D7      *if info finished printing
00001F68  6700 02CC               1615          BEQ     DSEND      *branch to end
00001F6C  43F9 000024D4           1616          LEA     COMMA,A1
00001F72  4E4F                    1617          TRAP    #15
00001F74                          1618  
00001F74                          1619          
00001F74                          1620  * parse ea mode: 3 bits
00001F74                          1621  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F74                          1622  *address reg direct not allowed for .B operations
00001F74                          1623  *no invalid
00001F74                          1624  DADDEA
00001F74  E75C                    1625          ROL.W   #3,D4       *ea mode
00001F76  1604                    1626          MOVE.B  D4,D3
00001F78  0203 0007               1627          ANDI.B  #%111,D3
00001F7C                          1628  
00001F7C                          1629  *parse ea reg: 3 bits
00001F7C                          1630  *no invalid: paired with opmode below (nums 0-7)
00001F7C                          1631  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F7C  E75C                    1632          ROL.W   #3,D4       *ea mode
00001F7E  1C04                    1633          MOVE.B  D4,D6
00001F80  0206 0007               1634          ANDI.B  #%111,D6
00001F84                          1635          
00001F84                          1636  *comparisons
00001F84  B67C 0004               1637          CMP     #%100,D3
00001F88  6700 005A               1638          BEQ     ADDDATACHECK
00001F8C                          1639  DATACHECKCONT
00001F8C  4EB8 121C               1640          JSR     ADDRMODEALL
00001F90  BE3C 0001               1641          CMP.B   #%1,D7      *if info printed
00001F94  6700 02A0               1642          BEQ     DSEND       *end
00001F98  43F9 000024D4           1643          LEA     COMMA,A1
00001F9E  4E4F                    1644          TRAP    #15
00001FA0  60A6                    1645          BRA     DADDPRNTREG 
00001FA2                          1646  
00001FA2  6000 0292               1647          BRA     DSEND
00001FA6                          1648          
00001FA6  43F9 000024BE           1649  PRINTA  LEA     VALA,A1
00001FAC  60A8                    1650          BRA     ADDCONT
00001FAE                          1651  
00001FAE                          1652          
00001FAE  4E71                    1653  DADDA   NOP
00001FB0  43F9 000024BE           1654          LEA     VALA,A1
00001FB6  4E4F                    1655          TRAP    #15
00001FB8  BE3C 0000               1656          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001FBC  6600 000C               1657          BNE     ADDAL
00001FC0  43F9 000024B8           1658          LEA     MODEW,A1
00001FC6  6000 000C               1659          BRA     ADDSIZEEND
00001FCA  43F9 000024BB           1660  ADDAL   LEA     MODEL,A1
00001FD0  6000 0002               1661          BRA     ADDSIZEEND
00001FD4                          1662  ADDSIZEEND
00001FD4  4E4F                    1663          TRAP    #15
00001FD6  43F9 00002466           1664          LEA     SM4,A1
00001FDC  4E4F                    1665          TRAP    #15
00001FDE  1E3C 0000               1666          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001FE2  6090                    1667          BRA     DADDEA
00001FE4                          1668  ADDDATACHECK
00001FE4  BA3C 0003               1669          CMP.B   #%11,D5
00001FE8  6700 0220               1670          BEQ     DSERR
00001FEC  609E                    1671          BRA     DATACHECKCONT
00001FEE                          1672          
00001FEE                          1673          
00001FEE                          1674  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001FEE                          1675  
00001FEE                          1676  DS1110
00001FEE  E75C                    1677          ROL.W   #3,D4           * [D2] Reading count
00001FF0  1404                    1678          MOVE.B  D4,D2
00001FF2  0202 0007               1679          ANDI.B  #%111,D2
00001FF6                          1680          
00001FF6  E35C                    1681          ROL.W   #1,D4           * [D3] Reading direction
00001FF8  1604                    1682          MOVE.B  D4,D3
00001FFA  0203 0001               1683          ANDI.B  #%1,D3
00001FFE                          1684          
00001FFE  E55C                    1685          ROL.W   #2,D4           * [D5] Reading size
00002000  1A04                    1686          MOVE.B  D4,D5
00002002  0205 0003               1687          ANDI.B  #%11,D5
00002006                          1688          
00002006  BA3C 0003               1689          CMP.B   #%11,D5   * Start processing code as memory if size is 11
0000200A  6700 00F0               1690          BEQ     DS1110MEM
0000200E                          1691          
0000200E  E35C                    1692          ROL.W   #1,D4           * [D6] Reading count mode
00002010  1C04                    1693          MOVE.B  D4,D6
00002012  0206 0001               1694          ANDI.B  #%1,D6
00002016                          1695          
00002016  E55C                    1696          ROL.W   #2,D4           * [D7] reading type of shift
00002018  1E04                    1697          MOVE.B  D4,D7
0000201A  0207 0003               1698          ANDI.B  #%11,D7
0000201E                          1699          
0000201E  E75C                    1700          ROL.W   #3,D4           * [D1] reading register
00002020  1204                    1701          MOVE.B  D4,D1
00002022  0201 0007               1702          ANDI.B  #%111,D1
00002026                          1703          
00002026  BE3C 0001               1704          CMP.B   #%01,D7   *Determine shift type
0000202A  6700 008E               1705          BEQ     DLS
0000202E  BE3C 0000               1706          CMP.B   #%00,D7
00002032  6700 0092               1707          BEQ     DAS
00002036  BE3C 0003               1708          CMP.B   #%11,D7
0000203A  6700 0096               1709          BEQ     DRO
0000203E                          1710          
0000203E  6000 01F6               1711          BRA     DSEND               *Fallback in case of invalid code
00002042                          1712          
00002042  48E7 FFFF               1713  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00002046  4EB9 000020DE           1714          JSR     DS1110SIDE
0000204C  4CDF FFFF               1715          MOVEM.L (SP)+,A0-A7/D0-D7
00002050                          1716          
00002050  48E7 FFFF               1717          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00002054  4EB8 11D2               1718          JSR     SIZE
00002058  4CDF FFFF               1719          MOVEM.L (SP)+,A0-A7/D0-D7
0000205C                          1720          
0000205C  103C 000E               1721          MOVE.B  #14,D0
00002060  43F9 0000246B           1722          LEA     SM5,A1
00002066  4E4F                    1723          TRAP    #15
00002068                          1724          
00002068  BA3C 0003               1725          CMP.B   #%11,D5
0000206C  6700 00B4               1726          BEQ     DS1110MEMA
00002070                          1727          
00002070  BC3C 0001               1728          CMP.B   #%1,D6
00002074  6700 003A               1729          BEQ     DS1110_REG_D
00002078  6000 002C               1730          BRA     DS1110_REG_I
0000207C                          1731          
0000207C  1C01                    1732  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
0000207E                          1733          
0000207E  103C 0003               1734          MOVE.B  #3,D0
00002082  1202                    1735          MOVE.B  D2,D1
00002084  4E4F                    1736          TRAP    #15
00002086                          1737          
00002086  103C 000E               1738          MOVE.B  #14,D0
0000208A  43F9 000024D4           1739          LEA     COMMA,A1
00002090  4E4F                    1740          TRAP    #15
00002092                          1741          
00002092  43F9 000024C0           1742          LEA     VALD,A1
00002098  4E4F                    1743          TRAP    #15
0000209A                          1744          
0000209A  103C 0003               1745          MOVE.B  #3,D0
0000209E  1206                    1746          MOVE.B  D6,D1
000020A0  4E4F                    1747          TRAP    #15
000020A2                          1748          
000020A2  6000 0192               1749          BRA     DSEND
000020A6                          1750          
000020A6                          1751  DS1110_REG_I
000020A6  43F9 000024C2           1752          LEA     VALN,A1
000020AC  4E4F                    1753          TRAP    #15
000020AE  60CC                    1754          BRA     DS1110B
000020B0                          1755  
000020B0                          1756  DS1110_REG_D
000020B0  43F9 000024C0           1757          LEA     VALD,A1
000020B6  4E4F                    1758          TRAP    #15
000020B8  60C2                    1759          BRA     DS1110B       
000020BA                          1760          
000020BA  43F9 000024FC           1761  DLS     LEA     LSM,A1
000020C0  4E4F                    1762          TRAP    #15
000020C2  6000 FF7E               1763          BRA     DS1110A
000020C6                          1764          
000020C6  43F9 00002503           1765  DAS     LEA     ASM,A1
000020CC  4E4F                    1766          TRAP    #15
000020CE  6000 FF72               1767          BRA     DS1110A
000020D2                          1768          
000020D2  43F9 0000250A           1769  DRO     LEA     ROM,A1
000020D8  4E4F                    1770          TRAP    #15
000020DA  6000 FF66               1771          BRA     DS1110A
000020DE                          1772          
000020DE                          1773  DS1110SIDE
000020DE  103C 0006               1774          MOVE.B  #6,D0
000020E2  B63C 0001               1775          CMP.B   #1,D3
000020E6  6700 000C               1776          BEQ     DS1110LSIDE
000020EA  123C 0052               1777          MOVE.B  #82,D1
000020EE  4E4F                    1778          TRAP    #15
000020F0  6000 0008               1779          BRA     DS1110SIDEEND
000020F4                          1780  
000020F4                          1781  DS1110LSIDE
000020F4  123C 004C               1782          MOVE.B  #76,D1
000020F8  4E4F                    1783          TRAP    #15
000020FA                          1784          
000020FA                          1785  DS1110SIDEEND
000020FA  4E75                    1786          RTS 
000020FC                          1787  
000020FC                          1788  DS1110MEM
000020FC                          1789                                  * Shift type is instead stored in D2
000020FC                          1790          
000020FC  E75C                    1791          ROL.W   #3,D4           * [D6] Reading address mode
000020FE  1C04                    1792          MOVE.B  D4,D6
00002100  0206 0007               1793          ANDI.B  #%111,D6
00002104                          1794          
00002104  E75C                    1795          ROL.W   #3,D4           * [D1] Reading address register
00002106  1204                    1796          MOVE.B  D4,D1
00002108  0201 0007               1797          ANDI.B  #%111,D1
0000210C                          1798          
0000210C  B43C 0001               1799          CMP.B   #%01,D2
00002110  67A8                    1800          BEQ     DLS
00002112  B43C 0000               1801          CMP.B   #%00,D2
00002116  67AE                    1802          BEQ     DAS
00002118  B43C 0003               1803          CMP.B   #%11,D2
0000211C  67B4                    1804          BEQ     DRO
0000211E  6000 0116               1805          BRA     DSEND
00002122                          1806          
00002122                          1807          
00002122                          1808  DS1110MEMA
00002122                          1809          
00002122  BC3C 0002               1810          CMP.B   #%010,D6
00002126  6700 002E               1811          BEQ     DS1110MEM_REG
0000212A  BC3C 0003               1812          CMP.B   #%011,D6
0000212E  6700 004C               1813          BEQ     DS1110MEM_INC
00002132  BC3C 0004               1814          CMP.B   #%100,D6
00002136  6700 006A               1815          BEQ     DS1110MEM_DEC
0000213A                          1816          
0000213A  BC3C 0007               1817          CMP.B   #%111,D6
0000213E  6600 00CA               1818          BNE     DSERR
00002142                          1819          
00002142  B23C 0000               1820          CMP.B   #%000,D1
00002146  6700 0080               1821          BEQ     DS1110MEM_CUSW
0000214A  B23C 0001               1822          CMP.B   #%001,D1
0000214E  6700 0096               1823          BEQ     DS1110MEM_CUSL
00002152                          1824          
00002152  6000 00E2               1825          BRA     DSEND
00002156                          1826  
00002156                          1827  DS1110MEM_REG
00002156  43F9 000024CA           1828          LEA     OPENPTR,A1
0000215C  4E4F                    1829          TRAP    #15
0000215E                          1830          
0000215E  43F9 000024BE           1831          LEA     VALA,A1
00002164  4E4F                    1832          TRAP    #15
00002166                          1833          
00002166  103C 0003               1834          MOVE.B  #3,D0
0000216A  4E4F                    1835          TRAP    #15
0000216C  103C 000E               1836          MOVE.B  #14,D0
00002170                          1837          
00002170  43F9 000024CF           1838          LEA     CLOSEPTR,A1
00002176  4E4F                    1839          TRAP    #15
00002178                          1840          
00002178  6000 00BC               1841          BRA     DSEND
0000217C                          1842  
0000217C                          1843  DS1110MEM_INC
0000217C  43F9 000024CA           1844          LEA     OPENPTR,A1
00002182  4E4F                    1845          TRAP    #15
00002184                          1846          
00002184  43F9 000024BE           1847          LEA     VALA,A1
0000218A  4E4F                    1848          TRAP    #15
0000218C                          1849          
0000218C  103C 0003               1850          MOVE.B  #3,D0
00002190  4E4F                    1851          TRAP    #15
00002192  103C 000E               1852          MOVE.B  #14,D0
00002196                          1853          
00002196  43F9 000024D1           1854          LEA     CLOSEIPTR,A1
0000219C  4E4F                    1855          TRAP    #15
0000219E                          1856          
0000219E  6000 0096               1857          BRA     DSEND
000021A2                          1858  
000021A2                          1859  DS1110MEM_DEC
000021A2  43F9 000024CC           1860          LEA     OPENDPTR,A1
000021A8  4E4F                    1861          TRAP    #15
000021AA                          1862          
000021AA  43F9 000024BE           1863          LEA     VALA,A1
000021B0  4E4F                    1864          TRAP    #15
000021B2                          1865          
000021B2  103C 0003               1866          MOVE.B  #3,D0
000021B6  4E4F                    1867          TRAP    #15
000021B8  103C 000E               1868          MOVE.B  #14,D0
000021BC                          1869          
000021BC  43F9 000024CF           1870          LEA     CLOSEPTR,A1
000021C2  4E4F                    1871          TRAP    #15
000021C4                          1872          
000021C4  6000 0070               1873          BRA     DSEND
000021C8                          1874          
000021C8                          1875  DS1110MEM_CUSW
000021C8  43F9 000024D6           1876          LEA     DOLLAR,A1
000021CE  4E4F                    1877          TRAP    #15
000021D0  341A                    1878          MOVE.W  (A2)+,D2
000021D2  48E7 0400               1879          MOVEM.L D5,-(SP)
000021D6  1A3C 0030               1880          MOVE.B  #48,D5
000021DA  4EB8 118A               1881          JSR     HEXOUT
000021DE  4CDF 0020               1882          MOVEM.L (SP)+,D5
000021E2  6000 0052               1883          BRA     DSEND
000021E6                          1884          
000021E6                          1885  DS1110MEM_CUSL
000021E6  43F9 000024D6           1886          LEA     DOLLAR,A1
000021EC  4E4F                    1887          TRAP    #15
000021EE  241A                    1888          MOVE.L  (A2)+,D2
000021F0  48E7 0400               1889          MOVEM.L D5,-(SP)
000021F4  1A3C 0030               1890          MOVE.B  #48,D5
000021F8  4EB8 118A               1891          JSR     HEXOUT
000021FC  4CDF 0020               1892          MOVEM.L (SP)+,D5
00002200  6000 0034               1893          BRA     DSEND
00002204                          1894          
00002204                          1895  
00002204                          1896  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00002204                          1897  
00002204  4E71                    1898  DS1111  NOP
00002206  6000 002E               1899          BRA     DSEND
0000220A                          1900  
0000220A                          1901  *DS Final
0000220A                          1902  *--------------------------------------------------------------------------------------------------
0000220A                          1903  
0000220A  103C 000E               1904  DSERR   MOVE.B  #14,D0
0000220E  43F9 00002487           1905          LEA     ERRM,A1
00002214  4E4F                    1906          TRAP    #15
00002216  6000 001E               1907          BRA     DSEND
0000221A                          1908          
0000221A                          1909  DSERRINS
0000221A  103C 000E               1910          MOVE.B  #14,D0
0000221E  43F9 0000248F           1911          LEA     ERRMINS,A1
00002224  4E4F                    1912          TRAP    #15
00002226  6000 000E               1913          BRA     DSEND
0000222A                          1914  
0000222A                          1915  DSERREA
0000222A  103C 000E               1916          MOVE.B  #14,D0
0000222E  43F9 00002490           1917          LEA     ERRMEA,A1
00002234  4E4F                    1918          TRAP    #15
00002236                          1919  
00002236  4E75                    1920  DSEND   RTS
00002238                          1921  
00002238  43F9 00002458           1922  DSEOF   LEA     LB,A1
0000223E  103C 000E               1923          MOVE.B  #14,D0
00002242  4E4F                    1924          TRAP    #15
00002244                          1925          
00002244  43F9 0000235A           1926          LEA     REST,A1
0000224A  103C 000E               1927          MOVE.B  #14,D0
0000224E  4E4F                    1928          TRAP    #15
00002250                          1929          
00002250  103C 0005               1930          MOVE.B  #5,D0
00002254  4E4F                    1931          TRAP    #15
00002256                          1932          
00002256  B23C 0059               1933          CMP.B   #89,D1
0000225A  6700 EDA4               1934          BEQ     START
0000225E  B23C 0079               1935          CMP.B   #121,D1
00002262  6700 ED9C               1936          BEQ     START
00002266                          1937  
00002266  43F9 00002458           1938  END     LEA     LB,A1
0000226C  103C 000E               1939          MOVE.B  #14,D0
00002270  4E4F                    1940          TRAP    #15
00002272                          1941          
00002272  43F9 00002458           1942          LEA     LB,A1
00002278  103C 000E               1943          MOVE.B  #14,D0
0000227C  4E4F                    1944          TRAP    #15
0000227E                          1945          
0000227E  43F9 00002377           1946          LEA     ENDMSG,A1
00002284  103C 000E               1947          MOVE.B  #14,D0
00002288  4E4F                    1948          TRAP    #15
0000228A                          1949          
0000228A  43F9 0000239F           1950          LEA     AUTHOR,A1
00002290  4E4F                    1951          TRAP    #15
00002292                          1952          
00002292  43F9 00002458           1953          LEA     LB,A1
00002298  103C 000E               1954          MOVE.B  #14,D0
0000229C  4E4F                    1955          TRAP    #15
0000229E                          1956          
0000229E  103C 0009               1957          MOVE.B  #9,D0
000022A2  4E4F                    1958          TRAP    #15
000022A4                          1959  
000022A4                          1960  *Initialized Variables
000022A4                          1961  *--------------------------------------------------------------------------------------------------
000022A4                          1962  
000022A4  =0000000D               1963  CR      EQU     $0D
000022A4  =0000000A               1964  LF      EQU     $0A
000022A4  =00000009               1965  HT      EQU     $09
000022A4                          1966  
000022A4= 54 68 69 73 20 69 ...   1967  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
0000232C= 45 6E 74 65 72 20 ...   1968  ASTART  DC.B    'Enter start address: $',0
00002343= 45 6E 74 65 72 20 ...   1969  AEND    DC.B    'Enter end address:   $',0
0000235A= 52 65 73 74 61 72 ...   1970  REST    DC.B    'Restart Disassembler (y/n)? ',0
00002377= 54 68 61 6E 6B 20 ...   1971  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
0000239F= 4D 61 64 65 20 62 ...   1972  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000023C4                          1973  
000023C4= 45 52 52 4F 52 3A ...   1974  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
000023FE= 45 52 52 4F 52 3A ...   1975  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
00002424= 45 52 52 4F 52 3A ...   1976  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00002458                          1977  
00002458= 0D 0A 00                1978  LB      DC.B    CR,LF,0
0000245B                          1979  
0000245B= 09 00                   1980  HTM     DC.B    HT,0
0000245D                          1981  
0000245D= 20 00                   1982  SM1     DC.B    ' ',0
0000245F= 20 20 00                1983  SM2     DC.B    '  ',0
00002462= 20 20 20 00             1984  SM3     DC.B    '   ',0
00002466= 20 20 20 20 00          1985  SM4     DC.B    '    ',0
0000246B= 20 20 20 20 20 00       1986  SM5     DC.B    '     ',0
00002471= 20 20 20 20 20 20 00    1987  SM6     DC.B    '      ',0
00002478= 20 20 20 20 20 20 ...   1988  SM7     DC.B    '       ',0
00002480                          1989  
00002480= 54 45 53 54 00          1990  TESTM   DC.B    'TEST',0
00002485                          1991  
00002485= 00                      1992  NOTH    DC.B    '',0
00002486= 00                      1993  NOTH2   DC.B    '',0
00002487                          1994  
00002487= 20 2A 45 52 52 4F ...   1995  ERRM    DC.B    ' *ERROR',0
0000248F= 00                      1996  ERRMINS DC.B    '',0
00002490= 20 2A 45 52 52 4F ...   1997  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
000024B5                          1998  
000024B5= 2E 42 00                1999  MODEB   DC.B    '.B',0
000024B8= 2E 57 00                2000  MODEW   DC.B    '.W',0
000024BB= 2E 4C 00                2001  MODEL   DC.B    '.L',0
000024BE                          2002  
000024BE= 41 00                   2003  VALA    DC.B    'A',0
000024C0= 44 00                   2004  VALD    DC.B    'D',0
000024C2= 23 00                   2005  VALN    DC.B    '#',0
000024C4= 30 00                   2006  VAL0    DC.B    '0',0
000024C6= 51 00                   2007  VALQ    DC.B    'Q',0
000024C8= 4D 00                   2008  VALM    DC.B    'M',0
000024CA                          2009  
000024CA= 28 00                   2010  OPENPTR     DC.B    '(',0
000024CC= 2D 28 00                2011  OPENDPTR    DC.B    '-(',0
000024CF                          2012  
000024CF= 29 00                   2013  CLOSEPTR    DC.B    ')',0
000024D1= 29 2B 00                2014  CLOSEIPTR   DC.B    ')+',0
000024D4                          2015  
000024D4= 2C 00                   2016  COMMA   DC.B    ',',0
000024D6= 24 00                   2017  DOLLAR  DC.B    '$',0
000024D8= 2F 00                   2018  SLASH   DC.B    '/',0
000024DA= 2D 00                   2019  DASH    DC.B    '-',0
000024DC                          2020  
000024DC= 4E 4F 50 00             2021  NOPM    DC.B    'NOP',0
000024E0                          2022  
000024E0= 4D 4F 56 45 00          2023  MOVEM   DC.B    'MOVE',0
000024E5                          2024  
000024E5= 41 44 44 00             2025  ADDM    DC.B    'ADD',0
000024E9                          2026  
000024E9= 53 55 42 00             2027  SUBM    DC.B    'SUB',0
000024ED                          2028  
000024ED= 4C 45 41 00             2029  LEAM    DC.B    'LEA',0
000024F1                          2030  
000024F1= 41 4E 44 00             2031  ANDM    DC.B    'AND',0
000024F5= 4F 52 00                2032  ORM     DC.B    'OR',0
000024F8= 4E 4F 54 00             2033  NOTM    DC.B    'NOT',0
000024FC                          2034  
000024FC= 4C 53 00                2035  LSM    DC.B    'LS',0
000024FF= 4C 53 52 00             2036  LSRM    DC.B    'LSR',0
00002503= 41 53 00                2037  ASM    DC.B    'AS',0
00002506= 41 53 52 00             2038  ASRM    DC.B    'ASR',0
0000250A                          2039  
0000250A= 52 4F 00                2040  ROM    DC.B    'RO',0
0000250D= 52 4F 52 00             2041  RORM    DC.B    'ROR',0
00002511                          2042  
00002511= 42 47 54 00             2043  BGTM    DC.B    'BGT',0
00002515= 42 4C 45 00             2044  BLEM    DC.B    'BLE',0
00002519= 42 45 51 00             2045  BEQM    DC.B    'BEQ',0
0000251D                          2046  
0000251D= 4A 53 52 00             2047  JSRM    DC.B    'JSR',0
00002521= 52 54 53 00             2048  RTSM    DC.B    'RTS',0
00002525                          2049  
00002525= 42 52 41 00             2050  BRAM    DC.B    'BRA',0
00002529                          2051  
00002529                          2052  
00002529                          2053      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1FCA
ADDCONT             1F56
ADDDATACHECK        1FE4
ADDM                24E5
ADDRMODEALL         121C
ADDSIZEEND          1FD4
ADREG               162E
ADREGP              1646
AEND                2343
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                24F1
ASM                 2503
ASRM                2506
ASTART              232C
AUTHOR              239F
BEQM                2519
BGTM                2511
BLEM                2515
BRAM                2525
CLOSEIPTR           24D1
CLOSEPTR            24CF
COMMA               24D4
CR                  D
DADD                1F08
DADDA               1FAE
DADDEA              1F74
DADDPRNTREG         1F48
DADDQ               1A58
DAND                1E28
DANDA               1E94
DANDAD              1EE2
DANDAE              1EBA
DANDB               1E58
DANDL               1E80
DANDW               1E6C
DAS                 20C6
DASH                24DA
DATACHECKCONT       1F8C
DBEQ                1C04
DBGT                1B88
DBLE                1BC4
DBRA                1AFC
DBRA_16BIT          1B44
DBRA_32BIT          1B66
DISASM              137C
DJSR                16B0
DJSR_CUSL           1748
DJSR_CUSW           172A
DJSR_REG            1704
DLEA                1772
DLEAP               17A8
DLS                 20BA
DMOVE2              13AE
DMOVEA              14B0
DMOVEM              1888
DMOVEQ              1C46
DNOP                1574
DNOT                1580
DNOTA               15E0
DNOTB               15A4
DNOTL               15CC
DNOTW               15B8
DOLLAR              24D6
DOR                 1CB0
DORA                1D1C
DORAD               1D6A
DORAE               1D42
DORB                1CE0
DORL                1D08
DORW                1CF4
DREG                1616
DRO                 20D2
DRTS                1766
DS0                 1386
DS00                139A
DS01                14D2
DS010               14F0
DS0100              152C
DS0101              1A56
DS011               14FA
DS0110              1AD0
DS0111              1C44
DS1                 1390
DS10                14DC
DS100               1504
DS1000              1CAE
DS1001              1D8A
DS101               150E
DS1010              1E1C
DS1011              1E22
DS11                14E6
DS110               1518
DS1101              1F06
DS111               1522
DS1110              1FEE
DS1110A             2042
DS1110B             207C
DS1110LSIDE         20F4
DS1110MEM           20FC
DS1110MEMA          2122
DS1110MEM_CUSL      21E6
DS1110MEM_CUSW      21C8
DS1110MEM_DEC       21A2
DS1110MEM_INC       217C
DS1110MEM_REG       2156
DS1110SIDE          20DE
DS1110SIDEEND       20FA
DS1110_REG_D        20B0
DS1110_REG_I        20A6
DS1111              2204
DSEND               2236
DSEOF               2238
DSERR               220A
DSERREA             222A
DSERRINS            221A
DSUB                1D8C
DSUBEA              1DE8
DSUBPRNTREG         1DC4
END                 2266
ENDMSG              2377
ERRM                2487
ERRMEA              2490
ERRMINS             248F
EXT                 168E
EXTW                16A4
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 245B
INTRO               22A4
JSR010              17DC
JSR111              180C
JSR111001           183E
JSRM                251D
JSRPRINT2           1868
LB                  2458
LEAM                24ED
LF                  A
LSM                 24FC
LSRM                24FF
MADREG              1666
MODEB               24B5
MODEL               24BB
MODEW               24B8
MOVECONT            13D2
MOVEERRCHECK        14C6
MOVEM               24E0
MOVEM2              1932
MOVEM3              196C
MOVEM31             1982
MOVEM32             1988
MOVEM4              19AE
MOVEM5              19F4
MOVEMEA             18C4
MOVEMEB             18FA
MOVEMEB1            1912
MOVEMEB2            1918
MOVEML              18BC
MOVEMLOOP           1A10
MOVEMLOOPDONE       1A50
MOVEMLOOPINC        1A4C
MOVEMLOOPSINGLEAR   1A52
MOVEMSHIFTL         1A32
MOVEMSHIFTR         1A3A
MOVEMSTEP           1A18
MOVEMSTEP1          1A24
MOVEMSTEP2          1A42
MSDONE              1476
MSIZE               1430
MSIZEB              1458
MSIZEBN             13FA
MSIZEL              146C
MSIZELN             141E
MSIZEN              13D2
MSIZEW              1462
MSIZEWN             140C
NOPM                24DC
NOTH                2485
NOTH2               2486
NOTM                24F8
OPENDPTR            24CC
OPENPTR             24CA
ORM                 24F5
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1FA6
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                235A
ROM                 250A
RORM                250D
RPAUSE              117E
RSTEP               112E
RTSM                2521
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               24D8
SM1                 245D
SM2                 245F
SM3                 2462
SM4                 2466
SM5                 246B
SM6                 2471
SM7                 2478
SRET                121A
START               1000
STARTER             0
SUBM                24E9
TEST                103A
TESTM               2480
VAL0                24C4
VALA                24BE
VALD                24C0
VALM                24C8
VALN                24C2
VALQ                24C6
VERR1               10F8
VERR1M              23C4
VERR2               1108
VERR2M              23FE
VERR3               1118
VERR3M              2424
VINPUT              10EE
