00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 9:00:02 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 0000229C             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 00002324             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 0000247D             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 0000233B             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 0000247D             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 000023BC            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 1158                114          BRA     END
00001108                           115  
00001108  43F9 000023F6            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 1148                119          BRA     END
00001118                           120  
00001118  43F9 0000241C            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 1138                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 00002457            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 00002450            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 10B6                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 000024AD            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 000024B0            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 000024B3            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 000024B8            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0FB8                256          BEQ     DSERR
0000124C  43F9 000024B6            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 000024C2            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 000024B6            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 000024C7            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 000024C2            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 000024B6            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 000024C9            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 000024C4            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 000024B6            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 000024C7            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0F08                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 000024CE            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 000024CE            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0EB4                334          BNE     DSERR
00001350  43F9 000024BA            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 0148                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 0152                373          BCS     DS11
00001396  6000 0144                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 0148                381          BEQ     DS010
000013AA  6000 0002                382          BRA     DMOVE2
000013AE                           383          
000013AE                           384  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
000013AE  4E71                     385  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
000013B0                           386          *size in d5 from above processing
000013B0  43F9 000024D8            387          LEA     MOVEM,A1
000013B6  4E4F                     388          TRAP    #15
000013B8                           389                  
000013B8                           390          *dest reg to d7
000013B8  E75C                     391          ROL.W   #3,D4
000013BA  1E04                     392          MOVE.B  D4,D7
000013BC  CE3C 0007                393          AND.B   #%111,D7
000013C0                           394          
000013C0                           395          *dest mode to d3: An means MOVEA
000013C0  E75C                     396          ROL.W   #3,D4
000013C2  1604                     397          MOVE.B  D4,D3
000013C4  C63C 0007                398          AND.B   #%111,D3
000013C8  3C43                     399          MOVE.W  D3,A6
000013CA                           400          
000013CA  B67C 0001                401          CMP     #%001,D3
000013CE  6700 00E0                402          BEQ     DMOVEA
000013D2                           403  MOVECONT
000013D2                           404  *printing size then first addressing moode, then comma
000013D2                           405  *size is different for move
000013D2  103C 000E                406  MSIZEN  MOVE.B  #14,D0
000013D6  BA3C 0001                407          CMP.B   #%01,D5
000013DA  6700 001E                408          BEQ     MSIZEBN
000013DE  BA3C 0003                409          CMP.B   #%11,D5
000013E2  6700 0028                410          BEQ     MSIZEWN
000013E6  BA3C 0002                411          CMP.B   #%10,D5
000013EA  6700 0032                412          BEQ     MSIZELN
000013EE  BA3C 0003                413          CMP.B   #%11,D5
000013F2  6700 006E                414          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000013F6  6000 0E0A                415          BRA     DSERR
000013FA                           416          
000013FA  43F9 000024AD            417  MSIZEBN LEA     MODEB,A1
00001400  4E4F                     418          TRAP    #15
00001402  43F9 00002455            419          LEA     SM1,A1
00001408  6000 006C                420          BRA     MSDONE
0000140C                           421  
0000140C  43F9 000024B0            422  MSIZEWN LEA     MODEW,A1
00001412  4E4F                     423          TRAP    #15
00001414  43F9 00002455            424          LEA     SM1,A1
0000141A  6000 005A                425          BRA     MSDONE
0000141E                           426  
0000141E  43F9 000024B3            427  MSIZELN LEA     MODEL,A1
00001424  4E4F                     428          TRAP    #15
00001426  43F9 00002455            429          LEA     SM1,A1
0000142C  6000 0048                430          BRA     MSDONE
00001430                           431  
00001430  103C 000E                432  MSIZE   MOVE.B  #14,D0
00001434  BA3C 0001                433          CMP.B   #%01,D5
00001438  6700 001E                434          BEQ     MSIZEB
0000143C  BA3C 0003                435          CMP.B   #%11,D5
00001440  6700 0020                436          BEQ     MSIZEW
00001444  BA3C 0002                437          CMP.B   #%10,D5
00001448  6700 0022                438          BEQ     MSIZEL
0000144C  BA3C 0003                439          CMP.B   #%11,D5
00001450  6700 0010                440          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001454  6000 0DAC                441          BRA     DSERR
00001458                           442          
00001458  43F9 000024AD            443  MSIZEB  LEA     MODEB,A1
0000145E  6000 0016                444          BRA     MSDONE
00001462                           445  
00001462  43F9 000024B0            446  MSIZEW  LEA     MODEW,A1
00001468  6000 000C                447          BRA     MSDONE
0000146C                           448  
0000146C  43F9 000024B3            449  MSIZEL  LEA     MODEL,A1
00001472  6000 0002                450          BRA     MSDONE
00001476                           451  
00001476  4E4F                     452  MSDONE  TRAP    #15
00001478                           453  
00001478  43F9 0000245A            454          LEA     SM3,A1
0000147E  4E4F                     455          TRAP    #15
00001480                           456          
00001480                           457          *source mode to d3
00001480  E75C                     458          ROL.W   #3,D4
00001482  1604                     459          MOVE.B  D4,D3
00001484  C63C 0007                460          AND.B   #%111,D3
00001488                           461          
00001488                           462          *source reg to d6
00001488  E75C                     463          ROL.W   #3,D4
0000148A  1C04                     464          MOVE.B  D4,D6
0000148C  CC3C 0007                465          AND.B   #%111,D6
00001490                           466          
00001490  4EB8 121C                467          JSR     ADDRMODEALL
00001494  B67C 0001                468          CMP     #%001,D3
00001498  6700 002C                469          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
0000149C  43F9 000024CC            470          LEA     COMMA,A1
000014A2  4E4F                     471          TRAP    #15
000014A4  1C07                     472          MOVE.B  D7,D6
000014A6  360E                     473          MOVE.W  A6,D3
000014A8  4EB8 121C                474          JSR     ADDRMODEALL
000014AC  6000 0D80                475          BRA     DSEND
000014B0                           476  
000014B0  4E71                     477  DMOVEA  NOP
000014B2  BA7C 0001                478          CMP     #%01,D5     *if size is byte, err
000014B6  6700 0D4A                479          BEQ     DSERR
000014BA  43F9 000024B6            480          LEA     VALA,A1        *else, print A and return
000014C0  4E4F                     481          TRAP    #15
000014C2  6000 FF6C                482          BRA     MSIZE
000014C6                           483  
000014C6                           484  MOVEERRCHECK
000014C6  BA7C 0001                485          CMP     #%01,D5
000014CA  6700 0D36                486          BEQ     DSERR
000014CE  6000 0D5E                487          BRA     DSEND
000014D2                           488  
000014D2                           489          
000014D2                           490  
000014D2                           491  *DS Tier 2 ----------------------------------------------------------------------------------------
000014D2                           492  
000014D2                           493  DS01                        *DS01: Tier 2 binary search for 01 side
000014D2  E34C                     494          LSL.W   #1,D4
000014D4  6500 0024                495          BCS     DS011
000014D8  6000 0016                496          BRA     DS010
000014DC                           497  
000014DC                           498  DS10                        *DS10: Tier 2 binary search for 10 side
000014DC  E34C                     499          LSL.W   #1,D4
000014DE  6500 002E                500          BCS     DS101
000014E2  6000 0020                501          BRA     DS100
000014E6                           502  
000014E6                           503  DS11                        *DS11: Tier 2 binary search for 11 side
000014E6  E34C                     504          LSL.W   #1,D4
000014E8  6500 0038                505          BCS     DS111
000014EC  6000 002A                506          BRA     DS110
000014F0                           507  
000014F0                           508  *DS Tier 3 ----------------------------------------------------------------------------------------
000014F0                           509  
000014F0                           510  DS010                       *DS010: Tier 3 binary search for 010 side
000014F0  E34C                     511          LSL.W   #1,D4
000014F2  6500 055A                512          BCS     DS0101
000014F6  6000 0034                513          BRA     DS0100
000014FA                           514  
000014FA                           515  DS011                       *DS011: Tier 3 binary search for 011 side
000014FA  E34C                     516          LSL.W   #1,D4
000014FC  6500 073E                517          BCS     DS0111
00001500  6000 05C6                518          BRA     DS0110
00001504                           519  
00001504                           520  DS100                       *DS100: Tier 3 binary search for 100 side
00001504  E34C                     521          LSL.W   #1,D4
00001506  6500 087A                522          BCS     DS1001
0000150A  6000 079A                523          BRA     DS1000
0000150E                           524  
0000150E                           525  DS101                       *DS101: Tier 3 binary search for 101 side
0000150E  E34C                     526          LSL.W   #1,D4
00001510  6500 0908                527          BCS     DS1011
00001514  6000 08FE                528          BRA     DS1010
00001518                           529  
00001518                           530  DS110                       *DS110: Tier 3 binary search for 110 side
00001518  E34C                     531          LSL.W   #1,D4
0000151A  6500 09E2                532          BCS     DS1101
0000151E  6000 0900                533          BRA     DAND
00001522                           534  
00001522                           535  DS111                       *DS111: Tier 3 binary search for 111 side
00001522  E34C                     536          LSL.W   #1,D4
00001524  6500 0CD6                537          BCS     DS1111
00001528  6000 0ABC                538          BRA     DS1110
0000152C                           539  
0000152C                           540  *DS Tier 4 ----------------------------------------------------------------------------------------
0000152C                           541  
0000152C                           542  DS0100                      *DS0100: Processing for 0100 prefix
0000152C  0C44 E710                543          CMPI.W  #%1110011100010000,D4
00001530  6700 0042                544          BEQ     DNOP
00001534  0C44 E750                545          CMPI.W  #%1110011101010000,D4
00001538  6700 022C                546          BEQ     DRTS
0000153C                           547          
0000153C  3404                     548          MOVE.W  D4,D2
0000153E  0242 1C00                549          ANDI.W  #%0001110000000000,D2
00001542  0C42 1C00                550          CMPI.W  #%0001110000000000,D2
00001546  6700 022A                551          BEQ     DLEA
0000154A                           552          
0000154A  3404                     553          MOVE.W  D4,D2
0000154C  0242 B800                554          ANDI.W  #%1011100000000000,D2
00001550  0C42 8800                555          CMPI.W  #%1000100000000000,D2
00001554  6700 032A                556          BEQ     DMOVEM
00001558                           557          
00001558  E95C                     558          ROL.W   #4,D4
0000155A  1404                     559          MOVE.B  D4,D2
0000155C  0202 000F                560          ANDI.B  #%1111,D2
00001560                           561          
00001560  B43C 000E                562          CMP.B   #%1110,D2
00001564  6700 014A                563          BEQ     DJSR
00001568                           564          
00001568  B43C 0006                565          CMP.B   #%0110,D2
0000156C  6700 0012                566          BEQ     DNOT
00001570                           567          
00001570  6000 0CA0                568          BRA     DSERRINS
00001574                           569  
00001574  43F9 000024D4            570  DNOP    LEA     NOPM,A1
0000157A  4E4F                     571          TRAP    #15
0000157C  6000 0CB0                572          BRA     DSEND
00001580                           573          
00001580  E55C                     574  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
00001582  1A04                     575          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001584  0205 0003                576          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001588                           577  
00001588  BA3C 0000                578          CMP.B   #%00,D5         ; compare with byte size
0000158C  6700 0016                579          BEQ     DNOTB
00001590  BA3C 0001                580          CMP.B   #%01,D5         ; compare with word size
00001594  6700 0022                581          BEQ     DNOTW
00001598  BA3C 0002                582          CMP.B   #%10,D5         ; compare with long size
0000159C  6700 002E                583          BEQ     DNOTL
000015A0                           584          
000015A0  6000 0C8C                585          BRA     DSEND           ; branch to DSEND in case of invalid code
000015A4                           586  
000015A4  43F9 000024F0            587  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015AA  4E4F                     588          TRAP    #15             ; print NOTM string
000015AC  43F9 000024AD            589          LEA     MODEB,A1        ; load effective address of MODEB string
000015B2  4E4F                     590          TRAP    #15             ; print MODEB string
000015B4  6000 002A                591          BRA     DNOTA           ; branch to addressing mode parsing
000015B8                           592  
000015B8  43F9 000024F0            593  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
000015BE  4E4F                     594          TRAP    #15             ; print NOTM string
000015C0  43F9 000024B0            595          LEA     MODEW,A1        ; load effective address of MODEW string
000015C6  4E4F                     596          TRAP    #15             ; print MODEW string
000015C8  6000 0016                597          BRA     DNOTA           ; branch to addressing mode parsing
000015CC                           598  
000015CC  43F9 000024F0            599  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
000015D2  4E4F                     600          TRAP    #15             ; print NOTM string
000015D4  43F9 000024B3            601          LEA     MODEL,A1        ; load effective address of MODEL string
000015DA  4E4F                     602          TRAP    #15             ; print MODEL string
000015DC  6000 0002                603          BRA     DNOTA           ; branch to addressing mode parsing
000015E0                           604  
000015E0  ED5C                     605  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
000015E2  1204                     606          MOVE.B  D4,D1           ; move the byte in D4 to D1
000015E4  0201 003F                607          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
000015E8                           608  
000015E8                           609          ; Now process addressing mode and register based on the value in D1
000015E8                           610  
000015E8  1A01                     611          MOVE.B  D1,D5           ; Move the byte in D1 to D5
000015EA  0205 0007                612          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000015EE  6700 0026                613          BEQ     DREG            ; If it is direct register mode
000015F2  BA3C 0002                614          CMP.B   #%010,D5        ; Compare with An
000015F6  6700 0036                615          BEQ     ADREG
000015FA  BA3C 0003                616          CMP.B   #%011,D5        ; Compare with (An)+
000015FE  6700 0046                617          BEQ     ADREGP
00001602  BA3C 0004                618          CMP.B   #%100,D5        ; Compare with -(An)
00001606  6700 005E                619          BEQ     MADREG
0000160A  BA3C 0007                620          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
0000160E  6700 007E                621          BEQ     EXT
00001612                           622              
00001612  6000 0C1A                623          BRA     DSEND
00001616                           624  
00001616  1C01                     625  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
00001618  0206 0007                626          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
0000161C  DC39 000024B8            627          ADD.B   VALD,D6         ; Convert register number to ASCII
00001622  43F9 000024B8            628          LEA     VALD,A1         ; Load effective address of Dn
00001628  4E4F                     629          TRAP    #15             ; Print Dn
0000162A  6000 0C02                630          BRA     DSEND
0000162E                           631  
0000162E  1C01                     632  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001630  0206 0007                633          ANDI.B  #%111,D6
00001634  DC39 000024B6            634          ADD.B   VALA,D6
0000163A  43F9 000024B6            635          LEA     VALA,A1
00001640  4E4F                     636          TRAP    #15
00001642  6000 0BEA                637          BRA     DSEND
00001646                           638  
00001646  1C01                     639  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
00001648  0206 0007                640          ANDI.B  #%111,D6
0000164C  DC39 000024B6            641          ADD.B   VALA,D6
00001652  43F9 000024B6            642          LEA     VALA,A1
00001658  4E4F                     643          TRAP    #15
0000165A  43F9 000024C9            644          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001660  4E4F                     645          TRAP    #15             ; Print )+
00001662  6000 0BCA                646          BRA     DSEND
00001666                           647  
00001666  1C01                     648  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
00001668  0206 0007                649          ANDI.B  #%111,D6
0000166C  DC39 000024B6            650          ADD.B   VALA,D6
00001672  43F9 000024C4            651          LEA     OPENDPTR,A1     ; Load effective address of -(
00001678  4E4F                     652          TRAP    #15             ; Print -(
0000167A  43F9 000024B6            653          LEA     VALA,A1
00001680  4E4F                     654          TRAP    #15
00001682  43F9 000024C7            655          LEA     CLOSEPTR,A1     ; Load effective address of )
00001688  4E4F                     656          TRAP    #15             ; Print )
0000168A  6000 0BA2                657          BRA     DSEND
0000168E                           658  
0000168E  1C01                     659  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001690  0206 0001                660          ANDI.B  #%1,D6
00001694  6700 000E                661          BEQ     EXTW
00001698  43F9 000024BA            662          LEA     VALN,A1         ; Load effective address of #
0000169E  4E4F                     663          TRAP    #15             ; Print #
000016A0  6000 0B8C                664          BRA     DSEND
000016A4                           665  
000016A4  43F9 000024BC            666  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016AA  4E4F                     667          TRAP    #15             ; Print 0
000016AC  6000 0B80                668          BRA     DSEND
000016B0                           669  
000016B0                           670          
000016B0  E55C                     671  DJSR    ROL.W   #2,D4
000016B2  1404                     672          MOVE.B  D4,D2
000016B4  0202 0007                673          ANDI.B  #%111,D2
000016B8  0C02 0002                674          CMPI.B  #%10,D2
000016BC  6600 0B44                675          BNE     DSERR
000016C0                           676          
000016C0  43F9 00002515            677          LEA     JSRM,A1
000016C6  4E4F                     678          TRAP    #15
000016C8                           679          
000016C8  43F9 00002470            680          LEA     SM7,A1
000016CE  4E4F                     681          TRAP    #15
000016D0                           682  
000016D0  E75C                     683          ROL.W   #3,D4       * [D2] address mode
000016D2  1404                     684          MOVE.B  D4,D2
000016D4  0202 0007                685          ANDI.B  #%111,D2
000016D8                           686          
000016D8  E75C                     687          ROL.W   #3,D4       * [D1] address register
000016DA  1204                     688          MOVE.B  D4,D1
000016DC  0201 0007                689          ANDI.B  #%111,D1
000016E0                           690          
000016E0  0C02 0002                691          CMPI.B  #%010,D2
000016E4  6700 001E                692          BEQ     DJSR_REG
000016E8                           693          
000016E8  0C02 0007                694          CMPI.B  #%111,D2
000016EC  6600 0B14                695          BNE     DSERR
000016F0                           696          
000016F0  0C01 0000                697          CMPI.B  #%000,D1
000016F4  6700 0034                698          BEQ     DJSR_CUSW
000016F8                           699          
000016F8  0C01 0001                700          CMPI.B  #%001,D1
000016FC  6700 004A                701          BEQ     DJSR_CUSL
00001700                           702          
00001700  6000 0B2C                703          BRA     DSEND
00001704                           704          
00001704                           705          
00001704                           706          
00001704                           707  DJSR_REG        
00001704  43F9 000024C2            708          LEA     OPENPTR,A1
0000170A  4E4F                     709          TRAP    #15
0000170C                           710          
0000170C  43F9 000024B6            711          LEA     VALA,A1
00001712  4E4F                     712          TRAP    #15
00001714                           713          
00001714  103C 0003                714          MOVE.B  #3,D0
00001718  4E4F                     715          TRAP    #15
0000171A  103C 000E                716          MOVE.B  #14,D0
0000171E                           717          
0000171E  43F9 000024C7            718          LEA     CLOSEPTR,A1
00001724  4E4F                     719          TRAP    #15
00001726                           720          
00001726  6000 0B06                721          BRA     DSEND
0000172A                           722  
0000172A                           723          
0000172A                           724  DJSR_CUSW
0000172A  43F9 000024CE            725          LEA     DOLLAR,A1
00001730  4E4F                     726          TRAP    #15
00001732  341A                     727          MOVE.W  (A2)+,D2
00001734  48E7 0400                728          MOVEM.L D5,-(SP)
00001738  1A3C 0030                729          MOVE.B  #48,D5
0000173C  4EB8 118A                730          JSR     HEXOUT
00001740  4CDF 0020                731          MOVEM.L (SP)+,D5
00001744  6000 0AE8                732          BRA     DSEND
00001748                           733  
00001748                           734  DJSR_CUSL
00001748  43F9 000024CE            735          LEA     DOLLAR,A1
0000174E  4E4F                     736          TRAP    #15
00001750  241A                     737          MOVE.L  (A2)+,D2
00001752  48E7 0400                738          MOVEM.L D5,-(SP)
00001756  1A3C 0030                739          MOVE.B  #48,D5
0000175A  4EB8 118A                740          JSR     HEXOUT
0000175E  4CDF 0020                741          MOVEM.L (SP)+,D5
00001762  6000 0ACA                742          BRA     DSEND
00001766                           743          
00001766  43F9 00002519            744  DRTS    LEA     RTSM,A1
0000176C  4E4F                     745          TRAP    #15
0000176E  6000 0ABE                746          BRA     DSEND
00001772                           747          
00001772                           748          
00001772                           749  DLEA    *printing
00001772  43F9 000024E5            750          LEA     LEAM,A1
00001778  4E4F                     751          TRAP    #15
0000177A  43F9 00002470            752          LEA     SM7,A1
00001780  4E4F                     753          TRAP    #15
00001782                           754          
00001782                           755          *getting destination register
00001782  E75C                     756          ROL.W   #3,D4
00001784  1404                     757          MOVE.B  D4,D2
00001786  0202 0007                758          ANDI.B  #%111,D2
0000178A                           759          
0000178A                           760          *shifting out 111
0000178A  E75C                     761          ROL.W   #3,D4
0000178C                           762          
0000178C                           763          *getting ea mode
0000178C  E75C                     764          ROL.W   #3,D4
0000178E  1604                     765          MOVE.B  D4,D3
00001790  0203 0007                766          ANDI.B  #%111,D3
00001794                           767          
00001794  B63C 0002                768          CMP.B   #%010,D3
00001798  6700 000E                769          BEQ     DLEAP
0000179C                           770          
0000179C  B63C 0007                771          CMP.B   #%111,D3
000017A0  6700 0006                772          BEQ     DLEAP
000017A4                           773          
000017A4  6000 0A7C                774          BRA     DSERREA
000017A8                           775          
000017A8                           776          *getting ea reg
000017A8  E75C                     777  DLEAP   ROL.W   #3,D4
000017AA  1C04                     778          MOVE.B  D4,D6
000017AC  0206 0007                779          ANDI.B  #%111,D6
000017B0                           780          
000017B0                           781          *printing
000017B0  4EB8 121C                782          JSR     ADDRMODEALL
000017B4                           783          
000017B4  43F9 000024CC            784          LEA     COMMA,A1
000017BA  4E4F                     785          TRAP    #15
000017BC  43F9 000024B6            786          LEA     VALA,A1
000017C2  4E4F                     787          TRAP    #15
000017C4  103C 0003                788          MOVE.B  #3,D0
000017C8  1202                     789          MOVE.B  D2,D1
000017CA  4E4F                     790          TRAP    #15
000017CC  103C 000E                791          MOVE.B  #14,D0
000017D0                           792          
000017D0  6000 0A5C                793          BRA DSEND
000017D4                           794          
000017D4                           795  JSR010
000017D4  B63C 0002                796          CMP.B   #%010,D3
000017D8  6600 002A                797          BNE     JSR111
000017DC  43F9 000024C2            798          LEA     OPENPTR,A1
000017E2  4E4F                     799          TRAP    #15
000017E4  43F9 000024B6            800          LEA     VALA,A1
000017EA  4E4F                     801          TRAP    #15
000017EC  103C 0003                802          MOVE.B  #3,D0
000017F0  1206                     803          MOVE.B  D6,D1
000017F2  4E4F                     804          TRAP    #15
000017F4  103C 000E                805          MOVE.B  #14,D0
000017F8  43F9 000024C7            806          LEA     CLOSEPTR,A1
000017FE  4E4F                     807          TRAP    #15
00001800  6000 005E                808          BRA     JSRPRINT2
00001804                           809  JSR111
00001804  B63C 0007                810          CMP.B   #%111,D3
00001808  6600 09F8                811          BNE     DSERR
0000180C  BC3C 0000                812          CMP.B   #%000,D6
00001810  6600 0024                813          BNE     JSR111001
00001814  43F9 000024CE            814          LEA     DOLLAR,A1
0000181A  4E4F                     815          TRAP    #15
0000181C  341A                     816          MOVE.W  (A2)+,D2
0000181E  48E7 0400                817          MOVEM.L D5,-(SP)    
00001822  1A3C 0030                818          MOVE.B  #48,D5
00001826  4EB8 118A                819          JSR     HEXOUT
0000182A  4CDF 0020                820          MOVEM.L (SP)+,D5
0000182E  103C 000E                821          MOVE.B  #14,D0
00001832  6000 002C                822          BRA     JSRPRINT2
00001836                           823          
00001836                           824  JSR111001
00001836  BC3C 0001                825          CMP.B   #%001,D6
0000183A  6600 09C6                826          BNE     DSERR
0000183E  43F9 000024CE            827          LEA     DOLLAR,A1
00001844  4E4F                     828          TRAP    #15
00001846  241A                     829          MOVE.L  (A2)+,D2
00001848  48E7 0400                830          MOVEM.L D5,-(SP)
0000184C  1A3C 0030                831          MOVE.B  #48,D5
00001850  4EB8 118A                832          JSR     HEXOUT
00001854  4CDF 0020                833          MOVEM.L (SP)+,D5
00001858  103C 000E                834          MOVE.B  #14,D0
0000185C  6000 0002                835          BRA     JSRPRINT2
00001860                           836          
00001860                           837  JSRPRINT2
00001860  43F9 000024CC            838          LEA     COMMA,A1
00001866  4E4F                     839          TRAP    #15
00001868  43F9 000024B6            840          LEA     VALA,A1
0000186E  4E4F                     841          TRAP    #15
00001870  103C 0003                842          MOVE.B  #3,D0
00001874  3207                     843          MOVE.W  D7,D1
00001876  4E4F                     844          TRAP    #15
00001878  103C 000E                845          MOVE.B  #14,D0
0000187C                           846          
0000187C  6000 09B0                847          BRA     DSEND
00001880                           848          
00001880                           849          
00001880                           850  DMOVEM
00001880                           851  *printing movem
00001880  43F9 000024D8            852          LEA     MOVEM,A1
00001886  4E4F                     853          TRAP    #15
00001888  43F9 000024C0            854          LEA     VALM,A1
0000188E  4E4F                     855          TRAP    #15
00001890                           856          
00001890                           857  *parsing initial bits
00001890  E55C                     858          ROL.W   #2,D4
00001892  1E04                     859          MOVE.B  D4,D7
00001894  0207 0001                860          ANDI.B  #%1,D7      *getting dr field
00001898                           861          
00001898  E95C                     862          ROL.W   #4,D4
0000189A  1A04                     863          MOVE.B  D4,D5
0000189C  0205 0001                864          ANDI.B  #1,D5       *getting size field
000018A0                           865          
000018A0                           866          *printing size
000018A0  BA7C 0000                867          CMP     #0,D5
000018A4  6600 000E                868          BNE     MOVEML
000018A8  43F9 000024B0            869          LEA     MODEW,A1
000018AE  4E4F                     870          TRAP    #15
000018B0  6000 000A                871          BRA     MOVEMEA
000018B4                           872  MOVEML        
000018B4  43F9 000024B3            873          LEA     MODEL,A1
000018BA  4E4F                     874          TRAP    #15
000018BC                           875          
000018BC                           876  MOVEMEA   
000018BC  43F9 0000245A            877          LEA     SM3,A1
000018C2  4E4F                     878          TRAP    #15
000018C4                           879          
000018C4  E75C                     880          ROL.W   #3,D4       *mode bits
000018C6  1604                     881          MOVE.B  D4,D3
000018C8  0203 0007                882          ANDI.B  #%111,D3
000018CC  E75C                     883          ROL.W   #3,D4       *register bits
000018CE  1C04                     884          MOVE.B  D4,D6
000018D0  0206 0007                885          ANDI.B  #%111,D6
000018D4                           886          
000018D4  341A                     887          MOVE.W  (A2)+,D2
000018D6                           888          
000018D6  BE3C 0001                889          CMP.B   #1,D7
000018DA  6600 0016                890          BNE     MOVEMEB
000018DE                           891          
000018DE  48E7 2000                892          MOVEM.L D2,-(SP)
000018E2  4EB8 121C                893          JSR     ADDRMODEALL
000018E6  4CDF 0004                894          MOVEM.L (SP)+,D2
000018EA                           895          
000018EA  43F9 000024CC            896          LEA     COMMA,A1
000018F0  4E4F                     897          TRAP    #15
000018F2                           898          
000018F2                           899  MOVEMEB 
000018F2                           900          
000018F2  48E7 0100                901          MOVEM.L D7,-(SP)
000018F6                           902          
000018F6  B63C 0004                903          CMP.B   #%100,D3
000018FA  6700 000E                904          BEQ     MOVEMEB1
000018FE                           905          
000018FE  3E02                     906          MOVE.W  D2,D7
00001900  0247 FF00                907          ANDI.W  #$FF00,D7
00001904  E04F                     908          LSR.W   #8,D7
00001906  6000 0008                909          BRA     MOVEMEB2
0000190A                           910          
0000190A                           911  MOVEMEB1 
0000190A  3E02                     912          MOVE.W  D2,D7
0000190C  0247 00FF                913          ANDI.W  #$FF,D7
00001910                           914          
00001910                           915  MOVEMEB2
00001910                           916  
00001910  4EB9 00001A08            917          JSR     MOVEMLOOP
00001916  4CDF 0080                918          MOVEM.L (SP)+,D7
0000191A  103C 0037                919          MOVE.B  #55,D0
0000191E  B83C 0008                920          CMP.B   #8,D4
00001922  6C00 0040                921          BGE     MOVEM3
00001926  103C 000E                922          MOVE.B  #14,D0
0000192A                           923          
0000192A  43F9 000024B6            924  MOVEM2  LEA     VALA,A1
00001930  4E4F                     925          TRAP    #15
00001932                           926          
00001932  103C 0003                927          MOVE.B  #3,D0
00001936  1204                     928          MOVE.B  D4,D1
00001938  4E4F                     929          TRAP    #15
0000193A  103C 000E                930          MOVE.B  #14,D0
0000193E                           931          
0000193E  BA3C 0001                932          CMP.B   #1,D5
00001942  6700 0020                933          BEQ     MOVEM3
00001946                           934          
00001946  43F9 000024D2            935          LEA     DASH,A1
0000194C  4E4F                     936          TRAP    #15
0000194E  D205                     937          ADD.B   D5,D1
00001950  5301                     938          SUBQ.B  #1,D1
00001952                           939          
00001952  43F9 000024B6            940          LEA     VALA,A1
00001958  4E4F                     941          TRAP    #15
0000195A  103C 0003                942          MOVE.B  #3,D0
0000195E  4E4F                     943          TRAP    #15
00001960  103C 000E                944          MOVE.B  #14,D0
00001964                           945          
00001964  48E7 0100                946  MOVEM3  MOVEM.L D7,-(SP)
00001968  3E02                     947          MOVE.W  D2,D7
0000196A                           948          
0000196A  B63C 0004                949          CMP.B   #%100,D3
0000196E  6700 000A                950          BEQ     MOVEM31
00001972                           951          
00001972  0247 00FF                952          ANDI.W  #$FF,D7
00001976  6000 0008                953          BRA     MOVEM32
0000197A                           954          
0000197A                           955  MOVEM31 
0000197A  0247 FF00                956          ANDI.W  #$FF00,D7
0000197E  E04F                     957          LSR.W   #8,D7
00001980                           958  
00001980  4EB9 00001A08            959  MOVEM32 JSR     MOVEMLOOP
00001986  4CDF 0080                960          MOVEM.L (SP)+,D7
0000198A                           961          
0000198A  B03C 0037                962          CMP.B   #55,D0
0000198E  6700 0016                963          BEQ     MOVEM4
00001992                           964          
00001992  B83C 0008                965          CMP.B   #8,D4
00001996  6C00 0054                966          BGE     MOVEM5
0000199A                           967          
0000199A  103C 000E                968          MOVE.B  #14,D0
0000199E  43F9 000024D0            969          LEA     SLASH,A1
000019A4  4E4F                     970          TRAP    #15
000019A6                           971  
000019A6  103C 000E                972  MOVEM4  MOVE.B  #14,D0
000019AA  B83C 0008                973          CMP.B   #8,D4
000019AE  6C00 003C                974          BGE     MOVEM5
000019B2                           975          
000019B2  43F9 000024B8            976          LEA     VALD,A1
000019B8  4E4F                     977          TRAP    #15
000019BA                           978          
000019BA  103C 0003                979          MOVE.B  #3,D0
000019BE  1204                     980          MOVE.B  D4,D1
000019C0  4E4F                     981          TRAP    #15
000019C2  103C 000E                982          MOVE.B  #14,D0
000019C6                           983          
000019C6  BA3C 0001                984          CMP.B   #1,D5
000019CA  6700 0020                985          BEQ     MOVEM5
000019CE                           986          
000019CE  43F9 000024D2            987          LEA     DASH,A1
000019D4  4E4F                     988          TRAP    #15
000019D6  D205                     989          ADD.B   D5,D1
000019D8  5301                     990          SUBQ.B  #1,D1
000019DA                           991          
000019DA  43F9 000024B8            992          LEA     VALD,A1
000019E0  4E4F                     993          TRAP    #15
000019E2  103C 0003                994          MOVE.B  #3,D0
000019E6  4E4F                     995          TRAP    #15
000019E8  103C 000E                996          MOVE.B  #14,D0
000019EC                           997          
000019EC                           998          
000019EC                           999  
000019EC  103C 000E               1000  MOVEM5  MOVE.B  #14,D0
000019F0                          1001          
000019F0  BE3C 0001               1002          CMP.B   #1,D7
000019F4  6700 0838               1003          BEQ     DSEND
000019F8                          1004          
000019F8  43F9 000024CC           1005          LEA     COMMA,A1
000019FE  4E4F                    1006          TRAP    #15
00001A00                          1007          
00001A00  4EB8 121C               1008          JSR     ADDRMODEALL
00001A04                          1009          
00001A04  6000 0828               1010          BRA     DSEND
00001A08                          1011  
00001A08                          1012  MOVEMLOOP
00001A08  1A3C 0000               1013          MOVE.B  #0,D5
00001A0C  183C 0000               1014          MOVE.B  #0,D4
00001A10                          1015          
00001A10                          1016  MOVEMSTEP
00001A10  B63C 0004               1017          CMP.B   #%100,D3
00001A14  6700 0014               1018          BEQ     MOVEMSHIFTL
00001A18  6000 0018               1019          BRA     MOVEMSHIFTR
00001A1C                          1020  MOVEMSTEP1
00001A1C  0C05 0000               1021          CMPI.B  #0,D5
00001A20  6E00 0026               1022          BGT     MOVEMLOOPDONE
00001A24  5204                    1023          ADDQ.B  #1,D4
00001A26  6000 0012               1024          BRA     MOVEMSTEP2
00001A2A                          1025  
00001A2A                          1026  MOVEMSHIFTL
00001A2A  E30F                    1027          LSL.B   #1,D7
00001A2C  6500 0016               1028          BCS     MOVEMLOOPINC
00001A30  60EA                    1029          BRA     MOVEMSTEP1
00001A32                          1030  
00001A32                          1031  MOVEMSHIFTR
00001A32  E20F                    1032          LSR.B   #1,D7
00001A34  6500 000E               1033          BCS     MOVEMLOOPINC
00001A38  60E2                    1034          BRA     MOVEMSTEP1
00001A3A                          1035  
00001A3A                          1036  MOVEMSTEP2
00001A3A  B83C 0008               1037          CMP.B   #8,D4
00001A3E  6DD0                    1038          BLT     MOVEMSTEP
00001A40  6000 0006               1039          BRA     MOVEMLOOPDONE
00001A44                          1040  
00001A44                          1041  MOVEMLOOPINC
00001A44  5205                    1042          ADDQ.B  #1,D5
00001A46  60F2                    1043          BRA     MOVEMSTEP2
00001A48                          1044  
00001A48                          1045  MOVEMLOOPDONE
00001A48  4E75                    1046          RTS
00001A4A                          1047          
00001A4A                          1048          
00001A4A                          1049  MOVEMLOOPSINGLEAR
00001A4A                          1050          
00001A4A                          1051          
00001A4A  6000 07E2               1052          BRA     DSEND
00001A4E                          1053  
00001A4E                          1054  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A4E                          1055  
00001A4E  4E71                    1056  DS0101  NOP
00001A50                          1057          
00001A50  4E71                    1058  DADDQ   NOP
00001A52  43F9 000024DD           1059          LEA     ADDM,A1
00001A58  4E4F                    1060          TRAP    #15
00001A5A  43F9 000024BE           1061          LEA     VALQ,A1
00001A60  4E4F                    1062          TRAP    #15
00001A62                          1063          
00001A62                          1064          *parsing data to d1
00001A62  E75C                    1065          ROL.W   #3,D4
00001A64  1204                    1066          MOVE.B  D4,D1
00001A66  C23C 0007               1067          AND.B   #%111,D1
00001A6A                          1068          
00001A6A                          1069          *ensuring next bit is 0
00001A6A  E35C                    1070          ROL.W   #1,D4
00001A6C  1A04                    1071          MOVE.B  D4,D5
00001A6E  CA3C 0001               1072          AND.B   #%1,D5
00001A72  BA7C 0000               1073          CMP     #0,D5
00001A76  6600 078A               1074          BNE     DSERR
00001A7A                          1075          
00001A7A                          1076          *parsing and printing size
00001A7A  E55C                    1077          ROL.W   #2,D4
00001A7C  1A04                    1078          MOVE.B  D4,D5
00001A7E  CA3C 0003               1079          AND.B   #%11,D5
00001A82  4EB8 11D2               1080          JSR     SIZE
00001A86  43F9 0000245E           1081          LEA     SM4,A1
00001A8C  4E4F                    1082          TRAP    #15
00001A8E                          1083          
00001A8E                          1084          *parsing effective address information
00001A8E                          1085          *mode:
00001A8E  E75C                    1086          ROL.W   #3,D4
00001A90  1604                    1087          MOVE.B  D4,D3
00001A92  C63C 0007               1088          AND.B   #%111,D3
00001A96                          1089          
00001A96                          1090          *register:
00001A96  E71C                    1091          ROL.B   #3,D4
00001A98  1C04                    1092          MOVE.B  D4,D6
00001A9A  CC3C 0007               1093          AND.B   #%111,D6
00001A9E                          1094          
00001A9E                          1095          *printing data
00001A9E  43F9 000024BA           1096          LEA     VALN,A1
00001AA4  4E4F                    1097          TRAP    #15
00001AA6  103C 0003               1098          MOVE.B  #3,D0
00001AAA  4E4F                    1099          TRAP    #15
00001AAC  103C 000E               1100          MOVE.B  #14,D0
00001AB0  43F9 000024CC           1101          LEA     COMMA,A1
00001AB6  4E4F                    1102          TRAP    #15
00001AB8                          1103          
00001AB8  B67C 0004               1104          CMP     #%100,D3
00001ABC  6700 0744               1105          BEQ     DSERR
00001AC0  4EB8 121C               1106          JSR     ADDRMODEALL
00001AC4                          1107          
00001AC4  6000 0768               1108          BRA     DSEND
00001AC8                          1109          
00001AC8                          1110  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AC8                          1111  
00001AC8                          1112  DS0110  
00001AC8  E95C                    1113          ROL.W   #4,D4   *Get next 4 bits
00001ACA  1404                    1114          MOVE.B  D4,D2   *Copy to D2
00001ACC  0202 000F               1115          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001AD0                          1116          
00001AD0  B43C 0000               1117          CMP.B   #%0000,D2   *BRA
00001AD4  6700 001E               1118          BEQ     DBRA
00001AD8                          1119          
00001AD8  B43C 000E               1120          CMP.B   #%1110,D2   *BGT   
00001ADC  6700 00A2               1121          BEQ     DBGT
00001AE0                          1122          
00001AE0  B43C 000F               1123          CMP.B   #%1111,D2   *BLE   
00001AE4  6700 00D6               1124          BEQ     DBLE
00001AE8                          1125          
00001AE8  B43C 0007               1126          CMP.B   #%0111,D2   *BEQ   
00001AEC  6700 010E               1127          BEQ     DBEQ
00001AF0                          1128          
00001AF0  6000 0720               1129          BRA     DSERRINS
00001AF4                          1130          
00001AF4  43F9 0000251D           1131  DBRA    LEA     BRAM,A1
00001AFA  4E4F                    1132          TRAP    #15
00001AFC                          1133          
00001AFC  43F9 00002470           1134          LEA     SM7,A1
00001B02  4E4F                    1135          TRAP    #15
00001B04                          1136  
00001B04  E15C                    1137          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B06  1204                    1138          MOVE.B  D4,D1
00001B08  0281 00001100           1139          ANDI.L  #$1100,D1
00001B0E                          1140          
00001B0E  0C01 0000               1141          CMPI.B  #%00000000,D1
00001B12  6700 0028               1142          BEQ     DBRA_16BIT      * Word
00001B16                          1143          
00001B16  0C01 00FF               1144          CMPI.B  #%11111111,D1
00001B1A  6700 0042               1145          BEQ     DBRA_32BIT      * Long
00001B1E                          1146          
00001B1E                          1147          * 8 Bit Displacement
00001B1E  43F9 000024CE           1148          LEA     DOLLAR,A1
00001B24  4E4F                    1149          TRAP    #15
00001B26                          1150          
00001B26  341A                    1151          MOVE.W  (A2)+,D2
00001B28  D441                    1152          ADD.W   D1,D2
00001B2A  5842                    1153          ADD.W   #4,D2   *unsure   
00001B2C  1A3C 0030               1154          MOVE.B  #48,D5
00001B30  4EB8 118A               1155          JSR     HEXOUT
00001B34  6000 06F8               1156          BRA     DSEND
00001B38                          1157  
00001B38                          1158          *Displacement is put in D1      
00001B38                          1159          
00001B38                          1160          
00001B38  6000 06F4               1161          BRA     DSEND
00001B3C                          1162          
00001B3C                          1163  DBRA_16BIT
00001B3C  43F9 000024CE           1164          LEA     DOLLAR,A1
00001B42  4E4F                    1165          TRAP    #15
00001B44  341A                    1166          MOVE.W  (A2)+,D2
00001B46  D44A                    1167          ADD.W   A2,D2
00001B48  5542                    1168          SUB.W   #2,D2   *unsure
00001B4A  48E7 0400               1169          MOVEM.L D5,-(SP)    
00001B4E  1A3C 0030               1170          MOVE.B  #48,D5
00001B52  4EB8 118A               1171          JSR     HEXOUT
00001B56  4CDF 0020               1172          MOVEM.L (SP)+,D5
00001B5A  6000 06D2               1173          BRA     DSEND
00001B5E                          1174  
00001B5E                          1175  DBRA_32BIT
00001B5E  43F9 000024CE           1176          LEA     DOLLAR,A1
00001B64  4E4F                    1177          TRAP    #15
00001B66  241A                    1178          MOVE.L  (A2)+,D2
00001B68  D48A                    1179          ADD.L   A2,D2
00001B6A  5582                    1180          SUB.L   #2,D2   *unsure
00001B6C  48E7 0400               1181          MOVEM.L D5,-(SP)
00001B70  1A3C 0030               1182          MOVE.B  #48,D5
00001B74  4EB8 118A               1183          JSR     HEXOUT
00001B78  4CDF 0020               1184          MOVEM.L (SP)+,D5
00001B7C  6000 06B0               1185          BRA     DSEND
00001B80                          1186          
00001B80                          1187          
00001B80                          1188          
00001B80  43F9 00002509           1189  DBGT    LEA     BGTM,A1
00001B86  4E4F                    1190          TRAP    #15
00001B88                          1191          
00001B88  43F9 00002470           1192          LEA     SM7,A1
00001B8E  4E4F                    1193          TRAP    #15
00001B90                          1194          
00001B90  E15C                    1195          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B92  1204                    1196          MOVE.B  D4,D1
00001B94  0241 00FF               1197          ANDI.W  #%0000000011111111,D1
00001B98                          1198          
00001B98  0C01 0000               1199          CMPI.B  #%00000000,D1
00001B9C  679E                    1200          BEQ     DBRA_16BIT      * Word
00001B9E                          1201          
00001B9E  0C01 00FF               1202          CMPI.B  #%11111111,D1
00001BA2  67BA                    1203          BEQ     DBRA_32BIT      * Long
00001BA4                          1204          
00001BA4  43F9 000024CE           1205          LEA     DOLLAR,A1
00001BAA  4E4F                    1206          TRAP    #15
00001BAC                          1207      
00001BAC  340A                    1208          MOVE.W  A2,D2
00001BAE  D441                    1209          ADD.W   D1,D2
00001BB0                          1210    
00001BB0  1A3C 0030               1211          MOVE.B  #48,D5
00001BB4  4EB8 118A               1212          JSR     HEXOUT
00001BB8  6000 0674               1213          BRA     DSEND
00001BBC                          1214  
00001BBC  43F9 0000250D           1215  DBLE    LEA     BLEM,A1
00001BC2  4E4F                    1216          TRAP    #15
00001BC4                          1217          
00001BC4  43F9 00002470           1218          LEA     SM7,A1
00001BCA  4E4F                    1219          TRAP    #15
00001BCC                          1220          
00001BCC  E15C                    1221          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BCE  1204                    1222          MOVE.B  D4,D1
00001BD0  0241 00FF               1223          ANDI.W  #%0000000011111111,D1
00001BD4                          1224          
00001BD4  0C01 0000               1225          CMPI.B  #%00000000,D1
00001BD8  6700 FF62               1226          BEQ     DBRA_16BIT      * Word
00001BDC                          1227          
00001BDC  0C01 00FF               1228          CMPI.B  #%11111111,D1
00001BE0  6700 FF7C               1229          BEQ     DBRA_32BIT      * Long
00001BE4                          1230          
00001BE4  43F9 000024CE           1231          LEA     DOLLAR,A1
00001BEA  4E4F                    1232          TRAP    #15
00001BEC                          1233          
00001BEC  340A                    1234          MOVE.W  A2,D2
00001BEE  D441                    1235          ADD.W   D1,D2
00001BF0                          1236   
00001BF0  1A3C 0030               1237          MOVE.B  #48,D5
00001BF4  4EB8 118A               1238          JSR     HEXOUT
00001BF8                          1239          
00001BF8  6000 0634               1240          BRA     DSEND
00001BFC                          1241  
00001BFC  43F9 00002511           1242  DBEQ    LEA     BEQM,A1
00001C02  4E4F                    1243          TRAP    #15
00001C04                          1244          
00001C04  43F9 00002470           1245          LEA     SM7,A1
00001C0A  4E4F                    1246          TRAP    #15
00001C0C                          1247          
00001C0C  E15C                    1248          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C0E  1204                    1249          MOVE.B  D4,D1
00001C10  0241 00FF               1250          ANDI.W  #%0000000011111111,D1
00001C14                          1251          
00001C14  0C01 0000               1252          CMPI.B  #%00000000,D1
00001C18  6700 FF22               1253          BEQ     DBRA_16BIT      * Word
00001C1C                          1254          
00001C1C  0C01 00FF               1255          CMPI.B  #%11111111,D1
00001C20  6700 FF3C               1256          BEQ     DBRA_32BIT      * Long
00001C24                          1257          
00001C24  43F9 000024CE           1258          LEA     DOLLAR,A1
00001C2A  4E4F                    1259          TRAP    #15
00001C2C                          1260  
00001C2C  340A                    1261          MOVE.W  A2,D2
00001C2E  D441                    1262          ADD.W   D1,D2
00001C30                          1263   
00001C30  1A3C 0030               1264          MOVE.B  #48,D5
00001C34  4EB8 118A               1265          JSR     HEXOUT
00001C38                          1266          
00001C38  6000 05F4               1267          BRA     DSEND
00001C3C                          1268  
00001C3C                          1269  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C3C                          1270  
00001C3C  4E71                    1271  DS0111  NOP
00001C3E                          1272          
00001C3E  4E71                    1273  DMOVEQ  NOP
00001C40  43F9 000024D8           1274          LEA     MOVEM,A1
00001C46  4E4F                    1275          TRAP    #15
00001C48  43F9 000024BE           1276          LEA     VALQ,A1
00001C4E  4E4F                    1277          TRAP    #15
00001C50  43F9 00002463           1278          LEA     SM5,A1
00001C56  4E4F                    1279          TRAP    #15
00001C58                          1280          
00001C58                          1281          *getting register number
00001C58  E75C                    1282          ROL.W   #3,D4
00001C5A  1A04                    1283          MOVE.B  D4,D5
00001C5C  CA3C 0007               1284          AND.B   #%111,D5
00001C60                          1285          
00001C60                          1286          *throwing error if next digit not 0
00001C60  E35C                    1287          ROL.W   #1,D4
00001C62  1C04                    1288          MOVE.B  D4,D6
00001C64  CC3C 0001               1289          AND.B   #%1,D6
00001C68  BC3C 0000               1290          CMP.B   #0,D6
00001C6C  6600 0594               1291          BNE     DSERR
00001C70                          1292          
00001C70                          1293          *getting data and printing information
00001C70  E15C                    1294          ROL.W   #8,D4
00001C72  1204                    1295          MOVE.B  D4,D1
00001C74  C23C 00FF               1296          AND.B   #%11111111,D1
00001C78  43F9 000024BA           1297          LEA     VALN,A1
00001C7E  4E4F                    1298          TRAP    #15
00001C80  103C 0003               1299          MOVE.B  #3,D0
00001C84  4E4F                    1300          TRAP    #15
00001C86  103C 000E               1301          MOVE.B  #14,D0
00001C8A  43F9 000024CC           1302          LEA     COMMA,A1
00001C90  4E4F                    1303          TRAP    #15
00001C92  43F9 000024B8           1304          LEA     VALD,A1
00001C98  4E4F                    1305          TRAP    #15
00001C9A  103C 0003               1306          MOVE.B  #3,D0
00001C9E  3205                    1307          MOVE.W  D5,D1
00001CA0  4E4F                    1308          TRAP    #15
00001CA2                          1309          
00001CA2  6000 058A               1310          BRA     DSEND
00001CA6                          1311          
00001CA6                          1312  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001CA6                          1313  
00001CA6  4E71                    1314  DS1000  NOP
00001CA8                          1315          
00001CA8  E75C                    1316  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001CAA  1A04                    1317          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CAC  0205 0007               1318          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CB0  1C05                    1319          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001CB2                          1320  
00001CB2  E75C                    1321          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001CB4  1A04                    1322          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CB6  0205 0007               1323          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001CBA  1E05                    1324          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001CBC  BA3C 0000               1325          CMP.B   #%000,D5        ; Compare with byte size
00001CC0  6700 0016               1326          BEQ     DORB
00001CC4  BA3C 0001               1327          CMP.B   #%001,D5        ; Compare with word size
00001CC8  6700 0022               1328          BEQ     DORW
00001CCC  BA3C 0002               1329          CMP.B   #%010,D5        ; Compare with long size
00001CD0  6700 002E               1330          BEQ     DORL
00001CD4                          1331  
00001CD4  6000 0558               1332          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001CD8                          1333  
00001CD8  43F9 000024ED           1334  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001CDE  4E4F                    1335          TRAP    #15             ; Print ORM string
00001CE0  43F9 000024AD           1336          LEA     MODEB,A1        ; Load effective address of MODEB string
00001CE6  4E4F                    1337          TRAP    #15             ; Print MODEB string
00001CE8  6000 002A               1338          BRA     DORA            ; Branch to addressing mode parsing
00001CEC                          1339  
00001CEC  43F9 000024ED           1340  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001CF2  4E4F                    1341          TRAP    #15             ; Print ORM string
00001CF4  43F9 000024B0           1342          LEA     MODEW,A1        ; Load effective address of MODEW string
00001CFA  4E4F                    1343          TRAP    #15             ; Print MODEW string
00001CFC  6000 0016               1344          BRA     DORA            ; Branch to addressing mode parsing
00001D00                          1345  
00001D00  43F9 000024ED           1346  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001D06  4E4F                    1347          TRAP    #15             ; Print ORM string
00001D08  43F9 000024B3           1348          LEA     MODEL,A1        ; Load effective address of MODEL string
00001D0E  4E4F                    1349          TRAP    #15             ; Print MODEL string
00001D10  6000 0002               1350          BRA     DORA            ; Branch to addressing mode parsing
00001D14                          1351  
00001D14  43F9 00002469           1352  DORA    LEA     SM6,A1
00001D1A  4E4F                    1353          TRAP    #15
00001D1C  ED5C                    1354          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001D1E  1A04                    1355          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D20  0205 0038               1356          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001D24  E61D                    1357          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001D26  1605                    1358          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001D28  0204 0007               1359          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001D2C  1C04                    1360          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001D2E                          1361  
00001D2E  BE3C 0004               1362          CMP.B   #%100,D7        ; Compare opmode with '100'
00001D32  6D00 0006               1363          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001D36  6000 002A               1364          BRA     DORAD           ; Else, branch to DORAD
00001D3A                          1365  
00001D3A  4EB8 121C               1366  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D3E  103C 000E               1367          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001D42  43F9 000024CC           1368          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D48  4E4F                    1369          TRAP    #15             ; Print comma
00001D4A  43F9 000024B8           1370          LEA     VALD,A1
00001D50  4E4F                    1371          TRAP    #15
00001D52  1206                    1372          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D54  103C 0003               1373          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D58  4E4F                    1374          TRAP    #15             ; Print register number
00001D5A  103C 000E               1375          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D5E  6000 04CE               1376          BRA     DSEND           ; Branch to DSEND
00001D62                          1377  
00001D62  1206                    1378  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D64  103C 0003               1379          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D68  4E4F                    1380          TRAP    #15             ; Print register number
00001D6A  103C 000E               1381          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D6E  43F9 000024CC           1382          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D74  4E4F                    1383          TRAP    #15             ; Print comma
00001D76  4EB8 121C               1384          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D7A  103C 000E               1385          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D7E  6000 04AE               1386          BRA     DSEND           ; Branch to DSEND                 
00001D82                          1387  
00001D82                          1388  
00001D82                          1389  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D82                          1390  
00001D82  4E71                    1391  DS1001  NOP
00001D84  4E71                    1392  DSUB    NOP
00001D86                          1393  *print sub
00001D86  43F9 000024E1           1394          LEA     SUBM,A1
00001D8C  4E4F                    1395          TRAP    #15
00001D8E                          1396  
00001D8E                          1397  *parse dn reg: 3 bits
00001D8E                          1398  *number of the data register involved
00001D8E                          1399  *nums 0-7, paired with below
00001D8E  E75C                    1400          ROL.W   #3,D4       *dn reg num in d1
00001D90  1E04                    1401          MOVE.B  D4,D7
00001D92  0207 0007               1402          ANDI.B  #%111,D7
00001D96                          1403          
00001D96  3C47                    1404          MOVE.W  D7,A6       *temporary for storage
00001D98                          1405  
00001D98                          1406  *parse opmode: 3 bits
00001D98                          1407  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001D98                          1408  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001D98                          1409  *invalid: 111, 011
00001D98                          1410  *parse first digit separately
00001D98  E35C                    1411          ROL.W   #1,D4       *addressing mode in d2
00001D9A  1E04                    1412          MOVE.B  D4,D7
00001D9C  0207 0001               1413          ANDI.B  #%1,D7
00001DA0                          1414          
00001DA0                          1415  *parsing next two digits of size
00001DA0  E55C                    1416          ROL.W   #2,D4       *size in d5
00001DA2  1A04                    1417          MOVE.B  D4,D5
00001DA4  0205 0003               1418          ANDI.B  #%11,D5
00001DA8  4EB8 11D2               1419          JSR     SIZE
00001DAC  43F9 00002463           1420          LEA     SM5,A1
00001DB2  4E4F                    1421          TRAP    #15
00001DB4                          1422          
00001DB4                          1423  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001DB4  BE3C 0000               1424          CMP.B   #%0,D7       *if 1, then register info printed last
00001DB8  6700 0026               1425          BEQ     DSUBEA      *branch to ea before register
00001DBC                          1426          
00001DBC                          1427  *printing register information
00001DBC                          1428  DSUBPRNTREG
00001DBC  43F9 000024B8           1429          LEA     VALD,A1
00001DC2  4E4F                    1430          TRAP    #15
00001DC4  320E                    1431          MOVE.W  A6,D1       *retrieving a6 register data
00001DC6  103C 0003               1432          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001DCA  4E4F                    1433          TRAP    #15         *printing register number
00001DCC  103C 000E               1434          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001DD0  BE3C 0000               1435          CMP.B   #%0,D7      *if info finished printing
00001DD4  6700 0458               1436          BEQ     DSEND      *branch to end
00001DD8  43F9 000024CC           1437          LEA     COMMA,A1
00001DDE  4E4F                    1438          TRAP    #15
00001DE0                          1439  
00001DE0                          1440          
00001DE0                          1441  * parse ea mode: 3 bits
00001DE0                          1442  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001DE0                          1443  *address reg direct not allowed for .B operations
00001DE0                          1444  *no invalid
00001DE0                          1445  DSUBEA
00001DE0  E75C                    1446          ROL.W   #3,D4       *ea mode
00001DE2  1604                    1447          MOVE.B  D4,D3
00001DE4  0203 0007               1448          ANDI.B  #%111,D3
00001DE8                          1449  
00001DE8                          1450  *parse ea reg: 3 bits
00001DE8                          1451  *no invalid: paired with opmode below (nums 0-7)
00001DE8                          1452  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001DE8  E75C                    1453          ROL.W   #3,D4       *ea mode
00001DEA  1C04                    1454          MOVE.B  D4,D6
00001DEC  0206 0007               1455          ANDI.B  #%111,D6
00001DF0                          1456          
00001DF0  2803                    1457          MOVE.L  D3,D4   *temporarily using D4 
00001DF2                          1458          
00001DF2                          1459  *comparisons
00001DF2  B67C 0004               1460          CMP     #%100,D3
00001DF6  6700 040A               1461          BEQ     DSERR
00001DFA  4EB8 121C               1462          JSR     ADDRMODEALL
00001DFE  BE3C 0001               1463          CMP.B   #%1,D7      *if info printed
00001E02  6700 042A               1464          BEQ     DSEND       *end
00001E06  43F9 000024CC           1465          LEA     COMMA,A1
00001E0C  4E4F                    1466          TRAP    #15
00001E0E  60AC                    1467          BRA     DSUBPRNTREG *check d6 for size of data
00001E10                          1468  *then take data from d4 and print (?)
00001E10                          1469  
00001E10  6000 041C               1470          BRA     DSEND
00001E14                          1471  
00001E14                          1472  
00001E14                          1473  
00001E14  4E71                    1474  DS1010  NOP
00001E16  6000 03FA               1475          BRA     DSERRINS
00001E1A                          1476  
00001E1A                          1477          
00001E1A                          1478  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E1A                          1479  
00001E1A  4E71                    1480  DS1011  NOP
00001E1C  6000 03F4               1481          BRA     DSERRINS
00001E20                          1482          
00001E20                          1483  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E20                          1484  
00001E20                          1485  DAND    
00001E20  E75C                    1486          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001E22  1A04                    1487          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E24  0205 0007               1488          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001E28  1C05                    1489          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001E2A                          1490  
00001E2A  E75C                    1491          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001E2C  1A04                    1492          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E2E  0205 0007               1493          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001E32  1E05                    1494          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001E34  BA3C 0000               1495          CMP.B   #%000,D5        ; Compare with byte size
00001E38  6700 0016               1496          BEQ     DANDB
00001E3C  BA3C 0001               1497          CMP.B   #%001,D5        ; Compare with word size
00001E40  6700 0022               1498          BEQ     DANDW
00001E44  BA3C 0002               1499          CMP.B   #%010,D5        ; Compare with long size
00001E48  6700 002E               1500          BEQ     DANDL
00001E4C                          1501  
00001E4C  6000 03E0               1502          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001E50                          1503  
00001E50  43F9 000024E9           1504  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E56  4E4F                    1505          TRAP    #15             ; Print ANDM string
00001E58  43F9 000024AD           1506          LEA     MODEB,A1        ; Load effective address of MODEB string
00001E5E  4E4F                    1507          TRAP    #15             ; Print MODEB string
00001E60  6000 002A               1508          BRA     DANDA           ; Branch to addressing mode parsing
00001E64                          1509  
00001E64  43F9 000024E9           1510  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E6A  4E4F                    1511          TRAP    #15             ; Print ANDM string
00001E6C  43F9 000024B0           1512          LEA     MODEW,A1        ; Load effective address of MODEW string
00001E72  4E4F                    1513          TRAP    #15             ; Print MODEW string
00001E74  6000 0016               1514          BRA     DANDA           ; Branch to addressing mode parsing
00001E78                          1515  
00001E78  43F9 000024E9           1516  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E7E  4E4F                    1517          TRAP    #15             ; Print ANDM string
00001E80  43F9 000024B3           1518          LEA     MODEL,A1        ; Load effective address of MODEL string
00001E86  4E4F                    1519          TRAP    #15             ; Print MODEL string
00001E88  6000 0002               1520          BRA     DANDA           ; Branch to addressing mode parsing
00001E8C                          1521  
00001E8C  43F9 00002463           1522  DANDA   LEA     SM5,A1
00001E92  4E4F                    1523          TRAP    #15
00001E94  ED5C                    1524          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001E96  1A04                    1525          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E98  0205 0038               1526          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001E9C  E61D                    1527          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001E9E  1605                    1528          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001EA0  0204 0007               1529          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001EA4  1C04                    1530          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001EA6                          1531  
00001EA6  BE3C 0004               1532          CMP.B   #%100,D7        ; Compare opmode with '100'
00001EAA  6D00 0006               1533          BLT     DANDAE          ; If opmode < '100', branch to DANDAE
00001EAE  6000 002A               1534          BRA     DANDAD          ; Else, branch to DANDAD
00001EB2                          1535  
00001EB2  4EB8 121C               1536  DANDAE  JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001EB6  103C 000E               1537          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001EBA  43F9 000024CC           1538          LEA     COMMA,A1        ; Load effective address of COMMA string
00001EC0  4E4F                    1539          TRAP    #15             ; Print comma
00001EC2  43F9 000024B8           1540          LEA     VALD,A1
00001EC8  4E4F                    1541          TRAP    #15
00001ECA  1206                    1542          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001ECC  103C 0003               1543          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001ED0  4E4F                    1544          TRAP    #15             ; Print register number
00001ED2  103C 000E               1545          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001ED6  6000 0356               1546          BRA     DSEND           ; Branch to DSEND
00001EDA                          1547  
00001EDA  1206                    1548  DANDAD  MOVE.B  D6,D1           ; Move ea num to D1 to print
00001EDC  103C 0003               1549          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001EE0  4E4F                    1550          TRAP    #15             ; Print register number
00001EE2  103C 000E               1551          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EE6  43F9 000024CC           1552          LEA     COMMA,A1        ; Load effective address of COMMA string
00001EEC  4E4F                    1553          TRAP    #15             ; Print comma
00001EEE  4EB8 121C               1554          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001EF2  103C 000E               1555          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001EF6  6000 0336               1556          BRA     DSEND           ; Branch to DSEND 
00001EFA                          1557  
00001EFA                          1558  
00001EFA  6000 0332               1559          BRA     DSEND       
00001EFE                          1560          
00001EFE                          1561  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EFE                          1562  
00001EFE  4E71                    1563  DS1101  NOP
00001F00                          1564  
00001F00  4E71                    1565  DADD    NOP
00001F02  43F9 000024DD           1566          LEA     ADDM,A1
00001F08  4E4F                    1567          TRAP    #15
00001F0A                          1568          
00001F0A                          1569          *parse dn reg: 3 bits
00001F0A                          1570  *number of the data register involved
00001F0A                          1571  *nums 0-7, paired with below
00001F0A  E75C                    1572          ROL.W   #3,D4       *dn reg num in d7
00001F0C  1E04                    1573          MOVE.B  D4,D7
00001F0E  0207 0007               1574          ANDI.B  #%111,D7
00001F12                          1575          
00001F12  3C47                    1576          MOVE.W  D7,A6
00001F14                          1577  
00001F14                          1578  *parse opmode: 3 bits
00001F14                          1579  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001F14                          1580  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001F14                          1581  *invalid: 111, 011
00001F14                          1582  *parse first digit separately
00001F14  E35C                    1583          ROL.W   #1,D4       *addressing mode in d2
00001F16  1E04                    1584          MOVE.B  D4,D7
00001F18  0207 0001               1585          ANDI.B  #%1,D7
00001F1C                          1586          
00001F1C                          1587  *parsing next two digits of size
00001F1C  E55C                    1588          ROL.W   #2,D4       *size in d5
00001F1E  1A04                    1589          MOVE.B  D4,D5
00001F20  0205 0003               1590          ANDI.B  #%11,D5
00001F24  BA3C 0003               1591          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001F28  6700 007C               1592          BEQ     DADDA
00001F2C  4EB8 11D2               1593          JSR     SIZE
00001F30  43F9 00002463           1594          LEA     SM5,A1
00001F36  4E4F                    1595          TRAP    #15
00001F38                          1596          
00001F38                          1597  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001F38  BE3C 0000               1598          CMP.B   #%0,D7       *if 0, then register info printed last
00001F3C  6700 002E               1599          BEQ     DADDEA      *branch to ea before register
00001F40                          1600          
00001F40                          1601  *printing register information
00001F40                          1602  DADDPRNTREG
00001F40  BA3C 0003               1603          CMP.B   #%11,D5
00001F44  6700 0058               1604          BEQ     PRINTA
00001F48  43F9 000024B8           1605          LEA     VALD,A1
00001F4E                          1606  ADDCONT
00001F4E  4E4F                    1607          TRAP    #15
00001F50  320E                    1608          MOVE.W  A6,D1       *moving reg num to d1 to print
00001F52  103C 0003               1609          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001F56  4E4F                    1610          TRAP    #15         *printing register number
00001F58  103C 000E               1611          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001F5C  BE3C 0000               1612          CMP.B   #%0,D7      *if info finished printing
00001F60  6700 02CC               1613          BEQ     DSEND      *branch to end
00001F64  43F9 000024CC           1614          LEA     COMMA,A1
00001F6A  4E4F                    1615          TRAP    #15
00001F6C                          1616  
00001F6C                          1617          
00001F6C                          1618  * parse ea mode: 3 bits
00001F6C                          1619  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F6C                          1620  *address reg direct not allowed for .B operations
00001F6C                          1621  *no invalid
00001F6C                          1622  DADDEA
00001F6C  E75C                    1623          ROL.W   #3,D4       *ea mode
00001F6E  1604                    1624          MOVE.B  D4,D3
00001F70  0203 0007               1625          ANDI.B  #%111,D3
00001F74                          1626  
00001F74                          1627  *parse ea reg: 3 bits
00001F74                          1628  *no invalid: paired with opmode below (nums 0-7)
00001F74                          1629  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F74  E75C                    1630          ROL.W   #3,D4       *ea mode
00001F76  1C04                    1631          MOVE.B  D4,D6
00001F78  0206 0007               1632          ANDI.B  #%111,D6
00001F7C                          1633          
00001F7C                          1634  *comparisons
00001F7C  B67C 0004               1635          CMP     #%100,D3
00001F80  6700 005A               1636          BEQ     ADDDATACHECK
00001F84                          1637  DATACHECKCONT
00001F84  4EB8 121C               1638          JSR     ADDRMODEALL
00001F88  BE3C 0001               1639          CMP.B   #%1,D7      *if info printed
00001F8C  6700 02A0               1640          BEQ     DSEND       *end
00001F90  43F9 000024CC           1641          LEA     COMMA,A1
00001F96  4E4F                    1642          TRAP    #15
00001F98  60A6                    1643          BRA     DADDPRNTREG 
00001F9A                          1644  
00001F9A  6000 0292               1645          BRA     DSEND
00001F9E                          1646          
00001F9E  43F9 000024B6           1647  PRINTA  LEA     VALA,A1
00001FA4  60A8                    1648          BRA     ADDCONT
00001FA6                          1649  
00001FA6                          1650          
00001FA6  4E71                    1651  DADDA   NOP
00001FA8  43F9 000024B6           1652          LEA     VALA,A1
00001FAE  4E4F                    1653          TRAP    #15
00001FB0  BE3C 0000               1654          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001FB4  6600 000C               1655          BNE     ADDAL
00001FB8  43F9 000024B0           1656          LEA     MODEW,A1
00001FBE  6000 000C               1657          BRA     ADDSIZEEND
00001FC2  43F9 000024B3           1658  ADDAL   LEA     MODEL,A1
00001FC8  6000 0002               1659          BRA     ADDSIZEEND
00001FCC                          1660  ADDSIZEEND
00001FCC  4E4F                    1661          TRAP    #15
00001FCE  43F9 0000245E           1662          LEA     SM4,A1
00001FD4  4E4F                    1663          TRAP    #15
00001FD6  1E3C 0000               1664          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001FDA  6090                    1665          BRA     DADDEA
00001FDC                          1666  ADDDATACHECK
00001FDC  BA3C 0003               1667          CMP.B   #%11,D5
00001FE0  6700 0220               1668          BEQ     DSERR
00001FE4  609E                    1669          BRA     DATACHECKCONT
00001FE6                          1670          
00001FE6                          1671          
00001FE6                          1672  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001FE6                          1673  
00001FE6                          1674  DS1110
00001FE6  E75C                    1675          ROL.W   #3,D4           * [D2] Reading count
00001FE8  1404                    1676          MOVE.B  D4,D2
00001FEA  0202 0007               1677          ANDI.B  #%111,D2
00001FEE                          1678          
00001FEE  E35C                    1679          ROL.W   #1,D4           * [D3] Reading direction
00001FF0  1604                    1680          MOVE.B  D4,D3
00001FF2  0203 0001               1681          ANDI.B  #%1,D3
00001FF6                          1682          
00001FF6  E55C                    1683          ROL.W   #2,D4           * [D5] Reading size
00001FF8  1A04                    1684          MOVE.B  D4,D5
00001FFA  0205 0003               1685          ANDI.B  #%11,D5
00001FFE                          1686          
00001FFE  BA3C 0003               1687          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00002002  6700 00F0               1688          BEQ     DS1110MEM
00002006                          1689          
00002006  E35C                    1690          ROL.W   #1,D4           * [D6] Reading count mode
00002008  1C04                    1691          MOVE.B  D4,D6
0000200A  0206 0001               1692          ANDI.B  #%1,D6
0000200E                          1693          
0000200E  E55C                    1694          ROL.W   #2,D4           * [D7] reading type of shift
00002010  1E04                    1695          MOVE.B  D4,D7
00002012  0207 0003               1696          ANDI.B  #%11,D7
00002016                          1697          
00002016  E75C                    1698          ROL.W   #3,D4           * [D1] reading register
00002018  1204                    1699          MOVE.B  D4,D1
0000201A  0201 0007               1700          ANDI.B  #%111,D1
0000201E                          1701          
0000201E  BE3C 0001               1702          CMP.B   #%01,D7   *Determine shift type
00002022  6700 008E               1703          BEQ     DLS
00002026  BE3C 0000               1704          CMP.B   #%00,D7
0000202A  6700 0092               1705          BEQ     DAS
0000202E  BE3C 0003               1706          CMP.B   #%11,D7
00002032  6700 0096               1707          BEQ     DRO
00002036                          1708          
00002036  6000 01F6               1709          BRA     DSEND               *Fallback in case of invalid code
0000203A                          1710          
0000203A  48E7 FFFF               1711  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
0000203E  4EB9 000020D6           1712          JSR     DS1110SIDE
00002044  4CDF FFFF               1713          MOVEM.L (SP)+,A0-A7/D0-D7
00002048                          1714          
00002048  48E7 FFFF               1715          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
0000204C  4EB8 11D2               1716          JSR     SIZE
00002050  4CDF FFFF               1717          MOVEM.L (SP)+,A0-A7/D0-D7
00002054                          1718          
00002054  103C 000E               1719          MOVE.B  #14,D0
00002058  43F9 00002463           1720          LEA     SM5,A1
0000205E  4E4F                    1721          TRAP    #15
00002060                          1722          
00002060  BA3C 0003               1723          CMP.B   #%11,D5
00002064  6700 00B4               1724          BEQ     DS1110MEMA
00002068                          1725          
00002068  BC3C 0001               1726          CMP.B   #%1,D6
0000206C  6700 003A               1727          BEQ     DS1110_REG_D
00002070  6000 002C               1728          BRA     DS1110_REG_I
00002074                          1729          
00002074  1C01                    1730  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00002076                          1731          
00002076  103C 0003               1732          MOVE.B  #3,D0
0000207A  1202                    1733          MOVE.B  D2,D1
0000207C  4E4F                    1734          TRAP    #15
0000207E                          1735          
0000207E  103C 000E               1736          MOVE.B  #14,D0
00002082  43F9 000024CC           1737          LEA     COMMA,A1
00002088  4E4F                    1738          TRAP    #15
0000208A                          1739          
0000208A  43F9 000024B8           1740          LEA     VALD,A1
00002090  4E4F                    1741          TRAP    #15
00002092                          1742          
00002092  103C 0003               1743          MOVE.B  #3,D0
00002096  1206                    1744          MOVE.B  D6,D1
00002098  4E4F                    1745          TRAP    #15
0000209A                          1746          
0000209A  6000 0192               1747          BRA     DSEND
0000209E                          1748          
0000209E                          1749  DS1110_REG_I
0000209E  43F9 000024BA           1750          LEA     VALN,A1
000020A4  4E4F                    1751          TRAP    #15
000020A6  60CC                    1752          BRA     DS1110B
000020A8                          1753  
000020A8                          1754  DS1110_REG_D
000020A8  43F9 000024B8           1755          LEA     VALD,A1
000020AE  4E4F                    1756          TRAP    #15
000020B0  60C2                    1757          BRA     DS1110B       
000020B2                          1758          
000020B2  43F9 000024F4           1759  DLS     LEA     LSM,A1
000020B8  4E4F                    1760          TRAP    #15
000020BA  6000 FF7E               1761          BRA     DS1110A
000020BE                          1762          
000020BE  43F9 000024FB           1763  DAS     LEA     ASM,A1
000020C4  4E4F                    1764          TRAP    #15
000020C6  6000 FF72               1765          BRA     DS1110A
000020CA                          1766          
000020CA  43F9 00002502           1767  DRO     LEA     ROM,A1
000020D0  4E4F                    1768          TRAP    #15
000020D2  6000 FF66               1769          BRA     DS1110A
000020D6                          1770          
000020D6                          1771  DS1110SIDE
000020D6  103C 0006               1772          MOVE.B  #6,D0
000020DA  B63C 0001               1773          CMP.B   #1,D3
000020DE  6700 000C               1774          BEQ     DS1110LSIDE
000020E2  123C 0052               1775          MOVE.B  #82,D1
000020E6  4E4F                    1776          TRAP    #15
000020E8  6000 0008               1777          BRA     DS1110SIDEEND
000020EC                          1778  
000020EC                          1779  DS1110LSIDE
000020EC  123C 004C               1780          MOVE.B  #76,D1
000020F0  4E4F                    1781          TRAP    #15
000020F2                          1782          
000020F2                          1783  DS1110SIDEEND
000020F2  4E75                    1784          RTS 
000020F4                          1785  
000020F4                          1786  DS1110MEM
000020F4                          1787                                  * Shift type is instead stored in D2
000020F4                          1788          
000020F4  E75C                    1789          ROL.W   #3,D4           * [D6] Reading address mode
000020F6  1C04                    1790          MOVE.B  D4,D6
000020F8  0206 0007               1791          ANDI.B  #%111,D6
000020FC                          1792          
000020FC  E75C                    1793          ROL.W   #3,D4           * [D1] Reading address register
000020FE  1204                    1794          MOVE.B  D4,D1
00002100  0201 0007               1795          ANDI.B  #%111,D1
00002104                          1796          
00002104  B43C 0001               1797          CMP.B   #%01,D2
00002108  67A8                    1798          BEQ     DLS
0000210A  B43C 0000               1799          CMP.B   #%00,D2
0000210E  67AE                    1800          BEQ     DAS
00002110  B43C 0003               1801          CMP.B   #%11,D2
00002114  67B4                    1802          BEQ     DRO
00002116  6000 0116               1803          BRA     DSEND
0000211A                          1804          
0000211A                          1805          
0000211A                          1806  DS1110MEMA
0000211A                          1807          
0000211A  BC3C 0002               1808          CMP.B   #%010,D6
0000211E  6700 002E               1809          BEQ     DS1110MEM_REG
00002122  BC3C 0003               1810          CMP.B   #%011,D6
00002126  6700 004C               1811          BEQ     DS1110MEM_INC
0000212A  BC3C 0004               1812          CMP.B   #%100,D6
0000212E  6700 006A               1813          BEQ     DS1110MEM_DEC
00002132                          1814          
00002132  BC3C 0007               1815          CMP.B   #%111,D6
00002136  6600 00CA               1816          BNE     DSERR
0000213A                          1817          
0000213A  B23C 0000               1818          CMP.B   #%000,D1
0000213E  6700 0080               1819          BEQ     DS1110MEM_CUSW
00002142  B23C 0001               1820          CMP.B   #%001,D1
00002146  6700 0096               1821          BEQ     DS1110MEM_CUSL
0000214A                          1822          
0000214A  6000 00E2               1823          BRA     DSEND
0000214E                          1824  
0000214E                          1825  DS1110MEM_REG
0000214E  43F9 000024C2           1826          LEA     OPENPTR,A1
00002154  4E4F                    1827          TRAP    #15
00002156                          1828          
00002156  43F9 000024B6           1829          LEA     VALA,A1
0000215C  4E4F                    1830          TRAP    #15
0000215E                          1831          
0000215E  103C 0003               1832          MOVE.B  #3,D0
00002162  4E4F                    1833          TRAP    #15
00002164  103C 000E               1834          MOVE.B  #14,D0
00002168                          1835          
00002168  43F9 000024C7           1836          LEA     CLOSEPTR,A1
0000216E  4E4F                    1837          TRAP    #15
00002170                          1838          
00002170  6000 00BC               1839          BRA     DSEND
00002174                          1840  
00002174                          1841  DS1110MEM_INC
00002174  43F9 000024C2           1842          LEA     OPENPTR,A1
0000217A  4E4F                    1843          TRAP    #15
0000217C                          1844          
0000217C  43F9 000024B6           1845          LEA     VALA,A1
00002182  4E4F                    1846          TRAP    #15
00002184                          1847          
00002184  103C 0003               1848          MOVE.B  #3,D0
00002188  4E4F                    1849          TRAP    #15
0000218A  103C 000E               1850          MOVE.B  #14,D0
0000218E                          1851          
0000218E  43F9 000024C9           1852          LEA     CLOSEIPTR,A1
00002194  4E4F                    1853          TRAP    #15
00002196                          1854          
00002196  6000 0096               1855          BRA     DSEND
0000219A                          1856  
0000219A                          1857  DS1110MEM_DEC
0000219A  43F9 000024C4           1858          LEA     OPENDPTR,A1
000021A0  4E4F                    1859          TRAP    #15
000021A2                          1860          
000021A2  43F9 000024B6           1861          LEA     VALA,A1
000021A8  4E4F                    1862          TRAP    #15
000021AA                          1863          
000021AA  103C 0003               1864          MOVE.B  #3,D0
000021AE  4E4F                    1865          TRAP    #15
000021B0  103C 000E               1866          MOVE.B  #14,D0
000021B4                          1867          
000021B4  43F9 000024C7           1868          LEA     CLOSEPTR,A1
000021BA  4E4F                    1869          TRAP    #15
000021BC                          1870          
000021BC  6000 0070               1871          BRA     DSEND
000021C0                          1872          
000021C0                          1873  DS1110MEM_CUSW
000021C0  43F9 000024CE           1874          LEA     DOLLAR,A1
000021C6  4E4F                    1875          TRAP    #15
000021C8  341A                    1876          MOVE.W  (A2)+,D2
000021CA  48E7 0400               1877          MOVEM.L D5,-(SP)
000021CE  1A3C 0030               1878          MOVE.B  #48,D5
000021D2  4EB8 118A               1879          JSR     HEXOUT
000021D6  4CDF 0020               1880          MOVEM.L (SP)+,D5
000021DA  6000 0052               1881          BRA     DSEND
000021DE                          1882          
000021DE                          1883  DS1110MEM_CUSL
000021DE  43F9 000024CE           1884          LEA     DOLLAR,A1
000021E4  4E4F                    1885          TRAP    #15
000021E6  241A                    1886          MOVE.L  (A2)+,D2
000021E8  48E7 0400               1887          MOVEM.L D5,-(SP)
000021EC  1A3C 0030               1888          MOVE.B  #48,D5
000021F0  4EB8 118A               1889          JSR     HEXOUT
000021F4  4CDF 0020               1890          MOVEM.L (SP)+,D5
000021F8  6000 0034               1891          BRA     DSEND
000021FC                          1892          
000021FC                          1893  
000021FC                          1894  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000021FC                          1895  
000021FC  4E71                    1896  DS1111  NOP
000021FE  6000 002E               1897          BRA     DSEND
00002202                          1898  
00002202                          1899  *DS Final
00002202                          1900  *--------------------------------------------------------------------------------------------------
00002202                          1901  
00002202  103C 000E               1902  DSERR   MOVE.B  #14,D0
00002206  43F9 0000247F           1903          LEA     ERRM,A1
0000220C  4E4F                    1904          TRAP    #15
0000220E  6000 001E               1905          BRA     DSEND
00002212                          1906          
00002212                          1907  DSERRINS
00002212  103C 000E               1908          MOVE.B  #14,D0
00002216  43F9 00002487           1909          LEA     ERRMINS,A1
0000221C  4E4F                    1910          TRAP    #15
0000221E  6000 000E               1911          BRA     DSEND
00002222                          1912  
00002222                          1913  DSERREA
00002222  103C 000E               1914          MOVE.B  #14,D0
00002226  43F9 00002488           1915          LEA     ERRMEA,A1
0000222C  4E4F                    1916          TRAP    #15
0000222E                          1917  
0000222E  4E75                    1918  DSEND   RTS
00002230                          1919  
00002230  43F9 00002450           1920  DSEOF   LEA     LB,A1
00002236  103C 000E               1921          MOVE.B  #14,D0
0000223A  4E4F                    1922          TRAP    #15
0000223C                          1923          
0000223C  43F9 00002352           1924          LEA     REST,A1
00002242  103C 000E               1925          MOVE.B  #14,D0
00002246  4E4F                    1926          TRAP    #15
00002248                          1927          
00002248  103C 0005               1928          MOVE.B  #5,D0
0000224C  4E4F                    1929          TRAP    #15
0000224E                          1930          
0000224E  B23C 0059               1931          CMP.B   #89,D1
00002252  6700 EDAC               1932          BEQ     START
00002256  B23C 0079               1933          CMP.B   #121,D1
0000225A  6700 EDA4               1934          BEQ     START
0000225E                          1935  
0000225E  43F9 00002450           1936  END     LEA     LB,A1
00002264  103C 000E               1937          MOVE.B  #14,D0
00002268  4E4F                    1938          TRAP    #15
0000226A                          1939          
0000226A  43F9 00002450           1940          LEA     LB,A1
00002270  103C 000E               1941          MOVE.B  #14,D0
00002274  4E4F                    1942          TRAP    #15
00002276                          1943          
00002276  43F9 0000236F           1944          LEA     ENDMSG,A1
0000227C  103C 000E               1945          MOVE.B  #14,D0
00002280  4E4F                    1946          TRAP    #15
00002282                          1947          
00002282  43F9 00002397           1948          LEA     AUTHOR,A1
00002288  4E4F                    1949          TRAP    #15
0000228A                          1950          
0000228A  43F9 00002450           1951          LEA     LB,A1
00002290  103C 000E               1952          MOVE.B  #14,D0
00002294  4E4F                    1953          TRAP    #15
00002296                          1954          
00002296  103C 0009               1955          MOVE.B  #9,D0
0000229A  4E4F                    1956          TRAP    #15
0000229C                          1957  
0000229C                          1958  *Initialized Variables
0000229C                          1959  *--------------------------------------------------------------------------------------------------
0000229C                          1960  
0000229C  =0000000D               1961  CR      EQU     $0D
0000229C  =0000000A               1962  LF      EQU     $0A
0000229C  =00000009               1963  HT      EQU     $09
0000229C                          1964  
0000229C= 54 68 69 73 20 69 ...   1965  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002324= 45 6E 74 65 72 20 ...   1966  ASTART  DC.B    'Enter start address: $',0
0000233B= 45 6E 74 65 72 20 ...   1967  AEND    DC.B    'Enter end address:   $',0
00002352= 52 65 73 74 61 72 ...   1968  REST    DC.B    'Restart Disassembler (y/n)? ',0
0000236F= 54 68 61 6E 6B 20 ...   1969  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002397= 4D 61 64 65 20 62 ...   1970  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000023BC                          1971  
000023BC= 45 52 52 4F 52 3A ...   1972  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
000023F6= 45 52 52 4F 52 3A ...   1973  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000241C= 45 52 52 4F 52 3A ...   1974  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00002450                          1975  
00002450= 0D 0A 00                1976  LB      DC.B    CR,LF,0
00002453                          1977  
00002453= 09 00                   1978  HTM     DC.B    HT,0
00002455                          1979  
00002455= 20 00                   1980  SM1     DC.B    ' ',0
00002457= 20 20 00                1981  SM2     DC.B    '  ',0
0000245A= 20 20 20 00             1982  SM3     DC.B    '   ',0
0000245E= 20 20 20 20 00          1983  SM4     DC.B    '    ',0
00002463= 20 20 20 20 20 00       1984  SM5     DC.B    '     ',0
00002469= 20 20 20 20 20 20 00    1985  SM6     DC.B    '      ',0
00002470= 20 20 20 20 20 20 ...   1986  SM7     DC.B    '       ',0
00002478                          1987  
00002478= 54 45 53 54 00          1988  TESTM   DC.B    'TEST',0
0000247D                          1989  
0000247D= 00                      1990  NOTH    DC.B    '',0
0000247E= 00                      1991  NOTH2   DC.B    '',0
0000247F                          1992  
0000247F= 20 2A 45 52 52 4F ...   1993  ERRM    DC.B    ' *ERROR',0
00002487= 00                      1994  ERRMINS DC.B    '',0
00002488= 20 2A 45 52 52 4F ...   1995  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
000024AD                          1996  
000024AD= 2E 42 00                1997  MODEB   DC.B    '.B',0
000024B0= 2E 57 00                1998  MODEW   DC.B    '.W',0
000024B3= 2E 4C 00                1999  MODEL   DC.B    '.L',0
000024B6                          2000  
000024B6= 41 00                   2001  VALA    DC.B    'A',0
000024B8= 44 00                   2002  VALD    DC.B    'D',0
000024BA= 23 00                   2003  VALN    DC.B    '#',0
000024BC= 30 00                   2004  VAL0    DC.B    '0',0
000024BE= 51 00                   2005  VALQ    DC.B    'Q',0
000024C0= 4D 00                   2006  VALM    DC.B    'M',0
000024C2                          2007  
000024C2= 28 00                   2008  OPENPTR     DC.B    '(',0
000024C4= 2D 28 00                2009  OPENDPTR    DC.B    '-(',0
000024C7                          2010  
000024C7= 29 00                   2011  CLOSEPTR    DC.B    ')',0
000024C9= 29 2B 00                2012  CLOSEIPTR   DC.B    ')+',0
000024CC                          2013  
000024CC= 2C 00                   2014  COMMA   DC.B    ',',0
000024CE= 24 00                   2015  DOLLAR  DC.B    '$',0
000024D0= 2F 00                   2016  SLASH   DC.B    '/',0
000024D2= 2D 00                   2017  DASH    DC.B    '-',0
000024D4                          2018  
000024D4= 4E 4F 50 00             2019  NOPM    DC.B    'NOP',0
000024D8                          2020  
000024D8= 4D 4F 56 45 00          2021  MOVEM   DC.B    'MOVE',0
000024DD                          2022  
000024DD= 41 44 44 00             2023  ADDM    DC.B    'ADD',0
000024E1                          2024  
000024E1= 53 55 42 00             2025  SUBM    DC.B    'SUB',0
000024E5                          2026  
000024E5= 4C 45 41 00             2027  LEAM    DC.B    'LEA',0
000024E9                          2028  
000024E9= 41 4E 44 00             2029  ANDM    DC.B    'AND',0
000024ED= 4F 52 00                2030  ORM     DC.B    'OR',0
000024F0= 4E 4F 54 00             2031  NOTM    DC.B    'NOT',0
000024F4                          2032  
000024F4= 4C 53 00                2033  LSM    DC.B    'LS',0
000024F7= 4C 53 52 00             2034  LSRM    DC.B    'LSR',0
000024FB= 41 53 00                2035  ASM    DC.B    'AS',0
000024FE= 41 53 52 00             2036  ASRM    DC.B    'ASR',0
00002502                          2037  
00002502= 52 4F 00                2038  ROM    DC.B    'RO',0
00002505= 52 4F 52 00             2039  RORM    DC.B    'ROR',0
00002509                          2040  
00002509= 42 47 54 00             2041  BGTM    DC.B    'BGT',0
0000250D= 42 4C 45 00             2042  BLEM    DC.B    'BLE',0
00002511= 42 45 51 00             2043  BEQM    DC.B    'BEQ',0
00002515                          2044  
00002515= 4A 53 52 00             2045  JSRM    DC.B    'JSR',0
00002519= 52 54 53 00             2046  RTSM    DC.B    'RTS',0
0000251D                          2047  
0000251D= 42 52 41 00             2048  BRAM    DC.B    'BRA',0
00002521                          2049  
00002521                          2050  
00002521                          2051      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1FC2
ADDCONT             1F4E
ADDDATACHECK        1FDC
ADDM                24DD
ADDRMODEALL         121C
ADDSIZEEND          1FCC
ADREG               162E
ADREGP              1646
AEND                233B
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                24E9
ASM                 24FB
ASRM                24FE
ASTART              2324
AUTHOR              2397
BEQM                2511
BGTM                2509
BLEM                250D
BRAM                251D
CLOSEIPTR           24C9
CLOSEPTR            24C7
COMMA               24CC
CR                  D
DADD                1F00
DADDA               1FA6
DADDEA              1F6C
DADDPRNTREG         1F40
DADDQ               1A50
DAND                1E20
DANDA               1E8C
DANDAD              1EDA
DANDAE              1EB2
DANDB               1E50
DANDL               1E78
DANDW               1E64
DAS                 20BE
DASH                24D2
DATACHECKCONT       1F84
DBEQ                1BFC
DBGT                1B80
DBLE                1BBC
DBRA                1AF4
DBRA_16BIT          1B3C
DBRA_32BIT          1B5E
DISASM              137C
DJSR                16B0
DJSR_CUSL           1748
DJSR_CUSW           172A
DJSR_REG            1704
DLEA                1772
DLEAP               17A8
DLS                 20B2
DMOVE2              13AE
DMOVEA              14B0
DMOVEM              1880
DMOVEQ              1C3E
DNOP                1574
DNOT                1580
DNOTA               15E0
DNOTB               15A4
DNOTL               15CC
DNOTW               15B8
DOLLAR              24CE
DOR                 1CA8
DORA                1D14
DORAD               1D62
DORAE               1D3A
DORB                1CD8
DORL                1D00
DORW                1CEC
DREG                1616
DRO                 20CA
DRTS                1766
DS0                 1386
DS00                139A
DS01                14D2
DS010               14F0
DS0100              152C
DS0101              1A4E
DS011               14FA
DS0110              1AC8
DS0111              1C3C
DS1                 1390
DS10                14DC
DS100               1504
DS1000              1CA6
DS1001              1D82
DS101               150E
DS1010              1E14
DS1011              1E1A
DS11                14E6
DS110               1518
DS1101              1EFE
DS111               1522
DS1110              1FE6
DS1110A             203A
DS1110B             2074
DS1110LSIDE         20EC
DS1110MEM           20F4
DS1110MEMA          211A
DS1110MEM_CUSL      21DE
DS1110MEM_CUSW      21C0
DS1110MEM_DEC       219A
DS1110MEM_INC       2174
DS1110MEM_REG       214E
DS1110SIDE          20D6
DS1110SIDEEND       20F2
DS1110_REG_D        20A8
DS1110_REG_I        209E
DS1111              21FC
DSEND               222E
DSEOF               2230
DSERR               2202
DSERREA             2222
DSERRINS            2212
DSUB                1D84
DSUBEA              1DE0
DSUBPRNTREG         1DBC
END                 225E
ENDMSG              236F
ERRM                247F
ERRMEA              2488
ERRMINS             2487
EXT                 168E
EXTW                16A4
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 2453
INTRO               229C
JSR010              17D4
JSR111              1804
JSR111001           1836
JSRM                2515
JSRPRINT2           1860
LB                  2450
LEAM                24E5
LF                  A
LSM                 24F4
LSRM                24F7
MADREG              1666
MODEB               24AD
MODEL               24B3
MODEW               24B0
MOVECONT            13D2
MOVEERRCHECK        14C6
MOVEM               24D8
MOVEM2              192A
MOVEM3              1964
MOVEM31             197A
MOVEM32             1980
MOVEM4              19A6
MOVEM5              19EC
MOVEMEA             18BC
MOVEMEB             18F2
MOVEMEB1            190A
MOVEMEB2            1910
MOVEML              18B4
MOVEMLOOP           1A08
MOVEMLOOPDONE       1A48
MOVEMLOOPINC        1A44
MOVEMLOOPSINGLEAR   1A4A
MOVEMSHIFTL         1A2A
MOVEMSHIFTR         1A32
MOVEMSTEP           1A10
MOVEMSTEP1          1A1C
MOVEMSTEP2          1A3A
MSDONE              1476
MSIZE               1430
MSIZEB              1458
MSIZEBN             13FA
MSIZEL              146C
MSIZELN             141E
MSIZEN              13D2
MSIZEW              1462
MSIZEWN             140C
NOPM                24D4
NOTH                247D
NOTH2               247E
NOTM                24F0
OPENDPTR            24C4
OPENPTR             24C2
ORM                 24ED
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1F9E
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                2352
ROM                 2502
RORM                2505
RPAUSE              117E
RSTEP               112E
RTSM                2519
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               24D0
SM1                 2455
SM2                 2457
SM3                 245A
SM4                 245E
SM5                 2463
SM6                 2469
SM7                 2470
SRET                121A
START               1000
STARTER             0
SUBM                24E1
TEST                103A
TESTM               2478
VAL0                24BC
VALA                24B6
VALD                24B8
VALM                24C0
VALN                24BA
VALQ                24BE
VERR1               10F8
VERR1M              23BC
VERR2               1108
VERR2M              23F6
VERR3               1118
VERR3M              241C
VINPUT              10EE
