00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 3:11:58 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 00002002             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 0000208A             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 000021E3             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00CC                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 0000109A             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 000020A1             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  103C 0001                 51          MOVE.B  #1,D0
0000106A  123C 0000                 52          MOVE.B  #0,D1
0000106E  43F9 000021E3             53          LEA     NOTH,A1
00001074  4E4F                      54          TRAP    #15
00001076  103C 000E                 55          MOVE.B  #14,D0
0000107A                            56          
0000107A  43F9 000021E3             57          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001080  103C 0002                 58          MOVE.B  #2,D0       *String prompt #2
00001084  4E4F                      59          TRAP    #15
00001086                            60          
00001086  B27C 0008                 61          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000108A  6E00 0090                 62          BGT     VERR3
0000108E                            63          
0000108E  4EB9 0000109A             64          JSR     PARSE       *Parse string #2
00001094                            65          
00001094  2841                      66          MOVE.L  D1,A4
00001096                            67          
00001096  6000 005A                 68          BRA     VINPUT      *Verify inputs
0000109A                            69          
0000109A                            70  *--------------------------------------------------------------------------------------------------
0000109A                            71  
0000109A                            72  PARSE                       *PARSE: Initialize variables involved in parsing
0000109A  123C 0000                 73          MOVE.B  #0,D1       * [D1] parse output
0000109E  143C 0008                 74          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
000010A2                            75          
000010A2                            76  PSTEP                       *PSTEP: Step in parsing for loop
000010A2  1019                      77          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A4  B03C 0000                 78          CMP.B   #0,D0       *Check if reached end of string input
000010A8  6700 0046                 79          BEQ     PDONE       *Break the for loop if reached end
000010AC  E989                      80          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AE  B03C 003A                 81          CMP.B   #58,D0      *Distinguish between letter and number
000010B2  6D00 001A                 82          BLT     PNUM        *Handle number
000010B6                            83  
000010B6  0400 0037                 84  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010BA  0C00 000F                 85          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BE  6E00 0006                 86          BGT     PCAPS       *Handle lowercase
000010C2  6000 000E                 87          BRA     PSTEP2
000010C6                            88       
000010C6  0400 0020                 89  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010CA  6000 0006                 90          BRA     PSTEP2
000010CE                            91  
000010CE  0400 0030                 92  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010D2                            93          
000010D2  0C00 000F                 94  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D6  6E00 0034                 95          BGT     VERR2
000010DA  0C00 0000                 96          CMPI.B   #0,D0
000010DE  6D00 002C                 97          BLT     VERR2
000010E2  D280                      98          ADD.L   D0,D1       *Append hex char to parse output
000010E4  5302                      99          SUBQ.B  #1,D2       *Decrement the counter
000010E6  0C02 0000                100          CMPI.B   #0,D2      *Compare if we reached max count
000010EA  6700 0004                101          BEQ     PDONE       *Complete parsing
000010EE  60B2                     102          BRA     PSTEP       *Or else continue loop
000010F0                           103  
000010F0  4E75                     104  PDONE   RTS
000010F2                           105  
000010F2                           106  *--------------------------------------------------------------------------------------------------
000010F2                           107  
000010F2  B9CB                     108  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F4  6D00 0006                109          BLT     VERR1
000010F8  6000 0032                110          BRA     READLN
000010FC                           111  
000010FC  43F9 00002122            112  VERR1   LEA     VERR1M,A1   *Throw parsing error
00001102  103C 000E                113          MOVE.B  #14,D0
00001106  4E4F                     114          TRAP    #15
00001108  6000 0EBA                115          BRA     END
0000110C                           116  
0000110C  43F9 0000215C            117  VERR2   LEA     VERR2M,A1   *Throw range error
00001112  103C 000E                118          MOVE.B  #14,D0
00001116  4E4F                     119          TRAP    #15
00001118  6000 0EAA                120          BRA     END
0000111C                           121  
0000111C  43F9 00002182            122  VERR3   LEA     VERR3M,A1   *Throw length error
00001122  103C 000E                123          MOVE.B  #14,D0
00001126  4E4F                     124          TRAP    #15
00001128  6000 0E9A                125          BRA     END
0000112C                           126          
0000112C                           127  *--------------------------------------------------------------------------------------------------
0000112C                           128  
0000112C                           129  READLN                              *READLN: Start READLN for loop
0000112C  244B                     130          MOVE.L  A3,A2               *Set current address to start address
0000112E  1A3C 0000                131          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
00001132                           132  
00001132                           133  RSTEP                               *RSTEP: 
00001132  381A                     134          MOVE.W  (A2)+,D4
00001134  340A                     135          MOVE.W  A2,D2
00001136  5542                     136          SUBQ.W  #2,D2
00001138                           137          
00001138  48E7 0400                138          MOVEM.L D5,-(SP)
0000113C  1A3C 0000                139          MOVE.B  #0,D5
00001140  4EB9 0000118E            140          JSR     HEXOUT              *Run printing operation for HEX address
00001146  4CDF 0020                141          MOVEM.L (SP)+,D5
0000114A                           142          
0000114A  43F9 000021BD            143          LEA     SM2,A1              *Horizontal tab indent after printing hex
00001150  103C 000E                144          MOVE.B  #14,D0
00001154  4E4F                     145          TRAP    #15
00001156                           146          
00001156  48E7 7F0F                147          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
0000115A  4EB9 00001380            148          JSR     DISASM              *Run disassembly for current machine code
00001160  4CDF F0FE                149          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001164                           150          
00001164  5205                     151          ADDQ.B  #1,D5       *Increment counter by 1
00001166  BA3C 0020                152          CMP.B   #32,D5      *Check if we reached 32 lines
0000116A  6700 0016                153          BEQ     RPAUSE      *Branch to pausing code
0000116E                           154          
0000116E  43F9 000021B6            155          LEA     LB,A1       *Print line break
00001174  103C 000E                156          MOVE.B  #14,D0      
00001178  4E4F                     157          TRAP    #15
0000117A                           158          
0000117A                           159  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
0000117A  B9CA                     160          CMP.L   A2,A4       *Check if we reached the end address
0000117C  6D00 0E18                161          BLT     DSEOF       *End loop if so
00001180  60B0                     162          BRA     RSTEP       *Or else continue the loop
00001182                           163          
00001182                           164  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
00001182  1A3C 0000                165          MOVE.B  #0,D5       * Reset D5 counter
00001186  103C 0005                166          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
0000118A  4E4F                     167          TRAP    #15         * Only used for waiting for user to hit ENTER
0000118C  60EC                     168          BRA     RCONT       *Continue with READLN loop
0000118E                           169  
0000118E                           170  *--------------------------------------------------------------------------------------------------
0000118E                           171  
0000118E                           172  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118E  103C 0006                173          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
00001192  163C 0008                174          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001196                           175          
00001196                           176  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001196  E99A                     177          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001198  2202                     178          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
0000119A  0281 0000000F            179          ANDI.L  #$F,D1      * Filter to the right four bits
000011A0  B23C 000A                180          CMP.B   #10,D1      *Distinguish between number and letter
000011A4  6D00 000A                181          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A8                           182          
000011A8                           183  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A8  0601 0037                184          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011AC  6000 0006                185          BRA     HSTEP2      *Branch to step 2 of the iteration
000011B0                           186  
000011B0                           187  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011B0  0601 0030                188          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B4                           189  
000011B4                           190  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B4  5303                     191          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B6                           192          
000011B6  B205                     193          CMP.B   D5,D1
000011B8  6700 0004                194          BEQ     HSKIP2
000011BC                           195          
000011BC  4E4F                     196          TRAP #15            *Will print the ASCII value stored in D1
000011BE  0C03 0000                197  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011C2  6700 0010                198          BEQ     HDONE       *End loop if done
000011C6                           199          
000011C6  B23C 0030                200          CMP.B   #48,D1
000011CA  6700 0006                201          BEQ     HSKIP3
000011CE                           202          
000011CE  1A3C 0000                203          MOVE.B  #0,D5
000011D2                           204          
000011D2  60C2                     205  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D4                           206          
000011D4  4E75                     207  HDONE   RTS
000011D6                           208  
000011D6                           209  
000011D6                           210  *--------------------------------------------------------------------------------------------------
000011D6                           211  
000011D6  103C 000E                212  SIZE    MOVE.B  #14,D0
000011DA  BA3C 0000                213          CMP.B   #%00,D5
000011DE  6700 001E                214          BEQ     SIZEB
000011E2  BA3C 0001                215          CMP.B   #%01,D5
000011E6  6700 0020                216          BEQ     SIZEW
000011EA  BA3C 0002                217          CMP.B   #%10,D5
000011EE  6700 0022                218          BEQ     SIZEL
000011F2  BA3C 0003                219          CMP.B   #%11,D5
000011F6  6700 0010                220          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011FA  6000 0022                221          BRA     SRET
000011FE                           222          
000011FE  43F9 000021ED            223  SIZEB   LEA     MODEB,A1
00001204  6000 0016                224          BRA     SDONE
00001208                           225  
00001208  43F9 000021F0            226  SIZEW   LEA     MODEW,A1
0000120E  6000 000C                227          BRA     SDONE
00001212                           228  
00001212  43F9 000021F3            229  SIZEL   LEA     MODEL,A1
00001218  6000 0002                230          BRA     SDONE
0000121C                           231  
0000121C  4E4F                     232  SDONE   TRAP    #15
0000121E                           233  
0000121E  4E75                     234  SRET    RTS
00001220                           235  
00001220                           236  *-----------------------------------------------------------------------------------
00001220                           237  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
00001220                           238  *uses d1, d0, and a1
00001220                           239  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
00001220                           240  *uses d1, d0, and a1
00001220                           241  ADDRMODEALL
00001220                           242  *comparisons
00001220  B67C 0000                243  AM000   CMP     #%000,D3
00001224  6600 001A                244          BNE     AM001
00001228  43F9 000021F8            245          LEA     VALD,A1
0000122E  4E4F                     246          TRAP    #15
00001230  1206                     247          MOVE.B  D6,D1       *moving ea num to d1 to print
00001232  103C 0003                248          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001236  4E4F                     249          TRAP    #15         *printing register number
00001238  103C 000E                250          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
0000123C  6000 013C                251          BRA     AMEND
00001240                           252  
00001240                           253          
00001240  B67C 0001                254  AM001   CMP     #%001,D3
00001244  6600 0022                255          BNE     AM010
00001248  BA7C 0000                256          CMP     #00,D5
0000124C  6700 0D3A                257          BEQ     DSERR
00001250  43F9 000021F6            258          LEA     VALA,A1
00001256  4E4F                     259          TRAP    #15
00001258  1206                     260          MOVE.B  D6,D1       *moving ea num to d1 to print
0000125A  103C 0003                261          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125E  4E4F                     262          TRAP    #15         *printing register number
00001260  103C 000E                263          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001264  6000 0114                264          BRA     AMEND
00001268                           265  
00001268  B67C 0002                266  AM010   CMP     #%010,D3
0000126C  6600 002A                267          BNE     AM011
00001270  43F9 00002200            268          LEA     OPENPTR,A1
00001276  4E4F                     269          TRAP    #15
00001278  43F9 000021F6            270          LEA     VALA,A1
0000127E  4E4F                     271          TRAP    #15
00001280  1206                     272          MOVE.B  D6,D1       *moving ea num to d1 to print
00001282  103C 0003                273          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001286  4E4F                     274          TRAP    #15         *printing register number
00001288  103C 000E                275          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
0000128C  43F9 00002205            276          LEA     CLOSEPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  6000 00E4                278          BRA     AMEND
00001298                           279  
00001298  B67C 0003                280  AM011   CMP     #%011,D3
0000129C  6600 002A                281          BNE     AM100
000012A0  43F9 00002200            282          LEA     OPENPTR,A1
000012A6  4E4F                     283          TRAP    #15
000012A8  43F9 000021F6            284          LEA     VALA,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  1206                     286          MOVE.B  D6,D1       *moving ea num to d1 to print
000012B2  103C 0003                287          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B6  4E4F                     288          TRAP    #15         *printing register number
000012B8  103C 000E                289          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012BC  43F9 00002207            290          LEA     CLOSEIPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  6000 00B4                292          BRA     AMEND
000012C8                           293  
000012C8  B67C 0004                294  AM100   CMP     #%100,D3
000012CC  6600 002A                295          BNE     AM111
000012D0  43F9 00002202            296          LEA     OPENDPTR,A1
000012D6  4E4F                     297          TRAP    #15
000012D8  43F9 000021F6            298          LEA     VALA,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  1206                     300          MOVE.B  D6,D1       *moving ea num to d1 to print
000012E2  103C 0003                301          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E6  4E4F                     302          TRAP    #15         *printing register number
000012E8  103C 000E                303          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012EC  43F9 00002205            304          LEA     CLOSEPTR,A1
000012F2  4E4F                     305          TRAP    #15
000012F4  6000 0084                306          BRA     AMEND
000012F8                           307  
000012F8  B67C 0007                308  AM111   CMP     #%111,D3
000012FC  6600 0C8A                309          BNE     DSERR
00001300  BC7C 0000                310          CMP     #%000,D6
00001304  6600 0020                311          BNE     AM111001
00001308  43F9 0000220C            312          LEA     DOLLAR,A1
0000130E  4E4F                     313          TRAP    #15
00001310  341A                     314          MOVE.W  (A2)+,D2
00001312  48E7 0400                315          MOVEM.L D5,-(SP)    
00001316  1A3C 0030                316          MOVE.B  #48,D5
0000131A  4EB8 118E                317          JSR     HEXOUT
0000131E  4CDF 0020                318          MOVEM.L (SP)+,D5
00001322  6000 0056                319          BRA     AMEND
00001326                           320          
00001326                           321  AM111001
00001326  BC7C 0001                322          CMP     #%001,D6
0000132A  6600 0020                323          BNE     AM111100
0000132E  43F9 0000220C            324          LEA     DOLLAR,A1
00001334  4E4F                     325          TRAP    #15
00001336  241A                     326          MOVE.L  (A2)+,D2
00001338  48E7 0400                327          MOVEM.L D5,-(SP)
0000133C  1A3C 0030                328          MOVE.B  #48,D5
00001340  4EB8 118E                329          JSR     HEXOUT
00001344  4CDF 0020                330          MOVEM.L (SP)+,D5
00001348  6000 0030                331          BRA     AMEND
0000134C                           332          
0000134C                           333  AM111100
0000134C  BC7C 0004                334          CMP     #%100,D6
00001350  6600 0C36                335          BNE     DSERR
00001354  43F9 000021FA            336          LEA     VALN,A1
0000135A  4E4F                     337          TRAP    #15
0000135C  341A                     338          MOVE.W  (A2)+,D2
0000135E  48E7 0400                339          MOVEM.L D5,-(SP)    
00001362  1A3C 0030                340          MOVE.B  #48,D5
00001366  103C 0003                341          MOVE.B  #3,D0
0000136A  1202                     342          MOVE.B  D2,D1
0000136C  4E4F                     343          TRAP    #15
0000136E  103C 000E                344          MOVE.B  #14,D0
00001372  4CDF 0020                345          MOVEM.L (SP)+,D5
00001376  6000 0002                346          BRA     AMEND
0000137A                           347          
0000137A  103C 000E                348  AMEND   MOVE.B  #14,D0
0000137E  4E75                     349          RTS
00001380                           350  
00001380                           351  *--------------------------------------------------------------------------------------------------
00001380                           352  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
00001380                           353  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
00001380                           354  
00001380                           355  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
00001380                           356  
00001380                           357  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
00001380                           358  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
00001380                           359  
00001380                           360  DISASM                      *DISASM: Disassemble a machine code
00001380  E34C                     361          LSL.W   #1,D4       * Tier 0 binary search
00001382  6500 0010                362          BCS     DS1
00001386  6000 0002                363          BRA     DS0
0000138A                           364  
0000138A                           365  *DS Tier 1 ----------------------------------------------------------------------------------------
0000138A                           366  
0000138A                           367  DS0                         *DS0: Tier 1 binary search for 0 side
0000138A  E34C                     368          LSL.W   #1,D4       
0000138C  6500 01B4                369          BCS     DS01
00001390  6000 000C                370          BRA     DS00
00001394                           371  
00001394                           372  DS1                         *DS1: Tier 1 binary search for 1 side
00001394  E34C                     373          LSL.W   #1,D4       
00001396  6500 01BE                374          BCS     DS11
0000139A  6000 01B0                375          BRA     DS10
0000139E                           376  
0000139E                           377  DS00                        *DS00: Disassembly processing for 00 prefix
0000139E  E55C                     378          ROL.W   #2,D4       
000013A0  1A04                     379          MOVE.B  D4,D5
000013A2  0205 0003                380          ANDI.B  #%11,D5
000013A6  0C05 0000                381          CMPI.B  #%00,D5
000013AA  6700 0006                382          BEQ     DAND
000013AE  6000 00CC                383          BRA     DMOVE2
000013B2                           384  
000013B2  E75C                     385  DAND    ROL.W   #3,D4           ; shift D4 left by 3 bits to get register number
000013B4  1A04                     386          MOVE.B  D4,D5           ; move the byte in D4 to D5
000013B6  0205 0007                387          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013BA  DA39 000021F8            388          ADD.B   VALD,D5         ; Convert register number to ASCII
000013C0  43F9 000021F8            389          LEA     VALD,A1         ; Load effective address of Dn
000013C6  4E4F                     390          TRAP    #15             ; Print Dn
000013C8  1E05                     391          MOVE.B  D5,D7           ; Store the register number for later use
000013CA                           392  
000013CA  E75C                     393          ROL.W   #3,D4           ; shift D4 left by 3 bits to get opmode
000013CC  1A04                     394          MOVE.B  D4,D5           ; move the byte in D4 to D5
000013CE  0205 0007                395          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013D2  BA3C 0000                396          CMP.B   #%000,D5        ; compare with byte size
000013D6  6700 0016                397          BEQ     DANDB
000013DA  BA3C 0001                398          CMP.B   #%001,D5        ; compare with word size
000013DE  6700 0022                399          BEQ     DANDW
000013E2  BA3C 0002                400          CMP.B   #%010,D5        ; compare with long size
000013E6  6700 002E                401          BEQ     DANDL
000013EA                           402          
000013EA  6000 0BA8                403          BRA     DSEND           ; branch to DSEND in case of invalid code
000013EE                           404  
000013EE  43F9 00002223            405  DANDB   LEA     ANDM,A1         ; load effective address of ANDM string
000013F4  4E4F                     406          TRAP    #15             ; print ANDM string
000013F6  43F9 000021ED            407          LEA     MODEB,A1        ; load effective address of MODEB string
000013FC  4E4F                     408          TRAP    #15             ; print MODEB string
000013FE  6000 002A                409          BRA     DANDA           ; branch to addressing mode parsing
00001402                           410  
00001402  43F9 00002223            411  DANDW   LEA     ANDM,A1         ; load effective address of ANDM string
00001408  4E4F                     412          TRAP    #15             ; print ANDM string
0000140A  43F9 000021F0            413          LEA     MODEW,A1        ; load effective address of MODEW string
00001410  4E4F                     414          TRAP    #15             ; print MODEW string
00001412  6000 0016                415          BRA     DANDA           ; branch to addressing mode parsing
00001416                           416  
00001416  43F9 00002223            417  DANDL   LEA     ANDM,A1         ; load effective address of ANDM string
0000141C  4E4F                     418          TRAP    #15             ; print ANDM string
0000141E  43F9 000021F3            419          LEA     MODEL,A1        ; load effective address of MODEL string
00001424  4E4F                     420          TRAP    #15             ; print MODEL string
00001426  6000 0002                421          BRA     DANDA           ; branch to addressing mode parsing
0000142A                           422  
0000142A  ED5C                     423  DANDA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
0000142C                           424  
0000142C  1A04                     425          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000142E  0205 0038                426          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001432  E61D                     427          ROR.B   #3,D5           ; shift D5 right by 3 bits to get mode
00001434  43F9 000021C0            428          LEA     SM3,A1          ; load effective address of SM3 string
0000143A  4E4F                     429          TRAP    #15             ; print space
0000143C  1C05                     430          MOVE.B  D5,D6           ; store mode in D6 for further checks
0000143E                           431  
0000143E  0204 0007                432          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001442  D839 000021F8            433          ADD.B   VALD,D4         ; convert register number to ASCII
00001448  43F9 000021F8            434          LEA     VALD,A1         ; load effective address of Dn
0000144E  4E4F                     435          TRAP    #15             ; print Dn
00001450                           436  
00001450  BC3C 0000                437          CMP.B   #%000,D6        ; compare mode with Dn
00001454  6700 0B3E                438          BEQ     DSEND
00001458  BC3C 0002                439          CMP.B   #%010,D6        ; compare mode with (An)
0000145C  6700 0B36                440          BEQ     DSEND
00001460  BC3C 0003                441          CMP.B   #%011,D6        ; compare mode with (An)+
00001464  6700 0B2E                442          BEQ     DSEND
00001468  BC3C 0004                443          CMP.B   #%100,D6        ; compare mode with -(An)
0000146C  6700 0B26                444          BEQ     DSEND
00001470  BC3C 0007                445          CMP.B   #%111,D6        ; compare mode with (xxx).W or (xxx).L
00001474  6700 0B1E                446          BEQ     DSEND
00001478  6000 0B1A                447          BRA     DSEND           ; branch to DSEND in case of invalid code
0000147C                           448          
0000147C                           449  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
0000147C  4E71                     450  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000147E                           451          *size in d5 from above processing
0000147E  43F9 00002212            452          LEA     MOVEM,A1
00001484  4E4F                     453          TRAP    #15
00001486                           454                  
00001486                           455          *dest reg to d7
00001486  E75C                     456          ROL.W   #3,D4
00001488  1E04                     457          MOVE.B  D4,D7
0000148A  CE3C 0007                458          AND.B   #%111,D7
0000148E                           459          
0000148E                           460          *dest mode to d3: An means MOVEA
0000148E  E75C                     461          ROL.W   #3,D4
00001490  1604                     462          MOVE.B  D4,D3
00001492  C63C 0007                463          AND.B   #%111,D3
00001496  3C43                     464          MOVE.W  D3,A6
00001498                           465          
00001498  B67C 0001                466          CMP     #%001,D3
0000149C  6700 0082                467          BEQ     DMOVEA
000014A0                           468  MOVECONT
000014A0                           469  *printing size then first addressing moode, then comma
000014A0                           470  *size is different for move
000014A0  103C 000E                471  MSIZE   MOVE.B  #14,D0
000014A4  BA3C 0001                472          CMP.B   #%01,D5
000014A8  6700 001E                473          BEQ     MSIZEB
000014AC  BA3C 0003                474          CMP.B   #%11,D5
000014B0  6700 0020                475          BEQ     MSIZEW
000014B4  BA3C 0002                476          CMP.B   #%10,D5
000014B8  6700 0022                477          BEQ     MSIZEL
000014BC  BA3C 0003                478          CMP.B   #%11,D5
000014C0  6700 0010                479          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014C4  6000 0AC2                480          BRA     DSERR
000014C8                           481          
000014C8  43F9 000021ED            482  MSIZEB  LEA     MODEB,A1
000014CE  6000 0016                483          BRA     MSDONE
000014D2                           484  
000014D2  43F9 000021F0            485  MSIZEW  LEA     MODEW,A1
000014D8  6000 000C                486          BRA     MSDONE
000014DC                           487  
000014DC  43F9 000021F3            488  MSIZEL  LEA     MODEL,A1
000014E2  6000 0002                489          BRA     MSDONE
000014E6                           490  
000014E6  4E4F                     491  MSDONE  TRAP    #15
000014E8                           492  
000014E8  43F9 000021D6            493          LEA     SM7,A1
000014EE  4E4F                     494          TRAP    #15
000014F0                           495          
000014F0                           496          *source mode to d3
000014F0  E75C                     497          ROL.W   #3,D4
000014F2  1604                     498          MOVE.B  D4,D3
000014F4  C63C 0007                499          AND.B   #%111,D3
000014F8                           500          
000014F8                           501          *source reg to d6
000014F8  E75C                     502          ROL.W   #3,D4
000014FA  1C04                     503          MOVE.B  D4,D6
000014FC  CC3C 0007                504          AND.B   #%111,D6
00001500                           505          
00001500  4EB8 1220                506          JSR     ADDRMODEALL
00001504  B67C 0001                507          CMP     #%001,D3
00001508  6700 002C                508          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
0000150C  43F9 0000220A            509          LEA     COMMA,A1
00001512  4E4F                     510          TRAP    #15
00001514  1C07                     511          MOVE.B  D7,D6
00001516  360E                     512          MOVE.W  A6,D3
00001518  4EB8 1220                513          JSR     ADDRMODEALL
0000151C  6000 0A76                514          BRA     DSEND
00001520                           515  
00001520  4E71                     516  DMOVEA  NOP
00001522  BA7C 0001                517          CMP     #%01,D5     *if size is byte, err
00001526  6700 0A60                518          BEQ     DSERR
0000152A  43F9 000021F6            519          LEA     VALA,A1        *else, print A and return
00001530  4E4F                     520          TRAP    #15
00001532  6000 FF6C                521          BRA     MOVECONT
00001536                           522  
00001536                           523  MOVEERRCHECK
00001536  BA7C 0001                524          CMP     #%01,D5
0000153A  6700 0A4C                525          BEQ     DSERR
0000153E  6000 0A54                526          BRA     DSEND
00001542                           527  
00001542                           528          
00001542                           529  
00001542                           530  *DS Tier 2 ----------------------------------------------------------------------------------------
00001542                           531  
00001542                           532  DS01                        *DS01: Tier 2 binary search for 01 side
00001542  E34C                     533          LSL.W   #1,D4
00001544  6500 0024                534          BCS     DS011
00001548  6000 0016                535          BRA     DS010
0000154C                           536  
0000154C                           537  DS10                        *DS10: Tier 2 binary search for 10 side
0000154C  E34C                     538          LSL.W   #1,D4
0000154E  6500 002E                539          BCS     DS101
00001552  6000 0020                540          BRA     DS100
00001556                           541  
00001556                           542  DS11                        *DS11: Tier 2 binary search for 11 side
00001556  E34C                     543          LSL.W   #1,D4
00001558  6500 0038                544          BCS     DS111
0000155C  6000 002A                545          BRA     DS110
00001560                           546  
00001560                           547  *DS Tier 3 ----------------------------------------------------------------------------------------
00001560                           548  
00001560                           549  DS010                       *DS010: Tier 3 binary search for 010 side
00001560  E34C                     550          LSL.W   #1,D4
00001562  6500 0354                551          BCS     DS0101
00001566  6000 0034                552          BRA     DS0100
0000156A                           553  
0000156A                           554  DS011                       *DS011: Tier 3 binary search for 011 side
0000156A  E34C                     555          LSL.W   #1,D4
0000156C  6500 0538                556          BCS     DS0111
00001570  6000 03C0                557          BRA     DS0110
00001574                           558  
00001574                           559  DS100                       *DS100: Tier 3 binary search for 100 side
00001574  E34C                     560          LSL.W   #1,D4
00001576  6500 0668                561          BCS     DS1001
0000157A  6000 0594                562          BRA     DS1000
0000157E                           563  
0000157E                           564  DS101                       *DS101: Tier 3 binary search for 101 side
0000157E  E34C                     565          LSL.W   #1,D4
00001580  6500 06F6                566          BCS     DS1011
00001584  6000 06EC                567          BRA     DS1010
00001588                           568  
00001588                           569  DS110                       *DS110: Tier 3 binary search for 110 side
00001588  E34C                     570          LSL.W   #1,D4
0000158A  6500 06F8                571          BCS     DS1101
0000158E  6000 06EE                572          BRA     DS1100
00001592                           573  
00001592                           574  DS111                       *DS111: Tier 3 binary search for 111 side
00001592  E34C                     575          LSL.W   #1,D4
00001594  6500 09EC                576          BCS     DS1111
00001598  6000 07D2                577          BRA     DS1110
0000159C                           578  
0000159C                           579  *DS Tier 4 ----------------------------------------------------------------------------------------
0000159C                           580  
0000159C                           581  DS0100                      *DS0100: Processing for 0100 prefix
0000159C  0C44 E710                582          CMPI.W  #%1110011100010000,D4
000015A0  6700 0034                583          BEQ     DNOP
000015A4  0C44 E750                584          CMPI.W  #%1110011101010000,D4
000015A8  6700 021E                585          BEQ     DRTS
000015AC                           586          
000015AC  E95C                     587          ROL.W   #4,D4
000015AE  1404                     588          MOVE.B  D4,D2
000015B0  0202 000F                589          ANDI.B  #%1111,D2
000015B4                           590          
000015B4  B43C 000E                591          CMP.B   #%1110,D2
000015B8  6700 0158                592          BEQ     DJSR
000015BC                           593          
000015BC  B43C 0006                594          CMP.B   #%0110,D2
000015C0  6700 0020                595          BEQ     DNOT
000015C4                           596          
000015C4  1602                     597          MOVE.B  D2,D3
000015C6  0203 0001                598          ANDI.B  #%1,D3
000015CA  B63C 0001                599          CMP.B   #1,D3
000015CE  6700 0204                600          BEQ     DLEA
000015D2                           601          
000015D2  6000 09C0                602          BRA     DSEND
000015D6                           603  
000015D6  43F9 0000220E            604  DNOP    LEA     NOPM,A1
000015DC  4E4F                     605          TRAP    #15
000015DE  6000 09B4                606          BRA     DSEND
000015E2                           607          
000015E2  E55C                     608  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015E4  1A04                     609          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015E6  0205 0003                610          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015EA                           611  
000015EA  BA3C 0000                612          CMP.B   #%00,D5         ; compare with byte size
000015EE  6700 0016                613          BEQ     DNOTB
000015F2  BA3C 0001                614          CMP.B   #%01,D5         ; compare with word size
000015F6  6700 0022                615          BEQ     DNOTW
000015FA  BA3C 0002                616          CMP.B   #%10,D5         ; compare with long size
000015FE  6700 002E                617          BEQ     DNOTL
00001602                           618          
00001602  6000 0990                619          BRA     DSEND           ; branch to DSEND in case of invalid code
00001606                           620  
00001606  43F9 0000222A            621  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
0000160C  4E4F                     622          TRAP    #15             ; print NOTM string
0000160E  43F9 000021ED            623          LEA     MODEB,A1        ; load effective address of MODEB string
00001614  4E4F                     624          TRAP    #15             ; print MODEB string
00001616  6000 002A                625          BRA     DNOTA           ; branch to addressing mode parsing
0000161A                           626  
0000161A  43F9 0000222A            627  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001620  4E4F                     628          TRAP    #15             ; print NOTM string
00001622  43F9 000021F0            629          LEA     MODEW,A1        ; load effective address of MODEW string
00001628  4E4F                     630          TRAP    #15             ; print MODEW string
0000162A  6000 0016                631          BRA     DNOTA           ; branch to addressing mode parsing
0000162E                           632  
0000162E  43F9 0000222A            633  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001634  4E4F                     634          TRAP    #15             ; print NOTM string
00001636  43F9 000021F3            635          LEA     MODEL,A1        ; load effective address of MODEL string
0000163C  4E4F                     636          TRAP    #15             ; print MODEL string
0000163E  6000 0002                637          BRA     DNOTA           ; branch to addressing mode parsing
00001642                           638  
00001642  ED5C                     639  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001644  1204                     640          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001646  0201 003F                641          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000164A                           642  
0000164A                           643          ; Now process addressing mode and register based on the value in D1
0000164A                           644  
0000164A  1A01                     645          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000164C  0205 0007                646          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001650  6700 0026                647          BEQ     DREG            ; If it is direct register mode
00001654  BA3C 0002                648          CMP.B   #%010,D5        ; Compare with An
00001658  6700 0036                649          BEQ     ADREG
0000165C  BA3C 0003                650          CMP.B   #%011,D5        ; Compare with (An)+
00001660  6700 0046                651          BEQ     ADREGP
00001664  BA3C 0004                652          CMP.B   #%100,D5        ; Compare with -(An)
00001668  6700 005E                653          BEQ     MADREG
0000166C  BA3C 0007                654          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001670  6700 007E                655          BEQ     EXT
00001674                           656              
00001674  6000 091E                657          BRA     DSEND
00001678                           658  
00001678  1C01                     659  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000167A  0206 0007                660          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
0000167E  DC39 000021F8            661          ADD.B   VALD,D6         ; Convert register number to ASCII
00001684  43F9 000021F8            662          LEA     VALD,A1         ; Load effective address of Dn
0000168A  4E4F                     663          TRAP    #15             ; Print Dn
0000168C  6000 0906                664          BRA     DSEND
00001690                           665  
00001690  1C01                     666  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001692  0206 0007                667          ANDI.B  #%111,D6
00001696  DC39 000021F6            668          ADD.B   VALA,D6
0000169C  43F9 000021F6            669          LEA     VALA,A1
000016A2  4E4F                     670          TRAP    #15
000016A4  6000 08EE                671          BRA     DSEND
000016A8                           672  
000016A8  1C01                     673  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
000016AA  0206 0007                674          ANDI.B  #%111,D6
000016AE  DC39 000021F6            675          ADD.B   VALA,D6
000016B4  43F9 000021F6            676          LEA     VALA,A1
000016BA  4E4F                     677          TRAP    #15
000016BC  43F9 00002207            678          LEA     CLOSEIPTR,A1    ; Load effective address of )+
000016C2  4E4F                     679          TRAP    #15             ; Print )+
000016C4  6000 08CE                680          BRA     DSEND
000016C8                           681  
000016C8  1C01                     682  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
000016CA  0206 0007                683          ANDI.B  #%111,D6
000016CE  DC39 000021F6            684          ADD.B   VALA,D6
000016D4  43F9 00002202            685          LEA     OPENDPTR,A1     ; Load effective address of -(
000016DA  4E4F                     686          TRAP    #15             ; Print -(
000016DC  43F9 000021F6            687          LEA     VALA,A1
000016E2  4E4F                     688          TRAP    #15
000016E4  43F9 00002205            689          LEA     CLOSEPTR,A1     ; Load effective address of )
000016EA  4E4F                     690          TRAP    #15             ; Print )
000016EC  6000 08A6                691          BRA     DSEND
000016F0                           692  
000016F0  1C01                     693  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016F2  0206 0001                694          ANDI.B  #%1,D6
000016F6  6700 000E                695          BEQ     EXTW
000016FA  43F9 000021FA            696          LEA     VALN,A1         ; Load effective address of #
00001700  4E4F                     697          TRAP    #15             ; Print #
00001702  6000 0890                698          BRA     DSEND
00001706                           699  
00001706  43F9 000021FC            700  EXTW    LEA     VAL0,A1         ; Load effective address of 0
0000170C  4E4F                     701          TRAP    #15             ; Print 0
0000170E  6000 0884                702          BRA     DSEND
00001712                           703  
00001712                           704          
00001712  E55C                     705  DJSR    ROL.W   #2,D4
00001714  1404                     706          MOVE.B  D4,D2
00001716  0202 0007                707          ANDI.B  #%111,D2
0000171A  0C02 0002                708          CMPI.B  #%10,D2
0000171E  6600 0868                709          BNE     DSERR
00001722                           710          
00001722  43F9 0000224F            711          LEA     JSRM,A1
00001728  4E4F                     712          TRAP    #15
0000172A                           713          
0000172A  43F9 000021D6            714          LEA     SM7,A1
00001730  4E4F                     715          TRAP    #15
00001732                           716  
00001732  E75C                     717          ROL.W   #3,D4       * [D2] address mode
00001734  1404                     718          MOVE.B  D4,D2
00001736  0202 0007                719          ANDI.B  #%111,D2
0000173A                           720          
0000173A  E75C                     721          ROL.W   #3,D4       * [D1] address register
0000173C  1204                     722          MOVE.B  D4,D1
0000173E  0201 0007                723          ANDI.B  #%111,D1
00001742                           724          
00001742  0C02 0002                725          CMPI.B  #%010,D2
00001746  6700 001E                726          BEQ     DJSR_REG
0000174A                           727          
0000174A  0C02 0007                728          CMPI.B  #%111,D2
0000174E  6600 0838                729          BNE     DSERR
00001752                           730          
00001752  0C01 0000                731          CMPI.B  #%000,D1
00001756  6700 0034                732          BEQ     DJSR_CUSW
0000175A                           733          
0000175A  0C01 0001                734          CMPI.B  #%001,D1
0000175E  6700 004A                735          BEQ     DJSR_CUSL
00001762                           736          
00001762  6000 0830                737          BRA     DSEND
00001766                           738          
00001766                           739          
00001766                           740          
00001766                           741  DJSR_REG        
00001766  43F9 00002200            742          LEA     OPENPTR,A1
0000176C  4E4F                     743          TRAP    #15
0000176E                           744          
0000176E  43F9 000021F6            745          LEA     VALA,A1
00001774  4E4F                     746          TRAP    #15
00001776                           747          
00001776  103C 0003                748          MOVE.B  #3,D0
0000177A  4E4F                     749          TRAP    #15
0000177C  103C 000E                750          MOVE.B  #14,D0
00001780                           751          
00001780  43F9 00002205            752          LEA     CLOSEPTR,A1
00001786  4E4F                     753          TRAP    #15
00001788                           754          
00001788  6000 080A                755          BRA     DSEND
0000178C                           756  
0000178C                           757          
0000178C                           758  DJSR_CUSW
0000178C  43F9 0000220C            759          LEA     DOLLAR,A1
00001792  4E4F                     760          TRAP    #15
00001794  341A                     761          MOVE.W  (A2)+,D2
00001796  48E7 0400                762          MOVEM.L D5,-(SP)
0000179A  1A3C 0030                763          MOVE.B  #48,D5
0000179E  4EB8 118E                764          JSR     HEXOUT
000017A2  4CDF 0020                765          MOVEM.L (SP)+,D5
000017A6  6000 07EC                766          BRA     DSEND
000017AA                           767  
000017AA                           768  DJSR_CUSL
000017AA  43F9 0000220C            769          LEA     DOLLAR,A1
000017B0  4E4F                     770          TRAP    #15
000017B2  241A                     771          MOVE.L  (A2)+,D2
000017B4  48E7 0400                772          MOVEM.L D5,-(SP)
000017B8  1A3C 0030                773          MOVE.B  #48,D5
000017BC  4EB8 118E                774          JSR     HEXOUT
000017C0  4CDF 0020                775          MOVEM.L (SP)+,D5
000017C4  6000 07CE                776          BRA     DSEND
000017C8                           777          
000017C8  43F9 00002253            778  DRTS    LEA     RTSM,A1
000017CE  4E4F                     779          TRAP    #15
000017D0  6000 07C2                780          BRA     DSEND
000017D4                           781          
000017D4                           782          
000017D4                           783  DLEA    *printing
000017D4  43F9 0000221F            784          LEA     LEAM,A1
000017DA  4E4F                     785          TRAP    #15
000017DC  43F9 000021D6            786          LEA     SM7,A1
000017E2  4E4F                     787          TRAP    #15
000017E4                           788  
000017E4                           789          *getting destination register
000017E4  0202 000E                790          ANDI.B  #%1110,D2
000017E8  E21A                     791          ROR.B   #1,D2
000017EA  3E02                     792          MOVE.W  D2,D7
000017EC                           793          
000017EC                           794          *ensuring that next two bits are 11
000017EC  E55C                     795          ROL.W   #2,D4
000017EE  1C04                     796          MOVE.B  D4,D6
000017F0  0206 0003                797          ANDI.B  #%11,D6
000017F4  BC3C 0003                798          CMP.B   #%11,D6
000017F8  6600 078E                799          BNE     DSERR
000017FC                           800          
000017FC                           801          *getting ea mode
000017FC  E75C                     802          ROL.W   #3,D4
000017FE  1604                     803          MOVE.B  D4,D3
00001800  0203 0007                804          ANDI.B  #%111,D3
00001804                           805          
00001804                           806          *getting ea reg
00001804  E75C                     807          ROL.W   #3,D4
00001806  1C04                     808          MOVE.B  D4,D6
00001808  0206 0007                809          ANDI.B  #%111,D6
0000180C                           810          
0000180C                           811          *printing
0000180C                           812  JSR010
0000180C  B63C 0002                813          CMP.B   #%010,D3
00001810  6600 002A                814          BNE     JSR111
00001814  43F9 00002200            815          LEA     OPENPTR,A1
0000181A  4E4F                     816          TRAP    #15
0000181C  43F9 000021F6            817          LEA     VALA,A1
00001822  4E4F                     818          TRAP    #15
00001824  103C 0003                819          MOVE.B  #3,D0
00001828  1206                     820          MOVE.B  D6,D1
0000182A  4E4F                     821          TRAP    #15
0000182C  103C 000E                822          MOVE.B  #14,D0
00001830  43F9 00002205            823          LEA     CLOSEPTR,A1
00001836  4E4F                     824          TRAP    #15
00001838  6000 005E                825          BRA     JSRPRINT2
0000183C                           826  JSR111
0000183C  B63C 0007                827          CMP.B   #%111,D3
00001840  6600 0746                828          BNE     DSERR
00001844  BC3C 0000                829          CMP.B   #%000,D6
00001848  6600 0024                830          BNE     JSR111001
0000184C  43F9 0000220C            831          LEA     DOLLAR,A1
00001852  4E4F                     832          TRAP    #15
00001854  341A                     833          MOVE.W  (A2)+,D2
00001856  48E7 0400                834          MOVEM.L D5,-(SP)    
0000185A  1A3C 0030                835          MOVE.B  #48,D5
0000185E  4EB8 118E                836          JSR     HEXOUT
00001862  4CDF 0020                837          MOVEM.L (SP)+,D5
00001866  103C 000E                838          MOVE.B  #14,D0
0000186A  6000 002C                839          BRA     JSRPRINT2
0000186E                           840          
0000186E                           841  JSR111001
0000186E  BC3C 0001                842          CMP.B   #%001,D6
00001872  6600 0714                843          BNE     DSERR
00001876  43F9 0000220C            844          LEA     DOLLAR,A1
0000187C  4E4F                     845          TRAP    #15
0000187E  241A                     846          MOVE.L  (A2)+,D2
00001880  48E7 0400                847          MOVEM.L D5,-(SP)
00001884  1A3C 0030                848          MOVE.B  #48,D5
00001888  4EB8 118E                849          JSR     HEXOUT
0000188C  4CDF 0020                850          MOVEM.L (SP)+,D5
00001890  103C 000E                851          MOVE.B  #14,D0
00001894  6000 0002                852          BRA     JSRPRINT2
00001898                           853          
00001898                           854  JSRPRINT2
00001898  43F9 0000220A            855          LEA     COMMA,A1
0000189E  4E4F                     856          TRAP    #15
000018A0  43F9 000021F6            857          LEA     VALA,A1
000018A6  4E4F                     858          TRAP    #15
000018A8  103C 0003                859          MOVE.B  #3,D0
000018AC  3207                     860          MOVE.W  D7,D1
000018AE  4E4F                     861          TRAP    #15
000018B0  103C 000E                862          MOVE.B  #14,D0
000018B4                           863          
000018B4  6000 06DE                864          BRA     DSEND
000018B8                           865          
000018B8                           866  
000018B8                           867  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000018B8                           868  
000018B8  4E71                     869  DS0101  NOP
000018BA                           870          
000018BA  4E71                     871  DADDQ   NOP
000018BC  43F9 00002217            872          LEA     ADDM,A1
000018C2  4E4F                     873          TRAP    #15
000018C4  43F9 000021FE            874          LEA     VALQ,A1
000018CA  4E4F                     875          TRAP    #15
000018CC                           876          
000018CC                           877          *parsing data to d1
000018CC  E75C                     878          ROL.W   #3,D4
000018CE  1204                     879          MOVE.B  D4,D1
000018D0  C23C 0007                880          AND.B   #%111,D1
000018D4                           881          
000018D4                           882          *ensuring next bit is 0
000018D4  E35C                     883          ROL.W   #1,D4
000018D6  1A04                     884          MOVE.B  D4,D5
000018D8  CA3C 0001                885          AND.B   #%1,D5
000018DC  BA7C 0000                886          CMP     #0,D5
000018E0  6600 06A6                887          BNE     DSERR
000018E4                           888          
000018E4                           889          *parsing and printing size
000018E4  E55C                     890          ROL.W   #2,D4
000018E6  1A04                     891          MOVE.B  D4,D5
000018E8  CA3C 0003                892          AND.B   #%11,D5
000018EC  4EB8 11D6                893          JSR     SIZE
000018F0  43F9 000021D6            894          LEA     SM7,A1
000018F6  4E4F                     895          TRAP    #15
000018F8                           896          
000018F8                           897          *parsing effective address information
000018F8                           898          *mode:
000018F8  E75C                     899          ROL.W   #3,D4
000018FA  1604                     900          MOVE.B  D4,D3
000018FC  C63C 0007                901          AND.B   #%111,D3
00001900                           902          
00001900                           903          *register:
00001900  E71C                     904          ROL.B   #3,D4
00001902  1C04                     905          MOVE.B  D4,D6
00001904  CC3C 0007                906          AND.B   #%111,D6
00001908                           907          
00001908                           908          *printing data
00001908  43F9 000021FA            909          LEA     VALN,A1
0000190E  4E4F                     910          TRAP    #15
00001910  103C 0003                911          MOVE.B  #3,D0
00001914  4E4F                     912          TRAP    #15
00001916  103C 000E                913          MOVE.B  #14,D0
0000191A  43F9 0000220A            914          LEA     COMMA,A1
00001920  4E4F                     915          TRAP    #15
00001922                           916          
00001922  B67C 0004                917          CMP     #%100,D3
00001926  6700 0660                918          BEQ     DSERR
0000192A  4EB8 1220                919          JSR     ADDRMODEALL
0000192E                           920          
0000192E  6000 0664                921          BRA     DSEND
00001932                           922          
00001932                           923  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001932                           924  
00001932                           925  DS0110  
00001932  E95C                     926          ROL.W   #4,D4   *Get next 4 bits
00001934  1404                     927          MOVE.B  D4,D2   *Copy to D2
00001936  0202 000F                928          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
0000193A                           929          
0000193A  B43C 0000                930          CMP.B   #%0000,D2   *BRA
0000193E  6700 001E                931          BEQ     DBRA
00001942                           932          
00001942  B43C 000E                933          CMP.B   #%1110,D2   *BGT   
00001946  6700 00A2                934          BEQ     DBGT
0000194A                           935          
0000194A  B43C 000F                936          CMP.B   #%1111,D2   *BLE   
0000194E  6700 00D6                937          BEQ     DBLE
00001952                           938          
00001952  B43C 0007                939          CMP.B   #%0111,D2   *BEQ   
00001956  6700 010E                940          BEQ     DBEQ
0000195A                           941          
0000195A  6000 0638                942          BRA     DSEND
0000195E                           943          
0000195E  43F9 00002257            944  DBRA    LEA     BRAM,A1
00001964  4E4F                     945          TRAP    #15
00001966                           946          
00001966  43F9 000021D6            947          LEA     SM7,A1
0000196C  4E4F                     948          TRAP    #15
0000196E                           949  
0000196E  E15C                     950          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001970  1204                     951          MOVE.B  D4,D1
00001972  0281 00001100            952          ANDI.L  #$1100,D1
00001978                           953          
00001978  0C01 0000                954          CMPI.B  #%00000000,D1
0000197C  6700 0028                955          BEQ     DBRA_16BIT      * Word
00001980                           956          
00001980  0C01 00FF                957          CMPI.B  #%11111111,D1
00001984  6700 0042                958          BEQ     DBRA_32BIT      * Long
00001988                           959          
00001988                           960          * 8 Bit Displacement
00001988  43F9 0000220C            961          LEA     DOLLAR,A1
0000198E  4E4F                     962          TRAP    #15
00001990                           963          
00001990  341A                     964          MOVE.W  (A2)+,D2
00001992  D441                     965          ADD.W   D1,D2
00001994  5842                     966          ADD.W   #4,D2   *unsure   
00001996  1A3C 0030                967          MOVE.B  #48,D5
0000199A  4EB8 118E                968          JSR     HEXOUT
0000199E  6000 05F4                969          BRA     DSEND
000019A2                           970  
000019A2                           971          *Displacement is put in D1      
000019A2                           972          
000019A2                           973          
000019A2  6000 05F0                974          BRA     DSEND
000019A6                           975          
000019A6                           976  DBRA_16BIT
000019A6  43F9 0000220C            977          LEA     DOLLAR,A1
000019AC  4E4F                     978          TRAP    #15
000019AE  341A                     979          MOVE.W  (A2)+,D2
000019B0  D44A                     980          ADD.W   A2,D2
000019B2  5542                     981          SUB.W   #2,D2   *unsure
000019B4  48E7 0400                982          MOVEM.L D5,-(SP)    
000019B8  1A3C 0030                983          MOVE.B  #48,D5
000019BC  4EB8 118E                984          JSR     HEXOUT
000019C0  4CDF 0020                985          MOVEM.L (SP)+,D5
000019C4  6000 05CE                986          BRA     DSEND
000019C8                           987  
000019C8                           988  DBRA_32BIT
000019C8  43F9 0000220C            989          LEA     DOLLAR,A1
000019CE  4E4F                     990          TRAP    #15
000019D0  241A                     991          MOVE.L  (A2)+,D2
000019D2  D48A                     992          ADD.L   A2,D2
000019D4  5582                     993          SUB.L   #2,D2   *unsure
000019D6  48E7 0400                994          MOVEM.L D5,-(SP)
000019DA  1A3C 0030                995          MOVE.B  #48,D5
000019DE  4EB8 118E                996          JSR     HEXOUT
000019E2  4CDF 0020                997          MOVEM.L (SP)+,D5
000019E6  6000 05AC                998          BRA     DSEND
000019EA                           999          
000019EA                          1000          
000019EA                          1001          
000019EA  43F9 00002243           1002  DBGT    LEA     BGTM,A1
000019F0  4E4F                    1003          TRAP    #15
000019F2                          1004          
000019F2  43F9 000021D6           1005          LEA     SM7,A1
000019F8  4E4F                    1006          TRAP    #15
000019FA                          1007          
000019FA  E15C                    1008          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019FC  1204                    1009          MOVE.B  D4,D1
000019FE  0241 00FF               1010          ANDI.W  #%0000000011111111,D1
00001A02                          1011          
00001A02  0C01 0000               1012          CMPI.B  #%00000000,D1
00001A06  679E                    1013          BEQ     DBRA_16BIT      * Word
00001A08                          1014          
00001A08  0C01 00FF               1015          CMPI.B  #%11111111,D1
00001A0C  67BA                    1016          BEQ     DBRA_32BIT      * Long
00001A0E                          1017          
00001A0E  43F9 0000220C           1018          LEA     DOLLAR,A1
00001A14  4E4F                    1019          TRAP    #15
00001A16                          1020      
00001A16  340A                    1021          MOVE.W  A2,D2
00001A18  D441                    1022          ADD.W   D1,D2
00001A1A                          1023    
00001A1A  1A3C 0030               1024          MOVE.B  #48,D5
00001A1E  4EB8 118E               1025          JSR     HEXOUT
00001A22  6000 0570               1026          BRA     DSEND
00001A26                          1027  
00001A26  43F9 00002247           1028  DBLE    LEA     BLEM,A1
00001A2C  4E4F                    1029          TRAP    #15
00001A2E                          1030          
00001A2E  43F9 000021D6           1031          LEA     SM7,A1
00001A34  4E4F                    1032          TRAP    #15
00001A36                          1033          
00001A36  E15C                    1034          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A38  1204                    1035          MOVE.B  D4,D1
00001A3A  0241 00FF               1036          ANDI.W  #%0000000011111111,D1
00001A3E                          1037          
00001A3E  0C01 0000               1038          CMPI.B  #%00000000,D1
00001A42  6700 FF62               1039          BEQ     DBRA_16BIT      * Word
00001A46                          1040          
00001A46  0C01 00FF               1041          CMPI.B  #%11111111,D1
00001A4A  6700 FF7C               1042          BEQ     DBRA_32BIT      * Long
00001A4E                          1043          
00001A4E  43F9 0000220C           1044          LEA     DOLLAR,A1
00001A54  4E4F                    1045          TRAP    #15
00001A56                          1046          
00001A56  340A                    1047          MOVE.W  A2,D2
00001A58  D441                    1048          ADD.W   D1,D2
00001A5A                          1049   
00001A5A  1A3C 0030               1050          MOVE.B  #48,D5
00001A5E  4EB8 118E               1051          JSR     HEXOUT
00001A62                          1052          
00001A62  6000 0530               1053          BRA     DSEND
00001A66                          1054  
00001A66  43F9 0000224B           1055  DBEQ    LEA     BEQM,A1
00001A6C  4E4F                    1056          TRAP    #15
00001A6E                          1057          
00001A6E  43F9 000021D6           1058          LEA     SM7,A1
00001A74  4E4F                    1059          TRAP    #15
00001A76                          1060          
00001A76  E15C                    1061          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A78  1204                    1062          MOVE.B  D4,D1
00001A7A  0241 00FF               1063          ANDI.W  #%0000000011111111,D1
00001A7E                          1064          
00001A7E  0C01 0000               1065          CMPI.B  #%00000000,D1
00001A82  6700 FF22               1066          BEQ     DBRA_16BIT      * Word
00001A86                          1067          
00001A86  0C01 00FF               1068          CMPI.B  #%11111111,D1
00001A8A  6700 FF3C               1069          BEQ     DBRA_32BIT      * Long
00001A8E                          1070          
00001A8E  43F9 0000220C           1071          LEA     DOLLAR,A1
00001A94  4E4F                    1072          TRAP    #15
00001A96                          1073  
00001A96  340A                    1074          MOVE.W  A2,D2
00001A98  D441                    1075          ADD.W   D1,D2
00001A9A                          1076   
00001A9A  1A3C 0030               1077          MOVE.B  #48,D5
00001A9E  4EB8 118E               1078          JSR     HEXOUT
00001AA2                          1079          
00001AA2  6000 04F0               1080          BRA     DSEND
00001AA6                          1081  
00001AA6                          1082  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AA6                          1083  
00001AA6  4E71                    1084  DS0111  NOP
00001AA8                          1085          
00001AA8  4E71                    1086  DMOVEQ  NOP
00001AAA  43F9 00002212           1087          LEA     MOVEM,A1
00001AB0  4E4F                    1088          TRAP    #15
00001AB2  43F9 000021FE           1089          LEA     VALQ,A1
00001AB8  4E4F                    1090          TRAP    #15
00001ABA  43F9 000021D6           1091          LEA     SM7,A1
00001AC0  4E4F                    1092          TRAP    #15
00001AC2                          1093          
00001AC2                          1094          *getting register number
00001AC2  E75C                    1095          ROL.W   #3,D4
00001AC4  1A04                    1096          MOVE.B  D4,D5
00001AC6  CA3C 0007               1097          AND.B   #%111,D5
00001ACA                          1098          
00001ACA                          1099          *throwing error if next digit not 0
00001ACA  E35C                    1100          ROL.W   #1,D4
00001ACC  1C04                    1101          MOVE.B  D4,D6
00001ACE  CC3C 0001               1102          AND.B   #%1,D6
00001AD2  BC3C 0000               1103          CMP.B   #0,D6
00001AD6  6600 04B0               1104          BNE     DSERR
00001ADA                          1105          
00001ADA                          1106          *getting data and printing information
00001ADA  E15C                    1107          ROL.W   #8,D4
00001ADC  1204                    1108          MOVE.B  D4,D1
00001ADE  C23C 00FF               1109          AND.B   #%11111111,D1
00001AE2  43F9 000021FA           1110          LEA     VALN,A1
00001AE8  4E4F                    1111          TRAP    #15
00001AEA  103C 0003               1112          MOVE.B  #3,D0
00001AEE  4E4F                    1113          TRAP    #15
00001AF0  103C 000E               1114          MOVE.B  #14,D0
00001AF4  43F9 0000220A           1115          LEA     COMMA,A1
00001AFA  4E4F                    1116          TRAP    #15
00001AFC  43F9 000021F8           1117          LEA     VALD,A1
00001B02  4E4F                    1118          TRAP    #15
00001B04  103C 0003               1119          MOVE.B  #3,D0
00001B08  3205                    1120          MOVE.W  D5,D1
00001B0A  4E4F                    1121          TRAP    #15
00001B0C                          1122          
00001B0C  6000 0486               1123          BRA     DSEND
00001B10                          1124          
00001B10                          1125  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B10                          1126  
00001B10  4E71                    1127  DS1000  NOP
00001B12  6000 0480               1128          BRA     DSEND
00001B16                          1129          
00001B16  E75C                    1130  DOR     ROL.W   #3,D4           ; shift D4 left by 3 bits to get register number
00001B18  1A04                    1131          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B1A  0205 0007               1132          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B1E  DA39 000021F8           1133          ADD.B   VALD,D5         ; Convert register number to ASCII
00001B24  43F9 000021F8           1134          LEA     VALD,A1         ; Load effective address of Dn
00001B2A  4E4F                    1135          TRAP    #15             ; Print Dn
00001B2C  1E05                    1136          MOVE.B  D5,D7           ; Store the register number for later use
00001B2E                          1137  
00001B2E  E75C                    1138          ROL.W   #3,D4           ; shift D4 left by 3 bits to get opmode
00001B30  1A04                    1139          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B32  0205 0007               1140          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B36  BA3C 0000               1141          CMP.B   #%000,D5        ; compare with byte size
00001B3A  6700 0016               1142          BEQ     DORB
00001B3E  BA3C 0001               1143          CMP.B   #%001,D5        ; compare with word size
00001B42  6700 0022               1144          BEQ     DORW
00001B46  BA3C 0002               1145          CMP.B   #%010,D5        ; compare with long size
00001B4A  6700 002E               1146          BEQ     DORL
00001B4E                          1147          
00001B4E  6000 0444               1148          BRA     DSEND           ; branch to DSEND in case of invalid code
00001B52                          1149  
00001B52  43F9 00002227           1150  DORB    LEA     ORM,A1          ; load effective address of ORM string
00001B58  4E4F                    1151          TRAP    #15             ; print ORM string
00001B5A  43F9 000021ED           1152          LEA     MODEB,A1        ; load effective address of MODEB string
00001B60  4E4F                    1153          TRAP    #15             ; print MODEB string
00001B62  6000 002A               1154          BRA     DORA           ; branch to addressing mode parsing
00001B66                          1155  
00001B66  43F9 00002227           1156  DORW    LEA     ORM,A1          ; load effective address of ORM string
00001B6C  4E4F                    1157          TRAP    #15             ; print ORM string
00001B6E  43F9 000021F0           1158          LEA     MODEW,A1        ; load effective address of MODEW string
00001B74  4E4F                    1159          TRAP    #15             ; print MODEW string
00001B76  6000 0016               1160          BRA     DORA           ; branch to addressing mode parsing
00001B7A                          1161  
00001B7A  43F9 00002227           1162  DORL    LEA     ORM,A1          ; load effective address of ORM string
00001B80  4E4F                    1163          TRAP    #15             ; print ORM string
00001B82  43F9 000021F3           1164          LEA     MODEL,A1        ; load effective address of MODEL string
00001B88  4E4F                    1165          TRAP    #15             ; print MODEL string
00001B8A  6000 0002               1166          BRA     DORA           ; branch to addressing mode parsing
00001B8E                          1167  
00001B8E  ED5C                    1168  DORA    ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001B90                          1169  
00001B90  1A04                    1170          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B92  0205 0038               1171          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001B96  E61D                    1172          ROR.B   #3,D5           ; shift D5 right by 3 bits to get mode
00001B98  43F9 000021C0           1173          LEA     SM3,A1          ; load effective address of SM3 string
00001B9E  4E4F                    1174          TRAP    #15             ; print space
00001BA0  1C05                    1175          MOVE.B  D5,D6           ; store mode in D6 for further checks
00001BA2                          1176  
00001BA2  0204 0007               1177          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001BA6  D839 000021F8           1178          ADD.B   VALD,D4         ; convert register number to ASCII
00001BAC  43F9 000021F8           1179          LEA     VALD,A1         ; load effective address of Dn
00001BB2  4E4F                    1180          TRAP    #15             ; print Dn
00001BB4                          1181  
00001BB4  BC3C 0000               1182          CMP.B   #%000,D6        ; compare mode with Dn
00001BB8  6700 03DA               1183          BEQ     DSEND
00001BBC  BC3C 0002               1184          CMP.B   #%010,D6        ; compare mode with (An)
00001BC0  6700 03D2               1185          BEQ     DSEND
00001BC4  BC3C 0003               1186          CMP.B   #%011,D6        ; compare mode with (An)+
00001BC8  6700 03CA               1187          BEQ     DSEND
00001BCC  BC3C 0004               1188          CMP.B   #%100,D6        ; compare mode with -(An)
00001BD0  6700 03C2               1189          BEQ     DSEND
00001BD4  BC3C 0007               1190          CMP.B   #%111,D6        ; compare mode with (xxx).W or (xxx).L
00001BD8  6700 03BA               1191          BEQ     DSEND
00001BDC  6000 03B6               1192          BRA     DSEND           ; branch to DSEND in case of invalid code
00001BE0                          1193  
00001BE0                          1194  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BE0                          1195  
00001BE0  4E71                    1196  DS1001  NOP
00001BE2  4E71                    1197  DSUB    NOP
00001BE4                          1198  *print sub
00001BE4  43F9 0000221B           1199          LEA     SUBM,A1
00001BEA  4E4F                    1200          TRAP    #15
00001BEC                          1201  
00001BEC                          1202  *parse dn reg: 3 bits
00001BEC                          1203  *number of the data register involved
00001BEC                          1204  *nums 0-7, paired with below
00001BEC  E75C                    1205          ROL.W   #3,D4       *dn reg num in d1
00001BEE  1E04                    1206          MOVE.B  D4,D7
00001BF0  0207 0007               1207          ANDI.B  #%111,D7
00001BF4                          1208          
00001BF4  3C47                    1209          MOVE.W  D7,A6       *temporary for storage
00001BF6                          1210  
00001BF6                          1211  *parse opmode: 3 bits
00001BF6                          1212  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001BF6                          1213  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001BF6                          1214  *invalid: 111, 011
00001BF6                          1215  *parse first digit separately
00001BF6  E35C                    1216          ROL.W   #1,D4       *addressing mode in d2
00001BF8  1E04                    1217          MOVE.B  D4,D7
00001BFA  0207 0001               1218          ANDI.B  #%1,D7
00001BFE                          1219          
00001BFE                          1220  *parsing next two digits of size
00001BFE  E55C                    1221          ROL.W   #2,D4       *size in d5
00001C00  1A04                    1222          MOVE.B  D4,D5
00001C02  0205 0003               1223          ANDI.B  #%11,D5
00001C06  4EB8 11D6               1224          JSR     SIZE
00001C0A  43F9 000021D6           1225          LEA     SM7,A1
00001C10  4E4F                    1226          TRAP    #15
00001C12                          1227          
00001C12                          1228  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C12  BE3C 0000               1229          CMP.B   #%0,D7       *if 1, then register info printed last
00001C16  6700 0026               1230          BEQ     DSUBEA      *branch to ea before register
00001C1A                          1231          
00001C1A                          1232  *printing register information
00001C1A                          1233  DSUBPRNTREG
00001C1A  43F9 000021F8           1234          LEA     VALD,A1
00001C20  4E4F                    1235          TRAP    #15
00001C22  320E                    1236          MOVE.W  A6,D1       *retrieving a6 register data
00001C24  103C 0003               1237          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C28  4E4F                    1238          TRAP    #15         *printing register number
00001C2A  103C 000E               1239          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C2E  BE3C 0000               1240          CMP.B   #%0,D7      *if info finished printing
00001C32  6700 0360               1241          BEQ     DSEND      *branch to end
00001C36  43F9 0000220A           1242          LEA     COMMA,A1
00001C3C  4E4F                    1243          TRAP    #15
00001C3E                          1244  
00001C3E                          1245          
00001C3E                          1246  * parse ea mode: 3 bits
00001C3E                          1247  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C3E                          1248  *address reg direct not allowed for .B operations
00001C3E                          1249  *no invalid
00001C3E                          1250  DSUBEA
00001C3E  E75C                    1251          ROL.W   #3,D4       *ea mode
00001C40  1604                    1252          MOVE.B  D4,D3
00001C42  0203 0007               1253          ANDI.B  #%111,D3
00001C46                          1254  
00001C46                          1255  *parse ea reg: 3 bits
00001C46                          1256  *no invalid: paired with opmode below (nums 0-7)
00001C46                          1257  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001C46  E75C                    1258          ROL.W   #3,D4       *ea mode
00001C48  1C04                    1259          MOVE.B  D4,D6
00001C4A  0206 0007               1260          ANDI.B  #%111,D6
00001C4E                          1261          
00001C4E  2803                    1262          MOVE.L  D3,D4   *temporarily using D4 
00001C50                          1263          
00001C50                          1264  *comparisons
00001C50  B67C 0004               1265          CMP     #%100,D3
00001C54  6700 0332               1266          BEQ     DSERR
00001C58  4EB8 1220               1267          JSR     ADDRMODEALL
00001C5C  BE3C 0001               1268          CMP.B   #%1,D7      *if info printed
00001C60  6700 0332               1269          BEQ     DSEND       *end
00001C64  43F9 0000220A           1270          LEA     COMMA,A1
00001C6A  4E4F                    1271          TRAP    #15
00001C6C  60AC                    1272          BRA     DSUBPRNTREG *check d6 for size of data
00001C6E                          1273  *then take data from d4 and print (?)
00001C6E                          1274  
00001C6E  6000 0324               1275          BRA     DSEND
00001C72                          1276  
00001C72                          1277  
00001C72                          1278  
00001C72  4E71                    1279  DS1010  NOP
00001C74  6000 031E               1280          BRA     DSEND
00001C78                          1281  
00001C78                          1282          
00001C78                          1283  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C78                          1284  
00001C78  4E71                    1285  DS1011  NOP
00001C7A  6000 0318               1286          BRA     DSEND
00001C7E                          1287          
00001C7E                          1288  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C7E                          1289  
00001C7E  4E71                    1290  DS1100  NOP
00001C80  6000 0312               1291          BRA     DSEND
00001C84                          1292          
00001C84                          1293  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C84                          1294  
00001C84  4E71                    1295  DS1101  NOP
00001C86                          1296  
00001C86  4E71                    1297  DADD    NOP
00001C88  43F9 00002217           1298          LEA     ADDM,A1
00001C8E  4E4F                    1299          TRAP    #15
00001C90                          1300          
00001C90                          1301          *parse dn reg: 3 bits
00001C90                          1302  *number of the data register involved
00001C90                          1303  *nums 0-7, paired with below
00001C90  E75C                    1304          ROL.W   #3,D4       *dn reg num in d7
00001C92  1E04                    1305          MOVE.B  D4,D7
00001C94  0207 0007               1306          ANDI.B  #%111,D7
00001C98                          1307          
00001C98  3C47                    1308          MOVE.W  D7,A6
00001C9A                          1309  
00001C9A                          1310  *parse opmode: 3 bits
00001C9A                          1311  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C9A                          1312  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C9A                          1313  *invalid: 111, 011
00001C9A                          1314  *parse first digit separately
00001C9A  E35C                    1315          ROL.W   #1,D4       *addressing mode in d2
00001C9C  1E04                    1316          MOVE.B  D4,D7
00001C9E  0207 0001               1317          ANDI.B  #%1,D7
00001CA2                          1318          
00001CA2                          1319  *parsing next two digits of size
00001CA2  E55C                    1320          ROL.W   #2,D4       *size in d5
00001CA4  1A04                    1321          MOVE.B  D4,D5
00001CA6  0205 0003               1322          ANDI.B  #%11,D5
00001CAA  BA3C 0003               1323          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001CAE  6700 007C               1324          BEQ     DADDA
00001CB2  4EB8 11D6               1325          JSR     SIZE
00001CB6  43F9 000021D6           1326          LEA     SM7,A1
00001CBC  4E4F                    1327          TRAP    #15
00001CBE                          1328          
00001CBE                          1329  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001CBE  BE3C 0000               1330          CMP.B   #%0,D7       *if 0, then register info printed last
00001CC2  6700 002E               1331          BEQ     DADDEA      *branch to ea before register
00001CC6                          1332          
00001CC6                          1333  *printing register information
00001CC6                          1334  DADDPRNTREG
00001CC6  BA3C 0003               1335          CMP.B   #%11,D5
00001CCA  6700 0058               1336          BEQ     PRINTA
00001CCE  43F9 000021F8           1337          LEA     VALD,A1
00001CD4                          1338  ADDCONT
00001CD4  4E4F                    1339          TRAP    #15
00001CD6  320E                    1340          MOVE.W  A6,D1       *moving reg num to d1 to print
00001CD8  103C 0003               1341          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001CDC  4E4F                    1342          TRAP    #15         *printing register number
00001CDE  103C 000E               1343          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001CE2  BE3C 0000               1344          CMP.B   #%0,D7      *if info finished printing
00001CE6  6700 02AC               1345          BEQ     DSEND      *branch to end
00001CEA  43F9 0000220A           1346          LEA     COMMA,A1
00001CF0  4E4F                    1347          TRAP    #15
00001CF2                          1348  
00001CF2                          1349          
00001CF2                          1350  * parse ea mode: 3 bits
00001CF2                          1351  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001CF2                          1352  *address reg direct not allowed for .B operations
00001CF2                          1353  *no invalid
00001CF2                          1354  DADDEA
00001CF2  E75C                    1355          ROL.W   #3,D4       *ea mode
00001CF4  1604                    1356          MOVE.B  D4,D3
00001CF6  0203 0007               1357          ANDI.B  #%111,D3
00001CFA                          1358  
00001CFA                          1359  *parse ea reg: 3 bits
00001CFA                          1360  *no invalid: paired with opmode below (nums 0-7)
00001CFA                          1361  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001CFA  E75C                    1362          ROL.W   #3,D4       *ea mode
00001CFC  1C04                    1363          MOVE.B  D4,D6
00001CFE  0206 0007               1364          ANDI.B  #%111,D6
00001D02                          1365          
00001D02                          1366  *comparisons
00001D02  B67C 0004               1367          CMP     #%100,D3
00001D06  6700 005A               1368          BEQ     ADDDATACHECK
00001D0A                          1369  DATACHECKCONT
00001D0A  4EB8 1220               1370          JSR     ADDRMODEALL
00001D0E  BE3C 0001               1371          CMP.B   #%1,D7      *if info printed
00001D12  6700 0280               1372          BEQ     DSEND       *end
00001D16  43F9 0000220A           1373          LEA     COMMA,A1
00001D1C  4E4F                    1374          TRAP    #15
00001D1E  60A6                    1375          BRA     DADDPRNTREG 
00001D20                          1376  
00001D20  6000 0272               1377          BRA     DSEND
00001D24                          1378          
00001D24  43F9 000021F6           1379  PRINTA  LEA     VALA,A1
00001D2A  60A8                    1380          BRA     ADDCONT
00001D2C                          1381  
00001D2C                          1382          
00001D2C  4E71                    1383  DADDA   NOP
00001D2E  43F9 000021F6           1384          LEA     VALA,A1
00001D34  4E4F                    1385          TRAP    #15
00001D36  BE3C 0000               1386          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001D3A  6600 000C               1387          BNE     ADDAL
00001D3E  43F9 000021F0           1388          LEA     MODEW,A1
00001D44  6000 000C               1389          BRA     ADDSIZEEND
00001D48  43F9 000021F3           1390  ADDAL   LEA     MODEL,A1
00001D4E  6000 0002               1391          BRA     ADDSIZEEND
00001D52                          1392  ADDSIZEEND
00001D52  4E4F                    1393          TRAP    #15
00001D54  43F9 000021D6           1394          LEA     SM7,A1
00001D5A  4E4F                    1395          TRAP    #15
00001D5C  1E3C 0000               1396          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D60  6090                    1397          BRA     DADDEA
00001D62                          1398  ADDDATACHECK
00001D62  BA3C 0003               1399          CMP.B   #%11,D5
00001D66  6700 0220               1400          BEQ     DSERR
00001D6A  609E                    1401          BRA     DATACHECKCONT
00001D6C                          1402          
00001D6C                          1403          
00001D6C                          1404  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D6C                          1405  
00001D6C                          1406  DS1110
00001D6C  E75C                    1407          ROL.W   #3,D4           * [D2] Reading count
00001D6E  1404                    1408          MOVE.B  D4,D2
00001D70  0202 0007               1409          ANDI.B  #%111,D2
00001D74                          1410          
00001D74  E35C                    1411          ROL.W   #1,D4           * [D3] Reading direction
00001D76  1604                    1412          MOVE.B  D4,D3
00001D78  0203 0001               1413          ANDI.B  #%1,D3
00001D7C                          1414          
00001D7C  E55C                    1415          ROL.W   #2,D4           * [D5] Reading size
00001D7E  1A04                    1416          MOVE.B  D4,D5
00001D80  0205 0003               1417          ANDI.B  #%11,D5
00001D84                          1418          
00001D84  BA3C 0003               1419          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D88  6700 00F0               1420          BEQ     DS1110MEM
00001D8C                          1421          
00001D8C  E35C                    1422          ROL.W   #1,D4           * [D6] Reading count mode
00001D8E  1C04                    1423          MOVE.B  D4,D6
00001D90  0206 0001               1424          ANDI.B  #%1,D6
00001D94                          1425          
00001D94  E55C                    1426          ROL.W   #2,D4           * [D7] reading type of shift
00001D96  1E04                    1427          MOVE.B  D4,D7
00001D98  0207 0003               1428          ANDI.B  #%11,D7
00001D9C                          1429          
00001D9C  E75C                    1430          ROL.W   #3,D4           * [D1] reading register
00001D9E  1204                    1431          MOVE.B  D4,D1
00001DA0  0201 0007               1432          ANDI.B  #%111,D1
00001DA4                          1433          
00001DA4  BE3C 0001               1434          CMP.B   #%01,D7   *Determine shift type
00001DA8  6700 008E               1435          BEQ     DLS
00001DAC  BE3C 0000               1436          CMP.B   #%00,D7
00001DB0  6700 0092               1437          BEQ     DAS
00001DB4  BE3C 0003               1438          CMP.B   #%11,D7
00001DB8  6700 0096               1439          BEQ     DRO
00001DBC                          1440          
00001DBC  6000 01D6               1441          BRA     DSEND               *Fallback in case of invalid code
00001DC0                          1442          
00001DC0  48E7 FFFF               1443  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001DC4  4EB9 00001E5C           1444          JSR     DS1110SIDE
00001DCA  4CDF FFFF               1445          MOVEM.L (SP)+,A0-A7/D0-D7
00001DCE                          1446          
00001DCE  48E7 FFFF               1447          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001DD2  4EB8 11D6               1448          JSR     SIZE
00001DD6  4CDF FFFF               1449          MOVEM.L (SP)+,A0-A7/D0-D7
00001DDA                          1450          
00001DDA  103C 000E               1451          MOVE.B  #14,D0
00001DDE  43F9 000021C9           1452          LEA     SM5,A1
00001DE4  4E4F                    1453          TRAP    #15
00001DE6                          1454          
00001DE6  BA3C 0003               1455          CMP.B   #%11,D5
00001DEA  6700 00B4               1456          BEQ     DS1110MEMA
00001DEE                          1457          
00001DEE  BC3C 0001               1458          CMP.B   #%1,D6
00001DF2  6700 003A               1459          BEQ     DS1110_REG_D
00001DF6  6000 002C               1460          BRA     DS1110_REG_I
00001DFA                          1461          
00001DFA  1C01                    1462  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001DFC                          1463          
00001DFC  103C 0003               1464          MOVE.B  #3,D0
00001E00  1202                    1465          MOVE.B  D2,D1
00001E02  4E4F                    1466          TRAP    #15
00001E04                          1467          
00001E04  103C 000E               1468          MOVE.B  #14,D0
00001E08  43F9 0000220A           1469          LEA     COMMA,A1
00001E0E  4E4F                    1470          TRAP    #15
00001E10                          1471          
00001E10  43F9 000021F8           1472          LEA     VALD,A1
00001E16  4E4F                    1473          TRAP    #15
00001E18                          1474          
00001E18  103C 0003               1475          MOVE.B  #3,D0
00001E1C  1206                    1476          MOVE.B  D6,D1
00001E1E  4E4F                    1477          TRAP    #15
00001E20                          1478          
00001E20  6000 0172               1479          BRA     DSEND
00001E24                          1480          
00001E24                          1481  DS1110_REG_I
00001E24  43F9 000021FA           1482          LEA     VALN,A1
00001E2A  4E4F                    1483          TRAP    #15
00001E2C  60CC                    1484          BRA     DS1110B
00001E2E                          1485  
00001E2E                          1486  DS1110_REG_D
00001E2E  43F9 000021F8           1487          LEA     VALD,A1
00001E34  4E4F                    1488          TRAP    #15
00001E36  60C2                    1489          BRA     DS1110B       
00001E38                          1490          
00001E38  43F9 0000222E           1491  DLS     LEA     LSM,A1
00001E3E  4E4F                    1492          TRAP    #15
00001E40  6000 FF7E               1493          BRA     DS1110A
00001E44                          1494          
00001E44  43F9 00002235           1495  DAS     LEA     ASM,A1
00001E4A  4E4F                    1496          TRAP    #15
00001E4C  6000 FF72               1497          BRA     DS1110A
00001E50                          1498          
00001E50  43F9 0000223C           1499  DRO     LEA     ROM,A1
00001E56  4E4F                    1500          TRAP    #15
00001E58  6000 FF66               1501          BRA     DS1110A
00001E5C                          1502          
00001E5C                          1503  DS1110SIDE
00001E5C  103C 0006               1504          MOVE.B  #6,D0
00001E60  B63C 0001               1505          CMP.B   #1,D3
00001E64  6700 000C               1506          BEQ     DS1110LSIDE
00001E68  123C 0052               1507          MOVE.B  #82,D1
00001E6C  4E4F                    1508          TRAP    #15
00001E6E  6000 0008               1509          BRA     DS1110SIDEEND
00001E72                          1510  
00001E72                          1511  DS1110LSIDE
00001E72  123C 004C               1512          MOVE.B  #76,D1
00001E76  4E4F                    1513          TRAP    #15
00001E78                          1514          
00001E78                          1515  DS1110SIDEEND
00001E78  4E75                    1516          RTS 
00001E7A                          1517  
00001E7A                          1518  DS1110MEM
00001E7A                          1519                                  * Shift type is instead stored in D2
00001E7A                          1520          
00001E7A  E75C                    1521          ROL.W   #3,D4           * [D6] Reading address mode
00001E7C  1C04                    1522          MOVE.B  D4,D6
00001E7E  0206 0007               1523          ANDI.B  #%111,D6
00001E82                          1524          
00001E82  E75C                    1525          ROL.W   #3,D4           * [D1] Reading address register
00001E84  1204                    1526          MOVE.B  D4,D1
00001E86  0201 0007               1527          ANDI.B  #%111,D1
00001E8A                          1528          
00001E8A  B43C 0001               1529          CMP.B   #%01,D2
00001E8E  67A8                    1530          BEQ     DLS
00001E90  B43C 0000               1531          CMP.B   #%00,D2
00001E94  67AE                    1532          BEQ     DAS
00001E96  B43C 0003               1533          CMP.B   #%11,D2
00001E9A  67B4                    1534          BEQ     DRO
00001E9C  6000 00F6               1535          BRA     DSEND
00001EA0                          1536          
00001EA0                          1537          
00001EA0                          1538  DS1110MEMA
00001EA0                          1539          
00001EA0  BC3C 0002               1540          CMP.B   #%010,D6
00001EA4  6700 002E               1541          BEQ     DS1110MEM_REG
00001EA8  BC3C 0003               1542          CMP.B   #%011,D6
00001EAC  6700 004C               1543          BEQ     DS1110MEM_INC
00001EB0  BC3C 0004               1544          CMP.B   #%100,D6
00001EB4  6700 006A               1545          BEQ     DS1110MEM_DEC
00001EB8                          1546          
00001EB8  BC3C 0007               1547          CMP.B   #%111,D6
00001EBC  6600 00CA               1548          BNE     DSERR
00001EC0                          1549          
00001EC0  B23C 0000               1550          CMP.B   #%000,D1
00001EC4  6700 0080               1551          BEQ     DS1110MEM_CUSW
00001EC8  B23C 0001               1552          CMP.B   #%001,D1
00001ECC  6700 0096               1553          BEQ     DS1110MEM_CUSL
00001ED0                          1554          
00001ED0  6000 00C2               1555          BRA     DSEND
00001ED4                          1556  
00001ED4                          1557  DS1110MEM_REG
00001ED4  43F9 00002200           1558          LEA     OPENPTR,A1
00001EDA  4E4F                    1559          TRAP    #15
00001EDC                          1560          
00001EDC  43F9 000021F6           1561          LEA     VALA,A1
00001EE2  4E4F                    1562          TRAP    #15
00001EE4                          1563          
00001EE4  103C 0003               1564          MOVE.B  #3,D0
00001EE8  4E4F                    1565          TRAP    #15
00001EEA  103C 000E               1566          MOVE.B  #14,D0
00001EEE                          1567          
00001EEE  43F9 00002205           1568          LEA     CLOSEPTR,A1
00001EF4  4E4F                    1569          TRAP    #15
00001EF6                          1570          
00001EF6  6000 009C               1571          BRA     DSEND
00001EFA                          1572  
00001EFA                          1573  DS1110MEM_INC
00001EFA  43F9 00002200           1574          LEA     OPENPTR,A1
00001F00  4E4F                    1575          TRAP    #15
00001F02                          1576          
00001F02  43F9 000021F6           1577          LEA     VALA,A1
00001F08  4E4F                    1578          TRAP    #15
00001F0A                          1579          
00001F0A  103C 0003               1580          MOVE.B  #3,D0
00001F0E  4E4F                    1581          TRAP    #15
00001F10  103C 000E               1582          MOVE.B  #14,D0
00001F14                          1583          
00001F14  43F9 00002207           1584          LEA     CLOSEIPTR,A1
00001F1A  4E4F                    1585          TRAP    #15
00001F1C                          1586          
00001F1C  6000 0076               1587          BRA     DSEND
00001F20                          1588  
00001F20                          1589  DS1110MEM_DEC
00001F20  43F9 00002202           1590          LEA     OPENDPTR,A1
00001F26  4E4F                    1591          TRAP    #15
00001F28                          1592          
00001F28  43F9 000021F6           1593          LEA     VALA,A1
00001F2E  4E4F                    1594          TRAP    #15
00001F30                          1595          
00001F30  103C 0003               1596          MOVE.B  #3,D0
00001F34  4E4F                    1597          TRAP    #15
00001F36  103C 000E               1598          MOVE.B  #14,D0
00001F3A                          1599          
00001F3A  43F9 00002205           1600          LEA     CLOSEPTR,A1
00001F40  4E4F                    1601          TRAP    #15
00001F42                          1602          
00001F42  6000 0050               1603          BRA     DSEND
00001F46                          1604          
00001F46                          1605  DS1110MEM_CUSW
00001F46  43F9 0000220C           1606          LEA     DOLLAR,A1
00001F4C  4E4F                    1607          TRAP    #15
00001F4E  341A                    1608          MOVE.W  (A2)+,D2
00001F50  48E7 0400               1609          MOVEM.L D5,-(SP)
00001F54  1A3C 0030               1610          MOVE.B  #48,D5
00001F58  4EB8 118E               1611          JSR     HEXOUT
00001F5C  4CDF 0020               1612          MOVEM.L (SP)+,D5
00001F60  6000 0032               1613          BRA     DSEND
00001F64                          1614          
00001F64                          1615  DS1110MEM_CUSL
00001F64  43F9 0000220C           1616          LEA     DOLLAR,A1
00001F6A  4E4F                    1617          TRAP    #15
00001F6C  241A                    1618          MOVE.L  (A2)+,D2
00001F6E  48E7 0400               1619          MOVEM.L D5,-(SP)
00001F72  1A3C 0030               1620          MOVE.B  #48,D5
00001F76  4EB8 118E               1621          JSR     HEXOUT
00001F7A  4CDF 0020               1622          MOVEM.L (SP)+,D5
00001F7E  6000 0014               1623          BRA     DSEND
00001F82                          1624          
00001F82                          1625  
00001F82                          1626  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F82                          1627  
00001F82  4E71                    1628  DS1111  NOP
00001F84  6000 000E               1629          BRA     DSEND
00001F88                          1630  
00001F88                          1631  *DS Final
00001F88                          1632  *--------------------------------------------------------------------------------------------------
00001F88                          1633  
00001F88  103C 000E               1634  DSERR   MOVE.B  #14,D0
00001F8C  43F9 000021E4           1635          LEA     ERRM,A1
00001F92  4E4F                    1636          TRAP    #15
00001F94                          1637  
00001F94  4E75                    1638  DSEND   RTS
00001F96                          1639  
00001F96  43F9 000021B6           1640  DSEOF   LEA     LB,A1
00001F9C  103C 000E               1641          MOVE.B  #14,D0
00001FA0  4E4F                    1642          TRAP    #15
00001FA2                          1643          
00001FA2  43F9 000020B8           1644          LEA     REST,A1
00001FA8  103C 000E               1645          MOVE.B  #14,D0
00001FAC  4E4F                    1646          TRAP    #15
00001FAE                          1647          
00001FAE  103C 0005               1648          MOVE.B  #5,D0
00001FB2  4E4F                    1649          TRAP    #15
00001FB4                          1650          
00001FB4  B23C 0059               1651          CMP.B   #89,D1
00001FB8  6700 F046               1652          BEQ     START
00001FBC  B23C 0079               1653          CMP.B   #121,D1
00001FC0  6700 F03E               1654          BEQ     START
00001FC4                          1655  
00001FC4  43F9 000021B6           1656  END     LEA     LB,A1
00001FCA  103C 000E               1657          MOVE.B  #14,D0
00001FCE  4E4F                    1658          TRAP    #15
00001FD0                          1659          
00001FD0  43F9 000021B6           1660          LEA     LB,A1
00001FD6  103C 000E               1661          MOVE.B  #14,D0
00001FDA  4E4F                    1662          TRAP    #15
00001FDC                          1663          
00001FDC  43F9 000020D5           1664          LEA     ENDMSG,A1
00001FE2  103C 000E               1665          MOVE.B  #14,D0
00001FE6  4E4F                    1666          TRAP    #15
00001FE8                          1667          
00001FE8  43F9 000020FD           1668          LEA     AUTHOR,A1
00001FEE  4E4F                    1669          TRAP    #15
00001FF0                          1670          
00001FF0  43F9 000021B6           1671          LEA     LB,A1
00001FF6  103C 000E               1672          MOVE.B  #14,D0
00001FFA  4E4F                    1673          TRAP    #15
00001FFC                          1674          
00001FFC  103C 0009               1675          MOVE.B  #9,D0
00002000  4E4F                    1676          TRAP    #15
00002002                          1677  
00002002                          1678  *Initialized Variables
00002002                          1679  *--------------------------------------------------------------------------------------------------
00002002                          1680  
00002002  =0000000D               1681  CR      EQU     $0D
00002002  =0000000A               1682  LF      EQU     $0A
00002002  =00000009               1683  HT      EQU     $09
00002002                          1684  
00002002= 54 68 69 73 20 69 ...   1685  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
0000208A= 45 6E 74 65 72 20 ...   1686  ASTART  DC.B    'Enter start address: $',0
000020A1= 45 6E 74 65 72 20 ...   1687  AEND    DC.B    'Enter end address:   $',0
000020B8= 52 65 73 74 61 72 ...   1688  REST    DC.B    'Restart Disassembler (y/n)? ',0
000020D5= 54 68 61 6E 6B 20 ...   1689  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000020FD= 4D 61 64 65 20 62 ...   1690  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
00002122                          1691  
00002122= 45 52 52 4F 52 3A ...   1692  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
0000215C= 45 52 52 4F 52 3A ...   1693  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
00002182= 45 52 52 4F 52 3A ...   1694  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000021B6                          1695  
000021B6= 0D 0A 00                1696  LB      DC.B    CR,LF,0
000021B9                          1697  
000021B9= 09 00                   1698  HTM     DC.B    HT,0
000021BB                          1699  
000021BB= 20 00                   1700  SM1     DC.B    ' ',0
000021BD= 20 20 00                1701  SM2     DC.B    '  ',0
000021C0= 20 20 20 00             1702  SM3     DC.B    '   ',0
000021C4= 20 20 20 20 00          1703  SM4     DC.B    '    ',0
000021C9= 20 20 20 20 20 00       1704  SM5     DC.B    '     ',0
000021CF= 20 20 20 20 20 20 00    1705  SM6     DC.B    '      ',0
000021D6= 20 20 20 20 20 20 ...   1706  SM7     DC.B    '       ',0
000021DE                          1707  
000021DE= 54 45 53 54 00          1708  TESTM   DC.B    'TEST',0
000021E3                          1709  
000021E3= 00                      1710  NOTH    DC.B    '',0
000021E4                          1711  
000021E4= 20 20 2A 45 52 52 ...   1712  ERRM    DC.B    '  *ERROR',0
000021ED                          1713  
000021ED= 2E 42 00                1714  MODEB   DC.B    '.B',0
000021F0= 2E 57 00                1715  MODEW   DC.B    '.W',0
000021F3= 2E 4C 00                1716  MODEL   DC.B    '.L',0
000021F6                          1717  
000021F6= 41 00                   1718  VALA    DC.B    'A',0
000021F8= 44 00                   1719  VALD    DC.B    'D',0
000021FA= 23 00                   1720  VALN    DC.B    '#',0
000021FC= 30 00                   1721  VAL0    DC.B    '0',0
000021FE= 51 00                   1722  VALQ    DC.B    'Q',0
00002200                          1723  
00002200= 28 00                   1724  OPENPTR     DC.B    '(',0
00002202= 2D 28 00                1725  OPENDPTR    DC.B    '-(',0
00002205                          1726  
00002205= 29 00                   1727  CLOSEPTR    DC.B    ')',0
00002207= 29 2B 00                1728  CLOSEIPTR   DC.B    ')+',0
0000220A                          1729  
0000220A= 2C 00                   1730  COMMA   DC.B    ',',0
0000220C= 24 00                   1731  DOLLAR  DC.B    '$',0
0000220E                          1732  
0000220E= 4E 4F 50 00             1733  NOPM    DC.B    'NOP',0
00002212                          1734  
00002212= 4D 4F 56 45 00          1735  MOVEM   DC.B    'MOVE',0
00002217                          1736  
00002217= 41 44 44 00             1737  ADDM    DC.B    'ADD',0
0000221B                          1738  
0000221B= 53 55 42 00             1739  SUBM    DC.B    'SUB',0
0000221F                          1740  
0000221F= 4C 45 41 00             1741  LEAM    DC.B    'LEA',0
00002223                          1742  
00002223= 41 4E 44 00             1743  ANDM    DC.B    'AND',0
00002227= 4F 52 00                1744  ORM     DC.B    'OR',0
0000222A= 4E 4F 54 00             1745  NOTM    DC.B    'NOT',0
0000222E                          1746  
0000222E= 4C 53 00                1747  LSM    DC.B    'LS',0
00002231= 4C 53 52 00             1748  LSRM    DC.B    'LSR',0
00002235= 41 53 00                1749  ASM    DC.B    'AS',0
00002238= 41 53 52 00             1750  ASRM    DC.B    'ASR',0
0000223C                          1751  
0000223C= 52 4F 00                1752  ROM    DC.B    'RO',0
0000223F= 52 4F 52 00             1753  RORM    DC.B    'ROR',0
00002243                          1754  
00002243= 42 47 54 00             1755  BGTM    DC.B    'BGT',0
00002247= 42 4C 45 00             1756  BLEM    DC.B    'BLE',0
0000224B= 42 45 51 00             1757  BEQM    DC.B    'BEQ',0
0000224F                          1758  
0000224F= 4A 53 52 00             1759  JSRM    DC.B    'JSR',0
00002253= 52 54 53 00             1760  RTSM    DC.B    'RTS',0
00002257                          1761  
00002257= 42 52 41 00             1762  BRAM    DC.B    'BRA',0
0000225B                          1763  
0000225B                          1764  
0000225B                          1765      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1D48
ADDCONT             1CD4
ADDDATACHECK        1D62
ADDM                2217
ADDRMODEALL         1220
ADDSIZEEND          1D52
ADREG               1690
ADREGP              16A8
AEND                20A1
AM000               1220
AM001               1240
AM010               1268
AM011               1298
AM100               12C8
AM111               12F8
AM111001            1326
AM111100            134C
AMEND               137A
ANDM                2223
ASM                 2235
ASRM                2238
ASTART              208A
AUTHOR              20FD
BEQM                224B
BGTM                2243
BLEM                2247
BRAM                2257
CLOSEIPTR           2207
CLOSEPTR            2205
COMMA               220A
CR                  D
DADD                1C86
DADDA               1D2C
DADDEA              1CF2
DADDPRNTREG         1CC6
DADDQ               18BA
DAND                13B2
DANDA               142A
DANDB               13EE
DANDL               1416
DANDW               1402
DAS                 1E44
DATACHECKCONT       1D0A
DBEQ                1A66
DBGT                19EA
DBLE                1A26
DBRA                195E
DBRA_16BIT          19A6
DBRA_32BIT          19C8
DISASM              1380
DJSR                1712
DJSR_CUSL           17AA
DJSR_CUSW           178C
DJSR_REG            1766
DLEA                17D4
DLS                 1E38
DMOVE2              147C
DMOVEA              1520
DMOVEQ              1AA8
DNOP                15D6
DNOT                15E2
DNOTA               1642
DNOTB               1606
DNOTL               162E
DNOTW               161A
DOLLAR              220C
DOR                 1B16
DORA                1B8E
DORB                1B52
DORL                1B7A
DORW                1B66
DREG                1678
DRO                 1E50
DRTS                17C8
DS0                 138A
DS00                139E
DS01                1542
DS010               1560
DS0100              159C
DS0101              18B8
DS011               156A
DS0110              1932
DS0111              1AA6
DS1                 1394
DS10                154C
DS100               1574
DS1000              1B10
DS1001              1BE0
DS101               157E
DS1010              1C72
DS1011              1C78
DS11                1556
DS110               1588
DS1100              1C7E
DS1101              1C84
DS111               1592
DS1110              1D6C
DS1110A             1DC0
DS1110B             1DFA
DS1110LSIDE         1E72
DS1110MEM           1E7A
DS1110MEMA          1EA0
DS1110MEM_CUSL      1F64
DS1110MEM_CUSW      1F46
DS1110MEM_DEC       1F20
DS1110MEM_INC       1EFA
DS1110MEM_REG       1ED4
DS1110SIDE          1E5C
DS1110SIDEEND       1E78
DS1110_REG_D        1E2E
DS1110_REG_I        1E24
DS1111              1F82
DSEND               1F94
DSEOF               1F96
DSERR               1F88
DSUB                1BE2
DSUBEA              1C3E
DSUBPRNTREG         1C1A
END                 1FC4
ENDMSG              20D5
ERRM                21E4
EXT                 16F0
EXTW                1706
HDONE               11D4
HEXOUT              118E
HHEX                11A8
HNUM                11B0
HSKIP2              11BE
HSKIP3              11D2
HSTEP               1196
HSTEP2              11B4
HT                  9
HTM                 21B9
INTRO               2002
JSR010              180C
JSR111              183C
JSR111001           186E
JSRM                224F
JSRPRINT2           1898
LB                  21B6
LEAM                221F
LF                  A
LSM                 222E
LSRM                2231
MADREG              16C8
MODEB               21ED
MODEL               21F3
MODEW               21F0
MOVECONT            14A0
MOVEERRCHECK        1536
MOVEM               2212
MSDONE              14E6
MSIZE               14A0
MSIZEB              14C8
MSIZEL              14DC
MSIZEW              14D2
NOPM                220E
NOTH                21E3
NOTM                222A
OPENDPTR            2202
OPENPTR             2200
ORM                 2227
PARSE               109A
PCAPS               10C6
PDONE               10F0
PHEX                10B6
PNUM                10CE
PRINTA              1D24
PSTEP               10A2
PSTEP2              10D2
RCONT               117A
READLN              112C
REST                20B8
ROM                 223C
RORM                223F
RPAUSE              1182
RSTEP               1132
RTSM                2253
SDONE               121C
SIZE                11D6
SIZEB               11FE
SIZEL               1212
SIZEW               1208
SM1                 21BB
SM2                 21BD
SM3                 21C0
SM4                 21C4
SM5                 21C9
SM6                 21CF
SM7                 21D6
SRET                121E
START               1000
STARTER             0
SUBM                221B
TEST                102A
TESTM               21DE
VAL0                21FC
VALA                21F6
VALD                21F8
VALN                21FA
VALQ                21FE
VERR1               10FC
VERR1M              2122
VERR2               110C
VERR2M              215C
VERR3               111C
VERR3M              2182
VINPUT              10F2
