00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 8:42:31 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 0000228C             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 00002314             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 0000246D             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 0000232B             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 0000246D             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 000023AC            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 1148                114          BRA     END
00001108                           115  
00001108  43F9 000023E6            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 1138                119          BRA     END
00001118                           120  
00001118  43F9 0000240C            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 1128                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 00002447            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 00002440            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 10A6                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 0000249D            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 000024A0            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 000024A3            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 000024A8            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0FA8                256          BEQ     DSERR
0000124C  43F9 000024A6            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 000024B2            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 000024A6            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 000024B7            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 000024B2            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 000024A6            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 000024B9            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 000024B4            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 000024A6            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 000024B7            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0EF8                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 000024BE            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 000024BE            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0EA4                334          BNE     DSERR
00001350  43F9 000024AA            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 0210                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 021A                373          BCS     DS11
00001396  6000 020C                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 0006                381          BEQ     DAND
000013AA  6000 00CA                382          BRA     DMOVE2
000013AE                           383  
000013AE  E95C                     384  DAND    ROL.W   #4,D4
000013B0  1A04                     385          MOVE.B  D4,D5
000013B2  0205 0002                386          ANDI.B  #%0010,D5
000013B6  0C05 0002                387          CMPI.B  #%0010,D5
000013BA  6600 0E46                388          BNE     DSERRINS
000013BE                           389          
000013BE  E75C                     390          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013C0  1A04                     391          MOVE.B  D4,D5           ; Move the byte in D4 to D5
000013C2  0205 0007                392          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013C6  1C05                     393          MOVE.B  D5,D6           ; Store the register number in D6 for later use
000013C8                           394  
000013C8  E75C                     395          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013CA  1A04                     396          MOVE.B  D4,D5           ; Move the byte in D4 to D5
000013CC  0205 0007                397          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013D0  1E05                     398          MOVE.B  D5,D7           ; Store opmode in D7 for later use
000013D2  BA3C 0000                399          CMP.B   #%000,D5        ; Compare with byte size
000013D6  6700 0016                400          BEQ     DANDB
000013DA  BA3C 0001                401          CMP.B   #%001,D5        ; Compare with word size
000013DE  6700 0022                402          BEQ     DANDW
000013E2  BA3C 0002                403          CMP.B   #%010,D5        ; Compare with long size
000013E6  6700 002E                404          BEQ     DANDL
000013EA                           405  
000013EA  6000 0E32                406          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013EE                           407  
000013EE  43F9 000024D9            408  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F4  4E4F                     409          TRAP    #15             ; Print ANDM string
000013F6  43F9 0000249D            410          LEA     MODEB,A1        ; Load effective address of MODEB string
000013FC  4E4F                     411          TRAP    #15             ; Print MODEB string
000013FE  6000 002A                412          BRA     DANDA           ; Branch to addressing mode parsing
00001402                           413  
00001402  43F9 000024D9            414  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001408  4E4F                     415          TRAP    #15             ; Print ANDM string
0000140A  43F9 000024A0            416          LEA     MODEW,A1        ; Load effective address of MODEW string
00001410  4E4F                     417          TRAP    #15             ; Print MODEW string
00001412  6000 0016                418          BRA     DANDA           ; Branch to addressing mode parsing
00001416                           419  
00001416  43F9 000024D9            420  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000141C  4E4F                     421          TRAP    #15             ; Print ANDM string
0000141E  43F9 000024A3            422          LEA     MODEL,A1        ; Load effective address of MODEL string
00001424  4E4F                     423          TRAP    #15             ; Print MODEL string
00001426  6000 0002                424          BRA     DANDA           ; Branch to addressing mode parsing
0000142A                           425  
0000142A  43F9 0000244E            426  DANDA   LEA     SM4,A1
00001430  4E4F                     427          TRAP    #15
00001432  ED5C                     428          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001434  1A04                     429          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001436  0205 0038                430          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
0000143A  E61D                     431          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
0000143C  1605                     432          MOVE.B  D5,D3           ; Store mode in D3 for further checks
0000143E  0204 0007                433          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001442  1C04                     434          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001444                           435  
00001444  BE3C 0004                436          CMP.B   #%100,D7        ; Compare opmode with '100'
00001448  6D00 0004                437          BLT     DANDAE          ; If opmode < '100', branch to DANDAE
0000144C  60DC                     438          BRA     DANDA           ; Else, branch to DANDAD
0000144E                           439  
0000144E  4EB8 121C                440  DANDAE  JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001452  103C 000E                441          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001456  43F9 000024BC            442          LEA     COMMA,A1        ; Load effective address of COMMA string
0000145C  4E4F                     443          TRAP    #15             ; Print comma
0000145E  43F9 000024A8            444          LEA     VALD,A1
00001464  4E4F                     445          TRAP    #15
00001466  1206                     446          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001468  103C 0003                447          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
0000146C  4E4F                     448          TRAP    #15             ; Print register number
0000146E  103C 000E                449          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001472  6000 0DAA                450          BRA     DSEND           ; Branch to DSEND
00001476                           451               
00001476                           452  
00001476                           453  
00001476                           454          
00001476                           455  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
00001476  4E71                     456  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001478                           457          *size in d5 from above processing
00001478  43F9 000024C8            458          LEA     MOVEM,A1
0000147E  4E4F                     459          TRAP    #15
00001480                           460                  
00001480                           461          *dest reg to d7
00001480  E75C                     462          ROL.W   #3,D4
00001482  1E04                     463          MOVE.B  D4,D7
00001484  CE3C 0007                464          AND.B   #%111,D7
00001488                           465          
00001488                           466          *dest mode to d3: An means MOVEA
00001488  E75C                     467          ROL.W   #3,D4
0000148A  1604                     468          MOVE.B  D4,D3
0000148C  C63C 0007                469          AND.B   #%111,D3
00001490  3C43                     470          MOVE.W  D3,A6
00001492                           471          
00001492  B67C 0001                472          CMP     #%001,D3
00001496  6700 00E0                473          BEQ     DMOVEA
0000149A                           474          
0000149A                           475  
0000149A                           476  MOVECONT
0000149A                           477  *printing size then first addressing moode, then comma
0000149A                           478  *size is different for move
0000149A                           479  MSIZENORM  
0000149A  103C 000E                480          MOVE.B  #14,D0
0000149E  BA3C 0001                481          CMP.B   #%01,D5
000014A2  6700 0046                482          BEQ     MSIZEBN
000014A6  BA3C 0003                483          CMP.B   #%11,D5
000014AA  6700 0050                484          BEQ     MSIZEWN
000014AE  BA3C 0002                485          CMP.B   #%10,D5
000014B2  6700 005A                486          BEQ     MSIZELN
000014B6  BA3C 0003                487          CMP.B   #%11,D5
000014BA  6700 006E                488          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014BE  6000 0D32                489          BRA     DSERR
000014C2                           490          
000014C2                           491  MSIZE
000014C2  103C 000E                492          MOVE.B  #14,D0
000014C6  BA3C 0001                493          CMP.B   #%01,D5
000014CA  6700 0054                494          BEQ     MSIZEB
000014CE  BA3C 0003                495          CMP.B   #%11,D5
000014D2  6700 0056                496          BEQ     MSIZEW
000014D6  BA3C 0002                497          CMP.B   #%10,D5
000014DA  6700 0058                498          BEQ     MSIZEL
000014DE  BA3C 0003                499          CMP.B   #%11,D5
000014E2  6700 0046                500          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014E6  6000 0D0A                501          BRA     DSERR
000014EA                           502  
000014EA  43F9 0000249D            503  MSIZEBN LEA     MODEB,A1
000014F0  4E4F                     504          TRAP    #15
000014F2  43F9 00002445            505          LEA     SM1,A1
000014F8  6000 0044                506          BRA     MSDONE
000014FC                           507  
000014FC  43F9 000024A0            508  MSIZEWN LEA     MODEW,A1
00001502  4E4F                     509          TRAP    #15
00001504  43F9 00002445            510          LEA     SM1,A1
0000150A  6000 0032                511          BRA     MSDONE
0000150E                           512  
0000150E  43F9 000024A3            513  MSIZELN LEA     MODEL,A1
00001514  4E4F                     514          TRAP    #15
00001516  43F9 00002445            515          LEA     SM1,A1
0000151C  6000 0020                516          BRA     MSDONE
00001520                           517      
00001520  43F9 0000249D            518  MSIZEB  LEA     MODEB,A1
00001526  6000 0016                519          BRA     MSDONE
0000152A                           520  
0000152A  43F9 000024A0            521  MSIZEW  LEA     MODEW,A1
00001530  6000 000C                522          BRA     MSDONE
00001534                           523  
00001534  43F9 000024A3            524  MSIZEL  LEA     MODEL,A1
0000153A  6000 0002                525          BRA     MSDONE
0000153E                           526  
0000153E  4E4F                     527  MSDONE  TRAP    #15
00001540                           528  
00001540  43F9 0000244A            529          LEA     SM3,A1
00001546  4E4F                     530          TRAP    #15
00001548                           531          
00001548                           532          *source mode to d3
00001548  E75C                     533          ROL.W   #3,D4
0000154A  1604                     534          MOVE.B  D4,D3
0000154C  C63C 0007                535          AND.B   #%111,D3
00001550                           536          
00001550                           537          *source reg to d6
00001550  E75C                     538          ROL.W   #3,D4
00001552  1C04                     539          MOVE.B  D4,D6
00001554  CC3C 0007                540          AND.B   #%111,D6
00001558                           541          
00001558  4EB8 121C                542          JSR     ADDRMODEALL
0000155C  B67C 0001                543          CMP     #%001,D3
00001560  6700 002C                544          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
00001564  43F9 000024BC            545          LEA     COMMA,A1
0000156A  4E4F                     546          TRAP    #15
0000156C  1C07                     547          MOVE.B  D7,D6
0000156E  360E                     548          MOVE.W  A6,D3
00001570  4EB8 121C                549          JSR     ADDRMODEALL
00001574  6000 0CA8                550          BRA     DSEND
00001578                           551  
00001578  4E71                     552  DMOVEA  NOP
0000157A  BA7C 0001                553          CMP     #%01,D5     *if size is byte, err
0000157E  6700 0C72                554          BEQ     DSERR
00001582  43F9 000024A6            555          LEA     VALA,A1        *else, print A and return
00001588  4E4F                     556          TRAP    #15
0000158A  6000 FF36                557          BRA     MSIZE
0000158E                           558  
0000158E                           559  MOVEERRCHECK
0000158E  BA7C 0001                560          CMP     #%01,D5
00001592  6700 0C5E                561          BEQ     DSERR
00001596  6000 0C86                562          BRA     DSEND
0000159A                           563  
0000159A                           564          
0000159A                           565  
0000159A                           566  *DS Tier 2 ----------------------------------------------------------------------------------------
0000159A                           567  
0000159A                           568  DS01                        *DS01: Tier 2 binary search for 01 side
0000159A  E34C                     569          LSL.W   #1,D4
0000159C  6500 0024                570          BCS     DS011
000015A0  6000 0016                571          BRA     DS010
000015A4                           572  
000015A4                           573  DS10                        *DS10: Tier 2 binary search for 10 side
000015A4  E34C                     574          LSL.W   #1,D4
000015A6  6500 002E                575          BCS     DS101
000015AA  6000 0020                576          BRA     DS100
000015AE                           577  
000015AE                           578  DS11                        *DS11: Tier 2 binary search for 11 side
000015AE  E34C                     579          LSL.W   #1,D4
000015B0  6500 0038                580          BCS     DS111
000015B4  6000 002A                581          BRA     DS110
000015B8                           582  
000015B8                           583  *DS Tier 3 ----------------------------------------------------------------------------------------
000015B8                           584  
000015B8                           585  DS010                       *DS010: Tier 3 binary search for 010 side
000015B8  E34C                     586          LSL.W   #1,D4
000015BA  6500 055A                587          BCS     DS0101
000015BE  6000 0034                588          BRA     DS0100
000015C2                           589  
000015C2                           590  DS011                       *DS011: Tier 3 binary search for 011 side
000015C2  E34C                     591          LSL.W   #1,D4
000015C4  6500 073E                592          BCS     DS0111
000015C8  6000 05C6                593          BRA     DS0110
000015CC                           594  
000015CC                           595  DS100                       *DS100: Tier 3 binary search for 100 side
000015CC  E34C                     596          LSL.W   #1,D4
000015CE  6500 087A                597          BCS     DS1001
000015D2  6000 079A                598          BRA     DS1000
000015D6                           599  
000015D6                           600  DS101                       *DS101: Tier 3 binary search for 101 side
000015D6  E34C                     601          LSL.W   #1,D4
000015D8  6500 0908                602          BCS     DS1011
000015DC  6000 08FE                603          BRA     DS1010
000015E0                           604  
000015E0                           605  DS110                       *DS110: Tier 3 binary search for 110 side
000015E0  E34C                     606          LSL.W   #1,D4
000015E2  6500 090A                607          BCS     DS1101
000015E6  6000 0900                608          BRA     DS1100
000015EA                           609  
000015EA                           610  DS111                       *DS111: Tier 3 binary search for 111 side
000015EA  E34C                     611          LSL.W   #1,D4
000015EC  6500 0BFE                612          BCS     DS1111
000015F0  6000 09E4                613          BRA     DS1110
000015F4                           614  
000015F4                           615  *DS Tier 4 ----------------------------------------------------------------------------------------
000015F4                           616  
000015F4                           617  DS0100                      *DS0100: Processing for 0100 prefix
000015F4  0C44 E710                618          CMPI.W  #%1110011100010000,D4
000015F8  6700 0042                619          BEQ     DNOP
000015FC  0C44 E750                620          CMPI.W  #%1110011101010000,D4
00001600  6700 022C                621          BEQ     DRTS
00001604                           622          
00001604  3404                     623          MOVE.W  D4,D2
00001606  0242 1C00                624          ANDI.W  #%0001110000000000,D2
0000160A  0C42 1C00                625          CMPI.W  #%0001110000000000,D2
0000160E  6700 022A                626          BEQ     DLEA
00001612                           627          
00001612  3404                     628          MOVE.W  D4,D2
00001614  0242 B800                629          ANDI.W  #%1011100000000000,D2
00001618  0C42 8800                630          CMPI.W  #%1000100000000000,D2
0000161C  6700 032A                631          BEQ     DMOVEM
00001620                           632          
00001620  E95C                     633          ROL.W   #4,D4
00001622  1404                     634          MOVE.B  D4,D2
00001624  0202 000F                635          ANDI.B  #%1111,D2
00001628                           636          
00001628  B43C 000E                637          CMP.B   #%1110,D2
0000162C  6700 014A                638          BEQ     DJSR
00001630                           639          
00001630  B43C 0006                640          CMP.B   #%0110,D2
00001634  6700 0012                641          BEQ     DNOT
00001638                           642          
00001638  6000 0BC8                643          BRA     DSERRINS
0000163C                           644  
0000163C  43F9 000024C4            645  DNOP    LEA     NOPM,A1
00001642  4E4F                     646          TRAP    #15
00001644  6000 0BD8                647          BRA     DSEND
00001648                           648          
00001648  E55C                     649  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
0000164A  1A04                     650          MOVE.B  D4,D5           ; move the byte in D4 to D5
0000164C  0205 0003                651          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
00001650                           652  
00001650  BA3C 0000                653          CMP.B   #%00,D5         ; compare with byte size
00001654  6700 0016                654          BEQ     DNOTB
00001658  BA3C 0001                655          CMP.B   #%01,D5         ; compare with word size
0000165C  6700 0022                656          BEQ     DNOTW
00001660  BA3C 0002                657          CMP.B   #%10,D5         ; compare with long size
00001664  6700 002E                658          BEQ     DNOTL
00001668                           659          
00001668  6000 0BB4                660          BRA     DSEND           ; branch to DSEND in case of invalid code
0000166C                           661  
0000166C  43F9 000024E0            662  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
00001672  4E4F                     663          TRAP    #15             ; print NOTM string
00001674  43F9 0000249D            664          LEA     MODEB,A1        ; load effective address of MODEB string
0000167A  4E4F                     665          TRAP    #15             ; print MODEB string
0000167C  6000 002A                666          BRA     DNOTA           ; branch to addressing mode parsing
00001680                           667  
00001680  43F9 000024E0            668  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001686  4E4F                     669          TRAP    #15             ; print NOTM string
00001688  43F9 000024A0            670          LEA     MODEW,A1        ; load effective address of MODEW string
0000168E  4E4F                     671          TRAP    #15             ; print MODEW string
00001690  6000 0016                672          BRA     DNOTA           ; branch to addressing mode parsing
00001694                           673  
00001694  43F9 000024E0            674  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
0000169A  4E4F                     675          TRAP    #15             ; print NOTM string
0000169C  43F9 000024A3            676          LEA     MODEL,A1        ; load effective address of MODEL string
000016A2  4E4F                     677          TRAP    #15             ; print MODEL string
000016A4  6000 0002                678          BRA     DNOTA           ; branch to addressing mode parsing
000016A8                           679  
000016A8  ED5C                     680  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
000016AA  1204                     681          MOVE.B  D4,D1           ; move the byte in D4 to D1
000016AC  0201 003F                682          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
000016B0                           683  
000016B0                           684          ; Now process addressing mode and register based on the value in D1
000016B0                           685  
000016B0  1A01                     686          MOVE.B  D1,D5           ; Move the byte in D1 to D5
000016B2  0205 0007                687          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000016B6  6700 0026                688          BEQ     DREG            ; If it is direct register mode
000016BA  BA3C 0002                689          CMP.B   #%010,D5        ; Compare with An
000016BE  6700 0036                690          BEQ     ADREG
000016C2  BA3C 0003                691          CMP.B   #%011,D5        ; Compare with (An)+
000016C6  6700 0046                692          BEQ     ADREGP
000016CA  BA3C 0004                693          CMP.B   #%100,D5        ; Compare with -(An)
000016CE  6700 005E                694          BEQ     MADREG
000016D2  BA3C 0007                695          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
000016D6  6700 007E                696          BEQ     EXT
000016DA                           697              
000016DA  6000 0B42                698          BRA     DSEND
000016DE                           699  
000016DE  1C01                     700  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
000016E0  0206 0007                701          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
000016E4  DC39 000024A8            702          ADD.B   VALD,D6         ; Convert register number to ASCII
000016EA  43F9 000024A8            703          LEA     VALD,A1         ; Load effective address of Dn
000016F0  4E4F                     704          TRAP    #15             ; Print Dn
000016F2  6000 0B2A                705          BRA     DSEND
000016F6                           706  
000016F6  1C01                     707  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
000016F8  0206 0007                708          ANDI.B  #%111,D6
000016FC  DC39 000024A6            709          ADD.B   VALA,D6
00001702  43F9 000024A6            710          LEA     VALA,A1
00001708  4E4F                     711          TRAP    #15
0000170A  6000 0B12                712          BRA     DSEND
0000170E                           713  
0000170E  1C01                     714  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
00001710  0206 0007                715          ANDI.B  #%111,D6
00001714  DC39 000024A6            716          ADD.B   VALA,D6
0000171A  43F9 000024A6            717          LEA     VALA,A1
00001720  4E4F                     718          TRAP    #15
00001722  43F9 000024B9            719          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001728  4E4F                     720          TRAP    #15             ; Print )+
0000172A  6000 0AF2                721          BRA     DSEND
0000172E                           722  
0000172E  1C01                     723  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
00001730  0206 0007                724          ANDI.B  #%111,D6
00001734  DC39 000024A6            725          ADD.B   VALA,D6
0000173A  43F9 000024B4            726          LEA     OPENDPTR,A1     ; Load effective address of -(
00001740  4E4F                     727          TRAP    #15             ; Print -(
00001742  43F9 000024A6            728          LEA     VALA,A1
00001748  4E4F                     729          TRAP    #15
0000174A  43F9 000024B7            730          LEA     CLOSEPTR,A1     ; Load effective address of )
00001750  4E4F                     731          TRAP    #15             ; Print )
00001752  6000 0ACA                732          BRA     DSEND
00001756                           733  
00001756  1C01                     734  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001758  0206 0001                735          ANDI.B  #%1,D6
0000175C  6700 000E                736          BEQ     EXTW
00001760  43F9 000024AA            737          LEA     VALN,A1         ; Load effective address of #
00001766  4E4F                     738          TRAP    #15             ; Print #
00001768  6000 0AB4                739          BRA     DSEND
0000176C                           740  
0000176C  43F9 000024AC            741  EXTW    LEA     VAL0,A1         ; Load effective address of 0
00001772  4E4F                     742          TRAP    #15             ; Print 0
00001774  6000 0AA8                743          BRA     DSEND
00001778                           744  
00001778                           745          
00001778  E55C                     746  DJSR    ROL.W   #2,D4
0000177A  1404                     747          MOVE.B  D4,D2
0000177C  0202 0007                748          ANDI.B  #%111,D2
00001780  0C02 0002                749          CMPI.B  #%10,D2
00001784  6600 0A6C                750          BNE     DSERR
00001788                           751          
00001788  43F9 00002505            752          LEA     JSRM,A1
0000178E  4E4F                     753          TRAP    #15
00001790                           754          
00001790  43F9 00002460            755          LEA     SM7,A1
00001796  4E4F                     756          TRAP    #15
00001798                           757  
00001798  E75C                     758          ROL.W   #3,D4       * [D2] address mode
0000179A  1404                     759          MOVE.B  D4,D2
0000179C  0202 0007                760          ANDI.B  #%111,D2
000017A0                           761          
000017A0  E75C                     762          ROL.W   #3,D4       * [D1] address register
000017A2  1204                     763          MOVE.B  D4,D1
000017A4  0201 0007                764          ANDI.B  #%111,D1
000017A8                           765          
000017A8  0C02 0002                766          CMPI.B  #%010,D2
000017AC  6700 001E                767          BEQ     DJSR_REG
000017B0                           768          
000017B0  0C02 0007                769          CMPI.B  #%111,D2
000017B4  6600 0A3C                770          BNE     DSERR
000017B8                           771          
000017B8  0C01 0000                772          CMPI.B  #%000,D1
000017BC  6700 0034                773          BEQ     DJSR_CUSW
000017C0                           774          
000017C0  0C01 0001                775          CMPI.B  #%001,D1
000017C4  6700 004A                776          BEQ     DJSR_CUSL
000017C8                           777          
000017C8  6000 0A54                778          BRA     DSEND
000017CC                           779          
000017CC                           780          
000017CC                           781          
000017CC                           782  DJSR_REG        
000017CC  43F9 000024B2            783          LEA     OPENPTR,A1
000017D2  4E4F                     784          TRAP    #15
000017D4                           785          
000017D4  43F9 000024A6            786          LEA     VALA,A1
000017DA  4E4F                     787          TRAP    #15
000017DC                           788          
000017DC  103C 0003                789          MOVE.B  #3,D0
000017E0  4E4F                     790          TRAP    #15
000017E2  103C 000E                791          MOVE.B  #14,D0
000017E6                           792          
000017E6  43F9 000024B7            793          LEA     CLOSEPTR,A1
000017EC  4E4F                     794          TRAP    #15
000017EE                           795          
000017EE  6000 0A2E                796          BRA     DSEND
000017F2                           797  
000017F2                           798          
000017F2                           799  DJSR_CUSW
000017F2  43F9 000024BE            800          LEA     DOLLAR,A1
000017F8  4E4F                     801          TRAP    #15
000017FA  341A                     802          MOVE.W  (A2)+,D2
000017FC  48E7 0400                803          MOVEM.L D5,-(SP)
00001800  1A3C 0030                804          MOVE.B  #48,D5
00001804  4EB8 118A                805          JSR     HEXOUT
00001808  4CDF 0020                806          MOVEM.L (SP)+,D5
0000180C  6000 0A10                807          BRA     DSEND
00001810                           808  
00001810                           809  DJSR_CUSL
00001810  43F9 000024BE            810          LEA     DOLLAR,A1
00001816  4E4F                     811          TRAP    #15
00001818  241A                     812          MOVE.L  (A2)+,D2
0000181A  48E7 0400                813          MOVEM.L D5,-(SP)
0000181E  1A3C 0030                814          MOVE.B  #48,D5
00001822  4EB8 118A                815          JSR     HEXOUT
00001826  4CDF 0020                816          MOVEM.L (SP)+,D5
0000182A  6000 09F2                817          BRA     DSEND
0000182E                           818          
0000182E  43F9 00002509            819  DRTS    LEA     RTSM,A1
00001834  4E4F                     820          TRAP    #15
00001836  6000 09E6                821          BRA     DSEND
0000183A                           822          
0000183A                           823          
0000183A                           824  DLEA    *printing
0000183A  43F9 000024D5            825          LEA     LEAM,A1
00001840  4E4F                     826          TRAP    #15
00001842  43F9 00002460            827          LEA     SM7,A1
00001848  4E4F                     828          TRAP    #15
0000184A                           829          
0000184A                           830          *shifting out 111
0000184A  E75C                     831          ROL.W   #3,D4
0000184C                           832          
0000184C                           833          *getting destination register
0000184C  E75C                     834          ROL.W   #3,D4
0000184E  1404                     835          MOVE.B  D4,D2
00001850  0202 0007                836          ANDI.B  #%111,D2
00001854                           837          
00001854                           838          *getting ea mode
00001854  E75C                     839          ROL.W   #3,D4
00001856  1604                     840          MOVE.B  D4,D3
00001858  0203 0007                841          ANDI.B  #%111,D3
0000185C                           842          
0000185C  B63C 0002                843          CMP.B   #%010,D3
00001860  6700 000E                844          BEQ     DLEAP
00001864                           845          
00001864  B63C 0007                846          CMP.B   #%111,D3
00001868  6700 0006                847          BEQ     DLEAP
0000186C                           848          
0000186C  6000 09A4                849          BRA     DSERREA
00001870                           850          
00001870                           851          *getting ea reg
00001870  E75C                     852  DLEAP   ROL.W   #3,D4
00001872  1C04                     853          MOVE.B  D4,D6
00001874  0206 0007                854          ANDI.B  #%111,D6
00001878                           855          
00001878                           856          *printing
00001878  4EB8 121C                857          JSR     ADDRMODEALL
0000187C                           858          
0000187C  43F9 000024BC            859          LEA     COMMA,A1
00001882  4E4F                     860          TRAP    #15
00001884  43F9 000024A6            861          LEA     VALA,A1
0000188A  4E4F                     862          TRAP    #15
0000188C  103C 0003                863          MOVE.B  #3,D0
00001890  1202                     864          MOVE.B  D2,D1
00001892  4E4F                     865          TRAP    #15
00001894  103C 000E                866          MOVE.B  #14,D0
00001898                           867          
00001898  6000 0984                868          BRA DSEND
0000189C                           869          
0000189C                           870  JSR010
0000189C  B63C 0002                871          CMP.B   #%010,D3
000018A0  6600 002A                872          BNE     JSR111
000018A4  43F9 000024B2            873          LEA     OPENPTR,A1
000018AA  4E4F                     874          TRAP    #15
000018AC  43F9 000024A6            875          LEA     VALA,A1
000018B2  4E4F                     876          TRAP    #15
000018B4  103C 0003                877          MOVE.B  #3,D0
000018B8  1206                     878          MOVE.B  D6,D1
000018BA  4E4F                     879          TRAP    #15
000018BC  103C 000E                880          MOVE.B  #14,D0
000018C0  43F9 000024B7            881          LEA     CLOSEPTR,A1
000018C6  4E4F                     882          TRAP    #15
000018C8  6000 005E                883          BRA     JSRPRINT2
000018CC                           884  JSR111
000018CC  B63C 0007                885          CMP.B   #%111,D3
000018D0  6600 0920                886          BNE     DSERR
000018D4  BC3C 0000                887          CMP.B   #%000,D6
000018D8  6600 0024                888          BNE     JSR111001
000018DC  43F9 000024BE            889          LEA     DOLLAR,A1
000018E2  4E4F                     890          TRAP    #15
000018E4  341A                     891          MOVE.W  (A2)+,D2
000018E6  48E7 0400                892          MOVEM.L D5,-(SP)    
000018EA  1A3C 0030                893          MOVE.B  #48,D5
000018EE  4EB8 118A                894          JSR     HEXOUT
000018F2  4CDF 0020                895          MOVEM.L (SP)+,D5
000018F6  103C 000E                896          MOVE.B  #14,D0
000018FA  6000 002C                897          BRA     JSRPRINT2
000018FE                           898          
000018FE                           899  JSR111001
000018FE  BC3C 0001                900          CMP.B   #%001,D6
00001902  6600 08EE                901          BNE     DSERR
00001906  43F9 000024BE            902          LEA     DOLLAR,A1
0000190C  4E4F                     903          TRAP    #15
0000190E  241A                     904          MOVE.L  (A2)+,D2
00001910  48E7 0400                905          MOVEM.L D5,-(SP)
00001914  1A3C 0030                906          MOVE.B  #48,D5
00001918  4EB8 118A                907          JSR     HEXOUT
0000191C  4CDF 0020                908          MOVEM.L (SP)+,D5
00001920  103C 000E                909          MOVE.B  #14,D0
00001924  6000 0002                910          BRA     JSRPRINT2
00001928                           911          
00001928                           912  JSRPRINT2
00001928  43F9 000024BC            913          LEA     COMMA,A1
0000192E  4E4F                     914          TRAP    #15
00001930  43F9 000024A6            915          LEA     VALA,A1
00001936  4E4F                     916          TRAP    #15
00001938  103C 0003                917          MOVE.B  #3,D0
0000193C  3207                     918          MOVE.W  D7,D1
0000193E  4E4F                     919          TRAP    #15
00001940  103C 000E                920          MOVE.B  #14,D0
00001944                           921          
00001944  6000 08D8                922          BRA     DSEND
00001948                           923          
00001948                           924          
00001948                           925  DMOVEM
00001948                           926  *printing movem
00001948  43F9 000024C8            927          LEA     MOVEM,A1
0000194E  4E4F                     928          TRAP    #15
00001950  43F9 000024B0            929          LEA     VALM,A1
00001956  4E4F                     930          TRAP    #15
00001958                           931          
00001958                           932  *parsing initial bits
00001958  E55C                     933          ROL.W   #2,D4
0000195A  1E04                     934          MOVE.B  D4,D7
0000195C  0207 0001                935          ANDI.B  #%1,D7      *getting dr field
00001960                           936          
00001960  E95C                     937          ROL.W   #4,D4
00001962  1A04                     938          MOVE.B  D4,D5
00001964  0205 0001                939          ANDI.B  #1,D5       *getting size field
00001968                           940          
00001968                           941          *printing size
00001968  BA7C 0000                942          CMP     #0,D5
0000196C  6600 000E                943          BNE     MOVEML
00001970  43F9 000024A0            944          LEA     MODEW,A1
00001976  4E4F                     945          TRAP    #15
00001978  6000 000A                946          BRA     MOVEMEA
0000197C                           947  MOVEML        
0000197C  43F9 000024A3            948          LEA     MODEL,A1
00001982  4E4F                     949          TRAP    #15
00001984                           950          
00001984                           951  MOVEMEA   
00001984  43F9 0000244A            952          LEA     SM3,A1
0000198A  4E4F                     953          TRAP    #15
0000198C                           954          
0000198C  E75C                     955          ROL.W   #3,D4       *mode bits
0000198E  1604                     956          MOVE.B  D4,D3
00001990  0203 0007                957          ANDI.B  #%111,D3
00001994  E75C                     958          ROL.W   #3,D4       *register bits
00001996  1C04                     959          MOVE.B  D4,D6
00001998  0206 0007                960          ANDI.B  #%111,D6
0000199C  341A                     961          MOVE.W  (A2)+,D2
0000199E  BE3C 0001                962          CMP.B   #1,D7
000019A2  6600 0016                963          BNE     MOVEMEB
000019A6                           964          
000019A6  48E7 2000                965          MOVEM.L D2,-(SP)
000019AA  4EB8 121C                966          JSR     ADDRMODEALL
000019AE  4CDF 0004                967          MOVEM.L (SP)+,D2
000019B2                           968          
000019B2  43F9 000024BC            969          LEA     COMMA,A1
000019B8  4E4F                     970          TRAP    #15
000019BA                           971          
000019BA                           972  MOVEMEB 
000019BA                           973          
000019BA  48E7 0100                974          MOVEM.L D7,-(SP)
000019BE                           975          
000019BE  B63C 0004                976          CMP.B   #%100,D3
000019C2  6700 000E                977          BEQ     MOVEMEB1
000019C6                           978          
000019C6  3E02                     979          MOVE.W  D2,D7
000019C8  0247 FF00                980          ANDI.W  #$FF00,D7
000019CC  E04F                     981          LSR.W   #8,D7
000019CE  6000 0008                982          BRA     MOVEMEB2
000019D2                           983          
000019D2                           984  MOVEMEB1 
000019D2  3E02                     985          MOVE.W  D2,D7
000019D4  0247 00FF                986          ANDI.W  #$FF,D7
000019D8                           987          
000019D8                           988  MOVEMEB2
000019D8                           989  
000019D8  4EB9 00001AD0            990          JSR     MOVEMLOOP
000019DE  4CDF 0080                991          MOVEM.L (SP)+,D7
000019E2  103C 0037                992          MOVE.B  #55,D0
000019E6  B83C 0008                993          CMP.B   #8,D4
000019EA  6C00 0040                994          BGE     MOVEM3
000019EE  103C 000E                995          MOVE.B  #14,D0
000019F2                           996          
000019F2  43F9 000024A6            997  MOVEM2  LEA     VALA,A1
000019F8  4E4F                     998          TRAP    #15
000019FA                           999          
000019FA  103C 0003               1000          MOVE.B  #3,D0
000019FE  1204                    1001          MOVE.B  D4,D1
00001A00  4E4F                    1002          TRAP    #15
00001A02  103C 000E               1003          MOVE.B  #14,D0
00001A06                          1004          
00001A06  BA3C 0001               1005          CMP.B   #1,D5
00001A0A  6700 0020               1006          BEQ     MOVEM3
00001A0E                          1007          
00001A0E  43F9 000024C2           1008          LEA     DASH,A1
00001A14  4E4F                    1009          TRAP    #15
00001A16  D205                    1010          ADD.B   D5,D1
00001A18  5301                    1011          SUBQ.B  #1,D1
00001A1A                          1012          
00001A1A  43F9 000024A6           1013          LEA     VALA,A1
00001A20  4E4F                    1014          TRAP    #15
00001A22  103C 0003               1015          MOVE.B  #3,D0
00001A26  4E4F                    1016          TRAP    #15
00001A28  103C 000E               1017          MOVE.B  #14,D0
00001A2C                          1018          
00001A2C  48E7 0100               1019  MOVEM3  MOVEM.L D7,-(SP)
00001A30  3E02                    1020          MOVE.W  D2,D7
00001A32                          1021          
00001A32  B63C 0004               1022          CMP.B   #%100,D3
00001A36  6700 000A               1023          BEQ     MOVEM31
00001A3A                          1024          
00001A3A  0247 00FF               1025          ANDI.W  #$FF,D7
00001A3E  6000 0008               1026          BRA     MOVEM32
00001A42                          1027          
00001A42                          1028  MOVEM31 
00001A42  0247 FF00               1029          ANDI.W  #$FF00,D7
00001A46  E04F                    1030          LSR.W   #8,D7
00001A48                          1031  
00001A48  4EB9 00001AD0           1032  MOVEM32 JSR     MOVEMLOOP
00001A4E  4CDF 0080               1033          MOVEM.L (SP)+,D7
00001A52                          1034          
00001A52  B03C 0037               1035          CMP.B   #55,D0
00001A56  6700 0016               1036          BEQ     MOVEM4
00001A5A                          1037          
00001A5A  B83C 0008               1038          CMP.B   #8,D4
00001A5E  6C00 0054               1039          BGE     MOVEM5
00001A62                          1040          
00001A62  103C 000E               1041          MOVE.B  #14,D0
00001A66  43F9 000024C0           1042          LEA     SLASH,A1
00001A6C  4E4F                    1043          TRAP    #15
00001A6E                          1044  
00001A6E  103C 000E               1045  MOVEM4  MOVE.B  #14,D0
00001A72  B83C 0008               1046          CMP.B   #8,D4
00001A76  6C00 003C               1047          BGE     MOVEM5
00001A7A                          1048          
00001A7A  43F9 000024A8           1049          LEA     VALD,A1
00001A80  4E4F                    1050          TRAP    #15
00001A82                          1051          
00001A82  103C 0003               1052          MOVE.B  #3,D0
00001A86  1204                    1053          MOVE.B  D4,D1
00001A88  4E4F                    1054          TRAP    #15
00001A8A  103C 000E               1055          MOVE.B  #14,D0
00001A8E                          1056          
00001A8E  BA3C 0001               1057          CMP.B   #1,D5
00001A92  6700 0020               1058          BEQ     MOVEM5
00001A96                          1059          
00001A96  43F9 000024C2           1060          LEA     DASH,A1
00001A9C  4E4F                    1061          TRAP    #15
00001A9E  D205                    1062          ADD.B   D5,D1
00001AA0  5301                    1063          SUBQ.B  #1,D1
00001AA2                          1064          
00001AA2  43F9 000024A8           1065          LEA     VALD,A1
00001AA8  4E4F                    1066          TRAP    #15
00001AAA  103C 0003               1067          MOVE.B  #3,D0
00001AAE  4E4F                    1068          TRAP    #15
00001AB0  103C 000E               1069          MOVE.B  #14,D0
00001AB4                          1070          
00001AB4                          1071          
00001AB4                          1072  
00001AB4  103C 000E               1073  MOVEM5  MOVE.B  #14,D0
00001AB8                          1074          
00001AB8  BE3C 0001               1075          CMP.B   #1,D7
00001ABC  6700 0760               1076          BEQ     DSEND
00001AC0                          1077          
00001AC0  43F9 000024BC           1078          LEA     COMMA,A1
00001AC6  4E4F                    1079          TRAP    #15
00001AC8                          1080          
00001AC8  4EB8 121C               1081          JSR     ADDRMODEALL
00001ACC                          1082          
00001ACC  6000 0750               1083          BRA     DSEND
00001AD0                          1084  
00001AD0                          1085  MOVEMLOOP
00001AD0  1A3C 0000               1086          MOVE.B  #0,D5
00001AD4  183C 0000               1087          MOVE.B  #0,D4
00001AD8                          1088          
00001AD8                          1089  MOVEMSTEP
00001AD8  B63C 0004               1090          CMP.B   #%100,D3
00001ADC  6700 0014               1091          BEQ     MOVEMSHIFTL
00001AE0  6000 0018               1092          BRA     MOVEMSHIFTR
00001AE4                          1093  MOVEMSTEP1
00001AE4  0C05 0000               1094          CMPI.B  #0,D5
00001AE8  6E00 0026               1095          BGT     MOVEMLOOPDONE
00001AEC  5204                    1096          ADDQ.B  #1,D4
00001AEE  6000 0012               1097          BRA     MOVEMSTEP2
00001AF2                          1098  
00001AF2                          1099  MOVEMSHIFTL
00001AF2  E30F                    1100          LSL.B   #1,D7
00001AF4  6500 0016               1101          BCS     MOVEMLOOPINC
00001AF8  60EA                    1102          BRA     MOVEMSTEP1
00001AFA                          1103  
00001AFA                          1104  MOVEMSHIFTR
00001AFA  E20F                    1105          LSR.B   #1,D7
00001AFC  6500 000E               1106          BCS     MOVEMLOOPINC
00001B00  60E2                    1107          BRA     MOVEMSTEP1
00001B02                          1108  
00001B02                          1109  MOVEMSTEP2
00001B02  B83C 0008               1110          CMP.B   #8,D4
00001B06  6DD0                    1111          BLT     MOVEMSTEP
00001B08  6000 0006               1112          BRA     MOVEMLOOPDONE
00001B0C                          1113  
00001B0C                          1114  MOVEMLOOPINC
00001B0C  5205                    1115          ADDQ.B  #1,D5
00001B0E  60F2                    1116          BRA     MOVEMSTEP2
00001B10                          1117  
00001B10                          1118  MOVEMLOOPDONE
00001B10  4E75                    1119          RTS
00001B12                          1120          
00001B12                          1121          
00001B12                          1122  MOVEMLOOPSINGLEAR
00001B12                          1123          
00001B12                          1124          
00001B12  6000 070A               1125          BRA     DSEND
00001B16                          1126  
00001B16                          1127  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B16                          1128  
00001B16  4E71                    1129  DS0101  NOP
00001B18                          1130          
00001B18  4E71                    1131  DADDQ   NOP
00001B1A  43F9 000024CD           1132          LEA     ADDM,A1
00001B20  4E4F                    1133          TRAP    #15
00001B22  43F9 000024AE           1134          LEA     VALQ,A1
00001B28  4E4F                    1135          TRAP    #15
00001B2A                          1136          
00001B2A                          1137          *parsing data to d1
00001B2A  E75C                    1138          ROL.W   #3,D4
00001B2C  1204                    1139          MOVE.B  D4,D1
00001B2E  C23C 0007               1140          AND.B   #%111,D1
00001B32                          1141          
00001B32                          1142          *ensuring next bit is 0
00001B32  E35C                    1143          ROL.W   #1,D4
00001B34  1A04                    1144          MOVE.B  D4,D5
00001B36  CA3C 0001               1145          AND.B   #%1,D5
00001B3A  BA7C 0000               1146          CMP     #0,D5
00001B3E  6600 06B2               1147          BNE     DSERR
00001B42                          1148          
00001B42                          1149          *parsing and printing size
00001B42  E55C                    1150          ROL.W   #2,D4
00001B44  1A04                    1151          MOVE.B  D4,D5
00001B46  CA3C 0003               1152          AND.B   #%11,D5
00001B4A  4EB8 11D2               1153          JSR     SIZE
00001B4E  43F9 0000244E           1154          LEA     SM4,A1
00001B54  4E4F                    1155          TRAP    #15
00001B56                          1156          
00001B56                          1157          *parsing effective address information
00001B56                          1158          *mode:
00001B56  E75C                    1159          ROL.W   #3,D4
00001B58  1604                    1160          MOVE.B  D4,D3
00001B5A  C63C 0007               1161          AND.B   #%111,D3
00001B5E                          1162          
00001B5E                          1163          *register:
00001B5E  E71C                    1164          ROL.B   #3,D4
00001B60  1C04                    1165          MOVE.B  D4,D6
00001B62  CC3C 0007               1166          AND.B   #%111,D6
00001B66                          1167          
00001B66                          1168          *printing data
00001B66  43F9 000024AA           1169          LEA     VALN,A1
00001B6C  4E4F                    1170          TRAP    #15
00001B6E  103C 0003               1171          MOVE.B  #3,D0
00001B72  4E4F                    1172          TRAP    #15
00001B74  103C 000E               1173          MOVE.B  #14,D0
00001B78  43F9 000024BC           1174          LEA     COMMA,A1
00001B7E  4E4F                    1175          TRAP    #15
00001B80                          1176          
00001B80  B67C 0004               1177          CMP     #%100,D3
00001B84  6700 066C               1178          BEQ     DSERR
00001B88  4EB8 121C               1179          JSR     ADDRMODEALL
00001B8C                          1180          
00001B8C  6000 0690               1181          BRA     DSEND
00001B90                          1182          
00001B90                          1183  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B90                          1184  
00001B90                          1185  DS0110  
00001B90  E95C                    1186          ROL.W   #4,D4   *Get next 4 bits
00001B92  1404                    1187          MOVE.B  D4,D2   *Copy to D2
00001B94  0202 000F               1188          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001B98                          1189          
00001B98  B43C 0000               1190          CMP.B   #%0000,D2   *BRA
00001B9C  6700 001E               1191          BEQ     DBRA
00001BA0                          1192          
00001BA0  B43C 000E               1193          CMP.B   #%1110,D2   *BGT   
00001BA4  6700 00A2               1194          BEQ     DBGT
00001BA8                          1195          
00001BA8  B43C 000F               1196          CMP.B   #%1111,D2   *BLE   
00001BAC  6700 00D6               1197          BEQ     DBLE
00001BB0                          1198          
00001BB0  B43C 0007               1199          CMP.B   #%0111,D2   *BEQ   
00001BB4  6700 010E               1200          BEQ     DBEQ
00001BB8                          1201          
00001BB8  6000 0648               1202          BRA     DSERRINS
00001BBC                          1203          
00001BBC  43F9 0000250D           1204  DBRA    LEA     BRAM,A1
00001BC2  4E4F                    1205          TRAP    #15
00001BC4                          1206          
00001BC4  43F9 00002460           1207          LEA     SM7,A1
00001BCA  4E4F                    1208          TRAP    #15
00001BCC                          1209  
00001BCC  E15C                    1210          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BCE  1204                    1211          MOVE.B  D4,D1
00001BD0  0281 00001100           1212          ANDI.L  #$1100,D1
00001BD6                          1213          
00001BD6  0C01 0000               1214          CMPI.B  #%00000000,D1
00001BDA  6700 0028               1215          BEQ     DBRA_16BIT      * Word
00001BDE                          1216          
00001BDE  0C01 00FF               1217          CMPI.B  #%11111111,D1
00001BE2  6700 0042               1218          BEQ     DBRA_32BIT      * Long
00001BE6                          1219          
00001BE6                          1220          * 8 Bit Displacement
00001BE6  43F9 000024BE           1221          LEA     DOLLAR,A1
00001BEC  4E4F                    1222          TRAP    #15
00001BEE                          1223          
00001BEE  341A                    1224          MOVE.W  (A2)+,D2
00001BF0  D441                    1225          ADD.W   D1,D2
00001BF2  5842                    1226          ADD.W   #4,D2   *unsure   
00001BF4  1A3C 0030               1227          MOVE.B  #48,D5
00001BF8  4EB8 118A               1228          JSR     HEXOUT
00001BFC  6000 0620               1229          BRA     DSEND
00001C00                          1230  
00001C00                          1231          *Displacement is put in D1      
00001C00                          1232          
00001C00                          1233          
00001C00  6000 061C               1234          BRA     DSEND
00001C04                          1235          
00001C04                          1236  DBRA_16BIT
00001C04  43F9 000024BE           1237          LEA     DOLLAR,A1
00001C0A  4E4F                    1238          TRAP    #15
00001C0C  341A                    1239          MOVE.W  (A2)+,D2
00001C0E  D44A                    1240          ADD.W   A2,D2
00001C10  5542                    1241          SUB.W   #2,D2   *unsure
00001C12  48E7 0400               1242          MOVEM.L D5,-(SP)    
00001C16  1A3C 0030               1243          MOVE.B  #48,D5
00001C1A  4EB8 118A               1244          JSR     HEXOUT
00001C1E  4CDF 0020               1245          MOVEM.L (SP)+,D5
00001C22  6000 05FA               1246          BRA     DSEND
00001C26                          1247  
00001C26                          1248  DBRA_32BIT
00001C26  43F9 000024BE           1249          LEA     DOLLAR,A1
00001C2C  4E4F                    1250          TRAP    #15
00001C2E  241A                    1251          MOVE.L  (A2)+,D2
00001C30  D48A                    1252          ADD.L   A2,D2
00001C32  5582                    1253          SUB.L   #2,D2   *unsure
00001C34  48E7 0400               1254          MOVEM.L D5,-(SP)
00001C38  1A3C 0030               1255          MOVE.B  #48,D5
00001C3C  4EB8 118A               1256          JSR     HEXOUT
00001C40  4CDF 0020               1257          MOVEM.L (SP)+,D5
00001C44  6000 05D8               1258          BRA     DSEND
00001C48                          1259          
00001C48                          1260          
00001C48                          1261          
00001C48  43F9 000024F9           1262  DBGT    LEA     BGTM,A1
00001C4E  4E4F                    1263          TRAP    #15
00001C50                          1264          
00001C50  43F9 00002460           1265          LEA     SM7,A1
00001C56  4E4F                    1266          TRAP    #15
00001C58                          1267          
00001C58  E15C                    1268          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C5A  1204                    1269          MOVE.B  D4,D1
00001C5C  0241 00FF               1270          ANDI.W  #%0000000011111111,D1
00001C60                          1271          
00001C60  0C01 0000               1272          CMPI.B  #%00000000,D1
00001C64  679E                    1273          BEQ     DBRA_16BIT      * Word
00001C66                          1274          
00001C66  0C01 00FF               1275          CMPI.B  #%11111111,D1
00001C6A  67BA                    1276          BEQ     DBRA_32BIT      * Long
00001C6C                          1277          
00001C6C  43F9 000024BE           1278          LEA     DOLLAR,A1
00001C72  4E4F                    1279          TRAP    #15
00001C74                          1280      
00001C74  340A                    1281          MOVE.W  A2,D2
00001C76  D441                    1282          ADD.W   D1,D2
00001C78                          1283    
00001C78  1A3C 0030               1284          MOVE.B  #48,D5
00001C7C  4EB8 118A               1285          JSR     HEXOUT
00001C80  6000 059C               1286          BRA     DSEND
00001C84                          1287  
00001C84  43F9 000024FD           1288  DBLE    LEA     BLEM,A1
00001C8A  4E4F                    1289          TRAP    #15
00001C8C                          1290          
00001C8C  43F9 00002460           1291          LEA     SM7,A1
00001C92  4E4F                    1292          TRAP    #15
00001C94                          1293          
00001C94  E15C                    1294          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001C96  1204                    1295          MOVE.B  D4,D1
00001C98  0241 00FF               1296          ANDI.W  #%0000000011111111,D1
00001C9C                          1297          
00001C9C  0C01 0000               1298          CMPI.B  #%00000000,D1
00001CA0  6700 FF62               1299          BEQ     DBRA_16BIT      * Word
00001CA4                          1300          
00001CA4  0C01 00FF               1301          CMPI.B  #%11111111,D1
00001CA8  6700 FF7C               1302          BEQ     DBRA_32BIT      * Long
00001CAC                          1303          
00001CAC  43F9 000024BE           1304          LEA     DOLLAR,A1
00001CB2  4E4F                    1305          TRAP    #15
00001CB4                          1306          
00001CB4  340A                    1307          MOVE.W  A2,D2
00001CB6  D441                    1308          ADD.W   D1,D2
00001CB8                          1309   
00001CB8  1A3C 0030               1310          MOVE.B  #48,D5
00001CBC  4EB8 118A               1311          JSR     HEXOUT
00001CC0                          1312          
00001CC0  6000 055C               1313          BRA     DSEND
00001CC4                          1314  
00001CC4  43F9 00002501           1315  DBEQ    LEA     BEQM,A1
00001CCA  4E4F                    1316          TRAP    #15
00001CCC                          1317          
00001CCC  43F9 00002460           1318          LEA     SM7,A1
00001CD2  4E4F                    1319          TRAP    #15
00001CD4                          1320          
00001CD4  E15C                    1321          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001CD6  1204                    1322          MOVE.B  D4,D1
00001CD8  0241 00FF               1323          ANDI.W  #%0000000011111111,D1
00001CDC                          1324          
00001CDC  0C01 0000               1325          CMPI.B  #%00000000,D1
00001CE0  6700 FF22               1326          BEQ     DBRA_16BIT      * Word
00001CE4                          1327          
00001CE4  0C01 00FF               1328          CMPI.B  #%11111111,D1
00001CE8  6700 FF3C               1329          BEQ     DBRA_32BIT      * Long
00001CEC                          1330          
00001CEC  43F9 000024BE           1331          LEA     DOLLAR,A1
00001CF2  4E4F                    1332          TRAP    #15
00001CF4                          1333  
00001CF4  340A                    1334          MOVE.W  A2,D2
00001CF6  D441                    1335          ADD.W   D1,D2
00001CF8                          1336   
00001CF8  1A3C 0030               1337          MOVE.B  #48,D5
00001CFC  4EB8 118A               1338          JSR     HEXOUT
00001D00                          1339          
00001D00  6000 051C               1340          BRA     DSEND
00001D04                          1341  
00001D04                          1342  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D04                          1343  
00001D04  4E71                    1344  DS0111  NOP
00001D06                          1345          
00001D06  4E71                    1346  DMOVEQ  NOP
00001D08  43F9 000024C8           1347          LEA     MOVEM,A1
00001D0E  4E4F                    1348          TRAP    #15
00001D10  43F9 000024AE           1349          LEA     VALQ,A1
00001D16  4E4F                    1350          TRAP    #15
00001D18  43F9 00002453           1351          LEA     SM5,A1
00001D1E  4E4F                    1352          TRAP    #15
00001D20                          1353          
00001D20                          1354          *getting register number
00001D20  E75C                    1355          ROL.W   #3,D4
00001D22  1A04                    1356          MOVE.B  D4,D5
00001D24  CA3C 0007               1357          AND.B   #%111,D5
00001D28                          1358          
00001D28                          1359          *throwing error if next digit not 0
00001D28  E35C                    1360          ROL.W   #1,D4
00001D2A  1C04                    1361          MOVE.B  D4,D6
00001D2C  CC3C 0001               1362          AND.B   #%1,D6
00001D30  BC3C 0000               1363          CMP.B   #0,D6
00001D34  6600 04BC               1364          BNE     DSERR
00001D38                          1365          
00001D38                          1366          *getting data and printing information
00001D38  E15C                    1367          ROL.W   #8,D4
00001D3A  1204                    1368          MOVE.B  D4,D1
00001D3C  C23C 00FF               1369          AND.B   #%11111111,D1
00001D40  43F9 000024AA           1370          LEA     VALN,A1
00001D46  4E4F                    1371          TRAP    #15
00001D48  103C 0003               1372          MOVE.B  #3,D0
00001D4C  4E4F                    1373          TRAP    #15
00001D4E  103C 000E               1374          MOVE.B  #14,D0
00001D52  43F9 000024BC           1375          LEA     COMMA,A1
00001D58  4E4F                    1376          TRAP    #15
00001D5A  43F9 000024A8           1377          LEA     VALD,A1
00001D60  4E4F                    1378          TRAP    #15
00001D62  103C 0003               1379          MOVE.B  #3,D0
00001D66  3205                    1380          MOVE.W  D5,D1
00001D68  4E4F                    1381          TRAP    #15
00001D6A                          1382          
00001D6A  6000 04B2               1383          BRA     DSEND
00001D6E                          1384          
00001D6E                          1385  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D6E                          1386  
00001D6E  4E71                    1387  DS1000  NOP
00001D70                          1388          
00001D70  E75C                    1389  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001D72  1A04                    1390          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D74  0205 0007               1391          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001D78  1C05                    1392          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001D7A                          1393  
00001D7A  E75C                    1394          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001D7C  1A04                    1395          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001D7E  0205 0007               1396          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001D82  1E05                    1397          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001D84  BA3C 0000               1398          CMP.B   #%000,D5        ; Compare with byte size
00001D88  6700 0016               1399          BEQ     DORB
00001D8C  BA3C 0001               1400          CMP.B   #%001,D5        ; Compare with word size
00001D90  6700 0022               1401          BEQ     DORW
00001D94  BA3C 0002               1402          CMP.B   #%010,D5        ; Compare with long size
00001D98  6700 002E               1403          BEQ     DORL
00001D9C                          1404  
00001D9C  6000 0480               1405          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001DA0                          1406  
00001DA0  43F9 000024DD           1407  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001DA6  4E4F                    1408          TRAP    #15             ; Print ORM string
00001DA8  43F9 0000249D           1409          LEA     MODEB,A1        ; Load effective address of MODEB string
00001DAE  4E4F                    1410          TRAP    #15             ; Print MODEB string
00001DB0  6000 002A               1411          BRA     DORA            ; Branch to addressing mode parsing
00001DB4                          1412  
00001DB4  43F9 000024DD           1413  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001DBA  4E4F                    1414          TRAP    #15             ; Print ORM string
00001DBC  43F9 000024A0           1415          LEA     MODEW,A1        ; Load effective address of MODEW string
00001DC2  4E4F                    1416          TRAP    #15             ; Print MODEW string
00001DC4  6000 0016               1417          BRA     DORA            ; Branch to addressing mode parsing
00001DC8                          1418  
00001DC8  43F9 000024DD           1419  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001DCE  4E4F                    1420          TRAP    #15             ; Print ORM string
00001DD0  43F9 000024A3           1421          LEA     MODEL,A1        ; Load effective address of MODEL string
00001DD6  4E4F                    1422          TRAP    #15             ; Print MODEL string
00001DD8  6000 0002               1423          BRA     DORA            ; Branch to addressing mode parsing
00001DDC                          1424  
00001DDC  43F9 00002459           1425  DORA    LEA     SM6,A1
00001DE2  4E4F                    1426          TRAP    #15
00001DE4  ED5C                    1427          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001DE6  1A04                    1428          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001DE8  0205 0038               1429          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001DEC  E61D                    1430          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001DEE  1605                    1431          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001DF0  0204 0007               1432          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001DF4  1C04                    1433          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001DF6                          1434  
00001DF6  BE3C 0004               1435          CMP.B   #%100,D7        ; Compare opmode with '100'
00001DFA  6D00 0006               1436          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001DFE  6000 002A               1437          BRA     DORAD           ; Else, branch to DORAD
00001E02                          1438  
00001E02  4EB8 121C               1439  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E06  103C 000E               1440          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001E0A  43F9 000024BC           1441          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E10  4E4F                    1442          TRAP    #15             ; Print comma
00001E12  43F9 000024A8           1443          LEA     VALD,A1
00001E18  4E4F                    1444          TRAP    #15
00001E1A  1206                    1445          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001E1C  103C 0003               1446          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E20  4E4F                    1447          TRAP    #15             ; Print register number
00001E22  103C 000E               1448          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E26  6000 03F6               1449          BRA     DSEND           ; Branch to DSEND
00001E2A                          1450  
00001E2A  1206                    1451  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001E2C  103C 0003               1452          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E30  4E4F                    1453          TRAP    #15             ; Print register number
00001E32  103C 000E               1454          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E36  43F9 000024BC           1455          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E3C  4E4F                    1456          TRAP    #15             ; Print comma
00001E3E  4EB8 121C               1457          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E42  103C 000E               1458          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E46  6000 03D6               1459          BRA     DSEND           ; Branch to DSEND                 
00001E4A                          1460  
00001E4A                          1461  
00001E4A                          1462  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001E4A                          1463  
00001E4A  4E71                    1464  DS1001  NOP
00001E4C  4E71                    1465  DSUB    NOP
00001E4E                          1466  *print sub
00001E4E  43F9 000024D1           1467          LEA     SUBM,A1
00001E54  4E4F                    1468          TRAP    #15
00001E56                          1469  
00001E56                          1470  *parse dn reg: 3 bits
00001E56                          1471  *number of the data register involved
00001E56                          1472  *nums 0-7, paired with below
00001E56  E75C                    1473          ROL.W   #3,D4       *dn reg num in d1
00001E58  1E04                    1474          MOVE.B  D4,D7
00001E5A  0207 0007               1475          ANDI.B  #%111,D7
00001E5E                          1476          
00001E5E  3C47                    1477          MOVE.W  D7,A6       *temporary for storage
00001E60                          1478  
00001E60                          1479  *parse opmode: 3 bits
00001E60                          1480  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001E60                          1481  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001E60                          1482  *invalid: 111, 011
00001E60                          1483  *parse first digit separately
00001E60  E35C                    1484          ROL.W   #1,D4       *addressing mode in d2
00001E62  1E04                    1485          MOVE.B  D4,D7
00001E64  0207 0001               1486          ANDI.B  #%1,D7
00001E68                          1487          
00001E68                          1488  *parsing next two digits of size
00001E68  E55C                    1489          ROL.W   #2,D4       *size in d5
00001E6A  1A04                    1490          MOVE.B  D4,D5
00001E6C  0205 0003               1491          ANDI.B  #%11,D5
00001E70  4EB8 11D2               1492          JSR     SIZE
00001E74  43F9 00002453           1493          LEA     SM5,A1
00001E7A  4E4F                    1494          TRAP    #15
00001E7C                          1495          
00001E7C                          1496  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001E7C  BE3C 0000               1497          CMP.B   #%0,D7       *if 1, then register info printed last
00001E80  6700 0026               1498          BEQ     DSUBEA      *branch to ea before register
00001E84                          1499          
00001E84                          1500  *printing register information
00001E84                          1501  DSUBPRNTREG
00001E84  43F9 000024A8           1502          LEA     VALD,A1
00001E8A  4E4F                    1503          TRAP    #15
00001E8C  320E                    1504          MOVE.W  A6,D1       *retrieving a6 register data
00001E8E  103C 0003               1505          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001E92  4E4F                    1506          TRAP    #15         *printing register number
00001E94  103C 000E               1507          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001E98  BE3C 0000               1508          CMP.B   #%0,D7      *if info finished printing
00001E9C  6700 0380               1509          BEQ     DSEND      *branch to end
00001EA0  43F9 000024BC           1510          LEA     COMMA,A1
00001EA6  4E4F                    1511          TRAP    #15
00001EA8                          1512  
00001EA8                          1513          
00001EA8                          1514  * parse ea mode: 3 bits
00001EA8                          1515  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001EA8                          1516  *address reg direct not allowed for .B operations
00001EA8                          1517  *no invalid
00001EA8                          1518  DSUBEA
00001EA8  E75C                    1519          ROL.W   #3,D4       *ea mode
00001EAA  1604                    1520          MOVE.B  D4,D3
00001EAC  0203 0007               1521          ANDI.B  #%111,D3
00001EB0                          1522  
00001EB0                          1523  *parse ea reg: 3 bits
00001EB0                          1524  *no invalid: paired with opmode below (nums 0-7)
00001EB0                          1525  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001EB0  E75C                    1526          ROL.W   #3,D4       *ea mode
00001EB2  1C04                    1527          MOVE.B  D4,D6
00001EB4  0206 0007               1528          ANDI.B  #%111,D6
00001EB8                          1529          
00001EB8  2803                    1530          MOVE.L  D3,D4   *temporarily using D4 
00001EBA                          1531          
00001EBA                          1532  *comparisons
00001EBA  B67C 0004               1533          CMP     #%100,D3
00001EBE  6700 0332               1534          BEQ     DSERR
00001EC2  4EB8 121C               1535          JSR     ADDRMODEALL
00001EC6  BE3C 0001               1536          CMP.B   #%1,D7      *if info printed
00001ECA  6700 0352               1537          BEQ     DSEND       *end
00001ECE  43F9 000024BC           1538          LEA     COMMA,A1
00001ED4  4E4F                    1539          TRAP    #15
00001ED6  60AC                    1540          BRA     DSUBPRNTREG *check d6 for size of data
00001ED8                          1541  *then take data from d4 and print (?)
00001ED8                          1542  
00001ED8  6000 0344               1543          BRA     DSEND
00001EDC                          1544  
00001EDC                          1545  
00001EDC                          1546  
00001EDC  4E71                    1547  DS1010  NOP
00001EDE  6000 0322               1548          BRA     DSERRINS
00001EE2                          1549  
00001EE2                          1550          
00001EE2                          1551  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EE2                          1552  
00001EE2  4E71                    1553  DS1011  NOP
00001EE4  6000 031C               1554          BRA     DSERRINS
00001EE8                          1555          
00001EE8                          1556  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EE8                          1557  
00001EE8  4E71                    1558  DS1100  NOP
00001EEA  6000 0316               1559          BRA     DSERRINS
00001EEE                          1560          
00001EEE                          1561  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EEE                          1562  
00001EEE  4E71                    1563  DS1101  NOP
00001EF0                          1564  
00001EF0  4E71                    1565  DADD    NOP
00001EF2  43F9 000024CD           1566          LEA     ADDM,A1
00001EF8  4E4F                    1567          TRAP    #15
00001EFA                          1568          
00001EFA                          1569          *parse dn reg: 3 bits
00001EFA                          1570  *number of the data register involved
00001EFA                          1571  *nums 0-7, paired with below
00001EFA  E75C                    1572          ROL.W   #3,D4       *dn reg num in d7
00001EFC  1E04                    1573          MOVE.B  D4,D7
00001EFE  0207 0007               1574          ANDI.B  #%111,D7
00001F02                          1575          
00001F02  3C47                    1576          MOVE.W  D7,A6
00001F04                          1577  
00001F04                          1578  *parse opmode: 3 bits
00001F04                          1579  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001F04                          1580  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001F04                          1581  *invalid: 111, 011
00001F04                          1582  *parse first digit separately
00001F04  E35C                    1583          ROL.W   #1,D4       *addressing mode in d2
00001F06  1E04                    1584          MOVE.B  D4,D7
00001F08  0207 0001               1585          ANDI.B  #%1,D7
00001F0C                          1586          
00001F0C                          1587  *parsing next two digits of size
00001F0C  E55C                    1588          ROL.W   #2,D4       *size in d5
00001F0E  1A04                    1589          MOVE.B  D4,D5
00001F10  0205 0003               1590          ANDI.B  #%11,D5
00001F14  BA3C 0003               1591          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001F18  6700 007C               1592          BEQ     DADDA
00001F1C  4EB8 11D2               1593          JSR     SIZE
00001F20  43F9 00002453           1594          LEA     SM5,A1
00001F26  4E4F                    1595          TRAP    #15
00001F28                          1596          
00001F28                          1597  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001F28  BE3C 0000               1598          CMP.B   #%0,D7       *if 0, then register info printed last
00001F2C  6700 002E               1599          BEQ     DADDEA      *branch to ea before register
00001F30                          1600          
00001F30                          1601  *printing register information
00001F30                          1602  DADDPRNTREG
00001F30  BA3C 0003               1603          CMP.B   #%11,D5
00001F34  6700 0058               1604          BEQ     PRINTA
00001F38  43F9 000024A8           1605          LEA     VALD,A1
00001F3E                          1606  ADDCONT
00001F3E  4E4F                    1607          TRAP    #15
00001F40  320E                    1608          MOVE.W  A6,D1       *moving reg num to d1 to print
00001F42  103C 0003               1609          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001F46  4E4F                    1610          TRAP    #15         *printing register number
00001F48  103C 000E               1611          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001F4C  BE3C 0000               1612          CMP.B   #%0,D7      *if info finished printing
00001F50  6700 02CC               1613          BEQ     DSEND      *branch to end
00001F54  43F9 000024BC           1614          LEA     COMMA,A1
00001F5A  4E4F                    1615          TRAP    #15
00001F5C                          1616  
00001F5C                          1617          
00001F5C                          1618  * parse ea mode: 3 bits
00001F5C                          1619  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F5C                          1620  *address reg direct not allowed for .B operations
00001F5C                          1621  *no invalid
00001F5C                          1622  DADDEA
00001F5C  E75C                    1623          ROL.W   #3,D4       *ea mode
00001F5E  1604                    1624          MOVE.B  D4,D3
00001F60  0203 0007               1625          ANDI.B  #%111,D3
00001F64                          1626  
00001F64                          1627  *parse ea reg: 3 bits
00001F64                          1628  *no invalid: paired with opmode below (nums 0-7)
00001F64                          1629  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F64  E75C                    1630          ROL.W   #3,D4       *ea mode
00001F66  1C04                    1631          MOVE.B  D4,D6
00001F68  0206 0007               1632          ANDI.B  #%111,D6
00001F6C                          1633          
00001F6C                          1634  *comparisons
00001F6C  B67C 0004               1635          CMP     #%100,D3
00001F70  6700 005A               1636          BEQ     ADDDATACHECK
00001F74                          1637  DATACHECKCONT
00001F74  4EB8 121C               1638          JSR     ADDRMODEALL
00001F78  BE3C 0001               1639          CMP.B   #%1,D7      *if info printed
00001F7C  6700 02A0               1640          BEQ     DSEND       *end
00001F80  43F9 000024BC           1641          LEA     COMMA,A1
00001F86  4E4F                    1642          TRAP    #15
00001F88  60A6                    1643          BRA     DADDPRNTREG 
00001F8A                          1644  
00001F8A  6000 0292               1645          BRA     DSEND
00001F8E                          1646          
00001F8E  43F9 000024A6           1647  PRINTA  LEA     VALA,A1
00001F94  60A8                    1648          BRA     ADDCONT
00001F96                          1649  
00001F96                          1650          
00001F96  4E71                    1651  DADDA   NOP
00001F98  43F9 000024A6           1652          LEA     VALA,A1
00001F9E  4E4F                    1653          TRAP    #15
00001FA0  BE3C 0000               1654          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001FA4  6600 000C               1655          BNE     ADDAL
00001FA8  43F9 000024A0           1656          LEA     MODEW,A1
00001FAE  6000 000C               1657          BRA     ADDSIZEEND
00001FB2  43F9 000024A3           1658  ADDAL   LEA     MODEL,A1
00001FB8  6000 0002               1659          BRA     ADDSIZEEND
00001FBC                          1660  ADDSIZEEND
00001FBC  4E4F                    1661          TRAP    #15
00001FBE  43F9 0000244E           1662          LEA     SM4,A1
00001FC4  4E4F                    1663          TRAP    #15
00001FC6  1E3C 0000               1664          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001FCA  6090                    1665          BRA     DADDEA
00001FCC                          1666  ADDDATACHECK
00001FCC  BA3C 0003               1667          CMP.B   #%11,D5
00001FD0  6700 0220               1668          BEQ     DSERR
00001FD4  609E                    1669          BRA     DATACHECKCONT
00001FD6                          1670          
00001FD6                          1671          
00001FD6                          1672  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001FD6                          1673  
00001FD6                          1674  DS1110
00001FD6  E75C                    1675          ROL.W   #3,D4           * [D2] Reading count
00001FD8  1404                    1676          MOVE.B  D4,D2
00001FDA  0202 0007               1677          ANDI.B  #%111,D2
00001FDE                          1678          
00001FDE  E35C                    1679          ROL.W   #1,D4           * [D3] Reading direction
00001FE0  1604                    1680          MOVE.B  D4,D3
00001FE2  0203 0001               1681          ANDI.B  #%1,D3
00001FE6                          1682          
00001FE6  E55C                    1683          ROL.W   #2,D4           * [D5] Reading size
00001FE8  1A04                    1684          MOVE.B  D4,D5
00001FEA  0205 0003               1685          ANDI.B  #%11,D5
00001FEE                          1686          
00001FEE  BA3C 0003               1687          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001FF2  6700 00F0               1688          BEQ     DS1110MEM
00001FF6                          1689          
00001FF6  E35C                    1690          ROL.W   #1,D4           * [D6] Reading count mode
00001FF8  1C04                    1691          MOVE.B  D4,D6
00001FFA  0206 0001               1692          ANDI.B  #%1,D6
00001FFE                          1693          
00001FFE  E55C                    1694          ROL.W   #2,D4           * [D7] reading type of shift
00002000  1E04                    1695          MOVE.B  D4,D7
00002002  0207 0003               1696          ANDI.B  #%11,D7
00002006                          1697          
00002006  E75C                    1698          ROL.W   #3,D4           * [D1] reading register
00002008  1204                    1699          MOVE.B  D4,D1
0000200A  0201 0007               1700          ANDI.B  #%111,D1
0000200E                          1701          
0000200E  BE3C 0001               1702          CMP.B   #%01,D7   *Determine shift type
00002012  6700 008E               1703          BEQ     DLS
00002016  BE3C 0000               1704          CMP.B   #%00,D7
0000201A  6700 0092               1705          BEQ     DAS
0000201E  BE3C 0003               1706          CMP.B   #%11,D7
00002022  6700 0096               1707          BEQ     DRO
00002026                          1708          
00002026  6000 01F6               1709          BRA     DSEND               *Fallback in case of invalid code
0000202A                          1710          
0000202A  48E7 FFFF               1711  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
0000202E  4EB9 000020C6           1712          JSR     DS1110SIDE
00002034  4CDF FFFF               1713          MOVEM.L (SP)+,A0-A7/D0-D7
00002038                          1714          
00002038  48E7 FFFF               1715          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
0000203C  4EB8 11D2               1716          JSR     SIZE
00002040  4CDF FFFF               1717          MOVEM.L (SP)+,A0-A7/D0-D7
00002044                          1718          
00002044  103C 000E               1719          MOVE.B  #14,D0
00002048  43F9 00002453           1720          LEA     SM5,A1
0000204E  4E4F                    1721          TRAP    #15
00002050                          1722          
00002050  BA3C 0003               1723          CMP.B   #%11,D5
00002054  6700 00B4               1724          BEQ     DS1110MEMA
00002058                          1725          
00002058  BC3C 0001               1726          CMP.B   #%1,D6
0000205C  6700 003A               1727          BEQ     DS1110_REG_D
00002060  6000 002C               1728          BRA     DS1110_REG_I
00002064                          1729          
00002064  1C01                    1730  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00002066                          1731          
00002066  103C 0003               1732          MOVE.B  #3,D0
0000206A  1202                    1733          MOVE.B  D2,D1
0000206C  4E4F                    1734          TRAP    #15
0000206E                          1735          
0000206E  103C 000E               1736          MOVE.B  #14,D0
00002072  43F9 000024BC           1737          LEA     COMMA,A1
00002078  4E4F                    1738          TRAP    #15
0000207A                          1739          
0000207A  43F9 000024A8           1740          LEA     VALD,A1
00002080  4E4F                    1741          TRAP    #15
00002082                          1742          
00002082  103C 0003               1743          MOVE.B  #3,D0
00002086  1206                    1744          MOVE.B  D6,D1
00002088  4E4F                    1745          TRAP    #15
0000208A                          1746          
0000208A  6000 0192               1747          BRA     DSEND
0000208E                          1748          
0000208E                          1749  DS1110_REG_I
0000208E  43F9 000024AA           1750          LEA     VALN,A1
00002094  4E4F                    1751          TRAP    #15
00002096  60CC                    1752          BRA     DS1110B
00002098                          1753  
00002098                          1754  DS1110_REG_D
00002098  43F9 000024A8           1755          LEA     VALD,A1
0000209E  4E4F                    1756          TRAP    #15
000020A0  60C2                    1757          BRA     DS1110B       
000020A2                          1758          
000020A2  43F9 000024E4           1759  DLS     LEA     LSM,A1
000020A8  4E4F                    1760          TRAP    #15
000020AA  6000 FF7E               1761          BRA     DS1110A
000020AE                          1762          
000020AE  43F9 000024EB           1763  DAS     LEA     ASM,A1
000020B4  4E4F                    1764          TRAP    #15
000020B6  6000 FF72               1765          BRA     DS1110A
000020BA                          1766          
000020BA  43F9 000024F2           1767  DRO     LEA     ROM,A1
000020C0  4E4F                    1768          TRAP    #15
000020C2  6000 FF66               1769          BRA     DS1110A
000020C6                          1770          
000020C6                          1771  DS1110SIDE
000020C6  103C 0006               1772          MOVE.B  #6,D0
000020CA  B63C 0001               1773          CMP.B   #1,D3
000020CE  6700 000C               1774          BEQ     DS1110LSIDE
000020D2  123C 0052               1775          MOVE.B  #82,D1
000020D6  4E4F                    1776          TRAP    #15
000020D8  6000 0008               1777          BRA     DS1110SIDEEND
000020DC                          1778  
000020DC                          1779  DS1110LSIDE
000020DC  123C 004C               1780          MOVE.B  #76,D1
000020E0  4E4F                    1781          TRAP    #15
000020E2                          1782          
000020E2                          1783  DS1110SIDEEND
000020E2  4E75                    1784          RTS 
000020E4                          1785  
000020E4                          1786  DS1110MEM
000020E4                          1787                                  * Shift type is instead stored in D2
000020E4                          1788          
000020E4  E75C                    1789          ROL.W   #3,D4           * [D6] Reading address mode
000020E6  1C04                    1790          MOVE.B  D4,D6
000020E8  0206 0007               1791          ANDI.B  #%111,D6
000020EC                          1792          
000020EC  E75C                    1793          ROL.W   #3,D4           * [D1] Reading address register
000020EE  1204                    1794          MOVE.B  D4,D1
000020F0  0201 0007               1795          ANDI.B  #%111,D1
000020F4                          1796          
000020F4  B43C 0001               1797          CMP.B   #%01,D2
000020F8  67A8                    1798          BEQ     DLS
000020FA  B43C 0000               1799          CMP.B   #%00,D2
000020FE  67AE                    1800          BEQ     DAS
00002100  B43C 0003               1801          CMP.B   #%11,D2
00002104  67B4                    1802          BEQ     DRO
00002106  6000 0116               1803          BRA     DSEND
0000210A                          1804          
0000210A                          1805          
0000210A                          1806  DS1110MEMA
0000210A                          1807          
0000210A  BC3C 0002               1808          CMP.B   #%010,D6
0000210E  6700 002E               1809          BEQ     DS1110MEM_REG
00002112  BC3C 0003               1810          CMP.B   #%011,D6
00002116  6700 004C               1811          BEQ     DS1110MEM_INC
0000211A  BC3C 0004               1812          CMP.B   #%100,D6
0000211E  6700 006A               1813          BEQ     DS1110MEM_DEC
00002122                          1814          
00002122  BC3C 0007               1815          CMP.B   #%111,D6
00002126  6600 00CA               1816          BNE     DSERR
0000212A                          1817          
0000212A  B23C 0000               1818          CMP.B   #%000,D1
0000212E  6700 0080               1819          BEQ     DS1110MEM_CUSW
00002132  B23C 0001               1820          CMP.B   #%001,D1
00002136  6700 0096               1821          BEQ     DS1110MEM_CUSL
0000213A                          1822          
0000213A  6000 00E2               1823          BRA     DSEND
0000213E                          1824  
0000213E                          1825  DS1110MEM_REG
0000213E  43F9 000024B2           1826          LEA     OPENPTR,A1
00002144  4E4F                    1827          TRAP    #15
00002146                          1828          
00002146  43F9 000024A6           1829          LEA     VALA,A1
0000214C  4E4F                    1830          TRAP    #15
0000214E                          1831          
0000214E  103C 0003               1832          MOVE.B  #3,D0
00002152  4E4F                    1833          TRAP    #15
00002154  103C 000E               1834          MOVE.B  #14,D0
00002158                          1835          
00002158  43F9 000024B7           1836          LEA     CLOSEPTR,A1
0000215E  4E4F                    1837          TRAP    #15
00002160                          1838          
00002160  6000 00BC               1839          BRA     DSEND
00002164                          1840  
00002164                          1841  DS1110MEM_INC
00002164  43F9 000024B2           1842          LEA     OPENPTR,A1
0000216A  4E4F                    1843          TRAP    #15
0000216C                          1844          
0000216C  43F9 000024A6           1845          LEA     VALA,A1
00002172  4E4F                    1846          TRAP    #15
00002174                          1847          
00002174  103C 0003               1848          MOVE.B  #3,D0
00002178  4E4F                    1849          TRAP    #15
0000217A  103C 000E               1850          MOVE.B  #14,D0
0000217E                          1851          
0000217E  43F9 000024B9           1852          LEA     CLOSEIPTR,A1
00002184  4E4F                    1853          TRAP    #15
00002186                          1854          
00002186  6000 0096               1855          BRA     DSEND
0000218A                          1856  
0000218A                          1857  DS1110MEM_DEC
0000218A  43F9 000024B4           1858          LEA     OPENDPTR,A1
00002190  4E4F                    1859          TRAP    #15
00002192                          1860          
00002192  43F9 000024A6           1861          LEA     VALA,A1
00002198  4E4F                    1862          TRAP    #15
0000219A                          1863          
0000219A  103C 0003               1864          MOVE.B  #3,D0
0000219E  4E4F                    1865          TRAP    #15
000021A0  103C 000E               1866          MOVE.B  #14,D0
000021A4                          1867          
000021A4  43F9 000024B7           1868          LEA     CLOSEPTR,A1
000021AA  4E4F                    1869          TRAP    #15
000021AC                          1870          
000021AC  6000 0070               1871          BRA     DSEND
000021B0                          1872          
000021B0                          1873  DS1110MEM_CUSW
000021B0  43F9 000024BE           1874          LEA     DOLLAR,A1
000021B6  4E4F                    1875          TRAP    #15
000021B8  341A                    1876          MOVE.W  (A2)+,D2
000021BA  48E7 0400               1877          MOVEM.L D5,-(SP)
000021BE  1A3C 0030               1878          MOVE.B  #48,D5
000021C2  4EB8 118A               1879          JSR     HEXOUT
000021C6  4CDF 0020               1880          MOVEM.L (SP)+,D5
000021CA  6000 0052               1881          BRA     DSEND
000021CE                          1882          
000021CE                          1883  DS1110MEM_CUSL
000021CE  43F9 000024BE           1884          LEA     DOLLAR,A1
000021D4  4E4F                    1885          TRAP    #15
000021D6  241A                    1886          MOVE.L  (A2)+,D2
000021D8  48E7 0400               1887          MOVEM.L D5,-(SP)
000021DC  1A3C 0030               1888          MOVE.B  #48,D5
000021E0  4EB8 118A               1889          JSR     HEXOUT
000021E4  4CDF 0020               1890          MOVEM.L (SP)+,D5
000021E8  6000 0034               1891          BRA     DSEND
000021EC                          1892          
000021EC                          1893  
000021EC                          1894  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000021EC                          1895  
000021EC  4E71                    1896  DS1111  NOP
000021EE  6000 002E               1897          BRA     DSEND
000021F2                          1898  
000021F2                          1899  *DS Final
000021F2                          1900  *--------------------------------------------------------------------------------------------------
000021F2                          1901  
000021F2  103C 000E               1902  DSERR   MOVE.B  #14,D0
000021F6  43F9 0000246F           1903          LEA     ERRM,A1
000021FC  4E4F                    1904          TRAP    #15
000021FE  6000 001E               1905          BRA     DSEND
00002202                          1906          
00002202                          1907  DSERRINS
00002202  103C 000E               1908          MOVE.B  #14,D0
00002206  43F9 00002477           1909          LEA     ERRMINS,A1
0000220C  4E4F                    1910          TRAP    #15
0000220E  6000 000E               1911          BRA     DSEND
00002212                          1912  
00002212                          1913  DSERREA
00002212  103C 000E               1914          MOVE.B  #14,D0
00002216  43F9 00002478           1915          LEA     ERRMEA,A1
0000221C  4E4F                    1916          TRAP    #15
0000221E                          1917  
0000221E  4E75                    1918  DSEND   RTS
00002220                          1919  
00002220  43F9 00002440           1920  DSEOF   LEA     LB,A1
00002226  103C 000E               1921          MOVE.B  #14,D0
0000222A  4E4F                    1922          TRAP    #15
0000222C                          1923          
0000222C  43F9 00002342           1924          LEA     REST,A1
00002232  103C 000E               1925          MOVE.B  #14,D0
00002236  4E4F                    1926          TRAP    #15
00002238                          1927          
00002238  103C 0005               1928          MOVE.B  #5,D0
0000223C  4E4F                    1929          TRAP    #15
0000223E                          1930          
0000223E  B23C 0059               1931          CMP.B   #89,D1
00002242  6700 EDBC               1932          BEQ     START
00002246  B23C 0079               1933          CMP.B   #121,D1
0000224A  6700 EDB4               1934          BEQ     START
0000224E                          1935  
0000224E  43F9 00002440           1936  END     LEA     LB,A1
00002254  103C 000E               1937          MOVE.B  #14,D0
00002258  4E4F                    1938          TRAP    #15
0000225A                          1939          
0000225A  43F9 00002440           1940          LEA     LB,A1
00002260  103C 000E               1941          MOVE.B  #14,D0
00002264  4E4F                    1942          TRAP    #15
00002266                          1943          
00002266  43F9 0000235F           1944          LEA     ENDMSG,A1
0000226C  103C 000E               1945          MOVE.B  #14,D0
00002270  4E4F                    1946          TRAP    #15
00002272                          1947          
00002272  43F9 00002387           1948          LEA     AUTHOR,A1
00002278  4E4F                    1949          TRAP    #15
0000227A                          1950          
0000227A  43F9 00002440           1951          LEA     LB,A1
00002280  103C 000E               1952          MOVE.B  #14,D0
00002284  4E4F                    1953          TRAP    #15
00002286                          1954          
00002286  103C 0009               1955          MOVE.B  #9,D0
0000228A  4E4F                    1956          TRAP    #15
0000228C                          1957  
0000228C                          1958  *Initialized Variables
0000228C                          1959  *--------------------------------------------------------------------------------------------------
0000228C                          1960  
0000228C  =0000000D               1961  CR      EQU     $0D
0000228C  =0000000A               1962  LF      EQU     $0A
0000228C  =00000009               1963  HT      EQU     $09
0000228C                          1964  
0000228C= 54 68 69 73 20 69 ...   1965  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00002314= 45 6E 74 65 72 20 ...   1966  ASTART  DC.B    'Enter start address: $',0
0000232B= 45 6E 74 65 72 20 ...   1967  AEND    DC.B    'Enter end address:   $',0
00002342= 52 65 73 74 61 72 ...   1968  REST    DC.B    'Restart Disassembler (y/n)? ',0
0000235F= 54 68 61 6E 6B 20 ...   1969  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002387= 4D 61 64 65 20 62 ...   1970  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000023AC                          1971  
000023AC= 45 52 52 4F 52 3A ...   1972  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
000023E6= 45 52 52 4F 52 3A ...   1973  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000240C= 45 52 52 4F 52 3A ...   1974  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00002440                          1975  
00002440= 0D 0A 00                1976  LB      DC.B    CR,LF,0
00002443                          1977  
00002443= 09 00                   1978  HTM     DC.B    HT,0
00002445                          1979  
00002445= 20 00                   1980  SM1     DC.B    ' ',0
00002447= 20 20 00                1981  SM2     DC.B    '  ',0
0000244A= 20 20 20 00             1982  SM3     DC.B    '   ',0
0000244E= 20 20 20 20 00          1983  SM4     DC.B    '    ',0
00002453= 20 20 20 20 20 00       1984  SM5     DC.B    '     ',0
00002459= 20 20 20 20 20 20 00    1985  SM6     DC.B    '      ',0
00002460= 20 20 20 20 20 20 ...   1986  SM7     DC.B    '       ',0
00002468                          1987  
00002468= 54 45 53 54 00          1988  TESTM   DC.B    'TEST',0
0000246D                          1989  
0000246D= 00                      1990  NOTH    DC.B    '',0
0000246E= 00                      1991  NOTH2   DC.B    '',0
0000246F                          1992  
0000246F= 20 2A 45 52 52 4F ...   1993  ERRM    DC.B    ' *ERROR',0
00002477= 00                      1994  ERRMINS DC.B    '',0
00002478= 20 2A 45 52 52 4F ...   1995  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
0000249D                          1996  
0000249D= 2E 42 00                1997  MODEB   DC.B    '.B',0
000024A0= 2E 57 00                1998  MODEW   DC.B    '.W',0
000024A3= 2E 4C 00                1999  MODEL   DC.B    '.L',0
000024A6                          2000  
000024A6= 41 00                   2001  VALA    DC.B    'A',0
000024A8= 44 00                   2002  VALD    DC.B    'D',0
000024AA= 23 00                   2003  VALN    DC.B    '#',0
000024AC= 30 00                   2004  VAL0    DC.B    '0',0
000024AE= 51 00                   2005  VALQ    DC.B    'Q',0
000024B0= 4D 00                   2006  VALM    DC.B    'M',0
000024B2                          2007  
000024B2= 28 00                   2008  OPENPTR     DC.B    '(',0
000024B4= 2D 28 00                2009  OPENDPTR    DC.B    '-(',0
000024B7                          2010  
000024B7= 29 00                   2011  CLOSEPTR    DC.B    ')',0
000024B9= 29 2B 00                2012  CLOSEIPTR   DC.B    ')+',0
000024BC                          2013  
000024BC= 2C 00                   2014  COMMA   DC.B    ',',0
000024BE= 24 00                   2015  DOLLAR  DC.B    '$',0
000024C0= 2F 00                   2016  SLASH   DC.B    '/',0
000024C2= 2D 00                   2017  DASH    DC.B    '-',0
000024C4                          2018  
000024C4= 4E 4F 50 00             2019  NOPM    DC.B    'NOP',0
000024C8                          2020  
000024C8= 4D 4F 56 45 00          2021  MOVEM   DC.B    'MOVE',0
000024CD                          2022  
000024CD= 41 44 44 00             2023  ADDM    DC.B    'ADD',0
000024D1                          2024  
000024D1= 53 55 42 00             2025  SUBM    DC.B    'SUB',0
000024D5                          2026  
000024D5= 4C 45 41 00             2027  LEAM    DC.B    'LEA',0
000024D9                          2028  
000024D9= 41 4E 44 00             2029  ANDM    DC.B    'AND',0
000024DD= 4F 52 00                2030  ORM     DC.B    'OR',0
000024E0= 4E 4F 54 00             2031  NOTM    DC.B    'NOT',0
000024E4                          2032  
000024E4= 4C 53 00                2033  LSM    DC.B    'LS',0
000024E7= 4C 53 52 00             2034  LSRM    DC.B    'LSR',0
000024EB= 41 53 00                2035  ASM    DC.B    'AS',0
000024EE= 41 53 52 00             2036  ASRM    DC.B    'ASR',0
000024F2                          2037  
000024F2= 52 4F 00                2038  ROM    DC.B    'RO',0
000024F5= 52 4F 52 00             2039  RORM    DC.B    'ROR',0
000024F9                          2040  
000024F9= 42 47 54 00             2041  BGTM    DC.B    'BGT',0
000024FD= 42 4C 45 00             2042  BLEM    DC.B    'BLE',0
00002501= 42 45 51 00             2043  BEQM    DC.B    'BEQ',0
00002505                          2044  
00002505= 4A 53 52 00             2045  JSRM    DC.B    'JSR',0
00002509= 52 54 53 00             2046  RTSM    DC.B    'RTS',0
0000250D                          2047  
0000250D= 42 52 41 00             2048  BRAM    DC.B    'BRA',0
00002511                          2049  
00002511                          2050  
00002511                          2051      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1FB2
ADDCONT             1F3E
ADDDATACHECK        1FCC
ADDM                24CD
ADDRMODEALL         121C
ADDSIZEEND          1FBC
ADREG               16F6
ADREGP              170E
AEND                232B
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                24D9
ASM                 24EB
ASRM                24EE
ASTART              2314
AUTHOR              2387
BEQM                2501
BGTM                24F9
BLEM                24FD
BRAM                250D
CLOSEIPTR           24B9
CLOSEPTR            24B7
COMMA               24BC
CR                  D
DADD                1EF0
DADDA               1F96
DADDEA              1F5C
DADDPRNTREG         1F30
DADDQ               1B18
DAND                13AE
DANDA               142A
DANDAE              144E
DANDB               13EE
DANDL               1416
DANDW               1402
DAS                 20AE
DASH                24C2
DATACHECKCONT       1F74
DBEQ                1CC4
DBGT                1C48
DBLE                1C84
DBRA                1BBC
DBRA_16BIT          1C04
DBRA_32BIT          1C26
DISASM              137C
DJSR                1778
DJSR_CUSL           1810
DJSR_CUSW           17F2
DJSR_REG            17CC
DLEA                183A
DLEAP               1870
DLS                 20A2
DMOVE2              1476
DMOVEA              1578
DMOVEM              1948
DMOVEQ              1D06
DNOP                163C
DNOT                1648
DNOTA               16A8
DNOTB               166C
DNOTL               1694
DNOTW               1680
DOLLAR              24BE
DOR                 1D70
DORA                1DDC
DORAD               1E2A
DORAE               1E02
DORB                1DA0
DORL                1DC8
DORW                1DB4
DREG                16DE
DRO                 20BA
DRTS                182E
DS0                 1386
DS00                139A
DS01                159A
DS010               15B8
DS0100              15F4
DS0101              1B16
DS011               15C2
DS0110              1B90
DS0111              1D04
DS1                 1390
DS10                15A4
DS100               15CC
DS1000              1D6E
DS1001              1E4A
DS101               15D6
DS1010              1EDC
DS1011              1EE2
DS11                15AE
DS110               15E0
DS1100              1EE8
DS1101              1EEE
DS111               15EA
DS1110              1FD6
DS1110A             202A
DS1110B             2064
DS1110LSIDE         20DC
DS1110MEM           20E4
DS1110MEMA          210A
DS1110MEM_CUSL      21CE
DS1110MEM_CUSW      21B0
DS1110MEM_DEC       218A
DS1110MEM_INC       2164
DS1110MEM_REG       213E
DS1110SIDE          20C6
DS1110SIDEEND       20E2
DS1110_REG_D        2098
DS1110_REG_I        208E
DS1111              21EC
DSEND               221E
DSEOF               2220
DSERR               21F2
DSERREA             2212
DSERRINS            2202
DSUB                1E4C
DSUBEA              1EA8
DSUBPRNTREG         1E84
END                 224E
ENDMSG              235F
ERRM                246F
ERRMEA              2478
ERRMINS             2477
EXT                 1756
EXTW                176C
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 2443
INTRO               228C
JSR010              189C
JSR111              18CC
JSR111001           18FE
JSRM                2505
JSRPRINT2           1928
LB                  2440
LEAM                24D5
LF                  A
LSM                 24E4
LSRM                24E7
MADREG              172E
MODEB               249D
MODEL               24A3
MODEW               24A0
MOVECONT            149A
MOVEERRCHECK        158E
MOVEM               24C8
MOVEM2              19F2
MOVEM3              1A2C
MOVEM31             1A42
MOVEM32             1A48
MOVEM4              1A6E
MOVEM5              1AB4
MOVEMEA             1984
MOVEMEB             19BA
MOVEMEB1            19D2
MOVEMEB2            19D8
MOVEML              197C
MOVEMLOOP           1AD0
MOVEMLOOPDONE       1B10
MOVEMLOOPINC        1B0C
MOVEMLOOPSINGLEAR   1B12
MOVEMSHIFTL         1AF2
MOVEMSHIFTR         1AFA
MOVEMSTEP           1AD8
MOVEMSTEP1          1AE4
MOVEMSTEP2          1B02
MSDONE              153E
MSIZE               14C2
MSIZEB              1520
MSIZEBN             14EA
MSIZEL              1534
MSIZELN             150E
MSIZENORM           149A
MSIZEW              152A
MSIZEWN             14FC
NOPM                24C4
NOTH                246D
NOTH2               246E
NOTM                24E0
OPENDPTR            24B4
OPENPTR             24B2
ORM                 24DD
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1F8E
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                2342
ROM                 24F2
RORM                24F5
RPAUSE              117E
RSTEP               112E
RTSM                2509
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               24C0
SM1                 2445
SM2                 2447
SM3                 244A
SM4                 244E
SM5                 2453
SM6                 2459
SM7                 2460
SRET                121A
START               1000
STARTER             0
SUBM                24D1
TEST                103A
TESTM               2468
VAL0                24AC
VALA                24A6
VALD                24A8
VALM                24B0
VALN                24AA
VALQ                24AE
VERR1               10F8
VERR1M              23AC
VERR2               1108
VERR2M              23E6
VERR3               1118
VERR3M              240C
VINPUT              10EE
