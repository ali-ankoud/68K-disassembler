00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 8:51:20 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22  *to test demo edge cases, disassemble from 8000 - 8008
00001020  33FC 41C7 00008000        23          MOVE.W  #%0100000111000111,$8000
00001028                            24  *for demo: instruction corresponds to LEA     D0,A0: invalid addressing mode
00001028  33FC C8C1 00008004        25          MOVE.W  #%1100100011000001, $8004
00001030                            26  *for demo: instruction corresponds to MULU    D1,D4: unsupported instruction
00001030                            27          
00001030  103C 000B                 28          MOVE.B  #11,D0
00001034  323C FF00                 29          MOVE.W  #$FF00,D1
00001038  4E4F                      30          TRAP    #15
0000103A                            31          
0000103A                            32  TEST    
0000103A  43F9 0000223E             33          LEA     INTRO,A1    *Intro text
00001040  103C 000E                 34          MOVE.B  #14,D0
00001044  4E4F                      35          TRAP    #15
00001046                            36          
00001046  43F9 000022C6             37          LEA     ASTART,A1   *Input prompt text #1
0000104C  4E4F                      38          TRAP    #15
0000104E                            39          
0000104E  43F9 0000241F             40          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001054  103C 0002                 41          MOVE.B  #2,D0       *String prompt #1
00001058  4E4F                      42          TRAP    #15
0000105A                            43          
0000105A  B27C 0008                 44          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000105E  6E00 00B8                 45          BGT     VERR3
00001062                            46          
00001062  4EB9 00001096             47          JSR     PARSE       *Parse string #1
00001068                            48          
00001068                            49  
00001068  2641                      50          MOVE.L  D1,A3
0000106A                            51          
0000106A  43F9 000022DD             52          LEA     AEND,A1     *Input prompt text #2
00001070  103C 000E                 53          MOVE.B  #14,D0
00001074  4E4F                      54          TRAP    #15
00001076                            55          
00001076  43F9 0000241F             56          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000107C  103C 0002                 57          MOVE.B  #2,D0       *String prompt #2
00001080  4E4F                      58          TRAP    #15
00001082                            59          
00001082  B27C 0008                 60          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001086  6E00 0090                 61          BGT     VERR3
0000108A                            62          
0000108A  4EB9 00001096             63          JSR     PARSE       *Parse string #2
00001090                            64          
00001090  2841                      65          MOVE.L  D1,A4
00001092                            66          
00001092  6000 005A                 67          BRA     VINPUT      *Verify inputs
00001096                            68          
00001096                            69  *--------------------------------------------------------------------------------------------------
00001096                            70  
00001096                            71  PARSE                       *PARSE: Initialize variables involved in parsing
00001096  123C 0000                 72          MOVE.B  #0,D1       * [D1] parse output
0000109A  143C 0008                 73          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000109E                            74          
0000109E                            75  PSTEP                       *PSTEP: Step in parsing for loop
0000109E  1019                      76          MOVE.B  (A1)+,D0    *Read next byte from A1
000010A0  B03C 0000                 77          CMP.B   #0,D0       *Check if reached end of string input
000010A4  6700 0046                 78          BEQ     PDONE       *Break the for loop if reached end
000010A8  E989                      79          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
000010AA  B03C 003A                 80          CMP.B   #58,D0      *Distinguish between letter and number
000010AE  6D00 001A                 81          BLT     PNUM        *Handle number
000010B2                            82  
000010B2  0400 0037                 83  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010B6  0C00 000F                 84          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010BA  6E00 0006                 85          BGT     PCAPS       *Handle lowercase
000010BE  6000 000E                 86          BRA     PSTEP2
000010C2                            87       
000010C2  0400 0020                 88  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010C6  6000 0006                 89          BRA     PSTEP2
000010CA                            90  
000010CA  0400 0030                 91  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010CE                            92          
000010CE  0C00 000F                 93  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010D2  6E00 0034                 94          BGT     VERR2
000010D6  0C00 0000                 95          CMPI.B   #0,D0
000010DA  6D00 002C                 96          BLT     VERR2
000010DE  D280                      97          ADD.L   D0,D1       *Append hex char to parse output
000010E0  5302                      98          SUBQ.B  #1,D2       *Decrement the counter
000010E2  0C02 0000                 99          CMPI.B   #0,D2      *Compare if we reached max count
000010E6  6700 0004                100          BEQ     PDONE       *Complete parsing
000010EA  60B2                     101          BRA     PSTEP       *Or else continue loop
000010EC                           102  
000010EC  4E75                     103  PDONE   RTS
000010EE                           104  
000010EE                           105  *--------------------------------------------------------------------------------------------------
000010EE                           106  
000010EE  B9CB                     107  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010F0  6D00 0006                108          BLT     VERR1
000010F4  6000 0032                109          BRA     READLN
000010F8                           110  
000010F8  43F9 0000235E            111  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 10FA                114          BRA     END
00001108                           115  
00001108  43F9 00002398            116  VERR2   LEA     VERR2M,A1   *Throw range error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 10EA                119          BRA     END
00001118                           120  
00001118  43F9 000023BE            121  VERR3   LEA     VERR3M,A1   *Throw length error
0000111E  103C 000E                122          MOVE.B  #14,D0
00001122  4E4F                     123          TRAP    #15
00001124  6000 10DA                124          BRA     END
00001128                           125          
00001128                           126  *--------------------------------------------------------------------------------------------------
00001128                           127  
00001128                           128  READLN                              *READLN: Start READLN for loop
00001128  244B                     129          MOVE.L  A3,A2               *Set current address to start address
0000112A  1A3C 0000                130          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000112E                           131  
0000112E                           132  RSTEP                               *RSTEP: 
0000112E  381A                     133          MOVE.W  (A2)+,D4
00001130  340A                     134          MOVE.W  A2,D2
00001132  5542                     135          SUBQ.W  #2,D2
00001134                           136          
00001134  48E7 0400                137          MOVEM.L D5,-(SP)
00001138  1A3C 0000                138          MOVE.B  #0,D5
0000113C  4EB9 0000118A            139          JSR     HEXOUT              *Run printing operation for HEX address
00001142  4CDF 0020                140          MOVEM.L (SP)+,D5
00001146                           141          
00001146  43F9 000023F9            142          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000114C  103C 000E                143          MOVE.B  #14,D0
00001150  4E4F                     144          TRAP    #15
00001152                           145          
00001152  48E7 7F0F                146          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001156  4EB9 0000137C            147          JSR     DISASM              *Run disassembly for current machine code
0000115C  4CDF F0FE                148          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001160                           149          
00001160  5205                     150          ADDQ.B  #1,D5       *Increment counter by 1
00001162  BA3C 0020                151          CMP.B   #32,D5      *Check if we reached 32 lines
00001166  6700 0016                152          BEQ     RPAUSE      *Branch to pausing code
0000116A                           153          
0000116A  43F9 000023F2            154          LEA     LB,A1       *Print line break
00001170  103C 000E                155          MOVE.B  #14,D0      
00001174  4E4F                     156          TRAP    #15
00001176                           157          
00001176                           158  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001176  B9CA                     159          CMP.L   A2,A4       *Check if we reached the end address
00001178  6D00 1058                160          BLT     DSEOF       *End loop if so
0000117C  60B0                     161          BRA     RSTEP       *Or else continue the loop
0000117E                           162          
0000117E                           163  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000117E  1A3C 0000                164          MOVE.B  #0,D5       * Reset D5 counter
00001182  103C 0005                165          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001186  4E4F                     166          TRAP    #15         * Only used for waiting for user to hit ENTER
00001188  60EC                     167          BRA     RCONT       *Continue with READLN loop
0000118A                           168  
0000118A                           169  *--------------------------------------------------------------------------------------------------
0000118A                           170  
0000118A                           171  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000118A  103C 0006                172          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000118E  163C 0008                173          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001192                           174          
00001192                           175  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001192  E99A                     176          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001194  2202                     177          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001196  0281 0000000F            178          ANDI.L  #$F,D1      * Filter to the right four bits
0000119C  B23C 000A                179          CMP.B   #10,D1      *Distinguish between number and letter
000011A0  6D00 000A                180          BLT     HNUM        *Branch to number handling, or continue to letter handling
000011A4                           181          
000011A4                           182  HHEX                        *HHEX: Handle letters from HEXOUT for loop
000011A4  0601 0037                183          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A8  6000 0006                184          BRA     HSTEP2      *Branch to step 2 of the iteration
000011AC                           185  
000011AC                           186  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
000011AC  0601 0030                187          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011B0                           188  
000011B0                           189  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011B0  5303                     190          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011B2                           191          
000011B2  B205                     192          CMP.B   D5,D1
000011B4  6700 0004                193          BEQ     HSKIP2
000011B8                           194          
000011B8  4E4F                     195          TRAP #15            *Will print the ASCII value stored in D1
000011BA  0C03 0000                196  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011BE  6700 0010                197          BEQ     HDONE       *End loop if done
000011C2                           198          
000011C2  B23C 0030                199          CMP.B   #48,D1
000011C6  6700 0006                200          BEQ     HSKIP3
000011CA                           201          
000011CA  1A3C 0000                202          MOVE.B  #0,D5
000011CE                           203          
000011CE  60C2                     204  HSKIP3  BRA     HSTEP       *Or else continue loop
000011D0                           205          
000011D0  4E75                     206  HDONE   RTS
000011D2                           207  
000011D2                           208  
000011D2                           209  *--------------------------------------------------------------------------------------------------
000011D2                           210  
000011D2  103C 000E                211  SIZE    MOVE.B  #14,D0
000011D6  BA3C 0000                212          CMP.B   #%00,D5
000011DA  6700 001E                213          BEQ     SIZEB
000011DE  BA3C 0001                214          CMP.B   #%01,D5
000011E2  6700 0020                215          BEQ     SIZEW
000011E6  BA3C 0002                216          CMP.B   #%10,D5
000011EA  6700 0022                217          BEQ     SIZEL
000011EE  BA3C 0003                218          CMP.B   #%11,D5
000011F2  6700 0010                219          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011F6  6000 0022                220          BRA     SRET
000011FA                           221          
000011FA  43F9 0000244F            222  SIZEB   LEA     MODEB,A1
00001200  6000 0016                223          BRA     SDONE
00001204                           224  
00001204  43F9 00002452            225  SIZEW   LEA     MODEW,A1
0000120A  6000 000C                226          BRA     SDONE
0000120E                           227  
0000120E  43F9 00002455            228  SIZEL   LEA     MODEL,A1
00001214  6000 0002                229          BRA     SDONE
00001218                           230  
00001218  4E4F                     231  SDONE   TRAP    #15
0000121A                           232  
0000121A  4E75                     233  SRET    RTS
0000121C                           234  
0000121C                           235  *-----------------------------------------------------------------------------------
0000121C                           236  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           237  *uses d1, d0, and a1
0000121C                           238  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000121C                           239  *uses d1, d0, and a1
0000121C                           240  ADDRMODEALL
0000121C                           241  *comparisons
0000121C  B67C 0000                242  AM000   CMP     #%000,D3
00001220  6600 001A                243          BNE     AM001
00001224  43F9 0000245A            244          LEA     VALD,A1
0000122A  4E4F                     245          TRAP    #15
0000122C  1206                     246          MOVE.B  D6,D1       *moving ea num to d1 to print
0000122E  103C 0003                247          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001232  4E4F                     248          TRAP    #15         *printing register number
00001234  103C 000E                249          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001238  6000 013C                250          BRA     AMEND
0000123C                           251  
0000123C                           252          
0000123C  B67C 0001                253  AM001   CMP     #%001,D3
00001240  6600 0022                254          BNE     AM010
00001244  BA7C 0000                255          CMP     #00,D5
00001248  6700 0F5A                256          BEQ     DSERR
0000124C  43F9 00002458            257          LEA     VALA,A1
00001252  4E4F                     258          TRAP    #15
00001254  1206                     259          MOVE.B  D6,D1       *moving ea num to d1 to print
00001256  103C 0003                260          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000125A  4E4F                     261          TRAP    #15         *printing register number
0000125C  103C 000E                262          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001260  6000 0114                263          BRA     AMEND
00001264                           264  
00001264  B67C 0002                265  AM010   CMP     #%010,D3
00001268  6600 002A                266          BNE     AM011
0000126C  43F9 00002464            267          LEA     OPENPTR,A1
00001272  4E4F                     268          TRAP    #15
00001274  43F9 00002458            269          LEA     VALA,A1
0000127A  4E4F                     270          TRAP    #15
0000127C  1206                     271          MOVE.B  D6,D1       *moving ea num to d1 to print
0000127E  103C 0003                272          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001282  4E4F                     273          TRAP    #15         *printing register number
00001284  103C 000E                274          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001288  43F9 00002469            275          LEA     CLOSEPTR,A1
0000128E  4E4F                     276          TRAP    #15
00001290  6000 00E4                277          BRA     AMEND
00001294                           278  
00001294  B67C 0003                279  AM011   CMP     #%011,D3
00001298  6600 002A                280          BNE     AM100
0000129C  43F9 00002464            281          LEA     OPENPTR,A1
000012A2  4E4F                     282          TRAP    #15
000012A4  43F9 00002458            283          LEA     VALA,A1
000012AA  4E4F                     284          TRAP    #15
000012AC  1206                     285          MOVE.B  D6,D1       *moving ea num to d1 to print
000012AE  103C 0003                286          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012B2  4E4F                     287          TRAP    #15         *printing register number
000012B4  103C 000E                288          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012B8  43F9 0000246B            289          LEA     CLOSEIPTR,A1
000012BE  4E4F                     290          TRAP    #15
000012C0  6000 00B4                291          BRA     AMEND
000012C4                           292  
000012C4  B67C 0004                293  AM100   CMP     #%100,D3
000012C8  6600 002A                294          BNE     AM111
000012CC  43F9 00002466            295          LEA     OPENDPTR,A1
000012D2  4E4F                     296          TRAP    #15
000012D4  43F9 00002458            297          LEA     VALA,A1
000012DA  4E4F                     298          TRAP    #15
000012DC  1206                     299          MOVE.B  D6,D1       *moving ea num to d1 to print
000012DE  103C 0003                300          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012E2  4E4F                     301          TRAP    #15         *printing register number
000012E4  103C 000E                302          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012E8  43F9 00002469            303          LEA     CLOSEPTR,A1
000012EE  4E4F                     304          TRAP    #15
000012F0  6000 0084                305          BRA     AMEND
000012F4                           306  
000012F4  B67C 0007                307  AM111   CMP     #%111,D3
000012F8  6600 0EAA                308          BNE     DSERR
000012FC  BC7C 0000                309          CMP     #%000,D6
00001300  6600 0020                310          BNE     AM111001
00001304  43F9 00002470            311          LEA     DOLLAR,A1
0000130A  4E4F                     312          TRAP    #15
0000130C  341A                     313          MOVE.W  (A2)+,D2
0000130E  48E7 0400                314          MOVEM.L D5,-(SP)    
00001312  1A3C 0030                315          MOVE.B  #48,D5
00001316  4EB8 118A                316          JSR     HEXOUT
0000131A  4CDF 0020                317          MOVEM.L (SP)+,D5
0000131E  6000 0056                318          BRA     AMEND
00001322                           319          
00001322                           320  AM111001
00001322  BC7C 0001                321          CMP     #%001,D6
00001326  6600 0020                322          BNE     AM111100
0000132A  43F9 00002470            323          LEA     DOLLAR,A1
00001330  4E4F                     324          TRAP    #15
00001332  241A                     325          MOVE.L  (A2)+,D2
00001334  48E7 0400                326          MOVEM.L D5,-(SP)
00001338  1A3C 0030                327          MOVE.B  #48,D5
0000133C  4EB8 118A                328          JSR     HEXOUT
00001340  4CDF 0020                329          MOVEM.L (SP)+,D5
00001344  6000 0030                330          BRA     AMEND
00001348                           331          
00001348                           332  AM111100
00001348  BC7C 0004                333          CMP     #%100,D6
0000134C  6600 0E56                334          BNE     DSERR
00001350  43F9 0000245C            335          LEA     VALN,A1
00001356  4E4F                     336          TRAP    #15
00001358  341A                     337          MOVE.W  (A2)+,D2
0000135A  48E7 0400                338          MOVEM.L D5,-(SP)    
0000135E  103C 0003                339          MOVE.B  #3,D0
00001362  3202                     340          MOVE.W  D2,D1
00001364  4E4F                     341          TRAP    #15
00001366  103C 000E                342          MOVE.B  #14,D0
0000136A  4CDF 0020                343          MOVEM.L (SP)+,D5
0000136E  323C 0000                344          MOVE.W  #0,D1
00001372  6000 0002                345          BRA     AMEND
00001376                           346          
00001376  103C 000E                347  AMEND   MOVE.B  #14,D0
0000137A  4E75                     348          RTS
0000137C                           349  
0000137C                           350  *--------------------------------------------------------------------------------------------------
0000137C                           351  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000137C                           352  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000137C                           353  
0000137C                           354  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000137C                           355  
0000137C                           356  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000137C                           357  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000137C                           358  
0000137C                           359  DISASM                      *DISASM: Disassemble a machine code
0000137C  E34C                     360          LSL.W   #1,D4       * Tier 0 binary search
0000137E  6500 0010                361          BCS     DS1
00001382  6000 0002                362          BRA     DS0
00001386                           363  
00001386                           364  *DS Tier 1 ----------------------------------------------------------------------------------------
00001386                           365  
00001386                           366  DS0                         *DS0: Tier 1 binary search for 0 side
00001386  E34C                     367          LSL.W   #1,D4       
00001388  6500 00EA                368          BCS     DS01
0000138C  6000 000C                369          BRA     DS00
00001390                           370  
00001390                           371  DS1                         *DS1: Tier 1 binary search for 1 side
00001390  E34C                     372          LSL.W   #1,D4       
00001392  6500 00F4                373          BCS     DS11
00001396  6000 00E6                374          BRA     DS10
0000139A                           375  
0000139A                           376  DS00                        *DS00: Disassembly processing for 00 prefix
0000139A  E55C                     377          ROL.W   #2,D4       
0000139C  1A04                     378          MOVE.B  D4,D5
0000139E  0205 0003                379          ANDI.B  #%11,D5
000013A2  0C05 0000                380          CMPI.B  #%00,D5
000013A6  6700 00EA                381          BEQ     DS010
000013AA  6000 0002                382          BRA     DMOVE2
000013AE                           383          
000013AE                           384  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
000013AE  4E71                     385  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
000013B0                           386          *size in d5 from above processing
000013B0  43F9 0000247A            387          LEA     MOVEM,A1
000013B6  4E4F                     388          TRAP    #15
000013B8                           389                  
000013B8                           390          *dest reg to d7
000013B8  E75C                     391          ROL.W   #3,D4
000013BA  1E04                     392          MOVE.B  D4,D7
000013BC  CE3C 0007                393          AND.B   #%111,D7
000013C0                           394          
000013C0                           395          *dest mode to d3: An means MOVEA
000013C0  E75C                     396          ROL.W   #3,D4
000013C2  1604                     397          MOVE.B  D4,D3
000013C4  C63C 0007                398          AND.B   #%111,D3
000013C8  3C43                     399          MOVE.W  D3,A6
000013CA                           400          
000013CA  B67C 0001                401          CMP     #%001,D3
000013CE  6700 0082                402          BEQ     DMOVEA
000013D2                           403  MOVECONT
000013D2                           404  *printing size then first addressing moode, then comma
000013D2                           405  *size is different for move
000013D2  103C 000E                406  MSIZE   MOVE.B  #14,D0
000013D6  BA3C 0001                407          CMP.B   #%01,D5
000013DA  6700 001E                408          BEQ     MSIZEB
000013DE  BA3C 0003                409          CMP.B   #%11,D5
000013E2  6700 0020                410          BEQ     MSIZEW
000013E6  BA3C 0002                411          CMP.B   #%10,D5
000013EA  6700 0022                412          BEQ     MSIZEL
000013EE  BA3C 0003                413          CMP.B   #%11,D5
000013F2  6700 0010                414          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000013F6  6000 0DAC                415          BRA     DSERR
000013FA                           416          
000013FA  43F9 0000244F            417  MSIZEB  LEA     MODEB,A1
00001400  6000 0016                418          BRA     MSDONE
00001404                           419  
00001404  43F9 00002452            420  MSIZEW  LEA     MODEW,A1
0000140A  6000 000C                421          BRA     MSDONE
0000140E                           422  
0000140E  43F9 00002455            423  MSIZEL  LEA     MODEL,A1
00001414  6000 0002                424          BRA     MSDONE
00001418                           425  
00001418  4E4F                     426  MSDONE  TRAP    #15
0000141A                           427  
0000141A  43F9 000023FC            428          LEA     SM3,A1
00001420  4E4F                     429          TRAP    #15
00001422                           430          
00001422                           431          *source mode to d3
00001422  E75C                     432          ROL.W   #3,D4
00001424  1604                     433          MOVE.B  D4,D3
00001426  C63C 0007                434          AND.B   #%111,D3
0000142A                           435          
0000142A                           436          *source reg to d6
0000142A  E75C                     437          ROL.W   #3,D4
0000142C  1C04                     438          MOVE.B  D4,D6
0000142E  CC3C 0007                439          AND.B   #%111,D6
00001432                           440          
00001432  4EB8 121C                441          JSR     ADDRMODEALL
00001436  B67C 0001                442          CMP     #%001,D3
0000143A  6700 002C                443          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
0000143E  43F9 0000246E            444          LEA     COMMA,A1
00001444  4E4F                     445          TRAP    #15
00001446  1C07                     446          MOVE.B  D7,D6
00001448  360E                     447          MOVE.W  A6,D3
0000144A  4EB8 121C                448          JSR     ADDRMODEALL
0000144E  6000 0D80                449          BRA     DSEND
00001452                           450  
00001452  4E71                     451  DMOVEA  NOP
00001454  BA7C 0001                452          CMP     #%01,D5     *if size is byte, err
00001458  6700 0D4A                453          BEQ     DSERR
0000145C  43F9 00002458            454          LEA     VALA,A1        *else, print A and return
00001462  4E4F                     455          TRAP    #15
00001464  6000 FF6C                456          BRA     MOVECONT
00001468                           457  
00001468                           458  MOVEERRCHECK
00001468  BA7C 0001                459          CMP     #%01,D5
0000146C  6700 0D36                460          BEQ     DSERR
00001470  6000 0D5E                461          BRA     DSEND
00001474                           462  
00001474                           463          
00001474                           464  
00001474                           465  *DS Tier 2 ----------------------------------------------------------------------------------------
00001474                           466  
00001474                           467  DS01                        *DS01: Tier 2 binary search for 01 side
00001474  E34C                     468          LSL.W   #1,D4
00001476  6500 0024                469          BCS     DS011
0000147A  6000 0016                470          BRA     DS010
0000147E                           471  
0000147E                           472  DS10                        *DS10: Tier 2 binary search for 10 side
0000147E  E34C                     473          LSL.W   #1,D4
00001480  6500 002E                474          BCS     DS101
00001484  6000 0020                475          BRA     DS100
00001488                           476  
00001488                           477  DS11                        *DS11: Tier 2 binary search for 11 side
00001488  E34C                     478          LSL.W   #1,D4
0000148A  6500 0038                479          BCS     DS111
0000148E  6000 002A                480          BRA     DS110
00001492                           481  
00001492                           482  *DS Tier 3 ----------------------------------------------------------------------------------------
00001492                           483  
00001492                           484  DS010                       *DS010: Tier 3 binary search for 010 side
00001492  E34C                     485          LSL.W   #1,D4
00001494  6500 055A                486          BCS     DS0101
00001498  6000 0034                487          BRA     DS0100
0000149C                           488  
0000149C                           489  DS011                       *DS011: Tier 3 binary search for 011 side
0000149C  E34C                     490          LSL.W   #1,D4
0000149E  6500 073E                491          BCS     DS0111
000014A2  6000 05C6                492          BRA     DS0110
000014A6                           493  
000014A6                           494  DS100                       *DS100: Tier 3 binary search for 100 side
000014A6  E34C                     495          LSL.W   #1,D4
000014A8  6500 087A                496          BCS     DS1001
000014AC  6000 079A                497          BRA     DS1000
000014B0                           498  
000014B0                           499  DS101                       *DS101: Tier 3 binary search for 101 side
000014B0  E34C                     500          LSL.W   #1,D4
000014B2  6500 0908                501          BCS     DS1011
000014B6  6000 08FE                502          BRA     DS1010
000014BA                           503  
000014BA                           504  DS110                       *DS110: Tier 3 binary search for 110 side
000014BA  E34C                     505          LSL.W   #1,D4
000014BC  6500 09E2                506          BCS     DS1101
000014C0  6000 0900                507          BRA     DAND
000014C4                           508  
000014C4                           509  DS111                       *DS111: Tier 3 binary search for 111 side
000014C4  E34C                     510          LSL.W   #1,D4
000014C6  6500 0CD6                511          BCS     DS1111
000014CA  6000 0ABC                512          BRA     DS1110
000014CE                           513  
000014CE                           514  *DS Tier 4 ----------------------------------------------------------------------------------------
000014CE                           515  
000014CE                           516  DS0100                      *DS0100: Processing for 0100 prefix
000014CE  0C44 E710                517          CMPI.W  #%1110011100010000,D4
000014D2  6700 0042                518          BEQ     DNOP
000014D6  0C44 E750                519          CMPI.W  #%1110011101010000,D4
000014DA  6700 022C                520          BEQ     DRTS
000014DE                           521          
000014DE  3404                     522          MOVE.W  D4,D2
000014E0  0242 1C00                523          ANDI.W  #%0001110000000000,D2
000014E4  0C42 1C00                524          CMPI.W  #%0001110000000000,D2
000014E8  6700 022A                525          BEQ     DLEA
000014EC                           526          
000014EC  3404                     527          MOVE.W  D4,D2
000014EE  0242 B800                528          ANDI.W  #%1011100000000000,D2
000014F2  0C42 8800                529          CMPI.W  #%1000100000000000,D2
000014F6  6700 032A                530          BEQ     DMOVEM
000014FA                           531          
000014FA  E95C                     532          ROL.W   #4,D4
000014FC  1404                     533          MOVE.B  D4,D2
000014FE  0202 000F                534          ANDI.B  #%1111,D2
00001502                           535          
00001502  B43C 000E                536          CMP.B   #%1110,D2
00001506  6700 014A                537          BEQ     DJSR
0000150A                           538          
0000150A  B43C 0006                539          CMP.B   #%0110,D2
0000150E  6700 0012                540          BEQ     DNOT
00001512                           541          
00001512  6000 0CA0                542          BRA     DSERRINS
00001516                           543  
00001516  43F9 00002476            544  DNOP    LEA     NOPM,A1
0000151C  4E4F                     545          TRAP    #15
0000151E  6000 0CB0                546          BRA     DSEND
00001522                           547          
00001522  E55C                     548  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
00001524  1A04                     549          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001526  0205 0003                550          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
0000152A                           551  
0000152A  BA3C 0000                552          CMP.B   #%00,D5         ; compare with byte size
0000152E  6700 0016                553          BEQ     DNOTB
00001532  BA3C 0001                554          CMP.B   #%01,D5         ; compare with word size
00001536  6700 0022                555          BEQ     DNOTW
0000153A  BA3C 0002                556          CMP.B   #%10,D5         ; compare with long size
0000153E  6700 002E                557          BEQ     DNOTL
00001542                           558          
00001542  6000 0C8C                559          BRA     DSEND           ; branch to DSEND in case of invalid code
00001546                           560  
00001546  43F9 00002492            561  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
0000154C  4E4F                     562          TRAP    #15             ; print NOTM string
0000154E  43F9 0000244F            563          LEA     MODEB,A1        ; load effective address of MODEB string
00001554  4E4F                     564          TRAP    #15             ; print MODEB string
00001556  6000 002A                565          BRA     DNOTA           ; branch to addressing mode parsing
0000155A                           566  
0000155A  43F9 00002492            567  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001560  4E4F                     568          TRAP    #15             ; print NOTM string
00001562  43F9 00002452            569          LEA     MODEW,A1        ; load effective address of MODEW string
00001568  4E4F                     570          TRAP    #15             ; print MODEW string
0000156A  6000 0016                571          BRA     DNOTA           ; branch to addressing mode parsing
0000156E                           572  
0000156E  43F9 00002492            573  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001574  4E4F                     574          TRAP    #15             ; print NOTM string
00001576  43F9 00002455            575          LEA     MODEL,A1        ; load effective address of MODEL string
0000157C  4E4F                     576          TRAP    #15             ; print MODEL string
0000157E  6000 0002                577          BRA     DNOTA           ; branch to addressing mode parsing
00001582                           578  
00001582  ED5C                     579  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001584  1204                     580          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001586  0201 003F                581          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000158A                           582  
0000158A                           583          ; Now process addressing mode and register based on the value in D1
0000158A                           584  
0000158A  1A01                     585          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000158C  0205 0007                586          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001590  6700 0026                587          BEQ     DREG            ; If it is direct register mode
00001594  BA3C 0002                588          CMP.B   #%010,D5        ; Compare with An
00001598  6700 0036                589          BEQ     ADREG
0000159C  BA3C 0003                590          CMP.B   #%011,D5        ; Compare with (An)+
000015A0  6700 0046                591          BEQ     ADREGP
000015A4  BA3C 0004                592          CMP.B   #%100,D5        ; Compare with -(An)
000015A8  6700 005E                593          BEQ     MADREG
000015AC  BA3C 0007                594          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
000015B0  6700 007E                595          BEQ     EXT
000015B4                           596              
000015B4  6000 0C1A                597          BRA     DSEND
000015B8                           598  
000015B8  1C01                     599  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
000015BA  0206 0007                600          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
000015BE  DC39 0000245A            601          ADD.B   VALD,D6         ; Convert register number to ASCII
000015C4  43F9 0000245A            602          LEA     VALD,A1         ; Load effective address of Dn
000015CA  4E4F                     603          TRAP    #15             ; Print Dn
000015CC  6000 0C02                604          BRA     DSEND
000015D0                           605  
000015D0  1C01                     606  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
000015D2  0206 0007                607          ANDI.B  #%111,D6
000015D6  DC39 00002458            608          ADD.B   VALA,D6
000015DC  43F9 00002458            609          LEA     VALA,A1
000015E2  4E4F                     610          TRAP    #15
000015E4  6000 0BEA                611          BRA     DSEND
000015E8                           612  
000015E8  1C01                     613  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
000015EA  0206 0007                614          ANDI.B  #%111,D6
000015EE  DC39 00002458            615          ADD.B   VALA,D6
000015F4  43F9 00002458            616          LEA     VALA,A1
000015FA  4E4F                     617          TRAP    #15
000015FC  43F9 0000246B            618          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001602  4E4F                     619          TRAP    #15             ; Print )+
00001604  6000 0BCA                620          BRA     DSEND
00001608                           621  
00001608  1C01                     622  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
0000160A  0206 0007                623          ANDI.B  #%111,D6
0000160E  DC39 00002458            624          ADD.B   VALA,D6
00001614  43F9 00002466            625          LEA     OPENDPTR,A1     ; Load effective address of -(
0000161A  4E4F                     626          TRAP    #15             ; Print -(
0000161C  43F9 00002458            627          LEA     VALA,A1
00001622  4E4F                     628          TRAP    #15
00001624  43F9 00002469            629          LEA     CLOSEPTR,A1     ; Load effective address of )
0000162A  4E4F                     630          TRAP    #15             ; Print )
0000162C  6000 0BA2                631          BRA     DSEND
00001630                           632  
00001630  1C01                     633  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
00001632  0206 0001                634          ANDI.B  #%1,D6
00001636  6700 000E                635          BEQ     EXTW
0000163A  43F9 0000245C            636          LEA     VALN,A1         ; Load effective address of #
00001640  4E4F                     637          TRAP    #15             ; Print #
00001642  6000 0B8C                638          BRA     DSEND
00001646                           639  
00001646  43F9 0000245E            640  EXTW    LEA     VAL0,A1         ; Load effective address of 0
0000164C  4E4F                     641          TRAP    #15             ; Print 0
0000164E  6000 0B80                642          BRA     DSEND
00001652                           643  
00001652                           644          
00001652  E55C                     645  DJSR    ROL.W   #2,D4
00001654  1404                     646          MOVE.B  D4,D2
00001656  0202 0007                647          ANDI.B  #%111,D2
0000165A  0C02 0002                648          CMPI.B  #%10,D2
0000165E  6600 0B44                649          BNE     DSERR
00001662                           650          
00001662  43F9 000024B7            651          LEA     JSRM,A1
00001668  4E4F                     652          TRAP    #15
0000166A                           653          
0000166A  43F9 00002412            654          LEA     SM7,A1
00001670  4E4F                     655          TRAP    #15
00001672                           656  
00001672  E75C                     657          ROL.W   #3,D4       * [D2] address mode
00001674  1404                     658          MOVE.B  D4,D2
00001676  0202 0007                659          ANDI.B  #%111,D2
0000167A                           660          
0000167A  E75C                     661          ROL.W   #3,D4       * [D1] address register
0000167C  1204                     662          MOVE.B  D4,D1
0000167E  0201 0007                663          ANDI.B  #%111,D1
00001682                           664          
00001682  0C02 0002                665          CMPI.B  #%010,D2
00001686  6700 001E                666          BEQ     DJSR_REG
0000168A                           667          
0000168A  0C02 0007                668          CMPI.B  #%111,D2
0000168E  6600 0B14                669          BNE     DSERR
00001692                           670          
00001692  0C01 0000                671          CMPI.B  #%000,D1
00001696  6700 0034                672          BEQ     DJSR_CUSW
0000169A                           673          
0000169A  0C01 0001                674          CMPI.B  #%001,D1
0000169E  6700 004A                675          BEQ     DJSR_CUSL
000016A2                           676          
000016A2  6000 0B2C                677          BRA     DSEND
000016A6                           678          
000016A6                           679          
000016A6                           680          
000016A6                           681  DJSR_REG        
000016A6  43F9 00002464            682          LEA     OPENPTR,A1
000016AC  4E4F                     683          TRAP    #15
000016AE                           684          
000016AE  43F9 00002458            685          LEA     VALA,A1
000016B4  4E4F                     686          TRAP    #15
000016B6                           687          
000016B6  103C 0003                688          MOVE.B  #3,D0
000016BA  4E4F                     689          TRAP    #15
000016BC  103C 000E                690          MOVE.B  #14,D0
000016C0                           691          
000016C0  43F9 00002469            692          LEA     CLOSEPTR,A1
000016C6  4E4F                     693          TRAP    #15
000016C8                           694          
000016C8  6000 0B06                695          BRA     DSEND
000016CC                           696  
000016CC                           697          
000016CC                           698  DJSR_CUSW
000016CC  43F9 00002470            699          LEA     DOLLAR,A1
000016D2  4E4F                     700          TRAP    #15
000016D4  341A                     701          MOVE.W  (A2)+,D2
000016D6  48E7 0400                702          MOVEM.L D5,-(SP)
000016DA  1A3C 0030                703          MOVE.B  #48,D5
000016DE  4EB8 118A                704          JSR     HEXOUT
000016E2  4CDF 0020                705          MOVEM.L (SP)+,D5
000016E6  6000 0AE8                706          BRA     DSEND
000016EA                           707  
000016EA                           708  DJSR_CUSL
000016EA  43F9 00002470            709          LEA     DOLLAR,A1
000016F0  4E4F                     710          TRAP    #15
000016F2  241A                     711          MOVE.L  (A2)+,D2
000016F4  48E7 0400                712          MOVEM.L D5,-(SP)
000016F8  1A3C 0030                713          MOVE.B  #48,D5
000016FC  4EB8 118A                714          JSR     HEXOUT
00001700  4CDF 0020                715          MOVEM.L (SP)+,D5
00001704  6000 0ACA                716          BRA     DSEND
00001708                           717          
00001708  43F9 000024BB            718  DRTS    LEA     RTSM,A1
0000170E  4E4F                     719          TRAP    #15
00001710  6000 0ABE                720          BRA     DSEND
00001714                           721          
00001714                           722          
00001714                           723  DLEA    *printing
00001714  43F9 00002487            724          LEA     LEAM,A1
0000171A  4E4F                     725          TRAP    #15
0000171C  43F9 00002412            726          LEA     SM7,A1
00001722  4E4F                     727          TRAP    #15
00001724                           728          
00001724                           729          *shifting out 111
00001724  E75C                     730          ROL.W   #3,D4
00001726                           731          
00001726                           732          *getting destination register
00001726  E75C                     733          ROL.W   #3,D4
00001728  1404                     734          MOVE.B  D4,D2
0000172A  0202 0007                735          ANDI.B  #%111,D2
0000172E                           736          
0000172E                           737          *getting ea mode
0000172E  E75C                     738          ROL.W   #3,D4
00001730  1604                     739          MOVE.B  D4,D3
00001732  0203 0007                740          ANDI.B  #%111,D3
00001736                           741          
00001736  B63C 0002                742          CMP.B   #%010,D3
0000173A  6700 000E                743          BEQ     DLEAP
0000173E                           744          
0000173E  B63C 0007                745          CMP.B   #%111,D3
00001742  6700 0006                746          BEQ     DLEAP
00001746                           747          
00001746  6000 0A7C                748          BRA     DSERREA
0000174A                           749          
0000174A                           750          *getting ea reg
0000174A  E75C                     751  DLEAP   ROL.W   #3,D4
0000174C  1C04                     752          MOVE.B  D4,D6
0000174E  0206 0007                753          ANDI.B  #%111,D6
00001752                           754          
00001752                           755          *printing
00001752  4EB8 121C                756          JSR     ADDRMODEALL
00001756                           757          
00001756  43F9 0000246E            758          LEA     COMMA,A1
0000175C  4E4F                     759          TRAP    #15
0000175E  43F9 00002458            760          LEA     VALA,A1
00001764  4E4F                     761          TRAP    #15
00001766  103C 0003                762          MOVE.B  #3,D0
0000176A  1202                     763          MOVE.B  D2,D1
0000176C  4E4F                     764          TRAP    #15
0000176E  103C 000E                765          MOVE.B  #14,D0
00001772                           766          
00001772  6000 0A5C                767          BRA DSEND
00001776                           768          
00001776                           769  JSR010
00001776  B63C 0002                770          CMP.B   #%010,D3
0000177A  6600 002A                771          BNE     JSR111
0000177E  43F9 00002464            772          LEA     OPENPTR,A1
00001784  4E4F                     773          TRAP    #15
00001786  43F9 00002458            774          LEA     VALA,A1
0000178C  4E4F                     775          TRAP    #15
0000178E  103C 0003                776          MOVE.B  #3,D0
00001792  1206                     777          MOVE.B  D6,D1
00001794  4E4F                     778          TRAP    #15
00001796  103C 000E                779          MOVE.B  #14,D0
0000179A  43F9 00002469            780          LEA     CLOSEPTR,A1
000017A0  4E4F                     781          TRAP    #15
000017A2  6000 005E                782          BRA     JSRPRINT2
000017A6                           783  JSR111
000017A6  B63C 0007                784          CMP.B   #%111,D3
000017AA  6600 09F8                785          BNE     DSERR
000017AE  BC3C 0000                786          CMP.B   #%000,D6
000017B2  6600 0024                787          BNE     JSR111001
000017B6  43F9 00002470            788          LEA     DOLLAR,A1
000017BC  4E4F                     789          TRAP    #15
000017BE  341A                     790          MOVE.W  (A2)+,D2
000017C0  48E7 0400                791          MOVEM.L D5,-(SP)    
000017C4  1A3C 0030                792          MOVE.B  #48,D5
000017C8  4EB8 118A                793          JSR     HEXOUT
000017CC  4CDF 0020                794          MOVEM.L (SP)+,D5
000017D0  103C 000E                795          MOVE.B  #14,D0
000017D4  6000 002C                796          BRA     JSRPRINT2
000017D8                           797          
000017D8                           798  JSR111001
000017D8  BC3C 0001                799          CMP.B   #%001,D6
000017DC  6600 09C6                800          BNE     DSERR
000017E0  43F9 00002470            801          LEA     DOLLAR,A1
000017E6  4E4F                     802          TRAP    #15
000017E8  241A                     803          MOVE.L  (A2)+,D2
000017EA  48E7 0400                804          MOVEM.L D5,-(SP)
000017EE  1A3C 0030                805          MOVE.B  #48,D5
000017F2  4EB8 118A                806          JSR     HEXOUT
000017F6  4CDF 0020                807          MOVEM.L (SP)+,D5
000017FA  103C 000E                808          MOVE.B  #14,D0
000017FE  6000 0002                809          BRA     JSRPRINT2
00001802                           810          
00001802                           811  JSRPRINT2
00001802  43F9 0000246E            812          LEA     COMMA,A1
00001808  4E4F                     813          TRAP    #15
0000180A  43F9 00002458            814          LEA     VALA,A1
00001810  4E4F                     815          TRAP    #15
00001812  103C 0003                816          MOVE.B  #3,D0
00001816  3207                     817          MOVE.W  D7,D1
00001818  4E4F                     818          TRAP    #15
0000181A  103C 000E                819          MOVE.B  #14,D0
0000181E                           820          
0000181E  6000 09B0                821          BRA     DSEND
00001822                           822          
00001822                           823          
00001822                           824  DMOVEM
00001822                           825  *printing movem
00001822  43F9 0000247A            826          LEA     MOVEM,A1
00001828  4E4F                     827          TRAP    #15
0000182A  43F9 00002462            828          LEA     VALM,A1
00001830  4E4F                     829          TRAP    #15
00001832                           830          
00001832                           831  *parsing initial bits
00001832  E55C                     832          ROL.W   #2,D4
00001834  1E04                     833          MOVE.B  D4,D7
00001836  0207 0001                834          ANDI.B  #%1,D7      *getting dr field
0000183A                           835          
0000183A  E95C                     836          ROL.W   #4,D4
0000183C  1A04                     837          MOVE.B  D4,D5
0000183E  0205 0001                838          ANDI.B  #1,D5       *getting size field
00001842                           839          
00001842                           840          *printing size
00001842  BA7C 0000                841          CMP     #0,D5
00001846  6600 000E                842          BNE     MOVEML
0000184A  43F9 00002452            843          LEA     MODEW,A1
00001850  4E4F                     844          TRAP    #15
00001852  6000 000A                845          BRA     MOVEMEA
00001856                           846  MOVEML        
00001856  43F9 00002455            847          LEA     MODEL,A1
0000185C  4E4F                     848          TRAP    #15
0000185E                           849          
0000185E                           850  MOVEMEA   
0000185E  43F9 000023FC            851          LEA     SM3,A1
00001864  4E4F                     852          TRAP    #15
00001866                           853          
00001866  E75C                     854          ROL.W   #3,D4       *mode bits
00001868  1604                     855          MOVE.B  D4,D3
0000186A  0203 0007                856          ANDI.B  #%111,D3
0000186E  E75C                     857          ROL.W   #3,D4       *register bits
00001870  1C04                     858          MOVE.B  D4,D6
00001872  0206 0007                859          ANDI.B  #%111,D6
00001876                           860          
00001876  341A                     861          MOVE.W  (A2)+,D2
00001878                           862          
00001878  BE3C 0001                863          CMP.B   #1,D7
0000187C  6600 0016                864          BNE     MOVEMEB
00001880                           865          
00001880  48E7 2000                866          MOVEM.L D2,-(SP)
00001884  4EB8 121C                867          JSR     ADDRMODEALL
00001888  4CDF 0004                868          MOVEM.L (SP)+,D2
0000188C                           869          
0000188C  43F9 0000246E            870          LEA     COMMA,A1
00001892  4E4F                     871          TRAP    #15
00001894                           872          
00001894                           873  MOVEMEB 
00001894                           874          
00001894  48E7 0100                875          MOVEM.L D7,-(SP)
00001898                           876          
00001898  B63C 0004                877          CMP.B   #%100,D3
0000189C  6700 000E                878          BEQ     MOVEMEB1
000018A0                           879          
000018A0  3E02                     880          MOVE.W  D2,D7
000018A2  0247 FF00                881          ANDI.W  #$FF00,D7
000018A6  E04F                     882          LSR.W   #8,D7
000018A8  6000 0008                883          BRA     MOVEMEB2
000018AC                           884          
000018AC                           885  MOVEMEB1 
000018AC  3E02                     886          MOVE.W  D2,D7
000018AE  0247 00FF                887          ANDI.W  #$FF,D7
000018B2                           888          
000018B2                           889  MOVEMEB2
000018B2                           890  
000018B2  4EB9 000019AA            891          JSR     MOVEMLOOP
000018B8  4CDF 0080                892          MOVEM.L (SP)+,D7
000018BC  103C 0037                893          MOVE.B  #55,D0
000018C0  B83C 0008                894          CMP.B   #8,D4
000018C4  6C00 0040                895          BGE     MOVEM3
000018C8  103C 000E                896          MOVE.B  #14,D0
000018CC                           897          
000018CC  43F9 00002458            898  MOVEM2  LEA     VALA,A1
000018D2  4E4F                     899          TRAP    #15
000018D4                           900          
000018D4  103C 0003                901          MOVE.B  #3,D0
000018D8  1204                     902          MOVE.B  D4,D1
000018DA  4E4F                     903          TRAP    #15
000018DC  103C 000E                904          MOVE.B  #14,D0
000018E0                           905          
000018E0  BA3C 0001                906          CMP.B   #1,D5
000018E4  6700 0020                907          BEQ     MOVEM3
000018E8                           908          
000018E8  43F9 00002474            909          LEA     DASH,A1
000018EE  4E4F                     910          TRAP    #15
000018F0  D205                     911          ADD.B   D5,D1
000018F2  5301                     912          SUBQ.B  #1,D1
000018F4                           913          
000018F4  43F9 00002458            914          LEA     VALA,A1
000018FA  4E4F                     915          TRAP    #15
000018FC  103C 0003                916          MOVE.B  #3,D0
00001900  4E4F                     917          TRAP    #15
00001902  103C 000E                918          MOVE.B  #14,D0
00001906                           919          
00001906  48E7 0100                920  MOVEM3  MOVEM.L D7,-(SP)
0000190A  3E02                     921          MOVE.W  D2,D7
0000190C                           922          
0000190C  B63C 0004                923          CMP.B   #%100,D3
00001910  6700 000A                924          BEQ     MOVEM31
00001914                           925          
00001914  0247 00FF                926          ANDI.W  #$FF,D7
00001918  6000 0008                927          BRA     MOVEM32
0000191C                           928          
0000191C                           929  MOVEM31 
0000191C  0247 FF00                930          ANDI.W  #$FF00,D7
00001920  E04F                     931          LSR.W   #8,D7
00001922                           932  
00001922  4EB9 000019AA            933  MOVEM32 JSR     MOVEMLOOP
00001928  4CDF 0080                934          MOVEM.L (SP)+,D7
0000192C                           935          
0000192C  B03C 0037                936          CMP.B   #55,D0
00001930  6700 0016                937          BEQ     MOVEM4
00001934                           938          
00001934  B83C 0008                939          CMP.B   #8,D4
00001938  6C00 0054                940          BGE     MOVEM5
0000193C                           941          
0000193C  103C 000E                942          MOVE.B  #14,D0
00001940  43F9 00002472            943          LEA     SLASH,A1
00001946  4E4F                     944          TRAP    #15
00001948                           945  
00001948  103C 000E                946  MOVEM4  MOVE.B  #14,D0
0000194C  B83C 0008                947          CMP.B   #8,D4
00001950  6C00 003C                948          BGE     MOVEM5
00001954                           949          
00001954  43F9 0000245A            950          LEA     VALD,A1
0000195A  4E4F                     951          TRAP    #15
0000195C                           952          
0000195C  103C 0003                953          MOVE.B  #3,D0
00001960  1204                     954          MOVE.B  D4,D1
00001962  4E4F                     955          TRAP    #15
00001964  103C 000E                956          MOVE.B  #14,D0
00001968                           957          
00001968  BA3C 0001                958          CMP.B   #1,D5
0000196C  6700 0020                959          BEQ     MOVEM5
00001970                           960          
00001970  43F9 00002474            961          LEA     DASH,A1
00001976  4E4F                     962          TRAP    #15
00001978  D205                     963          ADD.B   D5,D1
0000197A  5301                     964          SUBQ.B  #1,D1
0000197C                           965          
0000197C  43F9 0000245A            966          LEA     VALD,A1
00001982  4E4F                     967          TRAP    #15
00001984  103C 0003                968          MOVE.B  #3,D0
00001988  4E4F                     969          TRAP    #15
0000198A  103C 000E                970          MOVE.B  #14,D0
0000198E                           971          
0000198E                           972          
0000198E                           973  
0000198E  103C 000E                974  MOVEM5  MOVE.B  #14,D0
00001992                           975          
00001992  BE3C 0001                976          CMP.B   #1,D7
00001996  6700 0838                977          BEQ     DSEND
0000199A                           978          
0000199A  43F9 0000246E            979          LEA     COMMA,A1
000019A0  4E4F                     980          TRAP    #15
000019A2                           981          
000019A2  4EB8 121C                982          JSR     ADDRMODEALL
000019A6                           983          
000019A6  6000 0828                984          BRA     DSEND
000019AA                           985  
000019AA                           986  MOVEMLOOP
000019AA  1A3C 0000                987          MOVE.B  #0,D5
000019AE  183C 0000                988          MOVE.B  #0,D4
000019B2                           989          
000019B2                           990  MOVEMSTEP
000019B2  B63C 0004                991          CMP.B   #%100,D3
000019B6  6700 0014                992          BEQ     MOVEMSHIFTL
000019BA  6000 0018                993          BRA     MOVEMSHIFTR
000019BE                           994  MOVEMSTEP1
000019BE  0C05 0000                995          CMPI.B  #0,D5
000019C2  6E00 0026                996          BGT     MOVEMLOOPDONE
000019C6  5204                     997          ADDQ.B  #1,D4
000019C8  6000 0012                998          BRA     MOVEMSTEP2
000019CC                           999  
000019CC                          1000  MOVEMSHIFTL
000019CC  E30F                    1001          LSL.B   #1,D7
000019CE  6500 0016               1002          BCS     MOVEMLOOPINC
000019D2  60EA                    1003          BRA     MOVEMSTEP1
000019D4                          1004  
000019D4                          1005  MOVEMSHIFTR
000019D4  E20F                    1006          LSR.B   #1,D7
000019D6  6500 000E               1007          BCS     MOVEMLOOPINC
000019DA  60E2                    1008          BRA     MOVEMSTEP1
000019DC                          1009  
000019DC                          1010  MOVEMSTEP2
000019DC  B83C 0008               1011          CMP.B   #8,D4
000019E0  6DD0                    1012          BLT     MOVEMSTEP
000019E2  6000 0006               1013          BRA     MOVEMLOOPDONE
000019E6                          1014  
000019E6                          1015  MOVEMLOOPINC
000019E6  5205                    1016          ADDQ.B  #1,D5
000019E8  60F2                    1017          BRA     MOVEMSTEP2
000019EA                          1018  
000019EA                          1019  MOVEMLOOPDONE
000019EA  4E75                    1020          RTS
000019EC                          1021          
000019EC                          1022          
000019EC                          1023  MOVEMLOOPSINGLEAR
000019EC                          1024          
000019EC                          1025          
000019EC  6000 07E2               1026          BRA     DSEND
000019F0                          1027  
000019F0                          1028  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000019F0                          1029  
000019F0  4E71                    1030  DS0101  NOP
000019F2                          1031          
000019F2  4E71                    1032  DADDQ   NOP
000019F4  43F9 0000247F           1033          LEA     ADDM,A1
000019FA  4E4F                    1034          TRAP    #15
000019FC  43F9 00002460           1035          LEA     VALQ,A1
00001A02  4E4F                    1036          TRAP    #15
00001A04                          1037          
00001A04                          1038          *parsing data to d1
00001A04  E75C                    1039          ROL.W   #3,D4
00001A06  1204                    1040          MOVE.B  D4,D1
00001A08  C23C 0007               1041          AND.B   #%111,D1
00001A0C                          1042          
00001A0C                          1043          *ensuring next bit is 0
00001A0C  E35C                    1044          ROL.W   #1,D4
00001A0E  1A04                    1045          MOVE.B  D4,D5
00001A10  CA3C 0001               1046          AND.B   #%1,D5
00001A14  BA7C 0000               1047          CMP     #0,D5
00001A18  6600 078A               1048          BNE     DSERR
00001A1C                          1049          
00001A1C                          1050          *parsing and printing size
00001A1C  E55C                    1051          ROL.W   #2,D4
00001A1E  1A04                    1052          MOVE.B  D4,D5
00001A20  CA3C 0003               1053          AND.B   #%11,D5
00001A24  4EB8 11D2               1054          JSR     SIZE
00001A28  43F9 00002400           1055          LEA     SM4,A1
00001A2E  4E4F                    1056          TRAP    #15
00001A30                          1057          
00001A30                          1058          *parsing effective address information
00001A30                          1059          *mode:
00001A30  E75C                    1060          ROL.W   #3,D4
00001A32  1604                    1061          MOVE.B  D4,D3
00001A34  C63C 0007               1062          AND.B   #%111,D3
00001A38                          1063          
00001A38                          1064          *register:
00001A38  E71C                    1065          ROL.B   #3,D4
00001A3A  1C04                    1066          MOVE.B  D4,D6
00001A3C  CC3C 0007               1067          AND.B   #%111,D6
00001A40                          1068          
00001A40                          1069          *printing data
00001A40  43F9 0000245C           1070          LEA     VALN,A1
00001A46  4E4F                    1071          TRAP    #15
00001A48  103C 0003               1072          MOVE.B  #3,D0
00001A4C  4E4F                    1073          TRAP    #15
00001A4E  103C 000E               1074          MOVE.B  #14,D0
00001A52  43F9 0000246E           1075          LEA     COMMA,A1
00001A58  4E4F                    1076          TRAP    #15
00001A5A                          1077          
00001A5A  B67C 0004               1078          CMP     #%100,D3
00001A5E  6700 0744               1079          BEQ     DSERR
00001A62  4EB8 121C               1080          JSR     ADDRMODEALL
00001A66                          1081          
00001A66  6000 0768               1082          BRA     DSEND
00001A6A                          1083          
00001A6A                          1084  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A6A                          1085  
00001A6A                          1086  DS0110  
00001A6A  E95C                    1087          ROL.W   #4,D4   *Get next 4 bits
00001A6C  1404                    1088          MOVE.B  D4,D2   *Copy to D2
00001A6E  0202 000F               1089          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001A72                          1090          
00001A72  B43C 0000               1091          CMP.B   #%0000,D2   *BRA
00001A76  6700 001E               1092          BEQ     DBRA
00001A7A                          1093          
00001A7A  B43C 000E               1094          CMP.B   #%1110,D2   *BGT   
00001A7E  6700 00A2               1095          BEQ     DBGT
00001A82                          1096          
00001A82  B43C 000F               1097          CMP.B   #%1111,D2   *BLE   
00001A86  6700 00D6               1098          BEQ     DBLE
00001A8A                          1099          
00001A8A  B43C 0007               1100          CMP.B   #%0111,D2   *BEQ   
00001A8E  6700 010E               1101          BEQ     DBEQ
00001A92                          1102          
00001A92  6000 0720               1103          BRA     DSERRINS
00001A96                          1104          
00001A96  43F9 000024BF           1105  DBRA    LEA     BRAM,A1
00001A9C  4E4F                    1106          TRAP    #15
00001A9E                          1107          
00001A9E  43F9 00002412           1108          LEA     SM7,A1
00001AA4  4E4F                    1109          TRAP    #15
00001AA6                          1110  
00001AA6  E15C                    1111          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001AA8  1204                    1112          MOVE.B  D4,D1
00001AAA  0281 00001100           1113          ANDI.L  #$1100,D1
00001AB0                          1114          
00001AB0  0C01 0000               1115          CMPI.B  #%00000000,D1
00001AB4  6700 0028               1116          BEQ     DBRA_16BIT      * Word
00001AB8                          1117          
00001AB8  0C01 00FF               1118          CMPI.B  #%11111111,D1
00001ABC  6700 0042               1119          BEQ     DBRA_32BIT      * Long
00001AC0                          1120          
00001AC0                          1121          * 8 Bit Displacement
00001AC0  43F9 00002470           1122          LEA     DOLLAR,A1
00001AC6  4E4F                    1123          TRAP    #15
00001AC8                          1124          
00001AC8  341A                    1125          MOVE.W  (A2)+,D2
00001ACA  D441                    1126          ADD.W   D1,D2
00001ACC  5842                    1127          ADD.W   #4,D2   *unsure   
00001ACE  1A3C 0030               1128          MOVE.B  #48,D5
00001AD2  4EB8 118A               1129          JSR     HEXOUT
00001AD6  6000 06F8               1130          BRA     DSEND
00001ADA                          1131  
00001ADA                          1132          *Displacement is put in D1      
00001ADA                          1133          
00001ADA                          1134          
00001ADA  6000 06F4               1135          BRA     DSEND
00001ADE                          1136          
00001ADE                          1137  DBRA_16BIT
00001ADE  43F9 00002470           1138          LEA     DOLLAR,A1
00001AE4  4E4F                    1139          TRAP    #15
00001AE6  341A                    1140          MOVE.W  (A2)+,D2
00001AE8  D44A                    1141          ADD.W   A2,D2
00001AEA  5542                    1142          SUB.W   #2,D2   *unsure
00001AEC  48E7 0400               1143          MOVEM.L D5,-(SP)    
00001AF0  1A3C 0030               1144          MOVE.B  #48,D5
00001AF4  4EB8 118A               1145          JSR     HEXOUT
00001AF8  4CDF 0020               1146          MOVEM.L (SP)+,D5
00001AFC  6000 06D2               1147          BRA     DSEND
00001B00                          1148  
00001B00                          1149  DBRA_32BIT
00001B00  43F9 00002470           1150          LEA     DOLLAR,A1
00001B06  4E4F                    1151          TRAP    #15
00001B08  241A                    1152          MOVE.L  (A2)+,D2
00001B0A  D48A                    1153          ADD.L   A2,D2
00001B0C  5582                    1154          SUB.L   #2,D2   *unsure
00001B0E  48E7 0400               1155          MOVEM.L D5,-(SP)
00001B12  1A3C 0030               1156          MOVE.B  #48,D5
00001B16  4EB8 118A               1157          JSR     HEXOUT
00001B1A  4CDF 0020               1158          MOVEM.L (SP)+,D5
00001B1E  6000 06B0               1159          BRA     DSEND
00001B22                          1160          
00001B22                          1161          
00001B22                          1162          
00001B22  43F9 000024AB           1163  DBGT    LEA     BGTM,A1
00001B28  4E4F                    1164          TRAP    #15
00001B2A                          1165          
00001B2A  43F9 00002412           1166          LEA     SM7,A1
00001B30  4E4F                    1167          TRAP    #15
00001B32                          1168          
00001B32  E15C                    1169          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B34  1204                    1170          MOVE.B  D4,D1
00001B36  0241 00FF               1171          ANDI.W  #%0000000011111111,D1
00001B3A                          1172          
00001B3A  0C01 0000               1173          CMPI.B  #%00000000,D1
00001B3E  679E                    1174          BEQ     DBRA_16BIT      * Word
00001B40                          1175          
00001B40  0C01 00FF               1176          CMPI.B  #%11111111,D1
00001B44  67BA                    1177          BEQ     DBRA_32BIT      * Long
00001B46                          1178          
00001B46  43F9 00002470           1179          LEA     DOLLAR,A1
00001B4C  4E4F                    1180          TRAP    #15
00001B4E                          1181      
00001B4E  340A                    1182          MOVE.W  A2,D2
00001B50  D441                    1183          ADD.W   D1,D2
00001B52                          1184    
00001B52  1A3C 0030               1185          MOVE.B  #48,D5
00001B56  4EB8 118A               1186          JSR     HEXOUT
00001B5A  6000 0674               1187          BRA     DSEND
00001B5E                          1188  
00001B5E  43F9 000024AF           1189  DBLE    LEA     BLEM,A1
00001B64  4E4F                    1190          TRAP    #15
00001B66                          1191          
00001B66  43F9 00002412           1192          LEA     SM7,A1
00001B6C  4E4F                    1193          TRAP    #15
00001B6E                          1194          
00001B6E  E15C                    1195          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001B70  1204                    1196          MOVE.B  D4,D1
00001B72  0241 00FF               1197          ANDI.W  #%0000000011111111,D1
00001B76                          1198          
00001B76  0C01 0000               1199          CMPI.B  #%00000000,D1
00001B7A  6700 FF62               1200          BEQ     DBRA_16BIT      * Word
00001B7E                          1201          
00001B7E  0C01 00FF               1202          CMPI.B  #%11111111,D1
00001B82  6700 FF7C               1203          BEQ     DBRA_32BIT      * Long
00001B86                          1204          
00001B86  43F9 00002470           1205          LEA     DOLLAR,A1
00001B8C  4E4F                    1206          TRAP    #15
00001B8E                          1207          
00001B8E  340A                    1208          MOVE.W  A2,D2
00001B90  D441                    1209          ADD.W   D1,D2
00001B92                          1210   
00001B92  1A3C 0030               1211          MOVE.B  #48,D5
00001B96  4EB8 118A               1212          JSR     HEXOUT
00001B9A                          1213          
00001B9A  6000 0634               1214          BRA     DSEND
00001B9E                          1215  
00001B9E  43F9 000024B3           1216  DBEQ    LEA     BEQM,A1
00001BA4  4E4F                    1217          TRAP    #15
00001BA6                          1218          
00001BA6  43F9 00002412           1219          LEA     SM7,A1
00001BAC  4E4F                    1220          TRAP    #15
00001BAE                          1221          
00001BAE  E15C                    1222          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001BB0  1204                    1223          MOVE.B  D4,D1
00001BB2  0241 00FF               1224          ANDI.W  #%0000000011111111,D1
00001BB6                          1225          
00001BB6  0C01 0000               1226          CMPI.B  #%00000000,D1
00001BBA  6700 FF22               1227          BEQ     DBRA_16BIT      * Word
00001BBE                          1228          
00001BBE  0C01 00FF               1229          CMPI.B  #%11111111,D1
00001BC2  6700 FF3C               1230          BEQ     DBRA_32BIT      * Long
00001BC6                          1231          
00001BC6  43F9 00002470           1232          LEA     DOLLAR,A1
00001BCC  4E4F                    1233          TRAP    #15
00001BCE                          1234  
00001BCE  340A                    1235          MOVE.W  A2,D2
00001BD0  D441                    1236          ADD.W   D1,D2
00001BD2                          1237   
00001BD2  1A3C 0030               1238          MOVE.B  #48,D5
00001BD6  4EB8 118A               1239          JSR     HEXOUT
00001BDA                          1240          
00001BDA  6000 05F4               1241          BRA     DSEND
00001BDE                          1242  
00001BDE                          1243  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BDE                          1244  
00001BDE  4E71                    1245  DS0111  NOP
00001BE0                          1246          
00001BE0  4E71                    1247  DMOVEQ  NOP
00001BE2  43F9 0000247A           1248          LEA     MOVEM,A1
00001BE8  4E4F                    1249          TRAP    #15
00001BEA  43F9 00002460           1250          LEA     VALQ,A1
00001BF0  4E4F                    1251          TRAP    #15
00001BF2  43F9 00002405           1252          LEA     SM5,A1
00001BF8  4E4F                    1253          TRAP    #15
00001BFA                          1254          
00001BFA                          1255          *getting register number
00001BFA  E75C                    1256          ROL.W   #3,D4
00001BFC  1A04                    1257          MOVE.B  D4,D5
00001BFE  CA3C 0007               1258          AND.B   #%111,D5
00001C02                          1259          
00001C02                          1260          *throwing error if next digit not 0
00001C02  E35C                    1261          ROL.W   #1,D4
00001C04  1C04                    1262          MOVE.B  D4,D6
00001C06  CC3C 0001               1263          AND.B   #%1,D6
00001C0A  BC3C 0000               1264          CMP.B   #0,D6
00001C0E  6600 0594               1265          BNE     DSERR
00001C12                          1266          
00001C12                          1267          *getting data and printing information
00001C12  E15C                    1268          ROL.W   #8,D4
00001C14  1204                    1269          MOVE.B  D4,D1
00001C16  C23C 00FF               1270          AND.B   #%11111111,D1
00001C1A  43F9 0000245C           1271          LEA     VALN,A1
00001C20  4E4F                    1272          TRAP    #15
00001C22  103C 0003               1273          MOVE.B  #3,D0
00001C26  4E4F                    1274          TRAP    #15
00001C28  103C 000E               1275          MOVE.B  #14,D0
00001C2C  43F9 0000246E           1276          LEA     COMMA,A1
00001C32  4E4F                    1277          TRAP    #15
00001C34  43F9 0000245A           1278          LEA     VALD,A1
00001C3A  4E4F                    1279          TRAP    #15
00001C3C  103C 0003               1280          MOVE.B  #3,D0
00001C40  3205                    1281          MOVE.W  D5,D1
00001C42  4E4F                    1282          TRAP    #15
00001C44                          1283          
00001C44  6000 058A               1284          BRA     DSEND
00001C48                          1285          
00001C48                          1286  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C48                          1287  
00001C48  4E71                    1288  DS1000  NOP
00001C4A                          1289          
00001C4A  E75C                    1290  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001C4C  1A04                    1291          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001C4E  0205 0007               1292          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001C52  1C05                    1293          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001C54                          1294  
00001C54  E75C                    1295          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001C56  1A04                    1296          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001C58  0205 0007               1297          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001C5C  1E05                    1298          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001C5E  BA3C 0000               1299          CMP.B   #%000,D5        ; Compare with byte size
00001C62  6700 0016               1300          BEQ     DORB
00001C66  BA3C 0001               1301          CMP.B   #%001,D5        ; Compare with word size
00001C6A  6700 0022               1302          BEQ     DORW
00001C6E  BA3C 0002               1303          CMP.B   #%010,D5        ; Compare with long size
00001C72  6700 002E               1304          BEQ     DORL
00001C76                          1305  
00001C76  6000 0558               1306          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001C7A                          1307  
00001C7A  43F9 0000248F           1308  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001C80  4E4F                    1309          TRAP    #15             ; Print ORM string
00001C82  43F9 0000244F           1310          LEA     MODEB,A1        ; Load effective address of MODEB string
00001C88  4E4F                    1311          TRAP    #15             ; Print MODEB string
00001C8A  6000 002A               1312          BRA     DORA            ; Branch to addressing mode parsing
00001C8E                          1313  
00001C8E  43F9 0000248F           1314  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001C94  4E4F                    1315          TRAP    #15             ; Print ORM string
00001C96  43F9 00002452           1316          LEA     MODEW,A1        ; Load effective address of MODEW string
00001C9C  4E4F                    1317          TRAP    #15             ; Print MODEW string
00001C9E  6000 0016               1318          BRA     DORA            ; Branch to addressing mode parsing
00001CA2                          1319  
00001CA2  43F9 0000248F           1320  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001CA8  4E4F                    1321          TRAP    #15             ; Print ORM string
00001CAA  43F9 00002455           1322          LEA     MODEL,A1        ; Load effective address of MODEL string
00001CB0  4E4F                    1323          TRAP    #15             ; Print MODEL string
00001CB2  6000 0002               1324          BRA     DORA            ; Branch to addressing mode parsing
00001CB6                          1325  
00001CB6  43F9 0000240B           1326  DORA    LEA     SM6,A1
00001CBC  4E4F                    1327          TRAP    #15
00001CBE  ED5C                    1328          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001CC0  1A04                    1329          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001CC2  0205 0038               1330          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001CC6  E61D                    1331          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001CC8  1605                    1332          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001CCA  0204 0007               1333          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001CCE  1C04                    1334          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001CD0                          1335  
00001CD0  BE3C 0004               1336          CMP.B   #%100,D7        ; Compare opmode with '100'
00001CD4  6D00 0006               1337          BLT     DORAE           ; If opmode < '100', branch to DORAE
00001CD8  6000 002A               1338          BRA     DORAD           ; Else, branch to DORAD
00001CDC                          1339  
00001CDC  4EB8 121C               1340  DORAE   JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001CE0  103C 000E               1341          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001CE4  43F9 0000246E           1342          LEA     COMMA,A1        ; Load effective address of COMMA string
00001CEA  4E4F                    1343          TRAP    #15             ; Print comma
00001CEC  43F9 0000245A           1344          LEA     VALD,A1
00001CF2  4E4F                    1345          TRAP    #15
00001CF4  1206                    1346          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001CF6  103C 0003               1347          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001CFA  4E4F                    1348          TRAP    #15             ; Print register number
00001CFC  103C 000E               1349          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D00  6000 04CE               1350          BRA     DSEND           ; Branch to DSEND
00001D04                          1351  
00001D04  1206                    1352  DORAD   MOVE.B  D6,D1           ; Move ea num to D1 to print
00001D06  103C 0003               1353          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001D0A  4E4F                    1354          TRAP    #15             ; Print register number
00001D0C  103C 000E               1355          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D10  43F9 0000246E           1356          LEA     COMMA,A1        ; Load effective address of COMMA string
00001D16  4E4F                    1357          TRAP    #15             ; Print comma
00001D18  4EB8 121C               1358          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001D1C  103C 000E               1359          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001D20  6000 04AE               1360          BRA     DSEND           ; Branch to DSEND                 
00001D24                          1361  
00001D24                          1362  
00001D24                          1363  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D24                          1364  
00001D24  4E71                    1365  DS1001  NOP
00001D26  4E71                    1366  DSUB    NOP
00001D28                          1367  *print sub
00001D28  43F9 00002483           1368          LEA     SUBM,A1
00001D2E  4E4F                    1369          TRAP    #15
00001D30                          1370  
00001D30                          1371  *parse dn reg: 3 bits
00001D30                          1372  *number of the data register involved
00001D30                          1373  *nums 0-7, paired with below
00001D30  E75C                    1374          ROL.W   #3,D4       *dn reg num in d1
00001D32  1E04                    1375          MOVE.B  D4,D7
00001D34  0207 0007               1376          ANDI.B  #%111,D7
00001D38                          1377          
00001D38  3C47                    1378          MOVE.W  D7,A6       *temporary for storage
00001D3A                          1379  
00001D3A                          1380  *parse opmode: 3 bits
00001D3A                          1381  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001D3A                          1382  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001D3A                          1383  *invalid: 111, 011
00001D3A                          1384  *parse first digit separately
00001D3A  E35C                    1385          ROL.W   #1,D4       *addressing mode in d2
00001D3C  1E04                    1386          MOVE.B  D4,D7
00001D3E  0207 0001               1387          ANDI.B  #%1,D7
00001D42                          1388          
00001D42                          1389  *parsing next two digits of size
00001D42  E55C                    1390          ROL.W   #2,D4       *size in d5
00001D44  1A04                    1391          MOVE.B  D4,D5
00001D46  0205 0003               1392          ANDI.B  #%11,D5
00001D4A  4EB8 11D2               1393          JSR     SIZE
00001D4E  43F9 00002405           1394          LEA     SM5,A1
00001D54  4E4F                    1395          TRAP    #15
00001D56                          1396          
00001D56                          1397  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001D56  BE3C 0000               1398          CMP.B   #%0,D7       *if 1, then register info printed last
00001D5A  6700 0026               1399          BEQ     DSUBEA      *branch to ea before register
00001D5E                          1400          
00001D5E                          1401  *printing register information
00001D5E                          1402  DSUBPRNTREG
00001D5E  43F9 0000245A           1403          LEA     VALD,A1
00001D64  4E4F                    1404          TRAP    #15
00001D66  320E                    1405          MOVE.W  A6,D1       *retrieving a6 register data
00001D68  103C 0003               1406          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001D6C  4E4F                    1407          TRAP    #15         *printing register number
00001D6E  103C 000E               1408          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001D72  BE3C 0000               1409          CMP.B   #%0,D7      *if info finished printing
00001D76  6700 0458               1410          BEQ     DSEND      *branch to end
00001D7A  43F9 0000246E           1411          LEA     COMMA,A1
00001D80  4E4F                    1412          TRAP    #15
00001D82                          1413  
00001D82                          1414          
00001D82                          1415  * parse ea mode: 3 bits
00001D82                          1416  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001D82                          1417  *address reg direct not allowed for .B operations
00001D82                          1418  *no invalid
00001D82                          1419  DSUBEA
00001D82  E75C                    1420          ROL.W   #3,D4       *ea mode
00001D84  1604                    1421          MOVE.B  D4,D3
00001D86  0203 0007               1422          ANDI.B  #%111,D3
00001D8A                          1423  
00001D8A                          1424  *parse ea reg: 3 bits
00001D8A                          1425  *no invalid: paired with opmode below (nums 0-7)
00001D8A                          1426  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001D8A  E75C                    1427          ROL.W   #3,D4       *ea mode
00001D8C  1C04                    1428          MOVE.B  D4,D6
00001D8E  0206 0007               1429          ANDI.B  #%111,D6
00001D92                          1430          
00001D92  2803                    1431          MOVE.L  D3,D4   *temporarily using D4 
00001D94                          1432          
00001D94                          1433  *comparisons
00001D94  B67C 0004               1434          CMP     #%100,D3
00001D98  6700 040A               1435          BEQ     DSERR
00001D9C  4EB8 121C               1436          JSR     ADDRMODEALL
00001DA0  BE3C 0001               1437          CMP.B   #%1,D7      *if info printed
00001DA4  6700 042A               1438          BEQ     DSEND       *end
00001DA8  43F9 0000246E           1439          LEA     COMMA,A1
00001DAE  4E4F                    1440          TRAP    #15
00001DB0  60AC                    1441          BRA     DSUBPRNTREG *check d6 for size of data
00001DB2                          1442  *then take data from d4 and print (?)
00001DB2                          1443  
00001DB2  6000 041C               1444          BRA     DSEND
00001DB6                          1445  
00001DB6                          1446  
00001DB6                          1447  
00001DB6  4E71                    1448  DS1010  NOP
00001DB8  6000 03FA               1449          BRA     DSERRINS
00001DBC                          1450  
00001DBC                          1451          
00001DBC                          1452  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001DBC                          1453  
00001DBC  4E71                    1454  DS1011  NOP
00001DBE  6000 03F4               1455          BRA     DSERRINS
00001DC2                          1456          
00001DC2                          1457  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001DC2                          1458  
00001DC2                          1459  DAND    
00001DC2  E75C                    1460          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001DC4  1A04                    1461          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001DC6  0205 0007               1462          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001DCA  1C05                    1463          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001DCC                          1464  
00001DCC  E75C                    1465          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001DCE  1A04                    1466          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001DD0  0205 0007               1467          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001DD4  1E05                    1468          MOVE.B  D5,D7           ; Store opmode in D7 for later use
00001DD6  BA3C 0000               1469          CMP.B   #%000,D5        ; Compare with byte size
00001DDA  6700 0016               1470          BEQ     DANDB
00001DDE  BA3C 0001               1471          CMP.B   #%001,D5        ; Compare with word size
00001DE2  6700 0022               1472          BEQ     DANDW
00001DE6  BA3C 0002               1473          CMP.B   #%010,D5        ; Compare with long size
00001DEA  6700 002E               1474          BEQ     DANDL
00001DEE                          1475  
00001DEE  6000 03E0               1476          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001DF2                          1477  
00001DF2  43F9 0000248B           1478  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
00001DF8  4E4F                    1479          TRAP    #15             ; Print ANDM string
00001DFA  43F9 0000244F           1480          LEA     MODEB,A1        ; Load effective address of MODEB string
00001E00  4E4F                    1481          TRAP    #15             ; Print MODEB string
00001E02  6000 002A               1482          BRA     DANDA           ; Branch to addressing mode parsing
00001E06                          1483  
00001E06  43F9 0000248B           1484  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E0C  4E4F                    1485          TRAP    #15             ; Print ANDM string
00001E0E  43F9 00002452           1486          LEA     MODEW,A1        ; Load effective address of MODEW string
00001E14  4E4F                    1487          TRAP    #15             ; Print MODEW string
00001E16  6000 0016               1488          BRA     DANDA           ; Branch to addressing mode parsing
00001E1A                          1489  
00001E1A  43F9 0000248B           1490  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001E20  4E4F                    1491          TRAP    #15             ; Print ANDM string
00001E22  43F9 00002455           1492          LEA     MODEL,A1        ; Load effective address of MODEL string
00001E28  4E4F                    1493          TRAP    #15             ; Print MODEL string
00001E2A  6000 0002               1494          BRA     DANDA           ; Branch to addressing mode parsing
00001E2E                          1495  
00001E2E  43F9 00002405           1496  DANDA   LEA     SM5,A1
00001E34  4E4F                    1497          TRAP    #15
00001E36  ED5C                    1498          ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001E38  1A04                    1499          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001E3A  0205 0038               1500          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001E3E  E61D                    1501          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001E40  1605                    1502          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001E42  0204 0007               1503          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001E46  1C04                    1504          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001E48                          1505  
00001E48  BE3C 0004               1506          CMP.B   #%100,D7        ; Compare opmode with '100'
00001E4C  6D00 0006               1507          BLT     DANDAE          ; If opmode < '100', branch to DANDAE
00001E50  6000 002A               1508          BRA     DANDAD          ; Else, branch to DANDAD
00001E54                          1509  
00001E54  4EB8 121C               1510  DANDAE  JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E58  103C 000E               1511          MOVE.B  #14,D0          ; Set D0 to #14 to print strings
00001E5C  43F9 0000246E           1512          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E62  4E4F                    1513          TRAP    #15             ; Print comma
00001E64  43F9 0000245A           1514          LEA     VALD,A1
00001E6A  4E4F                    1515          TRAP    #15
00001E6C  1206                    1516          MOVE.B  D6,D1           ; Move ea num to D1 to print
00001E6E  103C 0003               1517          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E72  4E4F                    1518          TRAP    #15             ; Print register number
00001E74  103C 000E               1519          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E78  6000 0356               1520          BRA     DSEND           ; Branch to DSEND
00001E7C                          1521  
00001E7C  1206                    1522  DANDAD  MOVE.B  D6,D1           ; Move ea num to D1 to print
00001E7E  103C 0003               1523          MOVE.B  #3,D0           ; Set D0 to #3 to print register number
00001E82  4E4F                    1524          TRAP    #15             ; Print register number
00001E84  103C 000E               1525          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E88  43F9 0000246E           1526          LEA     COMMA,A1        ; Load effective address of COMMA string
00001E8E  4E4F                    1527          TRAP    #15             ; Print comma
00001E90  4EB8 121C               1528          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001E94  103C 000E               1529          MOVE.B  #14,D0          ; Set D0 back to #14 for printing the strings
00001E98  6000 0336               1530          BRA     DSEND           ; Branch to DSEND 
00001E9C                          1531  
00001E9C                          1532  
00001E9C  6000 0332               1533          BRA     DSEND       
00001EA0                          1534          
00001EA0                          1535  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001EA0                          1536  
00001EA0  4E71                    1537  DS1101  NOP
00001EA2                          1538  
00001EA2  4E71                    1539  DADD    NOP
00001EA4  43F9 0000247F           1540          LEA     ADDM,A1
00001EAA  4E4F                    1541          TRAP    #15
00001EAC                          1542          
00001EAC                          1543          *parse dn reg: 3 bits
00001EAC                          1544  *number of the data register involved
00001EAC                          1545  *nums 0-7, paired with below
00001EAC  E75C                    1546          ROL.W   #3,D4       *dn reg num in d7
00001EAE  1E04                    1547          MOVE.B  D4,D7
00001EB0  0207 0007               1548          ANDI.B  #%111,D7
00001EB4                          1549          
00001EB4  3C47                    1550          MOVE.W  D7,A6
00001EB6                          1551  
00001EB6                          1552  *parse opmode: 3 bits
00001EB6                          1553  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001EB6                          1554  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001EB6                          1555  *invalid: 111, 011
00001EB6                          1556  *parse first digit separately
00001EB6  E35C                    1557          ROL.W   #1,D4       *addressing mode in d2
00001EB8  1E04                    1558          MOVE.B  D4,D7
00001EBA  0207 0001               1559          ANDI.B  #%1,D7
00001EBE                          1560          
00001EBE                          1561  *parsing next two digits of size
00001EBE  E55C                    1562          ROL.W   #2,D4       *size in d5
00001EC0  1A04                    1563          MOVE.B  D4,D5
00001EC2  0205 0003               1564          ANDI.B  #%11,D5
00001EC6  BA3C 0003               1565          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001ECA  6700 007C               1566          BEQ     DADDA
00001ECE  4EB8 11D2               1567          JSR     SIZE
00001ED2  43F9 00002405           1568          LEA     SM5,A1
00001ED8  4E4F                    1569          TRAP    #15
00001EDA                          1570          
00001EDA                          1571  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001EDA  BE3C 0000               1572          CMP.B   #%0,D7       *if 0, then register info printed last
00001EDE  6700 002E               1573          BEQ     DADDEA      *branch to ea before register
00001EE2                          1574          
00001EE2                          1575  *printing register information
00001EE2                          1576  DADDPRNTREG
00001EE2  BA3C 0003               1577          CMP.B   #%11,D5
00001EE6  6700 0058               1578          BEQ     PRINTA
00001EEA  43F9 0000245A           1579          LEA     VALD,A1
00001EF0                          1580  ADDCONT
00001EF0  4E4F                    1581          TRAP    #15
00001EF2  320E                    1582          MOVE.W  A6,D1       *moving reg num to d1 to print
00001EF4  103C 0003               1583          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001EF8  4E4F                    1584          TRAP    #15         *printing register number
00001EFA  103C 000E               1585          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001EFE  BE3C 0000               1586          CMP.B   #%0,D7      *if info finished printing
00001F02  6700 02CC               1587          BEQ     DSEND      *branch to end
00001F06  43F9 0000246E           1588          LEA     COMMA,A1
00001F0C  4E4F                    1589          TRAP    #15
00001F0E                          1590  
00001F0E                          1591          
00001F0E                          1592  * parse ea mode: 3 bits
00001F0E                          1593  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001F0E                          1594  *address reg direct not allowed for .B operations
00001F0E                          1595  *no invalid
00001F0E                          1596  DADDEA
00001F0E  E75C                    1597          ROL.W   #3,D4       *ea mode
00001F10  1604                    1598          MOVE.B  D4,D3
00001F12  0203 0007               1599          ANDI.B  #%111,D3
00001F16                          1600  
00001F16                          1601  *parse ea reg: 3 bits
00001F16                          1602  *no invalid: paired with opmode below (nums 0-7)
00001F16                          1603  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001F16  E75C                    1604          ROL.W   #3,D4       *ea mode
00001F18  1C04                    1605          MOVE.B  D4,D6
00001F1A  0206 0007               1606          ANDI.B  #%111,D6
00001F1E                          1607          
00001F1E                          1608  *comparisons
00001F1E  B67C 0004               1609          CMP     #%100,D3
00001F22  6700 005A               1610          BEQ     ADDDATACHECK
00001F26                          1611  DATACHECKCONT
00001F26  4EB8 121C               1612          JSR     ADDRMODEALL
00001F2A  BE3C 0001               1613          CMP.B   #%1,D7      *if info printed
00001F2E  6700 02A0               1614          BEQ     DSEND       *end
00001F32  43F9 0000246E           1615          LEA     COMMA,A1
00001F38  4E4F                    1616          TRAP    #15
00001F3A  60A6                    1617          BRA     DADDPRNTREG 
00001F3C                          1618  
00001F3C  6000 0292               1619          BRA     DSEND
00001F40                          1620          
00001F40  43F9 00002458           1621  PRINTA  LEA     VALA,A1
00001F46  60A8                    1622          BRA     ADDCONT
00001F48                          1623  
00001F48                          1624          
00001F48  4E71                    1625  DADDA   NOP
00001F4A  43F9 00002458           1626          LEA     VALA,A1
00001F50  4E4F                    1627          TRAP    #15
00001F52  BE3C 0000               1628          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001F56  6600 000C               1629          BNE     ADDAL
00001F5A  43F9 00002452           1630          LEA     MODEW,A1
00001F60  6000 000C               1631          BRA     ADDSIZEEND
00001F64  43F9 00002455           1632  ADDAL   LEA     MODEL,A1
00001F6A  6000 0002               1633          BRA     ADDSIZEEND
00001F6E                          1634  ADDSIZEEND
00001F6E  4E4F                    1635          TRAP    #15
00001F70  43F9 00002400           1636          LEA     SM4,A1
00001F76  4E4F                    1637          TRAP    #15
00001F78  1E3C 0000               1638          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001F7C  6090                    1639          BRA     DADDEA
00001F7E                          1640  ADDDATACHECK
00001F7E  BA3C 0003               1641          CMP.B   #%11,D5
00001F82  6700 0220               1642          BEQ     DSERR
00001F86  609E                    1643          BRA     DATACHECKCONT
00001F88                          1644          
00001F88                          1645          
00001F88                          1646  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F88                          1647  
00001F88                          1648  DS1110
00001F88  E75C                    1649          ROL.W   #3,D4           * [D2] Reading count
00001F8A  1404                    1650          MOVE.B  D4,D2
00001F8C  0202 0007               1651          ANDI.B  #%111,D2
00001F90                          1652          
00001F90  E35C                    1653          ROL.W   #1,D4           * [D3] Reading direction
00001F92  1604                    1654          MOVE.B  D4,D3
00001F94  0203 0001               1655          ANDI.B  #%1,D3
00001F98                          1656          
00001F98  E55C                    1657          ROL.W   #2,D4           * [D5] Reading size
00001F9A  1A04                    1658          MOVE.B  D4,D5
00001F9C  0205 0003               1659          ANDI.B  #%11,D5
00001FA0                          1660          
00001FA0  BA3C 0003               1661          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001FA4  6700 00F0               1662          BEQ     DS1110MEM
00001FA8                          1663          
00001FA8  E35C                    1664          ROL.W   #1,D4           * [D6] Reading count mode
00001FAA  1C04                    1665          MOVE.B  D4,D6
00001FAC  0206 0001               1666          ANDI.B  #%1,D6
00001FB0                          1667          
00001FB0  E55C                    1668          ROL.W   #2,D4           * [D7] reading type of shift
00001FB2  1E04                    1669          MOVE.B  D4,D7
00001FB4  0207 0003               1670          ANDI.B  #%11,D7
00001FB8                          1671          
00001FB8  E75C                    1672          ROL.W   #3,D4           * [D1] reading register
00001FBA  1204                    1673          MOVE.B  D4,D1
00001FBC  0201 0007               1674          ANDI.B  #%111,D1
00001FC0                          1675          
00001FC0  BE3C 0001               1676          CMP.B   #%01,D7   *Determine shift type
00001FC4  6700 008E               1677          BEQ     DLS
00001FC8  BE3C 0000               1678          CMP.B   #%00,D7
00001FCC  6700 0092               1679          BEQ     DAS
00001FD0  BE3C 0003               1680          CMP.B   #%11,D7
00001FD4  6700 0096               1681          BEQ     DRO
00001FD8                          1682          
00001FD8  6000 01F6               1683          BRA     DSEND               *Fallback in case of invalid code
00001FDC                          1684          
00001FDC  48E7 FFFF               1685  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001FE0  4EB9 00002078           1686          JSR     DS1110SIDE
00001FE6  4CDF FFFF               1687          MOVEM.L (SP)+,A0-A7/D0-D7
00001FEA                          1688          
00001FEA  48E7 FFFF               1689          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001FEE  4EB8 11D2               1690          JSR     SIZE
00001FF2  4CDF FFFF               1691          MOVEM.L (SP)+,A0-A7/D0-D7
00001FF6                          1692          
00001FF6  103C 000E               1693          MOVE.B  #14,D0
00001FFA  43F9 00002405           1694          LEA     SM5,A1
00002000  4E4F                    1695          TRAP    #15
00002002                          1696          
00002002  BA3C 0003               1697          CMP.B   #%11,D5
00002006  6700 00B4               1698          BEQ     DS1110MEMA
0000200A                          1699          
0000200A  BC3C 0001               1700          CMP.B   #%1,D6
0000200E  6700 003A               1701          BEQ     DS1110_REG_D
00002012  6000 002C               1702          BRA     DS1110_REG_I
00002016                          1703          
00002016  1C01                    1704  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00002018                          1705          
00002018  103C 0003               1706          MOVE.B  #3,D0
0000201C  1202                    1707          MOVE.B  D2,D1
0000201E  4E4F                    1708          TRAP    #15
00002020                          1709          
00002020  103C 000E               1710          MOVE.B  #14,D0
00002024  43F9 0000246E           1711          LEA     COMMA,A1
0000202A  4E4F                    1712          TRAP    #15
0000202C                          1713          
0000202C  43F9 0000245A           1714          LEA     VALD,A1
00002032  4E4F                    1715          TRAP    #15
00002034                          1716          
00002034  103C 0003               1717          MOVE.B  #3,D0
00002038  1206                    1718          MOVE.B  D6,D1
0000203A  4E4F                    1719          TRAP    #15
0000203C                          1720          
0000203C  6000 0192               1721          BRA     DSEND
00002040                          1722          
00002040                          1723  DS1110_REG_I
00002040  43F9 0000245C           1724          LEA     VALN,A1
00002046  4E4F                    1725          TRAP    #15
00002048  60CC                    1726          BRA     DS1110B
0000204A                          1727  
0000204A                          1728  DS1110_REG_D
0000204A  43F9 0000245A           1729          LEA     VALD,A1
00002050  4E4F                    1730          TRAP    #15
00002052  60C2                    1731          BRA     DS1110B       
00002054                          1732          
00002054  43F9 00002496           1733  DLS     LEA     LSM,A1
0000205A  4E4F                    1734          TRAP    #15
0000205C  6000 FF7E               1735          BRA     DS1110A
00002060                          1736          
00002060  43F9 0000249D           1737  DAS     LEA     ASM,A1
00002066  4E4F                    1738          TRAP    #15
00002068  6000 FF72               1739          BRA     DS1110A
0000206C                          1740          
0000206C  43F9 000024A4           1741  DRO     LEA     ROM,A1
00002072  4E4F                    1742          TRAP    #15
00002074  6000 FF66               1743          BRA     DS1110A
00002078                          1744          
00002078                          1745  DS1110SIDE
00002078  103C 0006               1746          MOVE.B  #6,D0
0000207C  B63C 0001               1747          CMP.B   #1,D3
00002080  6700 000C               1748          BEQ     DS1110LSIDE
00002084  123C 0052               1749          MOVE.B  #82,D1
00002088  4E4F                    1750          TRAP    #15
0000208A  6000 0008               1751          BRA     DS1110SIDEEND
0000208E                          1752  
0000208E                          1753  DS1110LSIDE
0000208E  123C 004C               1754          MOVE.B  #76,D1
00002092  4E4F                    1755          TRAP    #15
00002094                          1756          
00002094                          1757  DS1110SIDEEND
00002094  4E75                    1758          RTS 
00002096                          1759  
00002096                          1760  DS1110MEM
00002096                          1761                                  * Shift type is instead stored in D2
00002096                          1762          
00002096  E75C                    1763          ROL.W   #3,D4           * [D6] Reading address mode
00002098  1C04                    1764          MOVE.B  D4,D6
0000209A  0206 0007               1765          ANDI.B  #%111,D6
0000209E                          1766          
0000209E  E75C                    1767          ROL.W   #3,D4           * [D1] Reading address register
000020A0  1204                    1768          MOVE.B  D4,D1
000020A2  0201 0007               1769          ANDI.B  #%111,D1
000020A6                          1770          
000020A6  B43C 0001               1771          CMP.B   #%01,D2
000020AA  67A8                    1772          BEQ     DLS
000020AC  B43C 0000               1773          CMP.B   #%00,D2
000020B0  67AE                    1774          BEQ     DAS
000020B2  B43C 0003               1775          CMP.B   #%11,D2
000020B6  67B4                    1776          BEQ     DRO
000020B8  6000 0116               1777          BRA     DSEND
000020BC                          1778          
000020BC                          1779          
000020BC                          1780  DS1110MEMA
000020BC                          1781          
000020BC  BC3C 0002               1782          CMP.B   #%010,D6
000020C0  6700 002E               1783          BEQ     DS1110MEM_REG
000020C4  BC3C 0003               1784          CMP.B   #%011,D6
000020C8  6700 004C               1785          BEQ     DS1110MEM_INC
000020CC  BC3C 0004               1786          CMP.B   #%100,D6
000020D0  6700 006A               1787          BEQ     DS1110MEM_DEC
000020D4                          1788          
000020D4  BC3C 0007               1789          CMP.B   #%111,D6
000020D8  6600 00CA               1790          BNE     DSERR
000020DC                          1791          
000020DC  B23C 0000               1792          CMP.B   #%000,D1
000020E0  6700 0080               1793          BEQ     DS1110MEM_CUSW
000020E4  B23C 0001               1794          CMP.B   #%001,D1
000020E8  6700 0096               1795          BEQ     DS1110MEM_CUSL
000020EC                          1796          
000020EC  6000 00E2               1797          BRA     DSEND
000020F0                          1798  
000020F0                          1799  DS1110MEM_REG
000020F0  43F9 00002464           1800          LEA     OPENPTR,A1
000020F6  4E4F                    1801          TRAP    #15
000020F8                          1802          
000020F8  43F9 00002458           1803          LEA     VALA,A1
000020FE  4E4F                    1804          TRAP    #15
00002100                          1805          
00002100  103C 0003               1806          MOVE.B  #3,D0
00002104  4E4F                    1807          TRAP    #15
00002106  103C 000E               1808          MOVE.B  #14,D0
0000210A                          1809          
0000210A  43F9 00002469           1810          LEA     CLOSEPTR,A1
00002110  4E4F                    1811          TRAP    #15
00002112                          1812          
00002112  6000 00BC               1813          BRA     DSEND
00002116                          1814  
00002116                          1815  DS1110MEM_INC
00002116  43F9 00002464           1816          LEA     OPENPTR,A1
0000211C  4E4F                    1817          TRAP    #15
0000211E                          1818          
0000211E  43F9 00002458           1819          LEA     VALA,A1
00002124  4E4F                    1820          TRAP    #15
00002126                          1821          
00002126  103C 0003               1822          MOVE.B  #3,D0
0000212A  4E4F                    1823          TRAP    #15
0000212C  103C 000E               1824          MOVE.B  #14,D0
00002130                          1825          
00002130  43F9 0000246B           1826          LEA     CLOSEIPTR,A1
00002136  4E4F                    1827          TRAP    #15
00002138                          1828          
00002138  6000 0096               1829          BRA     DSEND
0000213C                          1830  
0000213C                          1831  DS1110MEM_DEC
0000213C  43F9 00002466           1832          LEA     OPENDPTR,A1
00002142  4E4F                    1833          TRAP    #15
00002144                          1834          
00002144  43F9 00002458           1835          LEA     VALA,A1
0000214A  4E4F                    1836          TRAP    #15
0000214C                          1837          
0000214C  103C 0003               1838          MOVE.B  #3,D0
00002150  4E4F                    1839          TRAP    #15
00002152  103C 000E               1840          MOVE.B  #14,D0
00002156                          1841          
00002156  43F9 00002469           1842          LEA     CLOSEPTR,A1
0000215C  4E4F                    1843          TRAP    #15
0000215E                          1844          
0000215E  6000 0070               1845          BRA     DSEND
00002162                          1846          
00002162                          1847  DS1110MEM_CUSW
00002162  43F9 00002470           1848          LEA     DOLLAR,A1
00002168  4E4F                    1849          TRAP    #15
0000216A  341A                    1850          MOVE.W  (A2)+,D2
0000216C  48E7 0400               1851          MOVEM.L D5,-(SP)
00002170  1A3C 0030               1852          MOVE.B  #48,D5
00002174  4EB8 118A               1853          JSR     HEXOUT
00002178  4CDF 0020               1854          MOVEM.L (SP)+,D5
0000217C  6000 0052               1855          BRA     DSEND
00002180                          1856          
00002180                          1857  DS1110MEM_CUSL
00002180  43F9 00002470           1858          LEA     DOLLAR,A1
00002186  4E4F                    1859          TRAP    #15
00002188  241A                    1860          MOVE.L  (A2)+,D2
0000218A  48E7 0400               1861          MOVEM.L D5,-(SP)
0000218E  1A3C 0030               1862          MOVE.B  #48,D5
00002192  4EB8 118A               1863          JSR     HEXOUT
00002196  4CDF 0020               1864          MOVEM.L (SP)+,D5
0000219A  6000 0034               1865          BRA     DSEND
0000219E                          1866          
0000219E                          1867  
0000219E                          1868  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000219E                          1869  
0000219E  4E71                    1870  DS1111  NOP
000021A0  6000 002E               1871          BRA     DSEND
000021A4                          1872  
000021A4                          1873  *DS Final
000021A4                          1874  *--------------------------------------------------------------------------------------------------
000021A4                          1875  
000021A4  103C 000E               1876  DSERR   MOVE.B  #14,D0
000021A8  43F9 00002421           1877          LEA     ERRM,A1
000021AE  4E4F                    1878          TRAP    #15
000021B0  6000 001E               1879          BRA     DSEND
000021B4                          1880          
000021B4                          1881  DSERRINS
000021B4  103C 000E               1882          MOVE.B  #14,D0
000021B8  43F9 00002429           1883          LEA     ERRMINS,A1
000021BE  4E4F                    1884          TRAP    #15
000021C0  6000 000E               1885          BRA     DSEND
000021C4                          1886  
000021C4                          1887  DSERREA
000021C4  103C 000E               1888          MOVE.B  #14,D0
000021C8  43F9 0000242A           1889          LEA     ERRMEA,A1
000021CE  4E4F                    1890          TRAP    #15
000021D0                          1891  
000021D0  4E75                    1892  DSEND   RTS
000021D2                          1893  
000021D2  43F9 000023F2           1894  DSEOF   LEA     LB,A1
000021D8  103C 000E               1895          MOVE.B  #14,D0
000021DC  4E4F                    1896          TRAP    #15
000021DE                          1897          
000021DE  43F9 000022F4           1898          LEA     REST,A1
000021E4  103C 000E               1899          MOVE.B  #14,D0
000021E8  4E4F                    1900          TRAP    #15
000021EA                          1901          
000021EA  103C 0005               1902          MOVE.B  #5,D0
000021EE  4E4F                    1903          TRAP    #15
000021F0                          1904          
000021F0  B23C 0059               1905          CMP.B   #89,D1
000021F4  6700 EE0A               1906          BEQ     START
000021F8  B23C 0079               1907          CMP.B   #121,D1
000021FC  6700 EE02               1908          BEQ     START
00002200                          1909  
00002200  43F9 000023F2           1910  END     LEA     LB,A1
00002206  103C 000E               1911          MOVE.B  #14,D0
0000220A  4E4F                    1912          TRAP    #15
0000220C                          1913          
0000220C  43F9 000023F2           1914          LEA     LB,A1
00002212  103C 000E               1915          MOVE.B  #14,D0
00002216  4E4F                    1916          TRAP    #15
00002218                          1917          
00002218  43F9 00002311           1918          LEA     ENDMSG,A1
0000221E  103C 000E               1919          MOVE.B  #14,D0
00002222  4E4F                    1920          TRAP    #15
00002224                          1921          
00002224  43F9 00002339           1922          LEA     AUTHOR,A1
0000222A  4E4F                    1923          TRAP    #15
0000222C                          1924          
0000222C  43F9 000023F2           1925          LEA     LB,A1
00002232  103C 000E               1926          MOVE.B  #14,D0
00002236  4E4F                    1927          TRAP    #15
00002238                          1928          
00002238  103C 0009               1929          MOVE.B  #9,D0
0000223C  4E4F                    1930          TRAP    #15
0000223E                          1931  
0000223E                          1932  *Initialized Variables
0000223E                          1933  *--------------------------------------------------------------------------------------------------
0000223E                          1934  
0000223E  =0000000D               1935  CR      EQU     $0D
0000223E  =0000000A               1936  LF      EQU     $0A
0000223E  =00000009               1937  HT      EQU     $09
0000223E                          1938  
0000223E= 54 68 69 73 20 69 ...   1939  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000022C6= 45 6E 74 65 72 20 ...   1940  ASTART  DC.B    'Enter start address: $',0
000022DD= 45 6E 74 65 72 20 ...   1941  AEND    DC.B    'Enter end address:   $',0
000022F4= 52 65 73 74 61 72 ...   1942  REST    DC.B    'Restart Disassembler (y/n)? ',0
00002311= 54 68 61 6E 6B 20 ...   1943  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002339= 4D 61 64 65 20 62 ...   1944  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000235E                          1945  
0000235E= 45 52 52 4F 52 3A ...   1946  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002398= 45 52 52 4F 52 3A ...   1947  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
000023BE= 45 52 52 4F 52 3A ...   1948  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000023F2                          1949  
000023F2= 0D 0A 00                1950  LB      DC.B    CR,LF,0
000023F5                          1951  
000023F5= 09 00                   1952  HTM     DC.B    HT,0
000023F7                          1953  
000023F7= 20 00                   1954  SM1     DC.B    ' ',0
000023F9= 20 20 00                1955  SM2     DC.B    '  ',0
000023FC= 20 20 20 00             1956  SM3     DC.B    '   ',0
00002400= 20 20 20 20 00          1957  SM4     DC.B    '    ',0
00002405= 20 20 20 20 20 00       1958  SM5     DC.B    '     ',0
0000240B= 20 20 20 20 20 20 00    1959  SM6     DC.B    '      ',0
00002412= 20 20 20 20 20 20 ...   1960  SM7     DC.B    '       ',0
0000241A                          1961  
0000241A= 54 45 53 54 00          1962  TESTM   DC.B    'TEST',0
0000241F                          1963  
0000241F= 00                      1964  NOTH    DC.B    '',0
00002420= 00                      1965  NOTH2   DC.B    '',0
00002421                          1966  
00002421= 20 2A 45 52 52 4F ...   1967  ERRM    DC.B    ' *ERROR',0
00002429= 00                      1968  ERRMINS DC.B    '',0
0000242A= 20 2A 45 52 52 4F ...   1969  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
0000244F                          1970  
0000244F= 2E 42 00                1971  MODEB   DC.B    '.B',0
00002452= 2E 57 00                1972  MODEW   DC.B    '.W',0
00002455= 2E 4C 00                1973  MODEL   DC.B    '.L',0
00002458                          1974  
00002458= 41 00                   1975  VALA    DC.B    'A',0
0000245A= 44 00                   1976  VALD    DC.B    'D',0
0000245C= 23 00                   1977  VALN    DC.B    '#',0
0000245E= 30 00                   1978  VAL0    DC.B    '0',0
00002460= 51 00                   1979  VALQ    DC.B    'Q',0
00002462= 4D 00                   1980  VALM    DC.B    'M',0
00002464                          1981  
00002464= 28 00                   1982  OPENPTR     DC.B    '(',0
00002466= 2D 28 00                1983  OPENDPTR    DC.B    '-(',0
00002469                          1984  
00002469= 29 00                   1985  CLOSEPTR    DC.B    ')',0
0000246B= 29 2B 00                1986  CLOSEIPTR   DC.B    ')+',0
0000246E                          1987  
0000246E= 2C 00                   1988  COMMA   DC.B    ',',0
00002470= 24 00                   1989  DOLLAR  DC.B    '$',0
00002472= 2F 00                   1990  SLASH   DC.B    '/',0
00002474= 2D 00                   1991  DASH    DC.B    '-',0
00002476                          1992  
00002476= 4E 4F 50 00             1993  NOPM    DC.B    'NOP',0
0000247A                          1994  
0000247A= 4D 4F 56 45 00          1995  MOVEM   DC.B    'MOVE',0
0000247F                          1996  
0000247F= 41 44 44 00             1997  ADDM    DC.B    'ADD',0
00002483                          1998  
00002483= 53 55 42 00             1999  SUBM    DC.B    'SUB',0
00002487                          2000  
00002487= 4C 45 41 00             2001  LEAM    DC.B    'LEA',0
0000248B                          2002  
0000248B= 41 4E 44 00             2003  ANDM    DC.B    'AND',0
0000248F= 4F 52 00                2004  ORM     DC.B    'OR',0
00002492= 4E 4F 54 00             2005  NOTM    DC.B    'NOT',0
00002496                          2006  
00002496= 4C 53 00                2007  LSM    DC.B    'LS',0
00002499= 4C 53 52 00             2008  LSRM    DC.B    'LSR',0
0000249D= 41 53 00                2009  ASM    DC.B    'AS',0
000024A0= 41 53 52 00             2010  ASRM    DC.B    'ASR',0
000024A4                          2011  
000024A4= 52 4F 00                2012  ROM    DC.B    'RO',0
000024A7= 52 4F 52 00             2013  RORM    DC.B    'ROR',0
000024AB                          2014  
000024AB= 42 47 54 00             2015  BGTM    DC.B    'BGT',0
000024AF= 42 4C 45 00             2016  BLEM    DC.B    'BLE',0
000024B3= 42 45 51 00             2017  BEQM    DC.B    'BEQ',0
000024B7                          2018  
000024B7= 4A 53 52 00             2019  JSRM    DC.B    'JSR',0
000024BB= 52 54 53 00             2020  RTSM    DC.B    'RTS',0
000024BF                          2021  
000024BF= 42 52 41 00             2022  BRAM    DC.B    'BRA',0
000024C3                          2023  
000024C3                          2024  
000024C3                          2025      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1F64
ADDCONT             1EF0
ADDDATACHECK        1F7E
ADDM                247F
ADDRMODEALL         121C
ADDSIZEEND          1F6E
ADREG               15D0
ADREGP              15E8
AEND                22DD
AM000               121C
AM001               123C
AM010               1264
AM011               1294
AM100               12C4
AM111               12F4
AM111001            1322
AM111100            1348
AMEND               1376
ANDM                248B
ASM                 249D
ASRM                24A0
ASTART              22C6
AUTHOR              2339
BEQM                24B3
BGTM                24AB
BLEM                24AF
BRAM                24BF
CLOSEIPTR           246B
CLOSEPTR            2469
COMMA               246E
CR                  D
DADD                1EA2
DADDA               1F48
DADDEA              1F0E
DADDPRNTREG         1EE2
DADDQ               19F2
DAND                1DC2
DANDA               1E2E
DANDAD              1E7C
DANDAE              1E54
DANDB               1DF2
DANDL               1E1A
DANDW               1E06
DAS                 2060
DASH                2474
DATACHECKCONT       1F26
DBEQ                1B9E
DBGT                1B22
DBLE                1B5E
DBRA                1A96
DBRA_16BIT          1ADE
DBRA_32BIT          1B00
DISASM              137C
DJSR                1652
DJSR_CUSL           16EA
DJSR_CUSW           16CC
DJSR_REG            16A6
DLEA                1714
DLEAP               174A
DLS                 2054
DMOVE2              13AE
DMOVEA              1452
DMOVEM              1822
DMOVEQ              1BE0
DNOP                1516
DNOT                1522
DNOTA               1582
DNOTB               1546
DNOTL               156E
DNOTW               155A
DOLLAR              2470
DOR                 1C4A
DORA                1CB6
DORAD               1D04
DORAE               1CDC
DORB                1C7A
DORL                1CA2
DORW                1C8E
DREG                15B8
DRO                 206C
DRTS                1708
DS0                 1386
DS00                139A
DS01                1474
DS010               1492
DS0100              14CE
DS0101              19F0
DS011               149C
DS0110              1A6A
DS0111              1BDE
DS1                 1390
DS10                147E
DS100               14A6
DS1000              1C48
DS1001              1D24
DS101               14B0
DS1010              1DB6
DS1011              1DBC
DS11                1488
DS110               14BA
DS1101              1EA0
DS111               14C4
DS1110              1F88
DS1110A             1FDC
DS1110B             2016
DS1110LSIDE         208E
DS1110MEM           2096
DS1110MEMA          20BC
DS1110MEM_CUSL      2180
DS1110MEM_CUSW      2162
DS1110MEM_DEC       213C
DS1110MEM_INC       2116
DS1110MEM_REG       20F0
DS1110SIDE          2078
DS1110SIDEEND       2094
DS1110_REG_D        204A
DS1110_REG_I        2040
DS1111              219E
DSEND               21D0
DSEOF               21D2
DSERR               21A4
DSERREA             21C4
DSERRINS            21B4
DSUB                1D26
DSUBEA              1D82
DSUBPRNTREG         1D5E
END                 2200
ENDMSG              2311
ERRM                2421
ERRMEA              242A
ERRMINS             2429
EXT                 1630
EXTW                1646
HDONE               11D0
HEXOUT              118A
HHEX                11A4
HNUM                11AC
HSKIP2              11BA
HSKIP3              11CE
HSTEP               1192
HSTEP2              11B0
HT                  9
HTM                 23F5
INTRO               223E
JSR010              1776
JSR111              17A6
JSR111001           17D8
JSRM                24B7
JSRPRINT2           1802
LB                  23F2
LEAM                2487
LF                  A
LSM                 2496
LSRM                2499
MADREG              1608
MODEB               244F
MODEL               2455
MODEW               2452
MOVECONT            13D2
MOVEERRCHECK        1468
MOVEM               247A
MOVEM2              18CC
MOVEM3              1906
MOVEM31             191C
MOVEM32             1922
MOVEM4              1948
MOVEM5              198E
MOVEMEA             185E
MOVEMEB             1894
MOVEMEB1            18AC
MOVEMEB2            18B2
MOVEML              1856
MOVEMLOOP           19AA
MOVEMLOOPDONE       19EA
MOVEMLOOPINC        19E6
MOVEMLOOPSINGLEAR   19EC
MOVEMSHIFTL         19CC
MOVEMSHIFTR         19D4
MOVEMSTEP           19B2
MOVEMSTEP1          19BE
MOVEMSTEP2          19DC
MSDONE              1418
MSIZE               13D2
MSIZEB              13FA
MSIZEL              140E
MSIZEW              1404
NOPM                2476
NOTH                241F
NOTH2               2420
NOTM                2492
OPENDPTR            2466
OPENPTR             2464
ORM                 248F
PARSE               1096
PCAPS               10C2
PDONE               10EC
PHEX                10B2
PNUM                10CA
PRINTA              1F40
PSTEP               109E
PSTEP2              10CE
RCONT               1176
READLN              1128
REST                22F4
ROM                 24A4
RORM                24A7
RPAUSE              117E
RSTEP               112E
RTSM                24BB
SDONE               1218
SIZE                11D2
SIZEB               11FA
SIZEL               120E
SIZEW               1204
SLASH               2472
SM1                 23F7
SM2                 23F9
SM3                 23FC
SM4                 2400
SM5                 2405
SM6                 240B
SM7                 2412
SRET                121A
START               1000
STARTER             0
SUBM                2483
TEST                103A
TESTM               241A
VAL0                245E
VALA                2458
VALD                245A
VALM                2462
VALN                245C
VALQ                2460
VERR1               10F8
VERR1M              235E
VERR2               1108
VERR2M              2398
VERR3               1118
VERR3M              23BE
VINPUT              10EE
