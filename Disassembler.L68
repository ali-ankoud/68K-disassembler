00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 5:21:45 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 00001FC4             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 0000204C             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 000021A5             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 00002063             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 000021A5             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 000020E4            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 0E90                109          BRA     END
000010F8                           110  
000010F8  43F9 0000211E            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 0E80                114          BRA     END
00001108                           115  
00001108  43F9 00002144            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 0E70                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  244B                     124          MOVE.L  A3,A2               *Set current address to start address
0000111A  1A3C 0000                125          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000111E                           126  
0000111E                           127  RSTEP                               *RSTEP: 
0000111E  381A                     128          MOVE.W  (A2)+,D4
00001120  340A                     129          MOVE.W  A2,D2
00001122  5542                     130          SUBQ.W  #2,D2
00001124                           131          
00001124  48E7 0400                132          MOVEM.L D5,-(SP)
00001128  1A3C 0000                133          MOVE.B  #0,D5
0000112C  4EB9 0000117A            134          JSR     HEXOUT              *Run printing operation for HEX address
00001132  4CDF 0020                135          MOVEM.L (SP)+,D5
00001136                           136          
00001136  43F9 0000217F            137          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000113C  103C 000E                138          MOVE.B  #14,D0
00001140  4E4F                     139          TRAP    #15
00001142                           140          
00001142  48E7 7F0F                141          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001146  4EB9 0000136C            142          JSR     DISASM              *Run disassembly for current machine code
0000114C  4CDF F0FE                143          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001150                           144          
00001150  5205                     145          ADDQ.B  #1,D5       *Increment counter by 1
00001152  BA3C 0020                146          CMP.B   #32,D5      *Check if we reached 32 lines
00001156  6700 0016                147          BEQ     RPAUSE      *Branch to pausing code
0000115A                           148          
0000115A  43F9 00002178            149          LEA     LB,A1       *Print line break
00001160  103C 000E                150          MOVE.B  #14,D0      
00001164  4E4F                     151          TRAP    #15
00001166                           152          
00001166                           153  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001166  B9CA                     154          CMP.L   A2,A4       *Check if we reached the end address
00001168  6D00 0DEE                155          BLT     DSEOF       *End loop if so
0000116C  60B0                     156          BRA     RSTEP       *Or else continue the loop
0000116E                           157          
0000116E                           158  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000116E  1A3C 0000                159          MOVE.B  #0,D5       * Reset D5 counter
00001172  103C 0005                160          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001176  4E4F                     161          TRAP    #15         * Only used for waiting for user to hit ENTER
00001178  60EC                     162          BRA     RCONT       *Continue with READLN loop
0000117A                           163  
0000117A                           164  *--------------------------------------------------------------------------------------------------
0000117A                           165  
0000117A                           166  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000117A  103C 0006                167          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000117E  163C 0008                168          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001182                           169          
00001182                           170  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001182  E99A                     171          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001184  2202                     172          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001186  0281 0000000F            173          ANDI.L  #$F,D1      * Filter to the right four bits
0000118C  B23C 000A                174          CMP.B   #10,D1      *Distinguish between number and letter
00001190  6D00 000A                175          BLT     HNUM        *Branch to number handling, or continue to letter handling
00001194                           176          
00001194                           177  HHEX                        *HHEX: Handle letters from HEXOUT for loop
00001194  0601 0037                178          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001198  6000 0006                179          BRA     HSTEP2      *Branch to step 2 of the iteration
0000119C                           180  
0000119C                           181  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
0000119C  0601 0030                182          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A0                           183  
000011A0                           184  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011A0  5303                     185          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011A2                           186          
000011A2  B205                     187          CMP.B   D5,D1
000011A4  6700 0004                188          BEQ     HSKIP2
000011A8                           189          
000011A8  4E4F                     190          TRAP #15            *Will print the ASCII value stored in D1
000011AA  0C03 0000                191  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011AE  6700 0010                192          BEQ     HDONE       *End loop if done
000011B2                           193          
000011B2  B23C 0030                194          CMP.B   #48,D1
000011B6  6700 0006                195          BEQ     HSKIP3
000011BA                           196          
000011BA  1A3C 0000                197          MOVE.B  #0,D5
000011BE                           198          
000011BE  60C2                     199  HSKIP3  BRA     HSTEP       *Or else continue loop
000011C0                           200          
000011C0  4E75                     201  HDONE   RTS
000011C2                           202  
000011C2                           203  
000011C2                           204  *--------------------------------------------------------------------------------------------------
000011C2                           205  
000011C2  103C 000E                206  SIZE    MOVE.B  #14,D0
000011C6  BA3C 0000                207          CMP.B   #%00,D5
000011CA  6700 001E                208          BEQ     SIZEB
000011CE  BA3C 0001                209          CMP.B   #%01,D5
000011D2  6700 0020                210          BEQ     SIZEW
000011D6  BA3C 0002                211          CMP.B   #%10,D5
000011DA  6700 0022                212          BEQ     SIZEL
000011DE  BA3C 0003                213          CMP.B   #%11,D5
000011E2  6700 0010                214          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011E6  6000 0022                215          BRA     SRET
000011EA                           216          
000011EA  43F9 000021D5            217  SIZEB   LEA     MODEB,A1
000011F0  6000 0016                218          BRA     SDONE
000011F4                           219  
000011F4  43F9 000021D8            220  SIZEW   LEA     MODEW,A1
000011FA  6000 000C                221          BRA     SDONE
000011FE                           222  
000011FE  43F9 000021DB            223  SIZEL   LEA     MODEL,A1
00001204  6000 0002                224          BRA     SDONE
00001208                           225  
00001208  4E4F                     226  SDONE   TRAP    #15
0000120A                           227  
0000120A  4E75                     228  SRET    RTS
0000120C                           229  
0000120C                           230  *-----------------------------------------------------------------------------------
0000120C                           231  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           232  *uses d1, d0, and a1
0000120C                           233  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           234  *uses d1, d0, and a1
0000120C                           235  ADDRMODEALL
0000120C                           236  *comparisons
0000120C  B67C 0000                237  AM000   CMP     #%000,D3
00001210  6600 001A                238          BNE     AM001
00001214  43F9 000021E0            239          LEA     VALD,A1
0000121A  4E4F                     240          TRAP    #15
0000121C  1206                     241          MOVE.B  D6,D1       *moving ea num to d1 to print
0000121E  103C 0003                242          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001222  4E4F                     243          TRAP    #15         *printing register number
00001224  103C 000E                244          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001228  6000 013C                245          BRA     AMEND
0000122C                           246  
0000122C                           247          
0000122C  B67C 0001                248  AM001   CMP     #%001,D3
00001230  6600 0022                249          BNE     AM010
00001234  BA7C 0000                250          CMP     #00,D5
00001238  6700 0CF0                251          BEQ     DSERR
0000123C  43F9 000021DE            252          LEA     VALA,A1
00001242  4E4F                     253          TRAP    #15
00001244  1206                     254          MOVE.B  D6,D1       *moving ea num to d1 to print
00001246  103C 0003                255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124A  4E4F                     256          TRAP    #15         *printing register number
0000124C  103C 000E                257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001250  6000 0114                258          BRA     AMEND
00001254                           259  
00001254  B67C 0002                260  AM010   CMP     #%010,D3
00001258  6600 002A                261          BNE     AM011
0000125C  43F9 000021E8            262          LEA     OPENPTR,A1
00001262  4E4F                     263          TRAP    #15
00001264  43F9 000021DE            264          LEA     VALA,A1
0000126A  4E4F                     265          TRAP    #15
0000126C  1206                     266          MOVE.B  D6,D1       *moving ea num to d1 to print
0000126E  103C 0003                267          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001272  4E4F                     268          TRAP    #15         *printing register number
00001274  103C 000E                269          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001278  43F9 000021ED            270          LEA     CLOSEPTR,A1
0000127E  4E4F                     271          TRAP    #15
00001280  6000 00E4                272          BRA     AMEND
00001284                           273  
00001284  B67C 0003                274  AM011   CMP     #%011,D3
00001288  6600 002A                275          BNE     AM100
0000128C  43F9 000021E8            276          LEA     OPENPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  43F9 000021DE            278          LEA     VALA,A1
0000129A  4E4F                     279          TRAP    #15
0000129C  1206                     280          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129E  103C 0003                281          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012A2  4E4F                     282          TRAP    #15         *printing register number
000012A4  103C 000E                283          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A8  43F9 000021EF            284          LEA     CLOSEIPTR,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  6000 00B4                286          BRA     AMEND
000012B4                           287  
000012B4  B67C 0004                288  AM100   CMP     #%100,D3
000012B8  6600 002A                289          BNE     AM111
000012BC  43F9 000021EA            290          LEA     OPENDPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  43F9 000021DE            292          LEA     VALA,A1
000012CA  4E4F                     293          TRAP    #15
000012CC  1206                     294          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CE  103C 0003                295          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012D2  4E4F                     296          TRAP    #15         *printing register number
000012D4  103C 000E                297          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D8  43F9 000021ED            298          LEA     CLOSEPTR,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  6000 0084                300          BRA     AMEND
000012E4                           301  
000012E4  B67C 0007                302  AM111   CMP     #%111,D3
000012E8  6600 0C40                303          BNE     DSERR
000012EC  BC7C 0000                304          CMP     #%000,D6
000012F0  6600 0020                305          BNE     AM111001
000012F4  43F9 000021F4            306          LEA     DOLLAR,A1
000012FA  4E4F                     307          TRAP    #15
000012FC  341A                     308          MOVE.W  (A2)+,D2
000012FE  48E7 0400                309          MOVEM.L D5,-(SP)    
00001302  1A3C 0030                310          MOVE.B  #48,D5
00001306  4EB8 117A                311          JSR     HEXOUT
0000130A  4CDF 0020                312          MOVEM.L (SP)+,D5
0000130E  6000 0056                313          BRA     AMEND
00001312                           314          
00001312                           315  AM111001
00001312  BC7C 0001                316          CMP     #%001,D6
00001316  6600 0020                317          BNE     AM111100
0000131A  43F9 000021F4            318          LEA     DOLLAR,A1
00001320  4E4F                     319          TRAP    #15
00001322  241A                     320          MOVE.L  (A2)+,D2
00001324  48E7 0400                321          MOVEM.L D5,-(SP)
00001328  1A3C 0030                322          MOVE.B  #48,D5
0000132C  4EB8 117A                323          JSR     HEXOUT
00001330  4CDF 0020                324          MOVEM.L (SP)+,D5
00001334  6000 0030                325          BRA     AMEND
00001338                           326          
00001338                           327  AM111100
00001338  BC7C 0004                328          CMP     #%100,D6
0000133C  6600 0BEC                329          BNE     DSERR
00001340  43F9 000021E2            330          LEA     VALN,A1
00001346  4E4F                     331          TRAP    #15
00001348  341A                     332          MOVE.W  (A2)+,D2
0000134A  48E7 0400                333          MOVEM.L D5,-(SP)    
0000134E  1A3C 0030                334          MOVE.B  #48,D5
00001352  103C 0003                335          MOVE.B  #3,D0
00001356  1202                     336          MOVE.B  D2,D1
00001358  4E4F                     337          TRAP    #15
0000135A  103C 000E                338          MOVE.B  #14,D0
0000135E  4CDF 0020                339          MOVEM.L (SP)+,D5
00001362  6000 0002                340          BRA     AMEND
00001366                           341          
00001366  103C 000E                342  AMEND   MOVE.B  #14,D0
0000136A  4E75                     343          RTS
0000136C                           344  
0000136C                           345  *--------------------------------------------------------------------------------------------------
0000136C                           346  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000136C                           347  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000136C                           348  
0000136C                           349  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000136C                           350  
0000136C                           351  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000136C                           352  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000136C                           353  
0000136C                           354  DISASM                      *DISASM: Disassemble a machine code
0000136C  E34C                     355          LSL.W   #1,D4       * Tier 0 binary search
0000136E  6500 0010                356          BCS     DS1
00001372  6000 0002                357          BRA     DS0
00001376                           358  
00001376                           359  *DS Tier 1 ----------------------------------------------------------------------------------------
00001376                           360  
00001376                           361  DS0                         *DS0: Tier 1 binary search for 0 side
00001376  E34C                     362          LSL.W   #1,D4       
00001378  6500 018A                363          BCS     DS01
0000137C  6000 000C                364          BRA     DS00
00001380                           365  
00001380                           366  DS1                         *DS1: Tier 1 binary search for 1 side
00001380  E34C                     367          LSL.W   #1,D4       
00001382  6500 0194                368          BCS     DS11
00001386  6000 0186                369          BRA     DS10
0000138A                           370  
0000138A                           371  DS00                        *DS00: Disassembly processing for 00 prefix
0000138A  E55C                     372          ROL.W   #2,D4       
0000138C  1A04                     373          MOVE.B  D4,D5
0000138E  0205 0003                374          ANDI.B  #%11,D5
00001392  0C05 0000                375          CMPI.B  #%00,D5
00001396  6700 0006                376          BEQ     DAND
0000139A  6000 00A2                377          BRA     DMOVE2
0000139E                           378  
0000139E  E95C                     379  DAND    ROL.W   #4,D4
000013A0  1A04                     380          MOVE.B  D4,D5
000013A2  0205 0002                381          ANDI.B  #%0010,D5
000013A6  0C05 0002                382          CMPI.B  #%0010,D5
000013AA  6600 0B8E                383          BNE     DSERRINS
000013AE                           384          
000013AE  E55C                     385          ROL.W   #2,D4
000013B0  1A04                     386          MOVE.B  D4,D5
000013B2  0205 0007                387          ANDI.B  #%111,D5
000013B6                           388          
000013B6  E75C                     389          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013B8  1604                     390          MOVE.B  D4,D3           ; Move the byte in D4 to D5
000013BA  0203 0007                391          ANDI.B  #%111,D3        ; AND operation to isolate the last 3 bits
000013BE                           392          
000013BE  E75C                     393          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013C0  1C04                     394          MOVE.B  D4,D6           ; Move the byte in D4 to D5
000013C2  0206 0007                395          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits
000013C6                           396          
000013C6  43F9 000021E0            397          LEA     VALD,A1         ; Load effective address of Dn
000013CC  4E4F                     398          TRAP    #15             ; Print Dn
000013CE  1E05                     399          MOVE.B  D5,D7           ; Store the register number for later use
000013D0                           400  
000013D0                           401          
000013D0  BA3C 0000                402          CMP.B   #%000,D5        ; Compare with byte size
000013D4  6700 0016                403          BEQ     DANDB
000013D8  BA3C 0001                404          CMP.B   #%001,D5        ; Compare with word size
000013DC  6700 0022                405          BEQ     DANDW
000013E0  BA3C 0002                406          CMP.B   #%010,D5        ; Compare with long size
000013E4  6700 002E                407          BEQ     DANDL
000013E8                           408          
000013E8  6000 0B6C                409          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013EC                           410  
000013EC  43F9 0000220B            411  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F2  4E4F                     412          TRAP    #15             ; Print ANDM string
000013F4  43F9 000021D5            413          LEA     MODEB,A1        ; Load effective address of MODEB string
000013FA  4E4F                     414          TRAP    #15             ; Print MODEB string
000013FC  6000 002A                415          BRA     DANDA           ; Branch to addressing mode parsing
00001400                           416  
00001400  43F9 0000220B            417  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
00001406  4E4F                     418          TRAP    #15             ; Print ANDM string
00001408  43F9 000021D8            419          LEA     MODEW,A1        ; Load effective address of MODEW string
0000140E  4E4F                     420          TRAP    #15             ; Print MODEW string
00001410  6000 0016                421          BRA     DANDA           ; Branch to addressing mode parsing
00001414                           422  
00001414  43F9 0000220B            423  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
0000141A  4E4F                     424          TRAP    #15             ; Print ANDM string
0000141C  43F9 000021DB            425          LEA     MODEL,A1        ; Load effective address of MODEL string
00001422  4E4F                     426          TRAP    #15             ; Print MODEL string
00001424  6000 0002                427          BRA     DANDA           ; Branch to addressing mode parsing
00001428                           428  
00001428  43F9 0000218B            429  DANDA   LEA     SM5,A1
0000142E  4E4F                     430          TRAP    #15
00001430                           431  
00001430  0204 0007                432          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001434  1C04                     433          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001436                           434  
00001436  4EB8 120C                435          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
0000143A                           436  
0000143A  6000 0B1A                437          BRA     DSEND                 
0000143E                           438  
0000143E                           439  
0000143E                           440          
0000143E                           441  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
0000143E  4E71                     442  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001440                           443          *size in d5 from above processing
00001440  43F9 000021FA            444          LEA     MOVEM,A1
00001446  4E4F                     445          TRAP    #15
00001448                           446                  
00001448                           447          *dest reg to d7
00001448  E75C                     448          ROL.W   #3,D4
0000144A  1E04                     449          MOVE.B  D4,D7
0000144C  CE3C 0007                450          AND.B   #%111,D7
00001450                           451          
00001450                           452          *dest mode to d3: An means MOVEA
00001450  E75C                     453          ROL.W   #3,D4
00001452  1604                     454          MOVE.B  D4,D3
00001454  C63C 0007                455          AND.B   #%111,D3
00001458  3C43                     456          MOVE.W  D3,A6
0000145A                           457          
0000145A  B67C 0001                458          CMP     #%001,D3
0000145E  6700 0082                459          BEQ     DMOVEA
00001462                           460  MOVECONT
00001462                           461  *printing size then first addressing moode, then comma
00001462                           462  *size is different for move
00001462  103C 000E                463  MSIZE   MOVE.B  #14,D0
00001466  BA3C 0001                464          CMP.B   #%01,D5
0000146A  6700 001E                465          BEQ     MSIZEB
0000146E  BA3C 0003                466          CMP.B   #%11,D5
00001472  6700 0020                467          BEQ     MSIZEW
00001476  BA3C 0002                468          CMP.B   #%10,D5
0000147A  6700 0022                469          BEQ     MSIZEL
0000147E  BA3C 0003                470          CMP.B   #%11,D5
00001482  6700 0010                471          BEQ     MSIZEW       *Assume WORD type on memory pointer things
00001486  6000 0AA2                472          BRA     DSERR
0000148A                           473          
0000148A  43F9 000021D5            474  MSIZEB  LEA     MODEB,A1
00001490  6000 0016                475          BRA     MSDONE
00001494                           476  
00001494  43F9 000021D8            477  MSIZEW  LEA     MODEW,A1
0000149A  6000 000C                478          BRA     MSDONE
0000149E                           479  
0000149E  43F9 000021DB            480  MSIZEL  LEA     MODEL,A1
000014A4  6000 0002                481          BRA     MSDONE
000014A8                           482  
000014A8  4E4F                     483  MSDONE  TRAP    #15
000014AA                           484  
000014AA  43F9 00002198            485          LEA     SM7,A1
000014B0  4E4F                     486          TRAP    #15
000014B2                           487          
000014B2                           488          *source mode to d3
000014B2  E75C                     489          ROL.W   #3,D4
000014B4  1604                     490          MOVE.B  D4,D3
000014B6  C63C 0007                491          AND.B   #%111,D3
000014BA                           492          
000014BA                           493          *source reg to d6
000014BA  E75C                     494          ROL.W   #3,D4
000014BC  1C04                     495          MOVE.B  D4,D6
000014BE  CC3C 0007                496          AND.B   #%111,D6
000014C2                           497          
000014C2  4EB8 120C                498          JSR     ADDRMODEALL
000014C6  B67C 0001                499          CMP     #%001,D3
000014CA  6700 002C                500          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014CE  43F9 000021F2            501          LEA     COMMA,A1
000014D4  4E4F                     502          TRAP    #15
000014D6  1C07                     503          MOVE.B  D7,D6
000014D8  360E                     504          MOVE.W  A6,D3
000014DA  4EB8 120C                505          JSR     ADDRMODEALL
000014DE  6000 0A76                506          BRA     DSEND
000014E2                           507  
000014E2  4E71                     508  DMOVEA  NOP
000014E4  BA7C 0001                509          CMP     #%01,D5     *if size is byte, err
000014E8  6700 0A40                510          BEQ     DSERR
000014EC  43F9 000021DE            511          LEA     VALA,A1        *else, print A and return
000014F2  4E4F                     512          TRAP    #15
000014F4  6000 FF6C                513          BRA     MOVECONT
000014F8                           514  
000014F8                           515  MOVEERRCHECK
000014F8  BA7C 0001                516          CMP     #%01,D5
000014FC  6700 0A2C                517          BEQ     DSERR
00001500  6000 0A54                518          BRA     DSEND
00001504                           519  
00001504                           520          
00001504                           521  
00001504                           522  *DS Tier 2 ----------------------------------------------------------------------------------------
00001504                           523  
00001504                           524  DS01                        *DS01: Tier 2 binary search for 01 side
00001504  E34C                     525          LSL.W   #1,D4
00001506  6500 0024                526          BCS     DS011
0000150A  6000 0016                527          BRA     DS010
0000150E                           528  
0000150E                           529  DS10                        *DS10: Tier 2 binary search for 10 side
0000150E  E34C                     530          LSL.W   #1,D4
00001510  6500 002E                531          BCS     DS101
00001514  6000 0020                532          BRA     DS100
00001518                           533  
00001518                           534  DS11                        *DS11: Tier 2 binary search for 11 side
00001518  E34C                     535          LSL.W   #1,D4
0000151A  6500 0038                536          BCS     DS111
0000151E  6000 002A                537          BRA     DS110
00001522                           538  
00001522                           539  *DS Tier 3 ----------------------------------------------------------------------------------------
00001522                           540  
00001522                           541  DS010                       *DS010: Tier 3 binary search for 010 side
00001522  E34C                     542          LSL.W   #1,D4
00001524  6500 037E                543          BCS     DS0101
00001528  6000 0034                544          BRA     DS0100
0000152C                           545  
0000152C                           546  DS011                       *DS011: Tier 3 binary search for 011 side
0000152C  E34C                     547          LSL.W   #1,D4
0000152E  6500 0562                548          BCS     DS0111
00001532  6000 03EA                549          BRA     DS0110
00001536                           550  
00001536                           551  DS100                       *DS100: Tier 3 binary search for 100 side
00001536  E34C                     552          LSL.W   #1,D4
00001538  6500 0648                553          BCS     DS1001
0000153C  6000 05BE                554          BRA     DS1000
00001540                           555  
00001540                           556  DS101                       *DS101: Tier 3 binary search for 101 side
00001540  E34C                     557          LSL.W   #1,D4
00001542  6500 06D6                558          BCS     DS1011
00001546  6000 06CC                559          BRA     DS1010
0000154A                           560  
0000154A                           561  DS110                       *DS110: Tier 3 binary search for 110 side
0000154A  E34C                     562          LSL.W   #1,D4
0000154C  6500 06D8                563          BCS     DS1101
00001550  6000 06CE                564          BRA     DS1100
00001554                           565  
00001554                           566  DS111                       *DS111: Tier 3 binary search for 111 side
00001554  E34C                     567          LSL.W   #1,D4
00001556  6500 09CC                568          BCS     DS1111
0000155A  6000 07B2                569          BRA     DS1110
0000155E                           570  
0000155E                           571  *DS Tier 4 ----------------------------------------------------------------------------------------
0000155E                           572  
0000155E                           573  DS0100                      *DS0100: Processing for 0100 prefix
0000155E  0C44 E710                574          CMPI.W  #%1110011100010000,D4
00001562  6700 0034                575          BEQ     DNOP
00001566  0C44 E750                576          CMPI.W  #%1110011101010000,D4
0000156A  6700 021E                577          BEQ     DRTS
0000156E                           578          
0000156E  3404                     579          MOVE.W  D4,D2
00001570  0242 1C00                580          ANDI.W  #%0001110000000000,D2
00001574  0C42 1C00                581          CMPI.W  #%0001110000000000,D2
00001578  6700 021C                582          BEQ     DLEA
0000157C                           583          
0000157C  E95C                     584          ROL.W   #4,D4
0000157E  1404                     585          MOVE.B  D4,D2
00001580  0202 000F                586          ANDI.B  #%1111,D2
00001584                           587          
00001584  B43C 000E                588          CMP.B   #%1110,D2
00001588  6700 014A                589          BEQ     DJSR
0000158C                           590          
0000158C  B43C 0006                591          CMP.B   #%0110,D2
00001590  6700 0012                592          BEQ     DNOT
00001594                           593          
00001594  6000 09A4                594          BRA     DSERRINS
00001598                           595  
00001598  43F9 000021F6            596  DNOP    LEA     NOPM,A1
0000159E  4E4F                     597          TRAP    #15
000015A0  6000 09B4                598          BRA     DSEND
000015A4                           599          
000015A4  E55C                     600  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015A6  1A04                     601          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015A8  0205 0003                602          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015AC                           603  
000015AC  BA3C 0000                604          CMP.B   #%00,D5         ; compare with byte size
000015B0  6700 0016                605          BEQ     DNOTB
000015B4  BA3C 0001                606          CMP.B   #%01,D5         ; compare with word size
000015B8  6700 0022                607          BEQ     DNOTW
000015BC  BA3C 0002                608          CMP.B   #%10,D5         ; compare with long size
000015C0  6700 002E                609          BEQ     DNOTL
000015C4                           610          
000015C4  6000 0990                611          BRA     DSEND           ; branch to DSEND in case of invalid code
000015C8                           612  
000015C8  43F9 00002212            613  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015CE  4E4F                     614          TRAP    #15             ; print NOTM string
000015D0  43F9 000021D5            615          LEA     MODEB,A1        ; load effective address of MODEB string
000015D6  4E4F                     616          TRAP    #15             ; print MODEB string
000015D8  6000 002A                617          BRA     DNOTA           ; branch to addressing mode parsing
000015DC                           618  
000015DC  43F9 00002212            619  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
000015E2  4E4F                     620          TRAP    #15             ; print NOTM string
000015E4  43F9 000021D8            621          LEA     MODEW,A1        ; load effective address of MODEW string
000015EA  4E4F                     622          TRAP    #15             ; print MODEW string
000015EC  6000 0016                623          BRA     DNOTA           ; branch to addressing mode parsing
000015F0                           624  
000015F0  43F9 00002212            625  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
000015F6  4E4F                     626          TRAP    #15             ; print NOTM string
000015F8  43F9 000021DB            627          LEA     MODEL,A1        ; load effective address of MODEL string
000015FE  4E4F                     628          TRAP    #15             ; print MODEL string
00001600  6000 0002                629          BRA     DNOTA           ; branch to addressing mode parsing
00001604                           630  
00001604  ED5C                     631  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001606  1204                     632          MOVE.B  D4,D1           ; move the byte in D4 to D1
00001608  0201 003F                633          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000160C                           634  
0000160C                           635          ; Now process addressing mode and register based on the value in D1
0000160C                           636  
0000160C  1A01                     637          MOVE.B  D1,D5           ; Move the byte in D1 to D5
0000160E  0205 0007                638          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001612  6700 0026                639          BEQ     DREG            ; If it is direct register mode
00001616  BA3C 0002                640          CMP.B   #%010,D5        ; Compare with An
0000161A  6700 0036                641          BEQ     ADREG
0000161E  BA3C 0003                642          CMP.B   #%011,D5        ; Compare with (An)+
00001622  6700 0046                643          BEQ     ADREGP
00001626  BA3C 0004                644          CMP.B   #%100,D5        ; Compare with -(An)
0000162A  6700 005E                645          BEQ     MADREG
0000162E  BA3C 0007                646          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001632  6700 007E                647          BEQ     EXT
00001636                           648              
00001636  6000 091E                649          BRA     DSEND
0000163A                           650  
0000163A  1C01                     651  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000163C  0206 0007                652          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
00001640  DC39 000021E0            653          ADD.B   VALD,D6         ; Convert register number to ASCII
00001646  43F9 000021E0            654          LEA     VALD,A1         ; Load effective address of Dn
0000164C  4E4F                     655          TRAP    #15             ; Print Dn
0000164E  6000 0906                656          BRA     DSEND
00001652                           657  
00001652  1C01                     658  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001654  0206 0007                659          ANDI.B  #%111,D6
00001658  DC39 000021DE            660          ADD.B   VALA,D6
0000165E  43F9 000021DE            661          LEA     VALA,A1
00001664  4E4F                     662          TRAP    #15
00001666  6000 08EE                663          BRA     DSEND
0000166A                           664  
0000166A  1C01                     665  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
0000166C  0206 0007                666          ANDI.B  #%111,D6
00001670  DC39 000021DE            667          ADD.B   VALA,D6
00001676  43F9 000021DE            668          LEA     VALA,A1
0000167C  4E4F                     669          TRAP    #15
0000167E  43F9 000021EF            670          LEA     CLOSEIPTR,A1    ; Load effective address of )+
00001684  4E4F                     671          TRAP    #15             ; Print )+
00001686  6000 08CE                672          BRA     DSEND
0000168A                           673  
0000168A  1C01                     674  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
0000168C  0206 0007                675          ANDI.B  #%111,D6
00001690  DC39 000021DE            676          ADD.B   VALA,D6
00001696  43F9 000021EA            677          LEA     OPENDPTR,A1     ; Load effective address of -(
0000169C  4E4F                     678          TRAP    #15             ; Print -(
0000169E  43F9 000021DE            679          LEA     VALA,A1
000016A4  4E4F                     680          TRAP    #15
000016A6  43F9 000021ED            681          LEA     CLOSEPTR,A1     ; Load effective address of )
000016AC  4E4F                     682          TRAP    #15             ; Print )
000016AE  6000 08A6                683          BRA     DSEND
000016B2                           684  
000016B2  1C01                     685  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016B4  0206 0001                686          ANDI.B  #%1,D6
000016B8  6700 000E                687          BEQ     EXTW
000016BC  43F9 000021E2            688          LEA     VALN,A1         ; Load effective address of #
000016C2  4E4F                     689          TRAP    #15             ; Print #
000016C4  6000 0890                690          BRA     DSEND
000016C8                           691  
000016C8  43F9 000021E4            692  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016CE  4E4F                     693          TRAP    #15             ; Print 0
000016D0  6000 0884                694          BRA     DSEND
000016D4                           695  
000016D4                           696          
000016D4  E55C                     697  DJSR    ROL.W   #2,D4
000016D6  1404                     698          MOVE.B  D4,D2
000016D8  0202 0007                699          ANDI.B  #%111,D2
000016DC  0C02 0002                700          CMPI.B  #%10,D2
000016E0  6600 0848                701          BNE     DSERR
000016E4                           702          
000016E4  43F9 00002237            703          LEA     JSRM,A1
000016EA  4E4F                     704          TRAP    #15
000016EC                           705          
000016EC  43F9 00002198            706          LEA     SM7,A1
000016F2  4E4F                     707          TRAP    #15
000016F4                           708  
000016F4  E75C                     709          ROL.W   #3,D4       * [D2] address mode
000016F6  1404                     710          MOVE.B  D4,D2
000016F8  0202 0007                711          ANDI.B  #%111,D2
000016FC                           712          
000016FC  E75C                     713          ROL.W   #3,D4       * [D1] address register
000016FE  1204                     714          MOVE.B  D4,D1
00001700  0201 0007                715          ANDI.B  #%111,D1
00001704                           716          
00001704  0C02 0002                717          CMPI.B  #%010,D2
00001708  6700 001E                718          BEQ     DJSR_REG
0000170C                           719          
0000170C  0C02 0007                720          CMPI.B  #%111,D2
00001710  6600 0818                721          BNE     DSERR
00001714                           722          
00001714  0C01 0000                723          CMPI.B  #%000,D1
00001718  6700 0034                724          BEQ     DJSR_CUSW
0000171C                           725          
0000171C  0C01 0001                726          CMPI.B  #%001,D1
00001720  6700 004A                727          BEQ     DJSR_CUSL
00001724                           728          
00001724  6000 0830                729          BRA     DSEND
00001728                           730          
00001728                           731          
00001728                           732          
00001728                           733  DJSR_REG        
00001728  43F9 000021E8            734          LEA     OPENPTR,A1
0000172E  4E4F                     735          TRAP    #15
00001730                           736          
00001730  43F9 000021DE            737          LEA     VALA,A1
00001736  4E4F                     738          TRAP    #15
00001738                           739          
00001738  103C 0003                740          MOVE.B  #3,D0
0000173C  4E4F                     741          TRAP    #15
0000173E  103C 000E                742          MOVE.B  #14,D0
00001742                           743          
00001742  43F9 000021ED            744          LEA     CLOSEPTR,A1
00001748  4E4F                     745          TRAP    #15
0000174A                           746          
0000174A  6000 080A                747          BRA     DSEND
0000174E                           748  
0000174E                           749          
0000174E                           750  DJSR_CUSW
0000174E  43F9 000021F4            751          LEA     DOLLAR,A1
00001754  4E4F                     752          TRAP    #15
00001756  341A                     753          MOVE.W  (A2)+,D2
00001758  48E7 0400                754          MOVEM.L D5,-(SP)
0000175C  1A3C 0030                755          MOVE.B  #48,D5
00001760  4EB8 117A                756          JSR     HEXOUT
00001764  4CDF 0020                757          MOVEM.L (SP)+,D5
00001768  6000 07EC                758          BRA     DSEND
0000176C                           759  
0000176C                           760  DJSR_CUSL
0000176C  43F9 000021F4            761          LEA     DOLLAR,A1
00001772  4E4F                     762          TRAP    #15
00001774  241A                     763          MOVE.L  (A2)+,D2
00001776  48E7 0400                764          MOVEM.L D5,-(SP)
0000177A  1A3C 0030                765          MOVE.B  #48,D5
0000177E  4EB8 117A                766          JSR     HEXOUT
00001782  4CDF 0020                767          MOVEM.L (SP)+,D5
00001786  6000 07CE                768          BRA     DSEND
0000178A                           769          
0000178A  43F9 0000223B            770  DRTS    LEA     RTSM,A1
00001790  4E4F                     771          TRAP    #15
00001792  6000 07C2                772          BRA     DSEND
00001796                           773          
00001796                           774          
00001796                           775  DLEA    *printing
00001796  43F9 00002207            776          LEA     LEAM,A1
0000179C  4E4F                     777          TRAP    #15
0000179E  43F9 00002198            778          LEA     SM7,A1
000017A4  4E4F                     779          TRAP    #15
000017A6                           780          
000017A6                           781          *shifting out 111
000017A6  E75C                     782          ROL.W   #3,D4
000017A8                           783          
000017A8                           784          *getting destination register
000017A8  E75C                     785          ROL.W   #3,D4
000017AA  1404                     786          MOVE.B  D4,D2
000017AC  0202 0007                787          ANDI.B  #%111,D2
000017B0                           788          
000017B0                           789          *getting ea mode
000017B0  E75C                     790          ROL.W   #3,D4
000017B2  1604                     791          MOVE.B  D4,D3
000017B4  0203 0007                792          ANDI.B  #%111,D3
000017B8                           793          
000017B8  B63C 0002                794          CMP.B   #%010,D3
000017BC  6700 000E                795          BEQ     DLEAP
000017C0                           796          
000017C0  B63C 0007                797          CMP.B   #%111,D3
000017C4  6700 0006                798          BEQ     DLEAP
000017C8                           799          
000017C8  6000 0780                800          BRA     DSERREA
000017CC                           801          
000017CC                           802          *getting ea reg
000017CC  E75C                     803  DLEAP   ROL.W   #3,D4
000017CE  1C04                     804          MOVE.B  D4,D6
000017D0  0206 0007                805          ANDI.B  #%111,D6
000017D4                           806          
000017D4                           807          *printing
000017D4  4EB8 120C                808          JSR     ADDRMODEALL
000017D8                           809          
000017D8  43F9 000021F2            810          LEA     COMMA,A1
000017DE  4E4F                     811          TRAP    #15
000017E0  43F9 000021DE            812          LEA     VALA,A1
000017E6  4E4F                     813          TRAP    #15
000017E8  103C 0003                814          MOVE.B  #3,D0
000017EC  1202                     815          MOVE.B  D2,D1
000017EE  4E4F                     816          TRAP    #15
000017F0  103C 000E                817          MOVE.B  #14,D0
000017F4                           818          
000017F4  6000 0760                819          BRA DSEND
000017F8                           820          
000017F8                           821  JSR010
000017F8  B63C 0002                822          CMP.B   #%010,D3
000017FC  6600 002A                823          BNE     JSR111
00001800  43F9 000021E8            824          LEA     OPENPTR,A1
00001806  4E4F                     825          TRAP    #15
00001808  43F9 000021DE            826          LEA     VALA,A1
0000180E  4E4F                     827          TRAP    #15
00001810  103C 0003                828          MOVE.B  #3,D0
00001814  1206                     829          MOVE.B  D6,D1
00001816  4E4F                     830          TRAP    #15
00001818  103C 000E                831          MOVE.B  #14,D0
0000181C  43F9 000021ED            832          LEA     CLOSEPTR,A1
00001822  4E4F                     833          TRAP    #15
00001824  6000 005E                834          BRA     JSRPRINT2
00001828                           835  JSR111
00001828  B63C 0007                836          CMP.B   #%111,D3
0000182C  6600 06FC                837          BNE     DSERR
00001830  BC3C 0000                838          CMP.B   #%000,D6
00001834  6600 0024                839          BNE     JSR111001
00001838  43F9 000021F4            840          LEA     DOLLAR,A1
0000183E  4E4F                     841          TRAP    #15
00001840  341A                     842          MOVE.W  (A2)+,D2
00001842  48E7 0400                843          MOVEM.L D5,-(SP)    
00001846  1A3C 0030                844          MOVE.B  #48,D5
0000184A  4EB8 117A                845          JSR     HEXOUT
0000184E  4CDF 0020                846          MOVEM.L (SP)+,D5
00001852  103C 000E                847          MOVE.B  #14,D0
00001856  6000 002C                848          BRA     JSRPRINT2
0000185A                           849          
0000185A                           850  JSR111001
0000185A  BC3C 0001                851          CMP.B   #%001,D6
0000185E  6600 06CA                852          BNE     DSERR
00001862  43F9 000021F4            853          LEA     DOLLAR,A1
00001868  4E4F                     854          TRAP    #15
0000186A  241A                     855          MOVE.L  (A2)+,D2
0000186C  48E7 0400                856          MOVEM.L D5,-(SP)
00001870  1A3C 0030                857          MOVE.B  #48,D5
00001874  4EB8 117A                858          JSR     HEXOUT
00001878  4CDF 0020                859          MOVEM.L (SP)+,D5
0000187C  103C 000E                860          MOVE.B  #14,D0
00001880  6000 0002                861          BRA     JSRPRINT2
00001884                           862          
00001884                           863  JSRPRINT2
00001884  43F9 000021F2            864          LEA     COMMA,A1
0000188A  4E4F                     865          TRAP    #15
0000188C  43F9 000021DE            866          LEA     VALA,A1
00001892  4E4F                     867          TRAP    #15
00001894  103C 0003                868          MOVE.B  #3,D0
00001898  3207                     869          MOVE.W  D7,D1
0000189A  4E4F                     870          TRAP    #15
0000189C  103C 000E                871          MOVE.B  #14,D0
000018A0                           872          
000018A0  6000 06B4                873          BRA     DSEND
000018A4                           874          
000018A4                           875  
000018A4                           876  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000018A4                           877  
000018A4  4E71                     878  DS0101  NOP
000018A6                           879          
000018A6  4E71                     880  DADDQ   NOP
000018A8  43F9 000021FF            881          LEA     ADDM,A1
000018AE  4E4F                     882          TRAP    #15
000018B0  43F9 000021E6            883          LEA     VALQ,A1
000018B6  4E4F                     884          TRAP    #15
000018B8                           885          
000018B8                           886          *parsing data to d1
000018B8  E75C                     887          ROL.W   #3,D4
000018BA  1204                     888          MOVE.B  D4,D1
000018BC  C23C 0007                889          AND.B   #%111,D1
000018C0                           890          
000018C0                           891          *ensuring next bit is 0
000018C0  E35C                     892          ROL.W   #1,D4
000018C2  1A04                     893          MOVE.B  D4,D5
000018C4  CA3C 0001                894          AND.B   #%1,D5
000018C8  BA7C 0000                895          CMP     #0,D5
000018CC  6600 065C                896          BNE     DSERR
000018D0                           897          
000018D0                           898          *parsing and printing size
000018D0  E55C                     899          ROL.W   #2,D4
000018D2  1A04                     900          MOVE.B  D4,D5
000018D4  CA3C 0003                901          AND.B   #%11,D5
000018D8  4EB8 11C2                902          JSR     SIZE
000018DC  43F9 00002198            903          LEA     SM7,A1
000018E2  4E4F                     904          TRAP    #15
000018E4                           905          
000018E4                           906          *parsing effective address information
000018E4                           907          *mode:
000018E4  E75C                     908          ROL.W   #3,D4
000018E6  1604                     909          MOVE.B  D4,D3
000018E8  C63C 0007                910          AND.B   #%111,D3
000018EC                           911          
000018EC                           912          *register:
000018EC  E71C                     913          ROL.B   #3,D4
000018EE  1C04                     914          MOVE.B  D4,D6
000018F0  CC3C 0007                915          AND.B   #%111,D6
000018F4                           916          
000018F4                           917          *printing data
000018F4  43F9 000021E2            918          LEA     VALN,A1
000018FA  4E4F                     919          TRAP    #15
000018FC  103C 0003                920          MOVE.B  #3,D0
00001900  4E4F                     921          TRAP    #15
00001902  103C 000E                922          MOVE.B  #14,D0
00001906  43F9 000021F2            923          LEA     COMMA,A1
0000190C  4E4F                     924          TRAP    #15
0000190E                           925          
0000190E  B67C 0004                926          CMP     #%100,D3
00001912  6700 0616                927          BEQ     DSERR
00001916  4EB8 120C                928          JSR     ADDRMODEALL
0000191A                           929          
0000191A  6000 063A                930          BRA     DSEND
0000191E                           931          
0000191E                           932  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000191E                           933  
0000191E                           934  DS0110  
0000191E  E95C                     935          ROL.W   #4,D4   *Get next 4 bits
00001920  1404                     936          MOVE.B  D4,D2   *Copy to D2
00001922  0202 000F                937          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001926                           938          
00001926  B43C 0000                939          CMP.B   #%0000,D2   *BRA
0000192A  6700 001E                940          BEQ     DBRA
0000192E                           941          
0000192E  B43C 000E                942          CMP.B   #%1110,D2   *BGT   
00001932  6700 00A2                943          BEQ     DBGT
00001936                           944          
00001936  B43C 000F                945          CMP.B   #%1111,D2   *BLE   
0000193A  6700 00D6                946          BEQ     DBLE
0000193E                           947          
0000193E  B43C 0007                948          CMP.B   #%0111,D2   *BEQ   
00001942  6700 010E                949          BEQ     DBEQ
00001946                           950          
00001946  6000 05F2                951          BRA     DSERRINS
0000194A                           952          
0000194A  43F9 0000223F            953  DBRA    LEA     BRAM,A1
00001950  4E4F                     954          TRAP    #15
00001952                           955          
00001952  43F9 00002198            956          LEA     SM7,A1
00001958  4E4F                     957          TRAP    #15
0000195A                           958  
0000195A  E15C                     959          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000195C  1204                     960          MOVE.B  D4,D1
0000195E  0281 00001100            961          ANDI.L  #$1100,D1
00001964                           962          
00001964  0C01 0000                963          CMPI.B  #%00000000,D1
00001968  6700 0028                964          BEQ     DBRA_16BIT      * Word
0000196C                           965          
0000196C  0C01 00FF                966          CMPI.B  #%11111111,D1
00001970  6700 0042                967          BEQ     DBRA_32BIT      * Long
00001974                           968          
00001974                           969          * 8 Bit Displacement
00001974  43F9 000021F4            970          LEA     DOLLAR,A1
0000197A  4E4F                     971          TRAP    #15
0000197C                           972          
0000197C  341A                     973          MOVE.W  (A2)+,D2
0000197E  D441                     974          ADD.W   D1,D2
00001980  5842                     975          ADD.W   #4,D2   *unsure   
00001982  1A3C 0030                976          MOVE.B  #48,D5
00001986  4EB8 117A                977          JSR     HEXOUT
0000198A  6000 05CA                978          BRA     DSEND
0000198E                           979  
0000198E                           980          *Displacement is put in D1      
0000198E                           981          
0000198E                           982          
0000198E  6000 05C6                983          BRA     DSEND
00001992                           984          
00001992                           985  DBRA_16BIT
00001992  43F9 000021F4            986          LEA     DOLLAR,A1
00001998  4E4F                     987          TRAP    #15
0000199A  341A                     988          MOVE.W  (A2)+,D2
0000199C  D44A                     989          ADD.W   A2,D2
0000199E  5542                     990          SUB.W   #2,D2   *unsure
000019A0  48E7 0400                991          MOVEM.L D5,-(SP)    
000019A4  1A3C 0030                992          MOVE.B  #48,D5
000019A8  4EB8 117A                993          JSR     HEXOUT
000019AC  4CDF 0020                994          MOVEM.L (SP)+,D5
000019B0  6000 05A4                995          BRA     DSEND
000019B4                           996  
000019B4                           997  DBRA_32BIT
000019B4  43F9 000021F4            998          LEA     DOLLAR,A1
000019BA  4E4F                     999          TRAP    #15
000019BC  241A                    1000          MOVE.L  (A2)+,D2
000019BE  D48A                    1001          ADD.L   A2,D2
000019C0  5582                    1002          SUB.L   #2,D2   *unsure
000019C2  48E7 0400               1003          MOVEM.L D5,-(SP)
000019C6  1A3C 0030               1004          MOVE.B  #48,D5
000019CA  4EB8 117A               1005          JSR     HEXOUT
000019CE  4CDF 0020               1006          MOVEM.L (SP)+,D5
000019D2  6000 0582               1007          BRA     DSEND
000019D6                          1008          
000019D6                          1009          
000019D6                          1010          
000019D6  43F9 0000222B           1011  DBGT    LEA     BGTM,A1
000019DC  4E4F                    1012          TRAP    #15
000019DE                          1013          
000019DE  43F9 00002198           1014          LEA     SM7,A1
000019E4  4E4F                    1015          TRAP    #15
000019E6                          1016          
000019E6  E15C                    1017          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000019E8  1204                    1018          MOVE.B  D4,D1
000019EA  0241 00FF               1019          ANDI.W  #%0000000011111111,D1
000019EE                          1020          
000019EE  0C01 0000               1021          CMPI.B  #%00000000,D1
000019F2  679E                    1022          BEQ     DBRA_16BIT      * Word
000019F4                          1023          
000019F4  0C01 00FF               1024          CMPI.B  #%11111111,D1
000019F8  67BA                    1025          BEQ     DBRA_32BIT      * Long
000019FA                          1026          
000019FA  43F9 000021F4           1027          LEA     DOLLAR,A1
00001A00  4E4F                    1028          TRAP    #15
00001A02                          1029      
00001A02  340A                    1030          MOVE.W  A2,D2
00001A04  D441                    1031          ADD.W   D1,D2
00001A06                          1032    
00001A06  1A3C 0030               1033          MOVE.B  #48,D5
00001A0A  4EB8 117A               1034          JSR     HEXOUT
00001A0E  6000 0546               1035          BRA     DSEND
00001A12                          1036  
00001A12  43F9 0000222F           1037  DBLE    LEA     BLEM,A1
00001A18  4E4F                    1038          TRAP    #15
00001A1A                          1039          
00001A1A  43F9 00002198           1040          LEA     SM7,A1
00001A20  4E4F                    1041          TRAP    #15
00001A22                          1042          
00001A22  E15C                    1043          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A24  1204                    1044          MOVE.B  D4,D1
00001A26  0241 00FF               1045          ANDI.W  #%0000000011111111,D1
00001A2A                          1046          
00001A2A  0C01 0000               1047          CMPI.B  #%00000000,D1
00001A2E  6700 FF62               1048          BEQ     DBRA_16BIT      * Word
00001A32                          1049          
00001A32  0C01 00FF               1050          CMPI.B  #%11111111,D1
00001A36  6700 FF7C               1051          BEQ     DBRA_32BIT      * Long
00001A3A                          1052          
00001A3A  43F9 000021F4           1053          LEA     DOLLAR,A1
00001A40  4E4F                    1054          TRAP    #15
00001A42                          1055          
00001A42  340A                    1056          MOVE.W  A2,D2
00001A44  D441                    1057          ADD.W   D1,D2
00001A46                          1058   
00001A46  1A3C 0030               1059          MOVE.B  #48,D5
00001A4A  4EB8 117A               1060          JSR     HEXOUT
00001A4E                          1061          
00001A4E  6000 0506               1062          BRA     DSEND
00001A52                          1063  
00001A52  43F9 00002233           1064  DBEQ    LEA     BEQM,A1
00001A58  4E4F                    1065          TRAP    #15
00001A5A                          1066          
00001A5A  43F9 00002198           1067          LEA     SM7,A1
00001A60  4E4F                    1068          TRAP    #15
00001A62                          1069          
00001A62  E15C                    1070          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A64  1204                    1071          MOVE.B  D4,D1
00001A66  0241 00FF               1072          ANDI.W  #%0000000011111111,D1
00001A6A                          1073          
00001A6A  0C01 0000               1074          CMPI.B  #%00000000,D1
00001A6E  6700 FF22               1075          BEQ     DBRA_16BIT      * Word
00001A72                          1076          
00001A72  0C01 00FF               1077          CMPI.B  #%11111111,D1
00001A76  6700 FF3C               1078          BEQ     DBRA_32BIT      * Long
00001A7A                          1079          
00001A7A  43F9 000021F4           1080          LEA     DOLLAR,A1
00001A80  4E4F                    1081          TRAP    #15
00001A82                          1082  
00001A82  340A                    1083          MOVE.W  A2,D2
00001A84  D441                    1084          ADD.W   D1,D2
00001A86                          1085   
00001A86  1A3C 0030               1086          MOVE.B  #48,D5
00001A8A  4EB8 117A               1087          JSR     HEXOUT
00001A8E                          1088          
00001A8E  6000 04C6               1089          BRA     DSEND
00001A92                          1090  
00001A92                          1091  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001A92                          1092  
00001A92  4E71                    1093  DS0111  NOP
00001A94                          1094          
00001A94  4E71                    1095  DMOVEQ  NOP
00001A96  43F9 000021FA           1096          LEA     MOVEM,A1
00001A9C  4E4F                    1097          TRAP    #15
00001A9E  43F9 000021E6           1098          LEA     VALQ,A1
00001AA4  4E4F                    1099          TRAP    #15
00001AA6  43F9 00002198           1100          LEA     SM7,A1
00001AAC  4E4F                    1101          TRAP    #15
00001AAE                          1102          
00001AAE                          1103          *getting register number
00001AAE  E75C                    1104          ROL.W   #3,D4
00001AB0  1A04                    1105          MOVE.B  D4,D5
00001AB2  CA3C 0007               1106          AND.B   #%111,D5
00001AB6                          1107          
00001AB6                          1108          *throwing error if next digit not 0
00001AB6  E35C                    1109          ROL.W   #1,D4
00001AB8  1C04                    1110          MOVE.B  D4,D6
00001ABA  CC3C 0001               1111          AND.B   #%1,D6
00001ABE  BC3C 0000               1112          CMP.B   #0,D6
00001AC2  6600 0466               1113          BNE     DSERR
00001AC6                          1114          
00001AC6                          1115          *getting data and printing information
00001AC6  E15C                    1116          ROL.W   #8,D4
00001AC8  1204                    1117          MOVE.B  D4,D1
00001ACA  C23C 00FF               1118          AND.B   #%11111111,D1
00001ACE  43F9 000021E2           1119          LEA     VALN,A1
00001AD4  4E4F                    1120          TRAP    #15
00001AD6  103C 0003               1121          MOVE.B  #3,D0
00001ADA  4E4F                    1122          TRAP    #15
00001ADC  103C 000E               1123          MOVE.B  #14,D0
00001AE0  43F9 000021F2           1124          LEA     COMMA,A1
00001AE6  4E4F                    1125          TRAP    #15
00001AE8  43F9 000021E0           1126          LEA     VALD,A1
00001AEE  4E4F                    1127          TRAP    #15
00001AF0  103C 0003               1128          MOVE.B  #3,D0
00001AF4  3205                    1129          MOVE.W  D5,D1
00001AF6  4E4F                    1130          TRAP    #15
00001AF8                          1131          
00001AF8  6000 045C               1132          BRA     DSEND
00001AFC                          1133          
00001AFC                          1134  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AFC                          1135  
00001AFC  4E71                    1136  DS1000  NOP
00001AFE                          1137          
00001AFE  E75C                    1138  DOR     ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
00001B00  1A04                    1139          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001B02  0205 0007               1140          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B06  1C05                    1141          MOVE.B  D5,D6           ; Store the register number in D6 for later use
00001B08                          1142  
00001B08  E75C                    1143          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
00001B0A  1A04                    1144          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001B0C  0205 0007               1145          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B10  BA3C 0000               1146          CMP.B   #%000,D5        ; Compare with byte size
00001B14  6700 0016               1147          BEQ     DORB
00001B18  BA3C 0001               1148          CMP.B   #%001,D5        ; Compare with word size
00001B1C  6700 0022               1149          BEQ     DORW
00001B20  BA3C 0002               1150          CMP.B   #%010,D5        ; Compare with long size
00001B24  6700 002E               1151          BEQ     DORL
00001B28                          1152          
00001B28  6000 042C               1153          BRA     DSEND           ; Branch to DSEND in case of invalid code
00001B2C                          1154  
00001B2C  43F9 0000220F           1155  DORB    LEA     ORM,A1          ; Load effective address of ORM string
00001B32  4E4F                    1156          TRAP    #15             ; Print ORM string
00001B34  43F9 000021D5           1157          LEA     MODEB,A1        ; Load effective address of MODEB string
00001B3A  4E4F                    1158          TRAP    #15             ; Print MODEB string
00001B3C  6000 002A               1159          BRA     DORA            ; Branch to addressing mode parsing
00001B40                          1160  
00001B40  43F9 0000220F           1161  DORW    LEA     ORM,A1          ; Load effective address of ORM string
00001B46  4E4F                    1162          TRAP    #15             ; Print ORM string
00001B48  43F9 000021D8           1163          LEA     MODEW,A1        ; Load effective address of MODEW string
00001B4E  4E4F                    1164          TRAP    #15             ; Print MODEW string
00001B50  6000 0016               1165          BRA     DORA            ; Branch to addressing mode parsing
00001B54                          1166  
00001B54  43F9 0000220F           1167  DORL    LEA     ORM,A1          ; Load effective address of ORM string
00001B5A  4E4F                    1168          TRAP    #15             ; Print ORM string
00001B5C  43F9 000021DB           1169          LEA     MODEL,A1        ; Load effective address of MODEL string
00001B62  4E4F                    1170          TRAP    #15             ; Print MODEL string
00001B64  6000 0002               1171          BRA     DORA            ; Branch to addressing mode parsing
00001B68                          1172  
00001B68  ED5C                    1173  DORA    ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001B6A  1A04                    1174          MOVE.B  D4,D5           ; Move the byte in D4 to D5
00001B6C  0205 0038               1175          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001B70  E61D                    1176          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001B72  1605                    1177          MOVE.B  D5,D3           ; Store mode in D3 for further checks
00001B74  0204 0007               1178          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001B78  1C04                    1179          MOVE.B  D4,D6           ; Store the register number in D6 for later use
00001B7A                          1180  
00001B7A  4EB8 120C               1181          JSR     ADDRMODEALL     ; Call subroutine to parse and print effective address
00001B7E                          1182  
00001B7E  6000 03D6               1183          BRA     DSEND                    
00001B82                          1184  
00001B82                          1185  
00001B82                          1186  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B82                          1187  
00001B82  4E71                    1188  DS1001  NOP
00001B84  4E71                    1189  DSUB    NOP
00001B86                          1190  *print sub
00001B86  43F9 00002203           1191          LEA     SUBM,A1
00001B8C  4E4F                    1192          TRAP    #15
00001B8E                          1193  
00001B8E                          1194  *parse dn reg: 3 bits
00001B8E                          1195  *number of the data register involved
00001B8E                          1196  *nums 0-7, paired with below
00001B8E  E75C                    1197          ROL.W   #3,D4       *dn reg num in d1
00001B90  1E04                    1198          MOVE.B  D4,D7
00001B92  0207 0007               1199          ANDI.B  #%111,D7
00001B96                          1200          
00001B96  3C47                    1201          MOVE.W  D7,A6       *temporary for storage
00001B98                          1202  
00001B98                          1203  *parse opmode: 3 bits
00001B98                          1204  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001B98                          1205  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001B98                          1206  *invalid: 111, 011
00001B98                          1207  *parse first digit separately
00001B98  E35C                    1208          ROL.W   #1,D4       *addressing mode in d2
00001B9A  1E04                    1209          MOVE.B  D4,D7
00001B9C  0207 0001               1210          ANDI.B  #%1,D7
00001BA0                          1211          
00001BA0                          1212  *parsing next two digits of size
00001BA0  E55C                    1213          ROL.W   #2,D4       *size in d5
00001BA2  1A04                    1214          MOVE.B  D4,D5
00001BA4  0205 0003               1215          ANDI.B  #%11,D5
00001BA8  4EB8 11C2               1216          JSR     SIZE
00001BAC  43F9 00002198           1217          LEA     SM7,A1
00001BB2  4E4F                    1218          TRAP    #15
00001BB4                          1219          
00001BB4                          1220  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001BB4  BE3C 0000               1221          CMP.B   #%0,D7       *if 1, then register info printed last
00001BB8  6700 0026               1222          BEQ     DSUBEA      *branch to ea before register
00001BBC                          1223          
00001BBC                          1224  *printing register information
00001BBC                          1225  DSUBPRNTREG
00001BBC  43F9 000021E0           1226          LEA     VALD,A1
00001BC2  4E4F                    1227          TRAP    #15
00001BC4  320E                    1228          MOVE.W  A6,D1       *retrieving a6 register data
00001BC6  103C 0003               1229          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001BCA  4E4F                    1230          TRAP    #15         *printing register number
00001BCC  103C 000E               1231          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001BD0  BE3C 0000               1232          CMP.B   #%0,D7      *if info finished printing
00001BD4  6700 0380               1233          BEQ     DSEND      *branch to end
00001BD8  43F9 000021F2           1234          LEA     COMMA,A1
00001BDE  4E4F                    1235          TRAP    #15
00001BE0                          1236  
00001BE0                          1237          
00001BE0                          1238  * parse ea mode: 3 bits
00001BE0                          1239  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001BE0                          1240  *address reg direct not allowed for .B operations
00001BE0                          1241  *no invalid
00001BE0                          1242  DSUBEA
00001BE0  E75C                    1243          ROL.W   #3,D4       *ea mode
00001BE2  1604                    1244          MOVE.B  D4,D3
00001BE4  0203 0007               1245          ANDI.B  #%111,D3
00001BE8                          1246  
00001BE8                          1247  *parse ea reg: 3 bits
00001BE8                          1248  *no invalid: paired with opmode below (nums 0-7)
00001BE8                          1249  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001BE8  E75C                    1250          ROL.W   #3,D4       *ea mode
00001BEA  1C04                    1251          MOVE.B  D4,D6
00001BEC  0206 0007               1252          ANDI.B  #%111,D6
00001BF0                          1253          
00001BF0  2803                    1254          MOVE.L  D3,D4   *temporarily using D4 
00001BF2                          1255          
00001BF2                          1256  *comparisons
00001BF2  B67C 0004               1257          CMP     #%100,D3
00001BF6  6700 0332               1258          BEQ     DSERR
00001BFA  4EB8 120C               1259          JSR     ADDRMODEALL
00001BFE  BE3C 0001               1260          CMP.B   #%1,D7      *if info printed
00001C02  6700 0352               1261          BEQ     DSEND       *end
00001C06  43F9 000021F2           1262          LEA     COMMA,A1
00001C0C  4E4F                    1263          TRAP    #15
00001C0E  60AC                    1264          BRA     DSUBPRNTREG *check d6 for size of data
00001C10                          1265  *then take data from d4 and print (?)
00001C10                          1266  
00001C10  6000 0344               1267          BRA     DSEND
00001C14                          1268  
00001C14                          1269  
00001C14                          1270  
00001C14  4E71                    1271  DS1010  NOP
00001C16  6000 0322               1272          BRA     DSERRINS
00001C1A                          1273  
00001C1A                          1274          
00001C1A                          1275  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C1A                          1276  
00001C1A  4E71                    1277  DS1011  NOP
00001C1C  6000 031C               1278          BRA     DSERRINS
00001C20                          1279          
00001C20                          1280  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C20                          1281  
00001C20  4E71                    1282  DS1100  NOP
00001C22  6000 0316               1283          BRA     DSERRINS
00001C26                          1284          
00001C26                          1285  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C26                          1286  
00001C26  4E71                    1287  DS1101  NOP
00001C28                          1288  
00001C28  4E71                    1289  DADD    NOP
00001C2A  43F9 000021FF           1290          LEA     ADDM,A1
00001C30  4E4F                    1291          TRAP    #15
00001C32                          1292          
00001C32                          1293          *parse dn reg: 3 bits
00001C32                          1294  *number of the data register involved
00001C32                          1295  *nums 0-7, paired with below
00001C32  E75C                    1296          ROL.W   #3,D4       *dn reg num in d7
00001C34  1E04                    1297          MOVE.B  D4,D7
00001C36  0207 0007               1298          ANDI.B  #%111,D7
00001C3A                          1299          
00001C3A  3C47                    1300          MOVE.W  D7,A6
00001C3C                          1301  
00001C3C                          1302  *parse opmode: 3 bits
00001C3C                          1303  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C3C                          1304  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C3C                          1305  *invalid: 111, 011
00001C3C                          1306  *parse first digit separately
00001C3C  E35C                    1307          ROL.W   #1,D4       *addressing mode in d2
00001C3E  1E04                    1308          MOVE.B  D4,D7
00001C40  0207 0001               1309          ANDI.B  #%1,D7
00001C44                          1310          
00001C44                          1311  *parsing next two digits of size
00001C44  E55C                    1312          ROL.W   #2,D4       *size in d5
00001C46  1A04                    1313          MOVE.B  D4,D5
00001C48  0205 0003               1314          ANDI.B  #%11,D5
00001C4C  BA3C 0003               1315          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001C50  6700 007C               1316          BEQ     DADDA
00001C54  4EB8 11C2               1317          JSR     SIZE
00001C58  43F9 00002198           1318          LEA     SM7,A1
00001C5E  4E4F                    1319          TRAP    #15
00001C60                          1320          
00001C60                          1321  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C60  BE3C 0000               1322          CMP.B   #%0,D7       *if 0, then register info printed last
00001C64  6700 002E               1323          BEQ     DADDEA      *branch to ea before register
00001C68                          1324          
00001C68                          1325  *printing register information
00001C68                          1326  DADDPRNTREG
00001C68  BA3C 0003               1327          CMP.B   #%11,D5
00001C6C  6700 0058               1328          BEQ     PRINTA
00001C70  43F9 000021E0           1329          LEA     VALD,A1
00001C76                          1330  ADDCONT
00001C76  4E4F                    1331          TRAP    #15
00001C78  320E                    1332          MOVE.W  A6,D1       *moving reg num to d1 to print
00001C7A  103C 0003               1333          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C7E  4E4F                    1334          TRAP    #15         *printing register number
00001C80  103C 000E               1335          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C84  BE3C 0000               1336          CMP.B   #%0,D7      *if info finished printing
00001C88  6700 02CC               1337          BEQ     DSEND      *branch to end
00001C8C  43F9 000021F2           1338          LEA     COMMA,A1
00001C92  4E4F                    1339          TRAP    #15
00001C94                          1340  
00001C94                          1341          
00001C94                          1342  * parse ea mode: 3 bits
00001C94                          1343  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C94                          1344  *address reg direct not allowed for .B operations
00001C94                          1345  *no invalid
00001C94                          1346  DADDEA
00001C94  E75C                    1347          ROL.W   #3,D4       *ea mode
00001C96  1604                    1348          MOVE.B  D4,D3
00001C98  0203 0007               1349          ANDI.B  #%111,D3
00001C9C                          1350  
00001C9C                          1351  *parse ea reg: 3 bits
00001C9C                          1352  *no invalid: paired with opmode below (nums 0-7)
00001C9C                          1353  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001C9C  E75C                    1354          ROL.W   #3,D4       *ea mode
00001C9E  1C04                    1355          MOVE.B  D4,D6
00001CA0  0206 0007               1356          ANDI.B  #%111,D6
00001CA4                          1357          
00001CA4                          1358  *comparisons
00001CA4  B67C 0004               1359          CMP     #%100,D3
00001CA8  6700 005A               1360          BEQ     ADDDATACHECK
00001CAC                          1361  DATACHECKCONT
00001CAC  4EB8 120C               1362          JSR     ADDRMODEALL
00001CB0  BE3C 0001               1363          CMP.B   #%1,D7      *if info printed
00001CB4  6700 02A0               1364          BEQ     DSEND       *end
00001CB8  43F9 000021F2           1365          LEA     COMMA,A1
00001CBE  4E4F                    1366          TRAP    #15
00001CC0  60A6                    1367          BRA     DADDPRNTREG 
00001CC2                          1368  
00001CC2  6000 0292               1369          BRA     DSEND
00001CC6                          1370          
00001CC6  43F9 000021DE           1371  PRINTA  LEA     VALA,A1
00001CCC  60A8                    1372          BRA     ADDCONT
00001CCE                          1373  
00001CCE                          1374          
00001CCE  4E71                    1375  DADDA   NOP
00001CD0  43F9 000021DE           1376          LEA     VALA,A1
00001CD6  4E4F                    1377          TRAP    #15
00001CD8  BE3C 0000               1378          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001CDC  6600 000C               1379          BNE     ADDAL
00001CE0  43F9 000021D8           1380          LEA     MODEW,A1
00001CE6  6000 000C               1381          BRA     ADDSIZEEND
00001CEA  43F9 000021DB           1382  ADDAL   LEA     MODEL,A1
00001CF0  6000 0002               1383          BRA     ADDSIZEEND
00001CF4                          1384  ADDSIZEEND
00001CF4  4E4F                    1385          TRAP    #15
00001CF6  43F9 00002198           1386          LEA     SM7,A1
00001CFC  4E4F                    1387          TRAP    #15
00001CFE  1E3C 0000               1388          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D02  6090                    1389          BRA     DADDEA
00001D04                          1390  ADDDATACHECK
00001D04  BA3C 0003               1391          CMP.B   #%11,D5
00001D08  6700 0220               1392          BEQ     DSERR
00001D0C  609E                    1393          BRA     DATACHECKCONT
00001D0E                          1394          
00001D0E                          1395          
00001D0E                          1396  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D0E                          1397  
00001D0E                          1398  DS1110
00001D0E  E75C                    1399          ROL.W   #3,D4           * [D2] Reading count
00001D10  1404                    1400          MOVE.B  D4,D2
00001D12  0202 0007               1401          ANDI.B  #%111,D2
00001D16                          1402          
00001D16  E35C                    1403          ROL.W   #1,D4           * [D3] Reading direction
00001D18  1604                    1404          MOVE.B  D4,D3
00001D1A  0203 0001               1405          ANDI.B  #%1,D3
00001D1E                          1406          
00001D1E  E55C                    1407          ROL.W   #2,D4           * [D5] Reading size
00001D20  1A04                    1408          MOVE.B  D4,D5
00001D22  0205 0003               1409          ANDI.B  #%11,D5
00001D26                          1410          
00001D26  BA3C 0003               1411          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D2A  6700 00F0               1412          BEQ     DS1110MEM
00001D2E                          1413          
00001D2E  E35C                    1414          ROL.W   #1,D4           * [D6] Reading count mode
00001D30  1C04                    1415          MOVE.B  D4,D6
00001D32  0206 0001               1416          ANDI.B  #%1,D6
00001D36                          1417          
00001D36  E55C                    1418          ROL.W   #2,D4           * [D7] reading type of shift
00001D38  1E04                    1419          MOVE.B  D4,D7
00001D3A  0207 0003               1420          ANDI.B  #%11,D7
00001D3E                          1421          
00001D3E  E75C                    1422          ROL.W   #3,D4           * [D1] reading register
00001D40  1204                    1423          MOVE.B  D4,D1
00001D42  0201 0007               1424          ANDI.B  #%111,D1
00001D46                          1425          
00001D46  BE3C 0001               1426          CMP.B   #%01,D7   *Determine shift type
00001D4A  6700 008E               1427          BEQ     DLS
00001D4E  BE3C 0000               1428          CMP.B   #%00,D7
00001D52  6700 0092               1429          BEQ     DAS
00001D56  BE3C 0003               1430          CMP.B   #%11,D7
00001D5A  6700 0096               1431          BEQ     DRO
00001D5E                          1432          
00001D5E  6000 01F6               1433          BRA     DSEND               *Fallback in case of invalid code
00001D62                          1434          
00001D62  48E7 FFFF               1435  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001D66  4EB9 00001DFE           1436          JSR     DS1110SIDE
00001D6C  4CDF FFFF               1437          MOVEM.L (SP)+,A0-A7/D0-D7
00001D70                          1438          
00001D70  48E7 FFFF               1439          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001D74  4EB8 11C2               1440          JSR     SIZE
00001D78  4CDF FFFF               1441          MOVEM.L (SP)+,A0-A7/D0-D7
00001D7C                          1442          
00001D7C  103C 000E               1443          MOVE.B  #14,D0
00001D80  43F9 0000218B           1444          LEA     SM5,A1
00001D86  4E4F                    1445          TRAP    #15
00001D88                          1446          
00001D88  BA3C 0003               1447          CMP.B   #%11,D5
00001D8C  6700 00B4               1448          BEQ     DS1110MEMA
00001D90                          1449          
00001D90  BC3C 0001               1450          CMP.B   #%1,D6
00001D94  6700 003A               1451          BEQ     DS1110_REG_D
00001D98  6000 002C               1452          BRA     DS1110_REG_I
00001D9C                          1453          
00001D9C  1C01                    1454  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001D9E                          1455          
00001D9E  103C 0003               1456          MOVE.B  #3,D0
00001DA2  1202                    1457          MOVE.B  D2,D1
00001DA4  4E4F                    1458          TRAP    #15
00001DA6                          1459          
00001DA6  103C 000E               1460          MOVE.B  #14,D0
00001DAA  43F9 000021F2           1461          LEA     COMMA,A1
00001DB0  4E4F                    1462          TRAP    #15
00001DB2                          1463          
00001DB2  43F9 000021E0           1464          LEA     VALD,A1
00001DB8  4E4F                    1465          TRAP    #15
00001DBA                          1466          
00001DBA  103C 0003               1467          MOVE.B  #3,D0
00001DBE  1206                    1468          MOVE.B  D6,D1
00001DC0  4E4F                    1469          TRAP    #15
00001DC2                          1470          
00001DC2  6000 0192               1471          BRA     DSEND
00001DC6                          1472          
00001DC6                          1473  DS1110_REG_I
00001DC6  43F9 000021E2           1474          LEA     VALN,A1
00001DCC  4E4F                    1475          TRAP    #15
00001DCE  60CC                    1476          BRA     DS1110B
00001DD0                          1477  
00001DD0                          1478  DS1110_REG_D
00001DD0  43F9 000021E0           1479          LEA     VALD,A1
00001DD6  4E4F                    1480          TRAP    #15
00001DD8  60C2                    1481          BRA     DS1110B       
00001DDA                          1482          
00001DDA  43F9 00002216           1483  DLS     LEA     LSM,A1
00001DE0  4E4F                    1484          TRAP    #15
00001DE2  6000 FF7E               1485          BRA     DS1110A
00001DE6                          1486          
00001DE6  43F9 0000221D           1487  DAS     LEA     ASM,A1
00001DEC  4E4F                    1488          TRAP    #15
00001DEE  6000 FF72               1489          BRA     DS1110A
00001DF2                          1490          
00001DF2  43F9 00002224           1491  DRO     LEA     ROM,A1
00001DF8  4E4F                    1492          TRAP    #15
00001DFA  6000 FF66               1493          BRA     DS1110A
00001DFE                          1494          
00001DFE                          1495  DS1110SIDE
00001DFE  103C 0006               1496          MOVE.B  #6,D0
00001E02  B63C 0001               1497          CMP.B   #1,D3
00001E06  6700 000C               1498          BEQ     DS1110LSIDE
00001E0A  123C 0052               1499          MOVE.B  #82,D1
00001E0E  4E4F                    1500          TRAP    #15
00001E10  6000 0008               1501          BRA     DS1110SIDEEND
00001E14                          1502  
00001E14                          1503  DS1110LSIDE
00001E14  123C 004C               1504          MOVE.B  #76,D1
00001E18  4E4F                    1505          TRAP    #15
00001E1A                          1506          
00001E1A                          1507  DS1110SIDEEND
00001E1A  4E75                    1508          RTS 
00001E1C                          1509  
00001E1C                          1510  DS1110MEM
00001E1C                          1511                                  * Shift type is instead stored in D2
00001E1C                          1512          
00001E1C  E75C                    1513          ROL.W   #3,D4           * [D6] Reading address mode
00001E1E  1C04                    1514          MOVE.B  D4,D6
00001E20  0206 0007               1515          ANDI.B  #%111,D6
00001E24                          1516          
00001E24  E75C                    1517          ROL.W   #3,D4           * [D1] Reading address register
00001E26  1204                    1518          MOVE.B  D4,D1
00001E28  0201 0007               1519          ANDI.B  #%111,D1
00001E2C                          1520          
00001E2C  B43C 0001               1521          CMP.B   #%01,D2
00001E30  67A8                    1522          BEQ     DLS
00001E32  B43C 0000               1523          CMP.B   #%00,D2
00001E36  67AE                    1524          BEQ     DAS
00001E38  B43C 0003               1525          CMP.B   #%11,D2
00001E3C  67B4                    1526          BEQ     DRO
00001E3E  6000 0116               1527          BRA     DSEND
00001E42                          1528          
00001E42                          1529          
00001E42                          1530  DS1110MEMA
00001E42                          1531          
00001E42  BC3C 0002               1532          CMP.B   #%010,D6
00001E46  6700 002E               1533          BEQ     DS1110MEM_REG
00001E4A  BC3C 0003               1534          CMP.B   #%011,D6
00001E4E  6700 004C               1535          BEQ     DS1110MEM_INC
00001E52  BC3C 0004               1536          CMP.B   #%100,D6
00001E56  6700 006A               1537          BEQ     DS1110MEM_DEC
00001E5A                          1538          
00001E5A  BC3C 0007               1539          CMP.B   #%111,D6
00001E5E  6600 00CA               1540          BNE     DSERR
00001E62                          1541          
00001E62  B23C 0000               1542          CMP.B   #%000,D1
00001E66  6700 0080               1543          BEQ     DS1110MEM_CUSW
00001E6A  B23C 0001               1544          CMP.B   #%001,D1
00001E6E  6700 0096               1545          BEQ     DS1110MEM_CUSL
00001E72                          1546          
00001E72  6000 00E2               1547          BRA     DSEND
00001E76                          1548  
00001E76                          1549  DS1110MEM_REG
00001E76  43F9 000021E8           1550          LEA     OPENPTR,A1
00001E7C  4E4F                    1551          TRAP    #15
00001E7E                          1552          
00001E7E  43F9 000021DE           1553          LEA     VALA,A1
00001E84  4E4F                    1554          TRAP    #15
00001E86                          1555          
00001E86  103C 0003               1556          MOVE.B  #3,D0
00001E8A  4E4F                    1557          TRAP    #15
00001E8C  103C 000E               1558          MOVE.B  #14,D0
00001E90                          1559          
00001E90  43F9 000021ED           1560          LEA     CLOSEPTR,A1
00001E96  4E4F                    1561          TRAP    #15
00001E98                          1562          
00001E98  6000 00BC               1563          BRA     DSEND
00001E9C                          1564  
00001E9C                          1565  DS1110MEM_INC
00001E9C  43F9 000021E8           1566          LEA     OPENPTR,A1
00001EA2  4E4F                    1567          TRAP    #15
00001EA4                          1568          
00001EA4  43F9 000021DE           1569          LEA     VALA,A1
00001EAA  4E4F                    1570          TRAP    #15
00001EAC                          1571          
00001EAC  103C 0003               1572          MOVE.B  #3,D0
00001EB0  4E4F                    1573          TRAP    #15
00001EB2  103C 000E               1574          MOVE.B  #14,D0
00001EB6                          1575          
00001EB6  43F9 000021EF           1576          LEA     CLOSEIPTR,A1
00001EBC  4E4F                    1577          TRAP    #15
00001EBE                          1578          
00001EBE  6000 0096               1579          BRA     DSEND
00001EC2                          1580  
00001EC2                          1581  DS1110MEM_DEC
00001EC2  43F9 000021EA           1582          LEA     OPENDPTR,A1
00001EC8  4E4F                    1583          TRAP    #15
00001ECA                          1584          
00001ECA  43F9 000021DE           1585          LEA     VALA,A1
00001ED0  4E4F                    1586          TRAP    #15
00001ED2                          1587          
00001ED2  103C 0003               1588          MOVE.B  #3,D0
00001ED6  4E4F                    1589          TRAP    #15
00001ED8  103C 000E               1590          MOVE.B  #14,D0
00001EDC                          1591          
00001EDC  43F9 000021ED           1592          LEA     CLOSEPTR,A1
00001EE2  4E4F                    1593          TRAP    #15
00001EE4                          1594          
00001EE4  6000 0070               1595          BRA     DSEND
00001EE8                          1596          
00001EE8                          1597  DS1110MEM_CUSW
00001EE8  43F9 000021F4           1598          LEA     DOLLAR,A1
00001EEE  4E4F                    1599          TRAP    #15
00001EF0  341A                    1600          MOVE.W  (A2)+,D2
00001EF2  48E7 0400               1601          MOVEM.L D5,-(SP)
00001EF6  1A3C 0030               1602          MOVE.B  #48,D5
00001EFA  4EB8 117A               1603          JSR     HEXOUT
00001EFE  4CDF 0020               1604          MOVEM.L (SP)+,D5
00001F02  6000 0052               1605          BRA     DSEND
00001F06                          1606          
00001F06                          1607  DS1110MEM_CUSL
00001F06  43F9 000021F4           1608          LEA     DOLLAR,A1
00001F0C  4E4F                    1609          TRAP    #15
00001F0E  241A                    1610          MOVE.L  (A2)+,D2
00001F10  48E7 0400               1611          MOVEM.L D5,-(SP)
00001F14  1A3C 0030               1612          MOVE.B  #48,D5
00001F18  4EB8 117A               1613          JSR     HEXOUT
00001F1C  4CDF 0020               1614          MOVEM.L (SP)+,D5
00001F20  6000 0034               1615          BRA     DSEND
00001F24                          1616          
00001F24                          1617  
00001F24                          1618  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F24                          1619  
00001F24  4E71                    1620  DS1111  NOP
00001F26  6000 002E               1621          BRA     DSEND
00001F2A                          1622  
00001F2A                          1623  *DS Final
00001F2A                          1624  *--------------------------------------------------------------------------------------------------
00001F2A                          1625  
00001F2A  103C 000E               1626  DSERR   MOVE.B  #14,D0
00001F2E  43F9 000021A7           1627          LEA     ERRM,A1
00001F34  4E4F                    1628          TRAP    #15
00001F36  6000 001E               1629          BRA     DSEND
00001F3A                          1630          
00001F3A                          1631  DSERRINS
00001F3A  103C 000E               1632          MOVE.B  #14,D0
00001F3E  43F9 000021AF           1633          LEA     ERRMINS,A1
00001F44  4E4F                    1634          TRAP    #15
00001F46  6000 000E               1635          BRA     DSEND
00001F4A                          1636  
00001F4A                          1637  DSERREA
00001F4A  103C 000E               1638          MOVE.B  #14,D0
00001F4E  43F9 000021B0           1639          LEA     ERRMEA,A1
00001F54  4E4F                    1640          TRAP    #15
00001F56                          1641  
00001F56  4E75                    1642  DSEND   RTS
00001F58                          1643  
00001F58  43F9 00002178           1644  DSEOF   LEA     LB,A1
00001F5E  103C 000E               1645          MOVE.B  #14,D0
00001F62  4E4F                    1646          TRAP    #15
00001F64                          1647          
00001F64  43F9 0000207A           1648          LEA     REST,A1
00001F6A  103C 000E               1649          MOVE.B  #14,D0
00001F6E  4E4F                    1650          TRAP    #15
00001F70                          1651          
00001F70  103C 0005               1652          MOVE.B  #5,D0
00001F74  4E4F                    1653          TRAP    #15
00001F76                          1654          
00001F76  B23C 0059               1655          CMP.B   #89,D1
00001F7A  6700 F084               1656          BEQ     START
00001F7E  B23C 0079               1657          CMP.B   #121,D1
00001F82  6700 F07C               1658          BEQ     START
00001F86                          1659  
00001F86  43F9 00002178           1660  END     LEA     LB,A1
00001F8C  103C 000E               1661          MOVE.B  #14,D0
00001F90  4E4F                    1662          TRAP    #15
00001F92                          1663          
00001F92  43F9 00002178           1664          LEA     LB,A1
00001F98  103C 000E               1665          MOVE.B  #14,D0
00001F9C  4E4F                    1666          TRAP    #15
00001F9E                          1667          
00001F9E  43F9 00002097           1668          LEA     ENDMSG,A1
00001FA4  103C 000E               1669          MOVE.B  #14,D0
00001FA8  4E4F                    1670          TRAP    #15
00001FAA                          1671          
00001FAA  43F9 000020BF           1672          LEA     AUTHOR,A1
00001FB0  4E4F                    1673          TRAP    #15
00001FB2                          1674          
00001FB2  43F9 00002178           1675          LEA     LB,A1
00001FB8  103C 000E               1676          MOVE.B  #14,D0
00001FBC  4E4F                    1677          TRAP    #15
00001FBE                          1678          
00001FBE  103C 0009               1679          MOVE.B  #9,D0
00001FC2  4E4F                    1680          TRAP    #15
00001FC4                          1681  
00001FC4                          1682  *Initialized Variables
00001FC4                          1683  *--------------------------------------------------------------------------------------------------
00001FC4                          1684  
00001FC4  =0000000D               1685  CR      EQU     $0D
00001FC4  =0000000A               1686  LF      EQU     $0A
00001FC4  =00000009               1687  HT      EQU     $09
00001FC4                          1688  
00001FC4= 54 68 69 73 20 69 ...   1689  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
0000204C= 45 6E 74 65 72 20 ...   1690  ASTART  DC.B    'Enter start address: $',0
00002063= 45 6E 74 65 72 20 ...   1691  AEND    DC.B    'Enter end address:   $',0
0000207A= 52 65 73 74 61 72 ...   1692  REST    DC.B    'Restart Disassembler (y/n)? ',0
00002097= 54 68 61 6E 6B 20 ...   1693  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
000020BF= 4D 61 64 65 20 62 ...   1694  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
000020E4                          1695  
000020E4= 45 52 52 4F 52 3A ...   1696  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
0000211E= 45 52 52 4F 52 3A ...   1697  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
00002144= 45 52 52 4F 52 3A ...   1698  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00002178                          1699  
00002178= 0D 0A 00                1700  LB      DC.B    CR,LF,0
0000217B                          1701  
0000217B= 09 00                   1702  HTM     DC.B    HT,0
0000217D                          1703  
0000217D= 20 00                   1704  SM1     DC.B    ' ',0
0000217F= 20 20 00                1705  SM2     DC.B    '  ',0
00002182= 20 20 20 00             1706  SM3     DC.B    '   ',0
00002186= 20 20 20 20 00          1707  SM4     DC.B    '    ',0
0000218B= 20 20 20 20 20 00       1708  SM5     DC.B    '     ',0
00002191= 20 20 20 20 20 20 00    1709  SM6     DC.B    '      ',0
00002198= 20 20 20 20 20 20 ...   1710  SM7     DC.B    '       ',0
000021A0                          1711  
000021A0= 54 45 53 54 00          1712  TESTM   DC.B    'TEST',0
000021A5                          1713  
000021A5= 00                      1714  NOTH    DC.B    '',0
000021A6= 00                      1715  NOTH2   DC.B    '',0
000021A7                          1716  
000021A7= 20 2A 45 52 52 4F ...   1717  ERRM    DC.B    ' *ERROR',0
000021AF= 00                      1718  ERRMINS DC.B    '',0
000021B0= 20 2A 45 52 52 4F ...   1719  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
000021D5                          1720  
000021D5= 2E 42 00                1721  MODEB   DC.B    '.B',0
000021D8= 2E 57 00                1722  MODEW   DC.B    '.W',0
000021DB= 2E 4C 00                1723  MODEL   DC.B    '.L',0
000021DE                          1724  
000021DE= 41 00                   1725  VALA    DC.B    'A',0
000021E0= 44 00                   1726  VALD    DC.B    'D',0
000021E2= 23 00                   1727  VALN    DC.B    '#',0
000021E4= 30 00                   1728  VAL0    DC.B    '0',0
000021E6= 51 00                   1729  VALQ    DC.B    'Q',0
000021E8                          1730  
000021E8= 28 00                   1731  OPENPTR     DC.B    '(',0
000021EA= 2D 28 00                1732  OPENDPTR    DC.B    '-(',0
000021ED                          1733  
000021ED= 29 00                   1734  CLOSEPTR    DC.B    ')',0
000021EF= 29 2B 00                1735  CLOSEIPTR   DC.B    ')+',0
000021F2                          1736  
000021F2= 2C 00                   1737  COMMA   DC.B    ',',0
000021F4= 24 00                   1738  DOLLAR  DC.B    '$',0
000021F6                          1739  
000021F6= 4E 4F 50 00             1740  NOPM    DC.B    'NOP',0
000021FA                          1741  
000021FA= 4D 4F 56 45 00          1742  MOVEM   DC.B    'MOVE',0
000021FF                          1743  
000021FF= 41 44 44 00             1744  ADDM    DC.B    'ADD',0
00002203                          1745  
00002203= 53 55 42 00             1746  SUBM    DC.B    'SUB',0
00002207                          1747  
00002207= 4C 45 41 00             1748  LEAM    DC.B    'LEA',0
0000220B                          1749  
0000220B= 41 4E 44 00             1750  ANDM    DC.B    'AND',0
0000220F= 4F 52 00                1751  ORM     DC.B    'OR',0
00002212= 4E 4F 54 00             1752  NOTM    DC.B    'NOT',0
00002216                          1753  
00002216= 4C 53 00                1754  LSM    DC.B    'LS',0
00002219= 4C 53 52 00             1755  LSRM    DC.B    'LSR',0
0000221D= 41 53 00                1756  ASM    DC.B    'AS',0
00002220= 41 53 52 00             1757  ASRM    DC.B    'ASR',0
00002224                          1758  
00002224= 52 4F 00                1759  ROM    DC.B    'RO',0
00002227= 52 4F 52 00             1760  RORM    DC.B    'ROR',0
0000222B                          1761  
0000222B= 42 47 54 00             1762  BGTM    DC.B    'BGT',0
0000222F= 42 4C 45 00             1763  BLEM    DC.B    'BLE',0
00002233= 42 45 51 00             1764  BEQM    DC.B    'BEQ',0
00002237                          1765  
00002237= 4A 53 52 00             1766  JSRM    DC.B    'JSR',0
0000223B= 52 54 53 00             1767  RTSM    DC.B    'RTS',0
0000223F                          1768  
0000223F= 42 52 41 00             1769  BRAM    DC.B    'BRA',0
00002243                          1770  
00002243                          1771  
00002243                          1772      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1CEA
ADDCONT             1C76
ADDDATACHECK        1D04
ADDM                21FF
ADDRMODEALL         120C
ADDSIZEEND          1CF4
ADREG               1652
ADREGP              166A
AEND                2063
AM000               120C
AM001               122C
AM010               1254
AM011               1284
AM100               12B4
AM111               12E4
AM111001            1312
AM111100            1338
AMEND               1366
ANDM                220B
ASM                 221D
ASRM                2220
ASTART              204C
AUTHOR              20BF
BEQM                2233
BGTM                222B
BLEM                222F
BRAM                223F
CLOSEIPTR           21EF
CLOSEPTR            21ED
COMMA               21F2
CR                  D
DADD                1C28
DADDA               1CCE
DADDEA              1C94
DADDPRNTREG         1C68
DADDQ               18A6
DAND                139E
DANDA               1428
DANDB               13EC
DANDL               1414
DANDW               1400
DAS                 1DE6
DATACHECKCONT       1CAC
DBEQ                1A52
DBGT                19D6
DBLE                1A12
DBRA                194A
DBRA_16BIT          1992
DBRA_32BIT          19B4
DISASM              136C
DJSR                16D4
DJSR_CUSL           176C
DJSR_CUSW           174E
DJSR_REG            1728
DLEA                1796
DLEAP               17CC
DLS                 1DDA
DMOVE2              143E
DMOVEA              14E2
DMOVEQ              1A94
DNOP                1598
DNOT                15A4
DNOTA               1604
DNOTB               15C8
DNOTL               15F0
DNOTW               15DC
DOLLAR              21F4
DOR                 1AFE
DORA                1B68
DORB                1B2C
DORL                1B54
DORW                1B40
DREG                163A
DRO                 1DF2
DRTS                178A
DS0                 1376
DS00                138A
DS01                1504
DS010               1522
DS0100              155E
DS0101              18A4
DS011               152C
DS0110              191E
DS0111              1A92
DS1                 1380
DS10                150E
DS100               1536
DS1000              1AFC
DS1001              1B82
DS101               1540
DS1010              1C14
DS1011              1C1A
DS11                1518
DS110               154A
DS1100              1C20
DS1101              1C26
DS111               1554
DS1110              1D0E
DS1110A             1D62
DS1110B             1D9C
DS1110LSIDE         1E14
DS1110MEM           1E1C
DS1110MEMA          1E42
DS1110MEM_CUSL      1F06
DS1110MEM_CUSW      1EE8
DS1110MEM_DEC       1EC2
DS1110MEM_INC       1E9C
DS1110MEM_REG       1E76
DS1110SIDE          1DFE
DS1110SIDEEND       1E1A
DS1110_REG_D        1DD0
DS1110_REG_I        1DC6
DS1111              1F24
DSEND               1F56
DSEOF               1F58
DSERR               1F2A
DSERREA             1F4A
DSERRINS            1F3A
DSUB                1B84
DSUBEA              1BE0
DSUBPRNTREG         1BBC
END                 1F86
ENDMSG              2097
ERRM                21A7
ERRMEA              21B0
ERRMINS             21AF
EXT                 16B2
EXTW                16C8
HDONE               11C0
HEXOUT              117A
HHEX                1194
HNUM                119C
HSKIP2              11AA
HSKIP3              11BE
HSTEP               1182
HSTEP2              11A0
HT                  9
HTM                 217B
INTRO               1FC4
JSR010              17F8
JSR111              1828
JSR111001           185A
JSRM                2237
JSRPRINT2           1884
LB                  2178
LEAM                2207
LF                  A
LSM                 2216
LSRM                2219
MADREG              168A
MODEB               21D5
MODEL               21DB
MODEW               21D8
MOVECONT            1462
MOVEERRCHECK        14F8
MOVEM               21FA
MSDONE              14A8
MSIZE               1462
MSIZEB              148A
MSIZEL              149E
MSIZEW              1494
NOPM                21F6
NOTH                21A5
NOTH2               21A6
NOTM                2212
OPENDPTR            21EA
OPENPTR             21E8
ORM                 220F
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1CC6
PSTEP               108E
PSTEP2              10BE
RCONT               1166
READLN              1118
REST                207A
ROM                 2224
RORM                2227
RPAUSE              116E
RSTEP               111E
RTSM                223B
SDONE               1208
SIZE                11C2
SIZEB               11EA
SIZEL               11FE
SIZEW               11F4
SM1                 217D
SM2                 217F
SM3                 2182
SM4                 2186
SM5                 218B
SM6                 2191
SM7                 2198
SRET                120A
START               1000
STARTER             0
SUBM                2203
TEST                102A
TESTM               21A0
VAL0                21E4
VALA                21DE
VALD                21E0
VALN                21E2
VALQ                21E6
VERR1               10E8
VERR1M              20E4
VERR2               10F8
VERR2M              211E
VERR3               1108
VERR3M              2144
VINPUT              10DE
