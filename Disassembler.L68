00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/18/2023 11:05:33 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : Ben Schipunov (ARM Cortex Companions)
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: Ben Schipunov contribution to the disassembler
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  43F9 00001243             14          LEA     ASTART,A1   *Input prompt text #1
00001006  103C 000E                 15          MOVE.B  #14,D0      
0000100A  4E4F                      16          TRAP    #15
0000100C                            17  
0000100C  103C 0002                 18          MOVE.B  #2,D0       *String prompt #1
00001010  4E4F                      19          TRAP    #15
00001012                            20          
00001012  4EB9 00001038             21          JSR     PARSE       *Parse string #1
00001018                            22          
00001018                            23  
00001018  2641                      24          MOVE.L  D1,A3
0000101A                            25          
0000101A  43F9 0000125A             26          LEA     AEND,A1     *Input prompt text #2
00001020  103C 000E                 27          MOVE.B  #14,D0
00001024  4E4F                      28          TRAP    #15
00001026                            29          
00001026  103C 0002                 30          MOVE.B  #2,D0       *String prompt #2
0000102A  4E4F                      31          TRAP    #15
0000102C                            32          
0000102C  4EB9 00001038             33          JSR     PARSE       *Parse string #2
00001032                            34          
00001032  2841                      35          MOVE.L  D1,A4
00001034                            36          
00001034  6000 005A                 37          BRA     VINPUT      *Verify inputs
00001038                            38          
00001038                            39  *--------------------------------------------------------------------------------------------------
00001038                            40  
00001038                            41  PARSE                       *PARSE: Initialize variables involved in parsing
00001038  123C 0000                 42          MOVE.B  #0,D1       * [D1] parse output
0000103C  143C 0008                 43          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
00001040                            44          
00001040                            45  PSTEP                       *PSTEP: Step in parsing for loop
00001040  1019                      46          MOVE.B  (A1)+,D0    *Read next byte from A1
00001042  B03C 0000                 47          CMP.B   #0,D0       *Check if reached end of string input
00001046  6700 0046                 48          BEQ     PDONE       *Break the for loop if reached end
0000104A  E989                      49          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000104C  B03C 003A                 50          CMP.B   #58,D0      *Distinguish between letter and number
00001050  6D00 001A                 51          BLT     PNUM        *Handle number
00001054                            52  
00001054  0400 0037                 53  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
00001058  0C00 000F                 54          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
0000105C  6E00 0006                 55          BGT     PCAPS       *Handle lowercase
00001060  6000 000E                 56          BRA     PSTEP2
00001064                            57       
00001064  0400 0020                 58  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
00001068  6000 0006                 59          BRA     PSTEP2
0000106C                            60  
0000106C  0400 0030                 61  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
00001070                            62          
00001070  0C00 000F                 63  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
00001074  6E00 0034                 64          BGT     VERR2
00001078  0C00 0000                 65          CMPI.B   #0,D0
0000107C  6D00 002C                 66          BLT     VERR2
00001080  D280                      67          ADD.L   D0,D1       *Append hex char to parse output
00001082  5302                      68          SUBQ.B  #1,D2       *Decrement the counter
00001084  0C02 0000                 69          CMPI.B   #0,D2      *Compare if we reached max count
00001088  6700 0004                 70          BEQ     PDONE       *Complete parsing
0000108C  60B2                      71          BRA     PSTEP       *Or else continue loop
0000108E                            72  
0000108E  4E75                      73  PDONE   RTS
00001090                            74  
00001090                            75  *--------------------------------------------------------------------------------------------------
00001090                            76  
00001090  B9CB                      77  VINPUT  CMP.L   A3,A4
00001092  6D00 0006                 78          BLT     VERR1
00001096  6000 0022                 79          BRA     READLN
0000109A                            80  
0000109A  43F9 00001271             81  VERR1   LEA     VERR1M,A1
000010A0  103C 000E                 82          MOVE.B  #14,D0
000010A4  4E4F                      83          TRAP    #15
000010A6  6000 013E                 84          BRA     END
000010AA                            85  
000010AA  43F9 000012AA             86  VERR2   LEA     VERR2M,A1
000010B0  103C 000E                 87          MOVE.B  #14,D0
000010B4  4E4F                      88          TRAP    #15
000010B6  6000 012E                 89          BRA     END
000010BA                            90          
000010BA                            91  *--------------------------------------------------------------------------------------------------
000010BA                            92  
000010BA  244B                      93  READLN  MOVE.L  A3,A2
000010BC                            94  
000010BC  281A                      95  RSTEP   MOVE.L  (A2)+,D4
000010BE  240A                      96          MOVE.L  A2,D2
000010C0  5982                      97          SUBQ.L  #4,D2
000010C2                            98          
000010C2  4EB9 00001102             99          JSR     HEXOUT
000010C8                           100          
000010C8  43F9 000012C4            101          LEA     HTM,A1
000010CE  103C 000E                102          MOVE.B  #14,D0
000010D2  4E4F                     103          TRAP    #15
000010D4                           104          
000010D4  48E7 FFFF                105          MOVEM.L A0-A7/D0-D7,-(SP)
000010D8  4EB9 0000113C            106          JSR     DISASM
000010DE  4CDF FFFF                107          MOVEM.L (SP)+,A0-A7/D0-D7
000010E2                           108          
000010E2                           109          *Disassembly code will start here
000010E2                           110          *I will organize this area later on
000010E2                           111          
000010E2  43F9 000012C6            112          LEA     TESTM,A1
000010E8  103C 000E                113          MOVE.B  #14,D0
000010EC  4E4F                     114          TRAP    #15
000010EE                           115          
000010EE  43F9 000012C1            116          LEA     LB,A1
000010F4  103C 000E                117          MOVE.B  #14,D0
000010F8  4E4F                     118          TRAP    #15
000010FA                           119          
000010FA                           120          
000010FA                           121          
000010FA  B9CA                     122          CMP.L   A2,A4
000010FC  6D00 00E8                123          BLT     END
00001100  60BA                     124          BRA     RSTEP
00001102                           125  
00001102                           126  *--------------------------------------------------------------------------------------------------
00001102                           127  
00001102                           128  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
00001102  103C 0006                129          MOVE.B  #6,D0       * [D0] Trap task #6
00001106  123C 0000                130          MOVE.B  #0,D1
0000110A  163C 0008                131          MOVE.B  #8,D3
0000110E                           132          
0000110E  E99A                     133  HSTEP   ROL.L   #4,D2
00001110  2202                     134          MOVE.L  D2,D1
00001112  0281 0000000F            135          ANDI.L  #$F,D1
00001118  B23C 000A                136          CMP.B   #10,D1
0000111C  6D00 000A                137          BLT     HNUM
00001120                           138          
00001120  0601 0037                139  HHEX    ADDI.B  #55,D1
00001124  6000 0006                140          BRA     HSTEP2
00001128                           141  
00001128  0601 0030                142  HNUM    ADDI.B  #48,D1
0000112C                           143  
0000112C  5303                     144  HSTEP2  SUBQ.B  #1,D3
0000112E  4E4F                     145          TRAP #15
00001130  0C03 0000                146          CMPI.B  #0,D3
00001134  6700 0004                147          BEQ     HDONE
00001138  60D4                     148          BRA     HSTEP
0000113A                           149          
0000113A  4E75                     150  HDONE   RTS
0000113C                           151  
0000113C                           152  *--------------------------------------------------------------------------------------------------
0000113C                           153  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000113C                           154  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000113C                           155  
0000113C                           156  DISASM                      *DISASM: Disassemble a machine code
0000113C  E38C                     157          LSL.L   #1,D4
0000113E  6500 0010                158          BCS     DS1
00001142  6000 0002                159          BRA     DS0
00001146                           160          
00001146                           161  DS0      
00001146  E38C                     162          LSL.L   #1,D4
00001148  6500 0026                163          BCS     DS01
0000114C  6000 000C                164          BRA     DS00
00001150                           165  
00001150                           166  DS1      
00001150  E38C                     167          LSL.L   #1,D4
00001152  6500 0030                168          BCS     DS11
00001156  6000 0022                169          BRA     DS10
0000115A                           170  
0000115A                           171  DS00     
0000115A  E59C                     172          ROL.L   #2,D4
0000115C  2A04                     173          MOVE.L  D4,D5
0000115E  0204 0003                174          ANDI.B  #%11,D4
00001162  0C04 0000                175          CMPI.B  #%00,D4
00001166  6700 0002                176          BEQ     DAND
0000116A                           177  
0000116A  4E71                     178  DAND    NOP                 *DAND: Disassembly function serving DAND        
0000116C                           179          
0000116C  4E71                     180  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000116E                           181          
0000116E                           182  
0000116E  4E71                     183  DMOVEA  NOP
00001170                           184  
00001170                           185  *DS Tier 2
00001170                           186  *--------------------------------------------------------------------------------------------------
00001170                           187  
00001170                           188  DS01    
00001170  E38C                     189          LSL.L   #1,D4
00001172  6500 0024                190          BCS     DS011
00001176  6000 0016                191          BRA     DS010
0000117A                           192  
0000117A                           193  DS10    
0000117A  E38C                     194          LSL.L   #1,D4
0000117C  6500 002E                195          BCS     DS101
00001180  6000 0020                196          BRA     DS100
00001184                           197  
00001184                           198  DS11    
00001184  E38C                     199          LSL.L   #1,D4
00001186  6500 0038                200          BCS     DS111
0000118A  6000 002A                201          BRA     DS110
0000118E                           202  
0000118E                           203  *DS Tier 3
0000118E                           204  *--------------------------------------------------------------------------------------------------
0000118E                           205  
0000118E                           206  DS010    
0000118E  E38C                     207          LSL.L   #1,D4
00001190  6500 003A                208          BCS     DS0101
00001194  6000 0034                209          BRA     DS0100
00001198                           210  
00001198                           211  DS011    
00001198  E38C                     212          LSL.L   #1,D4
0000119A  6500 0034                213          BCS     DS0111
0000119E  6000 002E                214          BRA     DS0110
000011A2                           215  
000011A2                           216  DS100    
000011A2  E38C                     217          LSL.L   #1,D4
000011A4  6500 002E                218          BCS     DS1001
000011A8  6000 0028                219          BRA     DS1000
000011AC                           220  
000011AC                           221  DS101    
000011AC  E38C                     222          LSL.L   #1,D4
000011AE  6500 0028                223          BCS     DS1011
000011B2  6000 0022                224          BRA     DS1010
000011B6                           225  
000011B6                           226  DS110    
000011B6  E38C                     227          LSL.L   #1,D4
000011B8  6500 0022                228          BCS     DS1101
000011BC  6000 001C                229          BRA     DS1100
000011C0                           230  
000011C0                           231  DS111    
000011C0  E38C                     232          LSL.L   #1,D4
000011C2  6500 001C                233          BCS     DS1111
000011C6  6000 0016                234          BRA     DS1110
000011CA                           235  
000011CA                           236  *DS Tier 4
000011CA                           237  *--------------------------------------------------------------------------------------------------
000011CA                           238  
000011CA  4E71                     239  DS0100  NOP
000011CC                           240  
000011CC  4E71                     241  DS0101  NOP
000011CE                           242  
000011CE  4E71                     243  DS0110  NOP
000011D0                           244  
000011D0  4E71                     245  DS0111  NOP
000011D2                           246  
000011D2  4E71                     247  DS1000  NOP
000011D4                           248  
000011D4  4E71                     249  DS1001  NOP
000011D6                           250  
000011D6  4E71                     251  DS1010  NOP
000011D8                           252  
000011D8  4E71                     253  DS1011  NOP
000011DA                           254  
000011DA  4E71                     255  DS1100  NOP
000011DC                           256  
000011DC  4E71                     257  DS1101  NOP
000011DE                           258  
000011DE  4E71                     259  DS1110  NOP
000011E0                           260  
000011E0  4E71                     261  DS1111  NOP
000011E2                           262  
000011E2                           263  *DS Final
000011E2                           264  *--------------------------------------------------------------------------------------------------
000011E2                           265  
000011E2  4E71                     266  DSERR   NOP
000011E4                           267  
000011E4  4E75                     268  DSEND   RTS
000011E6                           269  
000011E6  103C 0009                270  END     MOVE.B  #9,D0
000011EA  4E4F                     271          TRAP    #15
000011EC                           272  
000011EC  =0000000D                273  CR      EQU     $0D
000011EC  =0000000A                274  LF      EQU     $0A
000011EC  =00000009                275  HT      EQU     $09
000011EC                           276  
000011EC= 54 68 69 73 20 69 ...    277  INTRO   DC.B    'This is a program that will disassemble machine code from a start to an end address!',CR,LF,0
00001243= 45 6E 74 65 72 20 ...    278  ASTART  DC.B    'Enter start address: $',0
0000125A= 45 6E 74 65 72 20 ...    279  AEND    DC.B    'Enter end address:   $',0
00001271                           280  
00001271= 45 52 52 4F 52 3A ...    281  VERR1M  DC.B    'ERROR: End address must not be less than start address',CR,LF,0
000012AA= 45 52 52 4F 52 3A ...    282  VERR2M  DC.B    'ERROR: Invalid input',CR,LF,0
000012C1                           283  
000012C1= 0D 0A 00                 284  LB      DC.B    CR,LF,0
000012C4                           285  
000012C4= 09 00                    286  HTM     DC.B    HT,0
000012C6                           287  
000012C6= 54 45 53 54 00           288  TESTM   DC.B    'TEST',0
000012CB                           289  
000012CB                           290      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AEND                125A
ASTART              1243
CR                  D
DAND                116A
DISASM              113C
DMOVE2              116C
DMOVEA              116E
DS0                 1146
DS00                115A
DS01                1170
DS010               118E
DS0100              11CA
DS0101              11CC
DS011               1198
DS0110              11CE
DS0111              11D0
DS1                 1150
DS10                117A
DS100               11A2
DS1000              11D2
DS1001              11D4
DS101               11AC
DS1010              11D6
DS1011              11D8
DS11                1184
DS110               11B6
DS1100              11DA
DS1101              11DC
DS111               11C0
DS1110              11DE
DS1111              11E0
DSEND               11E4
DSERR               11E2
END                 11E6
HDONE               113A
HEXOUT              1102
HHEX                1120
HNUM                1128
HSTEP               110E
HSTEP2              112C
HT                  9
HTM                 12C4
INTRO               11EC
LB                  12C1
LF                  A
PARSE               1038
PCAPS               1064
PDONE               108E
PHEX                1054
PNUM                106C
PSTEP               1040
PSTEP2              1070
READLN              10BA
RSTEP               10BC
START               1000
STARTER             0
TESTM               12C6
VERR1               109A
VERR1M              1271
VERR2               10AA
VERR2M              12AA
VINPUT              1090
