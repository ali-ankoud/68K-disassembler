00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/5/2023 4:21:40 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000  103C 0000                 14          MOVE.B  #0,D0
00001004  123C 0000                 15          MOVE.B  #0,D1
00001008  143C 0000                 16          MOVE.B  #0,D2
0000100C  163C 0000                 17          MOVE.B  #0,D3
00001010  183C 0000                 18          MOVE.B  #0,D4
00001014  1A3C 0000                 19          MOVE.B  #0,D5
00001018  1C3C 0000                 20          MOVE.B  #0,D6
0000101C  1E3C 0000                 21          MOVE.B  #0,D7
00001020                            22          
00001020  103C 000B                 23          MOVE.B  #11,D0
00001024  323C FF00                 24          MOVE.W  #$FF00,D1
00001028  4E4F                      25          TRAP    #15
0000102A                            26          
0000102A                            27  TEST    
0000102A  43F9 0000202E             28          LEA     INTRO,A1    *Intro text
00001030  103C 000E                 29          MOVE.B  #14,D0
00001034  4E4F                      30          TRAP    #15
00001036                            31          
00001036  43F9 000020B6             32          LEA     ASTART,A1   *Input prompt text #1
0000103C  4E4F                      33          TRAP    #15
0000103E                            34          
0000103E  43F9 0000220F             35          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
00001044  103C 0002                 36          MOVE.B  #2,D0       *String prompt #1
00001048  4E4F                      37          TRAP    #15
0000104A                            38          
0000104A  B27C 0008                 39          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000104E  6E00 00B8                 40          BGT     VERR3
00001052                            41          
00001052  4EB9 00001086             42          JSR     PARSE       *Parse string #1
00001058                            43          
00001058                            44  
00001058  2641                      45          MOVE.L  D1,A3
0000105A                            46          
0000105A  43F9 000020CD             47          LEA     AEND,A1     *Input prompt text #2
00001060  103C 000E                 48          MOVE.B  #14,D0
00001064  4E4F                      49          TRAP    #15
00001066                            50          
00001066  43F9 0000220F             51          LEA     NOTH,A1     *Fix to pervent weird thing about printing input
0000106C  103C 0002                 52          MOVE.B  #2,D0       *String prompt #2
00001070  4E4F                      53          TRAP    #15
00001072                            54          
00001072  B27C 0008                 55          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001076  6E00 0090                 56          BGT     VERR3
0000107A                            57          
0000107A  4EB9 00001086             58          JSR     PARSE       *Parse string #2
00001080                            59          
00001080  2841                      60          MOVE.L  D1,A4
00001082                            61          
00001082  6000 005A                 62          BRA     VINPUT      *Verify inputs
00001086                            63          
00001086                            64  *--------------------------------------------------------------------------------------------------
00001086                            65  
00001086                            66  PARSE                       *PARSE: Initialize variables involved in parsing
00001086  123C 0000                 67          MOVE.B  #0,D1       * [D1] parse output
0000108A  143C 0008                 68          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
0000108E                            69          
0000108E                            70  PSTEP                       *PSTEP: Step in parsing for loop
0000108E  1019                      71          MOVE.B  (A1)+,D0    *Read next byte from A1
00001090  B03C 0000                 72          CMP.B   #0,D0       *Check if reached end of string input
00001094  6700 0046                 73          BEQ     PDONE       *Break the for loop if reached end
00001098  E989                      74          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
0000109A  B03C 003A                 75          CMP.B   #58,D0      *Distinguish between letter and number
0000109E  6D00 001A                 76          BLT     PNUM        *Handle number
000010A2                            77  
000010A2  0400 0037                 78  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
000010A6  0C00 000F                 79          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
000010AA  6E00 0006                 80          BGT     PCAPS       *Handle lowercase
000010AE  6000 000E                 81          BRA     PSTEP2
000010B2                            82       
000010B2  0400 0020                 83  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
000010B6  6000 0006                 84          BRA     PSTEP2
000010BA                            85  
000010BA  0400 0030                 86  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
000010BE                            87          
000010BE  0C00 000F                 88  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
000010C2  6E00 0034                 89          BGT     VERR2
000010C6  0C00 0000                 90          CMPI.B   #0,D0
000010CA  6D00 002C                 91          BLT     VERR2
000010CE  D280                      92          ADD.L   D0,D1       *Append hex char to parse output
000010D0  5302                      93          SUBQ.B  #1,D2       *Decrement the counter
000010D2  0C02 0000                 94          CMPI.B   #0,D2      *Compare if we reached max count
000010D6  6700 0004                 95          BEQ     PDONE       *Complete parsing
000010DA  60B2                      96          BRA     PSTEP       *Or else continue loop
000010DC                            97  
000010DC  4E75                      98  PDONE   RTS
000010DE                            99  
000010DE                           100  *--------------------------------------------------------------------------------------------------
000010DE                           101  
000010DE  B9CB                     102  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010E0  6D00 0006                103          BLT     VERR1
000010E4  6000 0032                104          BRA     READLN
000010E8                           105  
000010E8  43F9 0000214E            106  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010EE  103C 000E                107          MOVE.B  #14,D0
000010F2  4E4F                     108          TRAP    #15
000010F4  6000 0EFA                109          BRA     END
000010F8                           110  
000010F8  43F9 00002188            111  VERR2   LEA     VERR2M,A1   *Throw range error
000010FE  103C 000E                112          MOVE.B  #14,D0
00001102  4E4F                     113          TRAP    #15
00001104  6000 0EEA                114          BRA     END
00001108                           115  
00001108  43F9 000021AE            116  VERR3   LEA     VERR3M,A1   *Throw length error
0000110E  103C 000E                117          MOVE.B  #14,D0
00001112  4E4F                     118          TRAP    #15
00001114  6000 0EDA                119          BRA     END
00001118                           120          
00001118                           121  *--------------------------------------------------------------------------------------------------
00001118                           122  
00001118                           123  READLN                              *READLN: Start READLN for loop
00001118  244B                     124          MOVE.L  A3,A2               *Set current address to start address
0000111A  1A3C 0000                125          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
0000111E                           126  
0000111E                           127  RSTEP                               *RSTEP: 
0000111E  381A                     128          MOVE.W  (A2)+,D4
00001120  340A                     129          MOVE.W  A2,D2
00001122  5542                     130          SUBQ.W  #2,D2
00001124                           131          
00001124  48E7 0400                132          MOVEM.L D5,-(SP)
00001128  1A3C 0000                133          MOVE.B  #0,D5
0000112C  4EB9 0000117A            134          JSR     HEXOUT              *Run printing operation for HEX address
00001132  4CDF 0020                135          MOVEM.L (SP)+,D5
00001136                           136          
00001136  43F9 000021E9            137          LEA     SM2,A1              *Horizontal tab indent after printing hex
0000113C  103C 000E                138          MOVE.B  #14,D0
00001140  4E4F                     139          TRAP    #15
00001142                           140          
00001142  48E7 7F0F                141          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001146  4EB9 0000136C            142          JSR     DISASM              *Run disassembly for current machine code
0000114C  4CDF F0FE                143          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
00001150                           144          
00001150  5205                     145          ADDQ.B  #1,D5       *Increment counter by 1
00001152  BA3C 0020                146          CMP.B   #32,D5      *Check if we reached 32 lines
00001156  6700 0016                147          BEQ     RPAUSE      *Branch to pausing code
0000115A                           148          
0000115A  43F9 000021E2            149          LEA     LB,A1       *Print line break
00001160  103C 000E                150          MOVE.B  #14,D0      
00001164  4E4F                     151          TRAP    #15
00001166                           152          
00001166                           153  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001166  B9CA                     154          CMP.L   A2,A4       *Check if we reached the end address
00001168  6D00 0E58                155          BLT     DSEOF       *End loop if so
0000116C  60B0                     156          BRA     RSTEP       *Or else continue the loop
0000116E                           157          
0000116E                           158  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
0000116E  1A3C 0000                159          MOVE.B  #0,D5       * Reset D5 counter
00001172  103C 0005                160          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001176  4E4F                     161          TRAP    #15         * Only used for waiting for user to hit ENTER
00001178  60EC                     162          BRA     RCONT       *Continue with READLN loop
0000117A                           163  
0000117A                           164  *--------------------------------------------------------------------------------------------------
0000117A                           165  
0000117A                           166  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
0000117A  103C 0006                167          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
0000117E  163C 0008                168          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
00001182                           169          
00001182                           170  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
00001182  E99A                     171          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
00001184  2202                     172          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001186  0281 0000000F            173          ANDI.L  #$F,D1      * Filter to the right four bits
0000118C  B23C 000A                174          CMP.B   #10,D1      *Distinguish between number and letter
00001190  6D00 000A                175          BLT     HNUM        *Branch to number handling, or continue to letter handling
00001194                           176          
00001194                           177  HHEX                        *HHEX: Handle letters from HEXOUT for loop
00001194  0601 0037                178          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001198  6000 0006                179          BRA     HSTEP2      *Branch to step 2 of the iteration
0000119C                           180  
0000119C                           181  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
0000119C  0601 0030                182          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
000011A0                           183  
000011A0                           184  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
000011A0  5303                     185          SUBQ.B  #1,D3       *Decrement counter for longword tracking
000011A2                           186          
000011A2  B205                     187          CMP.B   D5,D1
000011A4  6700 0004                188          BEQ     HSKIP2
000011A8                           189          
000011A8  4E4F                     190          TRAP #15            *Will print the ASCII value stored in D1
000011AA  0C03 0000                191  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
000011AE  6700 0010                192          BEQ     HDONE       *End loop if done
000011B2                           193          
000011B2  B23C 0030                194          CMP.B   #48,D1
000011B6  6700 0006                195          BEQ     HSKIP3
000011BA                           196          
000011BA  1A3C 0000                197          MOVE.B  #0,D5
000011BE                           198          
000011BE  60C2                     199  HSKIP3  BRA     HSTEP       *Or else continue loop
000011C0                           200          
000011C0  4E75                     201  HDONE   RTS
000011C2                           202  
000011C2                           203  
000011C2                           204  *--------------------------------------------------------------------------------------------------
000011C2                           205  
000011C2  103C 000E                206  SIZE    MOVE.B  #14,D0
000011C6  BA3C 0000                207          CMP.B   #%00,D5
000011CA  6700 001E                208          BEQ     SIZEB
000011CE  BA3C 0001                209          CMP.B   #%01,D5
000011D2  6700 0020                210          BEQ     SIZEW
000011D6  BA3C 0002                211          CMP.B   #%10,D5
000011DA  6700 0022                212          BEQ     SIZEL
000011DE  BA3C 0003                213          CMP.B   #%11,D5
000011E2  6700 0010                214          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011E6  6000 0022                215          BRA     SRET
000011EA                           216          
000011EA  43F9 0000225F            217  SIZEB   LEA     MODEB,A1
000011F0  6000 0016                218          BRA     SDONE
000011F4                           219  
000011F4  43F9 00002262            220  SIZEW   LEA     MODEW,A1
000011FA  6000 000C                221          BRA     SDONE
000011FE                           222  
000011FE  43F9 00002265            223  SIZEL   LEA     MODEL,A1
00001204  6000 0002                224          BRA     SDONE
00001208                           225  
00001208  4E4F                     226  SDONE   TRAP    #15
0000120A                           227  
0000120A  4E75                     228  SRET    RTS
0000120C                           229  
0000120C                           230  *-----------------------------------------------------------------------------------
0000120C                           231  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           232  *uses d1, d0, and a1
0000120C                           233  *using values in d3 (mode), d6 (register), and d5 (size) prints address mode
0000120C                           234  *uses d1, d0, and a1
0000120C                           235  ADDRMODEALL
0000120C                           236  *comparisons
0000120C  B67C 0000                237  AM000   CMP     #%000,D3
00001210  6600 001A                238          BNE     AM001
00001214  43F9 0000226A            239          LEA     VALD,A1
0000121A  4E4F                     240          TRAP    #15
0000121C  1206                     241          MOVE.B  D6,D1       *moving ea num to d1 to print
0000121E  103C 0003                242          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001222  4E4F                     243          TRAP    #15         *printing register number
00001224  103C 000E                244          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001228  6000 013C                245          BRA     AMEND
0000122C                           246  
0000122C                           247          
0000122C  B67C 0001                248  AM001   CMP     #%001,D3
00001230  6600 0022                249          BNE     AM010
00001234  BA7C 0000                250          CMP     #00,D5
00001238  6700 0D5A                251          BEQ     DSERR
0000123C  43F9 00002268            252          LEA     VALA,A1
00001242  4E4F                     253          TRAP    #15
00001244  1206                     254          MOVE.B  D6,D1       *moving ea num to d1 to print
00001246  103C 0003                255          MOVE.B  #3,D0       *moving 3 to d0 to print register number
0000124A  4E4F                     256          TRAP    #15         *printing register number
0000124C  103C 000E                257          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001250  6000 0114                258          BRA     AMEND
00001254                           259  
00001254  B67C 0002                260  AM010   CMP     #%010,D3
00001258  6600 002A                261          BNE     AM011
0000125C  43F9 00002272            262          LEA     OPENPTR,A1
00001262  4E4F                     263          TRAP    #15
00001264  43F9 00002268            264          LEA     VALA,A1
0000126A  4E4F                     265          TRAP    #15
0000126C  1206                     266          MOVE.B  D6,D1       *moving ea num to d1 to print
0000126E  103C 0003                267          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001272  4E4F                     268          TRAP    #15         *printing register number
00001274  103C 000E                269          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001278  43F9 00002277            270          LEA     CLOSEPTR,A1
0000127E  4E4F                     271          TRAP    #15
00001280  6000 00E4                272          BRA     AMEND
00001284                           273  
00001284  B67C 0003                274  AM011   CMP     #%011,D3
00001288  6600 002A                275          BNE     AM100
0000128C  43F9 00002272            276          LEA     OPENPTR,A1
00001292  4E4F                     277          TRAP    #15
00001294  43F9 00002268            278          LEA     VALA,A1
0000129A  4E4F                     279          TRAP    #15
0000129C  1206                     280          MOVE.B  D6,D1       *moving ea num to d1 to print
0000129E  103C 0003                281          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012A2  4E4F                     282          TRAP    #15         *printing register number
000012A4  103C 000E                283          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012A8  43F9 00002279            284          LEA     CLOSEIPTR,A1
000012AE  4E4F                     285          TRAP    #15
000012B0  6000 00B4                286          BRA     AMEND
000012B4                           287  
000012B4  B67C 0004                288  AM100   CMP     #%100,D3
000012B8  6600 002A                289          BNE     AM111
000012BC  43F9 00002274            290          LEA     OPENDPTR,A1
000012C2  4E4F                     291          TRAP    #15
000012C4  43F9 00002268            292          LEA     VALA,A1
000012CA  4E4F                     293          TRAP    #15
000012CC  1206                     294          MOVE.B  D6,D1       *moving ea num to d1 to print
000012CE  103C 0003                295          MOVE.B  #3,D0       *moving 3 to d0 to print register number
000012D2  4E4F                     296          TRAP    #15         *printing register number
000012D4  103C 000E                297          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
000012D8  43F9 00002277            298          LEA     CLOSEPTR,A1
000012DE  4E4F                     299          TRAP    #15
000012E0  6000 0084                300          BRA     AMEND
000012E4                           301  
000012E4  B67C 0007                302  AM111   CMP     #%111,D3
000012E8  6600 0CAA                303          BNE     DSERR
000012EC  BC7C 0000                304          CMP     #%000,D6
000012F0  6600 0020                305          BNE     AM111001
000012F4  43F9 0000227E            306          LEA     DOLLAR,A1
000012FA  4E4F                     307          TRAP    #15
000012FC  341A                     308          MOVE.W  (A2)+,D2
000012FE  48E7 0400                309          MOVEM.L D5,-(SP)    
00001302  1A3C 0030                310          MOVE.B  #48,D5
00001306  4EB8 117A                311          JSR     HEXOUT
0000130A  4CDF 0020                312          MOVEM.L (SP)+,D5
0000130E  6000 0056                313          BRA     AMEND
00001312                           314          
00001312                           315  AM111001
00001312  BC7C 0001                316          CMP     #%001,D6
00001316  6600 0020                317          BNE     AM111100
0000131A  43F9 0000227E            318          LEA     DOLLAR,A1
00001320  4E4F                     319          TRAP    #15
00001322  241A                     320          MOVE.L  (A2)+,D2
00001324  48E7 0400                321          MOVEM.L D5,-(SP)
00001328  1A3C 0030                322          MOVE.B  #48,D5
0000132C  4EB8 117A                323          JSR     HEXOUT
00001330  4CDF 0020                324          MOVEM.L (SP)+,D5
00001334  6000 0030                325          BRA     AMEND
00001338                           326          
00001338                           327  AM111100
00001338  BC7C 0004                328          CMP     #%100,D6
0000133C  6600 0C56                329          BNE     DSERR
00001340  43F9 0000226C            330          LEA     VALN,A1
00001346  4E4F                     331          TRAP    #15
00001348  341A                     332          MOVE.W  (A2)+,D2
0000134A  48E7 0400                333          MOVEM.L D5,-(SP)    
0000134E  1A3C 0030                334          MOVE.B  #48,D5
00001352  103C 0003                335          MOVE.B  #3,D0
00001356  1202                     336          MOVE.B  D2,D1
00001358  4E4F                     337          TRAP    #15
0000135A  103C 000E                338          MOVE.B  #14,D0
0000135E  4CDF 0020                339          MOVEM.L (SP)+,D5
00001362  6000 0002                340          BRA     AMEND
00001366                           341          
00001366  103C 000E                342  AMEND   MOVE.B  #14,D0
0000136A  4E75                     343          RTS
0000136C                           344  
0000136C                           345  *--------------------------------------------------------------------------------------------------
0000136C                           346  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
0000136C                           347  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
0000136C                           348  
0000136C                           349  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
0000136C                           350  
0000136C                           351  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
0000136C                           352  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
0000136C                           353  
0000136C                           354  DISASM                      *DISASM: Disassemble a machine code
0000136C  E34C                     355          LSL.W   #1,D4       * Tier 0 binary search
0000136E  6500 0010                356          BCS     DS1
00001372  6000 0002                357          BRA     DS0
00001376                           358  
00001376                           359  *DS Tier 1 ----------------------------------------------------------------------------------------
00001376                           360  
00001376                           361  DS0                         *DS0: Tier 1 binary search for 0 side
00001376  E34C                     362          LSL.W   #1,D4       
00001378  6500 01AC                363          BCS     DS01
0000137C  6000 000C                364          BRA     DS00
00001380                           365  
00001380                           366  DS1                         *DS1: Tier 1 binary search for 1 side
00001380  E34C                     367          LSL.W   #1,D4       
00001382  6500 01B6                368          BCS     DS11
00001386  6000 01A8                369          BRA     DS10
0000138A                           370  
0000138A                           371  DS00                        *DS00: Disassembly processing for 00 prefix
0000138A  E55C                     372          ROL.W   #2,D4       
0000138C  1A04                     373          MOVE.B  D4,D5
0000138E  0205 0003                374          ANDI.B  #%11,D5
00001392  0C05 0000                375          CMPI.B  #%00,D5
00001396  6700 0006                376          BEQ     DAND
0000139A  6000 00C4                377          BRA     DMOVE2
0000139E                           378  
0000139E  E75C                     379  DAND    ROL.W   #3,D4           ; Shift D4 left by 3 bits to get register number
000013A0  1A04                     380          MOVE.B  D4,D5           ; Move the byte in D4 to D5
000013A2  0205 0007                381          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013A6  DA39 0000226A            382          ADD.B   VALD,D5         ; Convert register number to ASCII
000013AC  43F9 0000226A            383          LEA     VALD,A1         ; Load effective address of Dn
000013B2  4E4F                     384          TRAP    #15             ; Print Dn
000013B4  1E05                     385          MOVE.B  D5,D7           ; Store the register number for later use
000013B6                           386  
000013B6  E75C                     387          ROL.W   #3,D4           ; Shift D4 left by 3 bits to get opmode
000013B8  1A04                     388          MOVE.B  D4,D5           ; Move the byte in D4 to D5
000013BA  0205 0007                389          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
000013BE  BA3C 0000                390          CMP.B   #%000,D5        ; Compare with byte size
000013C2  6700 0016                391          BEQ     DANDB
000013C6  BA3C 0001                392          CMP.B   #%001,D5        ; Compare with word size
000013CA  6700 0022                393          BEQ     DANDW
000013CE  BA3C 0002                394          CMP.B   #%010,D5        ; Compare with long size
000013D2  6700 002E                395          BEQ     DANDL
000013D6                           396          
000013D6  6000 0BE8                397          BRA     DSEND           ; Branch to DSEND in case of invalid code
000013DA                           398  
000013DA  43F9 00002295            399  DANDB   LEA     ANDM,A1         ; Load effective address of ANDM string
000013E0  4E4F                     400          TRAP    #15             ; Print ANDM string
000013E2  43F9 0000225F            401          LEA     MODEB,A1        ; Load effective address of MODEB string
000013E8  4E4F                     402          TRAP    #15             ; Print MODEB string
000013EA  6000 002A                403          BRA     DANDA           ; Branch to addressing mode parsing
000013EE                           404  
000013EE  43F9 00002295            405  DANDW   LEA     ANDM,A1         ; Load effective address of ANDM string
000013F4  4E4F                     406          TRAP    #15             ; Print ANDM string
000013F6  43F9 00002262            407          LEA     MODEW,A1        ; Load effective address of MODEW string
000013FC  4E4F                     408          TRAP    #15             ; Print MODEW string
000013FE  6000 0016                409          BRA     DANDA           ; Branch to addressing mode parsing
00001402                           410  
00001402  43F9 00002295            411  DANDL   LEA     ANDM,A1         ; Load effective address of ANDM string
00001408  4E4F                     412          TRAP    #15             ; Print ANDM string
0000140A  43F9 00002265            413          LEA     MODEL,A1        ; Load effective address of MODEL string
00001410  4E4F                     414          TRAP    #15             ; Print MODEL string
00001412  6000 0002                415          BRA     DANDA           ; Branch to addressing mode parsing
00001416                           416  
00001416  ED5C                     417  DANDA   ROL.W   #6,D4           ; Shift D4 left by 6 bits to get addressing mode and register
00001418                           418  
00001418  1A04                     419          MOVE.B  D4,D5           ; Move the byte in D4 to D5
0000141A  0205 0038                420          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
0000141E  E61D                     421          ROR.B   #3,D5           ; Shift D5 right by 3 bits to get mode
00001420  1C05                     422          MOVE.B  D5,D6           ; Store mode in D6 for further checks
00001422                           423  
00001422  0204 0007                424          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001426  D839 0000226A            425          ADD.B   VALD,D4         ; Convert register number to ASCII
0000142C  43F9 0000226A            426          LEA     VALD,A1         ; Load effective address of Dn
00001432  4E4F                     427          TRAP    #15             ; Print Dn
00001434                           428  
00001434  BC3C 0000                429          CMP.B   #%000,D6        ; Compare mode with Dn
00001438  6700 0B86                430          BEQ     DSEND
0000143C  BC3C 0007                431          CMP.B   #%111,D6        ; Compare mode with (xxx).W or (xxx).L
00001440  6700 0B7E                432          BEQ     DSEND
00001444  BC3C 0002                433          CMP.B   #%010,D6        ; Compare mode with (An)
00001448  6700 0B76                434          BEQ     DSEND
0000144C  BC3C 0003                435          CMP.B   #%011,D6        ; Compare mode with (An)+
00001450  6700 0B6E                436          BEQ     DSEND
00001454  BC3C 0004                437          CMP.B   #%100,D6        ; Compare mode with -(An)
00001458  6700 0B66                438          BEQ     DSEND
0000145C                           439          
0000145C  6000 0B62                440          BRA     DSEND
00001460                           441  
00001460                           442          
00001460                           443  *NEEDS INTEGRATION WITH AND OPCODE AND REST OF 00 PROCESSING
00001460  4E71                     444  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
00001462                           445          *size in d5 from above processing
00001462  43F9 00002284            446          LEA     MOVEM,A1
00001468  4E4F                     447          TRAP    #15
0000146A                           448                  
0000146A                           449          *dest reg to d7
0000146A  E75C                     450          ROL.W   #3,D4
0000146C  1E04                     451          MOVE.B  D4,D7
0000146E  CE3C 0007                452          AND.B   #%111,D7
00001472                           453          
00001472                           454          *dest mode to d3: An means MOVEA
00001472  E75C                     455          ROL.W   #3,D4
00001474  1604                     456          MOVE.B  D4,D3
00001476  C63C 0007                457          AND.B   #%111,D3
0000147A  3C43                     458          MOVE.W  D3,A6
0000147C                           459          
0000147C  B67C 0001                460          CMP     #%001,D3
00001480  6700 0082                461          BEQ     DMOVEA
00001484                           462  MOVECONT
00001484                           463  *printing size then first addressing moode, then comma
00001484                           464  *size is different for move
00001484  103C 000E                465  MSIZE   MOVE.B  #14,D0
00001488  BA3C 0001                466          CMP.B   #%01,D5
0000148C  6700 001E                467          BEQ     MSIZEB
00001490  BA3C 0003                468          CMP.B   #%11,D5
00001494  6700 0020                469          BEQ     MSIZEW
00001498  BA3C 0002                470          CMP.B   #%10,D5
0000149C  6700 0022                471          BEQ     MSIZEL
000014A0  BA3C 0003                472          CMP.B   #%11,D5
000014A4  6700 0010                473          BEQ     MSIZEW       *Assume WORD type on memory pointer things
000014A8  6000 0AEA                474          BRA     DSERR
000014AC                           475          
000014AC  43F9 0000225F            476  MSIZEB  LEA     MODEB,A1
000014B2  6000 0016                477          BRA     MSDONE
000014B6                           478  
000014B6  43F9 00002262            479  MSIZEW  LEA     MODEW,A1
000014BC  6000 000C                480          BRA     MSDONE
000014C0                           481  
000014C0  43F9 00002265            482  MSIZEL  LEA     MODEL,A1
000014C6  6000 0002                483          BRA     MSDONE
000014CA                           484  
000014CA  4E4F                     485  MSDONE  TRAP    #15
000014CC                           486  
000014CC  43F9 00002202            487          LEA     SM7,A1
000014D2  4E4F                     488          TRAP    #15
000014D4                           489          
000014D4                           490          *source mode to d3
000014D4  E75C                     491          ROL.W   #3,D4
000014D6  1604                     492          MOVE.B  D4,D3
000014D8  C63C 0007                493          AND.B   #%111,D3
000014DC                           494          
000014DC                           495          *source reg to d6
000014DC  E75C                     496          ROL.W   #3,D4
000014DE  1C04                     497          MOVE.B  D4,D6
000014E0  CC3C 0007                498          AND.B   #%111,D6
000014E4                           499          
000014E4  4EB8 120C                500          JSR     ADDRMODEALL
000014E8  B67C 0001                501          CMP     #%001,D3
000014EC  6700 002C                502          BEQ     MOVEERRCHECK    *as size is diff, err check for byte op on addr reg direct
000014F0  43F9 0000227C            503          LEA     COMMA,A1
000014F6  4E4F                     504          TRAP    #15
000014F8  1C07                     505          MOVE.B  D7,D6
000014FA  360E                     506          MOVE.W  A6,D3
000014FC  4EB8 120C                507          JSR     ADDRMODEALL
00001500  6000 0ABE                508          BRA     DSEND
00001504                           509  
00001504  4E71                     510  DMOVEA  NOP
00001506  BA7C 0001                511          CMP     #%01,D5     *if size is byte, err
0000150A  6700 0A88                512          BEQ     DSERR
0000150E  43F9 00002268            513          LEA     VALA,A1        *else, print A and return
00001514  4E4F                     514          TRAP    #15
00001516  6000 FF6C                515          BRA     MOVECONT
0000151A                           516  
0000151A                           517  MOVEERRCHECK
0000151A  BA7C 0001                518          CMP     #%01,D5
0000151E  6700 0A74                519          BEQ     DSERR
00001522  6000 0A9C                520          BRA     DSEND
00001526                           521  
00001526                           522          
00001526                           523  
00001526                           524  *DS Tier 2 ----------------------------------------------------------------------------------------
00001526                           525  
00001526                           526  DS01                        *DS01: Tier 2 binary search for 01 side
00001526  E34C                     527          LSL.W   #1,D4
00001528  6500 0024                528          BCS     DS011
0000152C  6000 0016                529          BRA     DS010
00001530                           530  
00001530                           531  DS10                        *DS10: Tier 2 binary search for 10 side
00001530  E34C                     532          LSL.W   #1,D4
00001532  6500 002E                533          BCS     DS101
00001536  6000 0020                534          BRA     DS100
0000153A                           535  
0000153A                           536  DS11                        *DS11: Tier 2 binary search for 11 side
0000153A  E34C                     537          LSL.W   #1,D4
0000153C  6500 0038                538          BCS     DS111
00001540  6000 002A                539          BRA     DS110
00001544                           540  
00001544                           541  *DS Tier 3 ----------------------------------------------------------------------------------------
00001544                           542  
00001544                           543  DS010                       *DS010: Tier 3 binary search for 010 side
00001544  E34C                     544          LSL.W   #1,D4
00001546  6500 037C                545          BCS     DS0101
0000154A  6000 0034                546          BRA     DS0100
0000154E                           547  
0000154E                           548  DS011                       *DS011: Tier 3 binary search for 011 side
0000154E  E34C                     549          LSL.W   #1,D4
00001550  6500 0560                550          BCS     DS0111
00001554  6000 03E8                551          BRA     DS0110
00001558                           552  
00001558                           553  DS100                       *DS100: Tier 3 binary search for 100 side
00001558  E34C                     554          LSL.W   #1,D4
0000155A  6500 0690                555          BCS     DS1001
0000155E  6000 05BC                556          BRA     DS1000
00001562                           557  
00001562                           558  DS101                       *DS101: Tier 3 binary search for 101 side
00001562  E34C                     559          LSL.W   #1,D4
00001564  6500 071E                560          BCS     DS1011
00001568  6000 0714                561          BRA     DS1010
0000156C                           562  
0000156C                           563  DS110                       *DS110: Tier 3 binary search for 110 side
0000156C  E34C                     564          LSL.W   #1,D4
0000156E  6500 0720                565          BCS     DS1101
00001572  6000 0716                566          BRA     DS1100
00001576                           567  
00001576                           568  DS111                       *DS111: Tier 3 binary search for 111 side
00001576  E34C                     569          LSL.W   #1,D4
00001578  6500 0A14                570          BCS     DS1111
0000157C  6000 07FA                571          BRA     DS1110
00001580                           572  
00001580                           573  *DS Tier 4 ----------------------------------------------------------------------------------------
00001580                           574  
00001580                           575  DS0100                      *DS0100: Processing for 0100 prefix
00001580  0C44 E710                576          CMPI.W  #%1110011100010000,D4
00001584  6700 0034                577          BEQ     DNOP
00001588  0C44 E750                578          CMPI.W  #%1110011101010000,D4
0000158C  6700 021E                579          BEQ     DRTS
00001590                           580          
00001590  3404                     581          MOVE.W  D4,D2
00001592  0242 1C00                582          ANDI.W  #%0001110000000000,D2
00001596  0C42 1C00                583          CMPI.W  #%0001110000000000,D2
0000159A  6700 021C                584          BEQ     DLEA
0000159E                           585          
0000159E  E95C                     586          ROL.W   #4,D4
000015A0  1404                     587          MOVE.B  D4,D2
000015A2  0202 000F                588          ANDI.B  #%1111,D2
000015A6                           589          
000015A6  B43C 000E                590          CMP.B   #%1110,D2
000015AA  6700 014A                591          BEQ     DJSR
000015AE                           592          
000015AE  B43C 0006                593          CMP.B   #%0110,D2
000015B2  6700 0012                594          BEQ     DNOT
000015B6                           595          
000015B6  6000 09EC                596          BRA     DSERRUNS
000015BA                           597  
000015BA  43F9 00002280            598  DNOP    LEA     NOPM,A1
000015C0  4E4F                     599          TRAP    #15
000015C2  6000 09FC                600          BRA     DSEND
000015C6                           601          
000015C6  E55C                     602  DNOT    ROL.W   #2,D4           ; shift D4 left by 2 bits to get size
000015C8  1A04                     603          MOVE.B  D4,D5           ; move the byte in D4 to D5
000015CA  0205 0003                604          ANDI.B  #%11,D5         ; AND operation to isolate the last 2 bits
000015CE                           605  
000015CE  BA3C 0000                606          CMP.B   #%00,D5         ; compare with byte size
000015D2  6700 0016                607          BEQ     DNOTB
000015D6  BA3C 0001                608          CMP.B   #%01,D5         ; compare with word size
000015DA  6700 0022                609          BEQ     DNOTW
000015DE  BA3C 0002                610          CMP.B   #%10,D5         ; compare with long size
000015E2  6700 002E                611          BEQ     DNOTL
000015E6                           612          
000015E6  6000 09D8                613          BRA     DSEND           ; branch to DSEND in case of invalid code
000015EA                           614  
000015EA  43F9 0000229C            615  DNOTB   LEA     NOTM,A1         ; load effective address of NOTM string
000015F0  4E4F                     616          TRAP    #15             ; print NOTM string
000015F2  43F9 0000225F            617          LEA     MODEB,A1        ; load effective address of MODEB string
000015F8  4E4F                     618          TRAP    #15             ; print MODEB string
000015FA  6000 002A                619          BRA     DNOTA           ; branch to addressing mode parsing
000015FE                           620  
000015FE  43F9 0000229C            621  DNOTW   LEA     NOTM,A1         ; load effective address of NOTM string
00001604  4E4F                     622          TRAP    #15             ; print NOTM string
00001606  43F9 00002262            623          LEA     MODEW,A1        ; load effective address of MODEW string
0000160C  4E4F                     624          TRAP    #15             ; print MODEW string
0000160E  6000 0016                625          BRA     DNOTA           ; branch to addressing mode parsing
00001612                           626  
00001612  43F9 0000229C            627  DNOTL   LEA     NOTM,A1         ; load effective address of NOTM string
00001618  4E4F                     628          TRAP    #15             ; print NOTM string
0000161A  43F9 00002265            629          LEA     MODEL,A1        ; load effective address of MODEL string
00001620  4E4F                     630          TRAP    #15             ; print MODEL string
00001622  6000 0002                631          BRA     DNOTA           ; branch to addressing mode parsing
00001626                           632  
00001626  ED5C                     633  DNOTA   ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001628  1204                     634          MOVE.B  D4,D1           ; move the byte in D4 to D1
0000162A  0201 003F                635          ANDI.B  #%111111,D1     ; AND operation to isolate the last 6 bits
0000162E                           636  
0000162E                           637          ; Now process addressing mode and register based on the value in D1
0000162E                           638  
0000162E  1A01                     639          MOVE.B  D1,D5           ; Move the byte in D1 to D5
00001630  0205 0007                640          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001634  6700 0026                641          BEQ     DREG            ; If it is direct register mode
00001638  BA3C 0002                642          CMP.B   #%010,D5        ; Compare with An
0000163C  6700 0036                643          BEQ     ADREG
00001640  BA3C 0003                644          CMP.B   #%011,D5        ; Compare with (An)+
00001644  6700 0046                645          BEQ     ADREGP
00001648  BA3C 0004                646          CMP.B   #%100,D5        ; Compare with -(An)
0000164C  6700 005E                647          BEQ     MADREG
00001650  BA3C 0007                648          CMP.B   #%111,D5        ; Compare with (xxx).W or (xxx).L
00001654  6700 007E                649          BEQ     EXT
00001658                           650              
00001658  6000 0966                651          BRA     DSEND
0000165C                           652  
0000165C  1C01                     653  DREG    MOVE.B  D1,D6           ; Move the byte in D1 to D6
0000165E  0206 0007                654          ANDI.B  #%111,D6        ; AND operation to isolate the last 3 bits for register number
00001662  DC39 0000226A            655          ADD.B   VALD,D6         ; Convert register number to ASCII
00001668  43F9 0000226A            656          LEA     VALD,A1         ; Load effective address of Dn
0000166E  4E4F                     657          TRAP    #15             ; Print Dn
00001670  6000 094E                658          BRA     DSEND
00001674                           659  
00001674  1C01                     660  ADREG   MOVE.B  D1,D6           ; Similar to DREG, but for An mode
00001676  0206 0007                661          ANDI.B  #%111,D6
0000167A  DC39 00002268            662          ADD.B   VALA,D6
00001680  43F9 00002268            663          LEA     VALA,A1
00001686  4E4F                     664          TRAP    #15
00001688  6000 0936                665          BRA     DSEND
0000168C                           666  
0000168C  1C01                     667  ADREGP  MOVE.B  D1,D6           ; Similar to ADREG, but for (An)+ mode
0000168E  0206 0007                668          ANDI.B  #%111,D6
00001692  DC39 00002268            669          ADD.B   VALA,D6
00001698  43F9 00002268            670          LEA     VALA,A1
0000169E  4E4F                     671          TRAP    #15
000016A0  43F9 00002279            672          LEA     CLOSEIPTR,A1    ; Load effective address of )+
000016A6  4E4F                     673          TRAP    #15             ; Print )+
000016A8  6000 0916                674          BRA     DSEND
000016AC                           675  
000016AC  1C01                     676  MADREG  MOVE.B  D1,D6           ; Similar to ADREG, but for -(An) mode
000016AE  0206 0007                677          ANDI.B  #%111,D6
000016B2  DC39 00002268            678          ADD.B   VALA,D6
000016B8  43F9 00002274            679          LEA     OPENDPTR,A1     ; Load effective address of -(
000016BE  4E4F                     680          TRAP    #15             ; Print -(
000016C0  43F9 00002268            681          LEA     VALA,A1
000016C6  4E4F                     682          TRAP    #15
000016C8  43F9 00002277            683          LEA     CLOSEPTR,A1     ; Load effective address of )
000016CE  4E4F                     684          TRAP    #15             ; Print )
000016D0  6000 08EE                685          BRA     DSEND
000016D4                           686  
000016D4  1C01                     687  EXT     MOVE.B  D1,D6           ; For (xxx).W and (xxx).L modes
000016D6  0206 0001                688          ANDI.B  #%1,D6
000016DA  6700 000E                689          BEQ     EXTW
000016DE  43F9 0000226C            690          LEA     VALN,A1         ; Load effective address of #
000016E4  4E4F                     691          TRAP    #15             ; Print #
000016E6  6000 08D8                692          BRA     DSEND
000016EA                           693  
000016EA  43F9 0000226E            694  EXTW    LEA     VAL0,A1         ; Load effective address of 0
000016F0  4E4F                     695          TRAP    #15             ; Print 0
000016F2  6000 08CC                696          BRA     DSEND
000016F6                           697  
000016F6                           698          
000016F6  E55C                     699  DJSR    ROL.W   #2,D4
000016F8  1404                     700          MOVE.B  D4,D2
000016FA  0202 0007                701          ANDI.B  #%111,D2
000016FE  0C02 0002                702          CMPI.B  #%10,D2
00001702  6600 0890                703          BNE     DSERR
00001706                           704          
00001706  43F9 000022C1            705          LEA     JSRM,A1
0000170C  4E4F                     706          TRAP    #15
0000170E                           707          
0000170E  43F9 00002202            708          LEA     SM7,A1
00001714  4E4F                     709          TRAP    #15
00001716                           710  
00001716  E75C                     711          ROL.W   #3,D4       * [D2] address mode
00001718  1404                     712          MOVE.B  D4,D2
0000171A  0202 0007                713          ANDI.B  #%111,D2
0000171E                           714          
0000171E  E75C                     715          ROL.W   #3,D4       * [D1] address register
00001720  1204                     716          MOVE.B  D4,D1
00001722  0201 0007                717          ANDI.B  #%111,D1
00001726                           718          
00001726  0C02 0002                719          CMPI.B  #%010,D2
0000172A  6700 001E                720          BEQ     DJSR_REG
0000172E                           721          
0000172E  0C02 0007                722          CMPI.B  #%111,D2
00001732  6600 0860                723          BNE     DSERR
00001736                           724          
00001736  0C01 0000                725          CMPI.B  #%000,D1
0000173A  6700 0034                726          BEQ     DJSR_CUSW
0000173E                           727          
0000173E  0C01 0001                728          CMPI.B  #%001,D1
00001742  6700 004A                729          BEQ     DJSR_CUSL
00001746                           730          
00001746  6000 0878                731          BRA     DSEND
0000174A                           732          
0000174A                           733          
0000174A                           734          
0000174A                           735  DJSR_REG        
0000174A  43F9 00002272            736          LEA     OPENPTR,A1
00001750  4E4F                     737          TRAP    #15
00001752                           738          
00001752  43F9 00002268            739          LEA     VALA,A1
00001758  4E4F                     740          TRAP    #15
0000175A                           741          
0000175A  103C 0003                742          MOVE.B  #3,D0
0000175E  4E4F                     743          TRAP    #15
00001760  103C 000E                744          MOVE.B  #14,D0
00001764                           745          
00001764  43F9 00002277            746          LEA     CLOSEPTR,A1
0000176A  4E4F                     747          TRAP    #15
0000176C                           748          
0000176C  6000 0852                749          BRA     DSEND
00001770                           750  
00001770                           751          
00001770                           752  DJSR_CUSW
00001770  43F9 0000227E            753          LEA     DOLLAR,A1
00001776  4E4F                     754          TRAP    #15
00001778  341A                     755          MOVE.W  (A2)+,D2
0000177A  48E7 0400                756          MOVEM.L D5,-(SP)
0000177E  1A3C 0030                757          MOVE.B  #48,D5
00001782  4EB8 117A                758          JSR     HEXOUT
00001786  4CDF 0020                759          MOVEM.L (SP)+,D5
0000178A  6000 0834                760          BRA     DSEND
0000178E                           761  
0000178E                           762  DJSR_CUSL
0000178E  43F9 0000227E            763          LEA     DOLLAR,A1
00001794  4E4F                     764          TRAP    #15
00001796  241A                     765          MOVE.L  (A2)+,D2
00001798  48E7 0400                766          MOVEM.L D5,-(SP)
0000179C  1A3C 0030                767          MOVE.B  #48,D5
000017A0  4EB8 117A                768          JSR     HEXOUT
000017A4  4CDF 0020                769          MOVEM.L (SP)+,D5
000017A8  6000 0816                770          BRA     DSEND
000017AC                           771          
000017AC  43F9 000022C5            772  DRTS    LEA     RTSM,A1
000017B2  4E4F                     773          TRAP    #15
000017B4  6000 080A                774          BRA     DSEND
000017B8                           775          
000017B8                           776          
000017B8                           777  DLEA    *printing
000017B8  43F9 00002291            778          LEA     LEAM,A1
000017BE  4E4F                     779          TRAP    #15
000017C0  43F9 00002202            780          LEA     SM7,A1
000017C6  4E4F                     781          TRAP    #15
000017C8                           782  
000017C8                           783          *getting destination register
000017C8  E75C                     784          ROL.W   #3,D4
000017CA  1404                     785          MOVE.B  D4,D2
000017CC  0202 0007                786          ANDI.B  #%111,D2
000017D0                           787          
000017D0                           788          *getting ea mode
000017D0  E75C                     789          ROL.W   #3,D4
000017D2  1604                     790          MOVE.B  D4,D3
000017D4  0203 0007                791          ANDI.B  #%111,D3
000017D8                           792          
000017D8  B63C 0002                793          CMP.B   #%010,D3
000017DC  6700 000E                794          BEQ     DLEAP
000017E0                           795          
000017E0  B63C 0007                796          CMP.B   #%111,D3
000017E4  6700 0006                797          BEQ     DLEAP
000017E8                           798          
000017E8  6000 07CA                799          BRA     DSERREA
000017EC                           800          
000017EC                           801          *getting ea reg
000017EC  E75C                     802  DLEAP   ROL.W   #3,D4
000017EE  1C04                     803          MOVE.B  D4,D6
000017F0  0206 0007                804          ANDI.B  #%111,D6
000017F4                           805          
000017F4                           806          *printing
000017F4  4EB8 120C                807          JSR     ADDRMODEALL
000017F8                           808          
000017F8  43F9 0000227C            809          LEA     COMMA,A1
000017FE  4E4F                     810          TRAP    #15
00001800  43F9 00002268            811          LEA     VALA,A1
00001806  4E4F                     812          TRAP    #15
00001808  103C 0003                813          MOVE.B  #3,D0
0000180C  1202                     814          MOVE.B  D2,D1
0000180E  4E4F                     815          TRAP    #15
00001810  103C 000E                816          MOVE.B  #14,D0
00001814                           817          
00001814  6000 07AA                818          BRA DSEND
00001818                           819          
00001818                           820  JSR010
00001818  B63C 0002                821          CMP.B   #%010,D3
0000181C  6600 002A                822          BNE     JSR111
00001820  43F9 00002272            823          LEA     OPENPTR,A1
00001826  4E4F                     824          TRAP    #15
00001828  43F9 00002268            825          LEA     VALA,A1
0000182E  4E4F                     826          TRAP    #15
00001830  103C 0003                827          MOVE.B  #3,D0
00001834  1206                     828          MOVE.B  D6,D1
00001836  4E4F                     829          TRAP    #15
00001838  103C 000E                830          MOVE.B  #14,D0
0000183C  43F9 00002277            831          LEA     CLOSEPTR,A1
00001842  4E4F                     832          TRAP    #15
00001844  6000 005E                833          BRA     JSRPRINT2
00001848                           834  JSR111
00001848  B63C 0007                835          CMP.B   #%111,D3
0000184C  6600 0746                836          BNE     DSERR
00001850  BC3C 0000                837          CMP.B   #%000,D6
00001854  6600 0024                838          BNE     JSR111001
00001858  43F9 0000227E            839          LEA     DOLLAR,A1
0000185E  4E4F                     840          TRAP    #15
00001860  341A                     841          MOVE.W  (A2)+,D2
00001862  48E7 0400                842          MOVEM.L D5,-(SP)    
00001866  1A3C 0030                843          MOVE.B  #48,D5
0000186A  4EB8 117A                844          JSR     HEXOUT
0000186E  4CDF 0020                845          MOVEM.L (SP)+,D5
00001872  103C 000E                846          MOVE.B  #14,D0
00001876  6000 002C                847          BRA     JSRPRINT2
0000187A                           848          
0000187A                           849  JSR111001
0000187A  BC3C 0001                850          CMP.B   #%001,D6
0000187E  6600 0714                851          BNE     DSERR
00001882  43F9 0000227E            852          LEA     DOLLAR,A1
00001888  4E4F                     853          TRAP    #15
0000188A  241A                     854          MOVE.L  (A2)+,D2
0000188C  48E7 0400                855          MOVEM.L D5,-(SP)
00001890  1A3C 0030                856          MOVE.B  #48,D5
00001894  4EB8 117A                857          JSR     HEXOUT
00001898  4CDF 0020                858          MOVEM.L (SP)+,D5
0000189C  103C 000E                859          MOVE.B  #14,D0
000018A0  6000 0002                860          BRA     JSRPRINT2
000018A4                           861          
000018A4                           862  JSRPRINT2
000018A4  43F9 0000227C            863          LEA     COMMA,A1
000018AA  4E4F                     864          TRAP    #15
000018AC  43F9 00002268            865          LEA     VALA,A1
000018B2  4E4F                     866          TRAP    #15
000018B4  103C 0003                867          MOVE.B  #3,D0
000018B8  3207                     868          MOVE.W  D7,D1
000018BA  4E4F                     869          TRAP    #15
000018BC  103C 000E                870          MOVE.B  #14,D0
000018C0                           871          
000018C0  6000 06FE                872          BRA     DSEND
000018C4                           873          
000018C4                           874  
000018C4                           875  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000018C4                           876  
000018C4  4E71                     877  DS0101  NOP
000018C6                           878          
000018C6  4E71                     879  DADDQ   NOP
000018C8  43F9 00002289            880          LEA     ADDM,A1
000018CE  4E4F                     881          TRAP    #15
000018D0  43F9 00002270            882          LEA     VALQ,A1
000018D6  4E4F                     883          TRAP    #15
000018D8                           884          
000018D8                           885          *parsing data to d1
000018D8  E75C                     886          ROL.W   #3,D4
000018DA  1204                     887          MOVE.B  D4,D1
000018DC  C23C 0007                888          AND.B   #%111,D1
000018E0                           889          
000018E0                           890          *ensuring next bit is 0
000018E0  E35C                     891          ROL.W   #1,D4
000018E2  1A04                     892          MOVE.B  D4,D5
000018E4  CA3C 0001                893          AND.B   #%1,D5
000018E8  BA7C 0000                894          CMP     #0,D5
000018EC  6600 06A6                895          BNE     DSERR
000018F0                           896          
000018F0                           897          *parsing and printing size
000018F0  E55C                     898          ROL.W   #2,D4
000018F2  1A04                     899          MOVE.B  D4,D5
000018F4  CA3C 0003                900          AND.B   #%11,D5
000018F8  4EB8 11C2                901          JSR     SIZE
000018FC  43F9 00002202            902          LEA     SM7,A1
00001902  4E4F                     903          TRAP    #15
00001904                           904          
00001904                           905          *parsing effective address information
00001904                           906          *mode:
00001904  E75C                     907          ROL.W   #3,D4
00001906  1604                     908          MOVE.B  D4,D3
00001908  C63C 0007                909          AND.B   #%111,D3
0000190C                           910          
0000190C                           911          *register:
0000190C  E71C                     912          ROL.B   #3,D4
0000190E  1C04                     913          MOVE.B  D4,D6
00001910  CC3C 0007                914          AND.B   #%111,D6
00001914                           915          
00001914                           916          *printing data
00001914  43F9 0000226C            917          LEA     VALN,A1
0000191A  4E4F                     918          TRAP    #15
0000191C  103C 0003                919          MOVE.B  #3,D0
00001920  4E4F                     920          TRAP    #15
00001922  103C 000E                921          MOVE.B  #14,D0
00001926  43F9 0000227C            922          LEA     COMMA,A1
0000192C  4E4F                     923          TRAP    #15
0000192E                           924          
0000192E  B67C 0004                925          CMP     #%100,D3
00001932  6700 0660                926          BEQ     DSERR
00001936  4EB8 120C                927          JSR     ADDRMODEALL
0000193A                           928          
0000193A  6000 0684                929          BRA     DSEND
0000193E                           930          
0000193E                           931  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000193E                           932  
0000193E                           933  DS0110  
0000193E  E95C                     934          ROL.W   #4,D4   *Get next 4 bits
00001940  1404                     935          MOVE.B  D4,D2   *Copy to D2
00001942  0202 000F                936          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
00001946                           937          
00001946  B43C 0000                938          CMP.B   #%0000,D2   *BRA
0000194A  6700 001E                939          BEQ     DBRA
0000194E                           940          
0000194E  B43C 000E                941          CMP.B   #%1110,D2   *BGT   
00001952  6700 00A2                942          BEQ     DBGT
00001956                           943          
00001956  B43C 000F                944          CMP.B   #%1111,D2   *BLE   
0000195A  6700 00D6                945          BEQ     DBLE
0000195E                           946          
0000195E  B43C 0007                947          CMP.B   #%0111,D2   *BEQ   
00001962  6700 010E                948          BEQ     DBEQ
00001966                           949          
00001966  6000 0658                950          BRA     DSEND
0000196A                           951          
0000196A  43F9 000022C9            952  DBRA    LEA     BRAM,A1
00001970  4E4F                     953          TRAP    #15
00001972                           954          
00001972  43F9 00002202            955          LEA     SM7,A1
00001978  4E4F                     956          TRAP    #15
0000197A                           957  
0000197A  E15C                     958          ROL.W   #8,D4       * [D1] 8 bit Displacement 
0000197C  1204                     959          MOVE.B  D4,D1
0000197E  0281 00001100            960          ANDI.L  #$1100,D1
00001984                           961          
00001984  0C01 0000                962          CMPI.B  #%00000000,D1
00001988  6700 0028                963          BEQ     DBRA_16BIT      * Word
0000198C                           964          
0000198C  0C01 00FF                965          CMPI.B  #%11111111,D1
00001990  6700 0042                966          BEQ     DBRA_32BIT      * Long
00001994                           967          
00001994                           968          * 8 Bit Displacement
00001994  43F9 0000227E            969          LEA     DOLLAR,A1
0000199A  4E4F                     970          TRAP    #15
0000199C                           971          
0000199C  341A                     972          MOVE.W  (A2)+,D2
0000199E  D441                     973          ADD.W   D1,D2
000019A0  5842                     974          ADD.W   #4,D2   *unsure   
000019A2  1A3C 0030                975          MOVE.B  #48,D5
000019A6  4EB8 117A                976          JSR     HEXOUT
000019AA  6000 0614                977          BRA     DSEND
000019AE                           978  
000019AE                           979          *Displacement is put in D1      
000019AE                           980          
000019AE                           981          
000019AE  6000 0610                982          BRA     DSEND
000019B2                           983          
000019B2                           984  DBRA_16BIT
000019B2  43F9 0000227E            985          LEA     DOLLAR,A1
000019B8  4E4F                     986          TRAP    #15
000019BA  341A                     987          MOVE.W  (A2)+,D2
000019BC  D44A                     988          ADD.W   A2,D2
000019BE  5542                     989          SUB.W   #2,D2   *unsure
000019C0  48E7 0400                990          MOVEM.L D5,-(SP)    
000019C4  1A3C 0030                991          MOVE.B  #48,D5
000019C8  4EB8 117A                992          JSR     HEXOUT
000019CC  4CDF 0020                993          MOVEM.L (SP)+,D5
000019D0  6000 05EE                994          BRA     DSEND
000019D4                           995  
000019D4                           996  DBRA_32BIT
000019D4  43F9 0000227E            997          LEA     DOLLAR,A1
000019DA  4E4F                     998          TRAP    #15
000019DC  241A                     999          MOVE.L  (A2)+,D2
000019DE  D48A                    1000          ADD.L   A2,D2
000019E0  5582                    1001          SUB.L   #2,D2   *unsure
000019E2  48E7 0400               1002          MOVEM.L D5,-(SP)
000019E6  1A3C 0030               1003          MOVE.B  #48,D5
000019EA  4EB8 117A               1004          JSR     HEXOUT
000019EE  4CDF 0020               1005          MOVEM.L (SP)+,D5
000019F2  6000 05CC               1006          BRA     DSEND
000019F6                          1007          
000019F6                          1008          
000019F6                          1009          
000019F6  43F9 000022B5           1010  DBGT    LEA     BGTM,A1
000019FC  4E4F                    1011          TRAP    #15
000019FE                          1012          
000019FE  43F9 00002202           1013          LEA     SM7,A1
00001A04  4E4F                    1014          TRAP    #15
00001A06                          1015          
00001A06  E15C                    1016          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A08  1204                    1017          MOVE.B  D4,D1
00001A0A  0241 00FF               1018          ANDI.W  #%0000000011111111,D1
00001A0E                          1019          
00001A0E  0C01 0000               1020          CMPI.B  #%00000000,D1
00001A12  679E                    1021          BEQ     DBRA_16BIT      * Word
00001A14                          1022          
00001A14  0C01 00FF               1023          CMPI.B  #%11111111,D1
00001A18  67BA                    1024          BEQ     DBRA_32BIT      * Long
00001A1A                          1025          
00001A1A  43F9 0000227E           1026          LEA     DOLLAR,A1
00001A20  4E4F                    1027          TRAP    #15
00001A22                          1028      
00001A22  340A                    1029          MOVE.W  A2,D2
00001A24  D441                    1030          ADD.W   D1,D2
00001A26                          1031    
00001A26  1A3C 0030               1032          MOVE.B  #48,D5
00001A2A  4EB8 117A               1033          JSR     HEXOUT
00001A2E  6000 0590               1034          BRA     DSEND
00001A32                          1035  
00001A32  43F9 000022B9           1036  DBLE    LEA     BLEM,A1
00001A38  4E4F                    1037          TRAP    #15
00001A3A                          1038          
00001A3A  43F9 00002202           1039          LEA     SM7,A1
00001A40  4E4F                    1040          TRAP    #15
00001A42                          1041          
00001A42  E15C                    1042          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A44  1204                    1043          MOVE.B  D4,D1
00001A46  0241 00FF               1044          ANDI.W  #%0000000011111111,D1
00001A4A                          1045          
00001A4A  0C01 0000               1046          CMPI.B  #%00000000,D1
00001A4E  6700 FF62               1047          BEQ     DBRA_16BIT      * Word
00001A52                          1048          
00001A52  0C01 00FF               1049          CMPI.B  #%11111111,D1
00001A56  6700 FF7C               1050          BEQ     DBRA_32BIT      * Long
00001A5A                          1051          
00001A5A  43F9 0000227E           1052          LEA     DOLLAR,A1
00001A60  4E4F                    1053          TRAP    #15
00001A62                          1054          
00001A62  340A                    1055          MOVE.W  A2,D2
00001A64  D441                    1056          ADD.W   D1,D2
00001A66                          1057   
00001A66  1A3C 0030               1058          MOVE.B  #48,D5
00001A6A  4EB8 117A               1059          JSR     HEXOUT
00001A6E                          1060          
00001A6E  6000 0550               1061          BRA     DSEND
00001A72                          1062  
00001A72  43F9 000022BD           1063  DBEQ    LEA     BEQM,A1
00001A78  4E4F                    1064          TRAP    #15
00001A7A                          1065          
00001A7A  43F9 00002202           1066          LEA     SM7,A1
00001A80  4E4F                    1067          TRAP    #15
00001A82                          1068          
00001A82  E15C                    1069          ROL.W   #8,D4       * [D1] 8 bit Displacement 
00001A84  1204                    1070          MOVE.B  D4,D1
00001A86  0241 00FF               1071          ANDI.W  #%0000000011111111,D1
00001A8A                          1072          
00001A8A  0C01 0000               1073          CMPI.B  #%00000000,D1
00001A8E  6700 FF22               1074          BEQ     DBRA_16BIT      * Word
00001A92                          1075          
00001A92  0C01 00FF               1076          CMPI.B  #%11111111,D1
00001A96  6700 FF3C               1077          BEQ     DBRA_32BIT      * Long
00001A9A                          1078          
00001A9A  43F9 0000227E           1079          LEA     DOLLAR,A1
00001AA0  4E4F                    1080          TRAP    #15
00001AA2                          1081  
00001AA2  340A                    1082          MOVE.W  A2,D2
00001AA4  D441                    1083          ADD.W   D1,D2
00001AA6                          1084   
00001AA6  1A3C 0030               1085          MOVE.B  #48,D5
00001AAA  4EB8 117A               1086          JSR     HEXOUT
00001AAE                          1087          
00001AAE  6000 0510               1088          BRA     DSEND
00001AB2                          1089  
00001AB2                          1090  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001AB2                          1091  
00001AB2  4E71                    1092  DS0111  NOP
00001AB4                          1093          
00001AB4  4E71                    1094  DMOVEQ  NOP
00001AB6  43F9 00002284           1095          LEA     MOVEM,A1
00001ABC  4E4F                    1096          TRAP    #15
00001ABE  43F9 00002270           1097          LEA     VALQ,A1
00001AC4  4E4F                    1098          TRAP    #15
00001AC6  43F9 00002202           1099          LEA     SM7,A1
00001ACC  4E4F                    1100          TRAP    #15
00001ACE                          1101          
00001ACE                          1102          *getting register number
00001ACE  E75C                    1103          ROL.W   #3,D4
00001AD0  1A04                    1104          MOVE.B  D4,D5
00001AD2  CA3C 0007               1105          AND.B   #%111,D5
00001AD6                          1106          
00001AD6                          1107          *throwing error if next digit not 0
00001AD6  E35C                    1108          ROL.W   #1,D4
00001AD8  1C04                    1109          MOVE.B  D4,D6
00001ADA  CC3C 0001               1110          AND.B   #%1,D6
00001ADE  BC3C 0000               1111          CMP.B   #0,D6
00001AE2  6600 04B0               1112          BNE     DSERR
00001AE6                          1113          
00001AE6                          1114          *getting data and printing information
00001AE6  E15C                    1115          ROL.W   #8,D4
00001AE8  1204                    1116          MOVE.B  D4,D1
00001AEA  C23C 00FF               1117          AND.B   #%11111111,D1
00001AEE  43F9 0000226C           1118          LEA     VALN,A1
00001AF4  4E4F                    1119          TRAP    #15
00001AF6  103C 0003               1120          MOVE.B  #3,D0
00001AFA  4E4F                    1121          TRAP    #15
00001AFC  103C 000E               1122          MOVE.B  #14,D0
00001B00  43F9 0000227C           1123          LEA     COMMA,A1
00001B06  4E4F                    1124          TRAP    #15
00001B08  43F9 0000226A           1125          LEA     VALD,A1
00001B0E  4E4F                    1126          TRAP    #15
00001B10  103C 0003               1127          MOVE.B  #3,D0
00001B14  3205                    1128          MOVE.W  D5,D1
00001B16  4E4F                    1129          TRAP    #15
00001B18                          1130          
00001B18  6000 04A6               1131          BRA     DSEND
00001B1C                          1132          
00001B1C                          1133  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001B1C                          1134  
00001B1C  4E71                    1135  DS1000  NOP
00001B1E  6000 04A0               1136          BRA     DSEND
00001B22                          1137          
00001B22  E75C                    1138  DOR     ROL.W   #3,D4           ; shift D4 left by 3 bits to get register number
00001B24  1A04                    1139          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B26  0205 0007               1140          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B2A  DA39 0000226A           1141          ADD.B   VALD,D5         ; Convert register number to ASCII
00001B30  43F9 0000226A           1142          LEA     VALD,A1         ; Load effective address of Dn
00001B36  4E4F                    1143          TRAP    #15             ; Print Dn
00001B38  1E05                    1144          MOVE.B  D5,D7           ; Store the register number for later use
00001B3A                          1145  
00001B3A  E75C                    1146          ROL.W   #3,D4           ; shift D4 left by 3 bits to get opmode
00001B3C  1A04                    1147          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B3E  0205 0007               1148          ANDI.B  #%111,D5        ; AND operation to isolate the last 3 bits
00001B42  BA3C 0000               1149          CMP.B   #%000,D5        ; compare with byte size
00001B46  6700 0016               1150          BEQ     DORB
00001B4A  BA3C 0001               1151          CMP.B   #%001,D5        ; compare with word size
00001B4E  6700 0022               1152          BEQ     DORW
00001B52  BA3C 0002               1153          CMP.B   #%010,D5        ; compare with long size
00001B56  6700 002E               1154          BEQ     DORL
00001B5A                          1155          
00001B5A  6000 0464               1156          BRA     DSEND           ; branch to DSEND in case of invalid code
00001B5E                          1157  
00001B5E  43F9 00002299           1158  DORB    LEA     ORM,A1          ; load effective address of ORM string
00001B64  4E4F                    1159          TRAP    #15             ; print ORM string
00001B66  43F9 0000225F           1160          LEA     MODEB,A1        ; load effective address of MODEB string
00001B6C  4E4F                    1161          TRAP    #15             ; print MODEB string
00001B6E  6000 002A               1162          BRA     DORA           ; branch to addressing mode parsing
00001B72                          1163  
00001B72  43F9 00002299           1164  DORW    LEA     ORM,A1          ; load effective address of ORM string
00001B78  4E4F                    1165          TRAP    #15             ; print ORM string
00001B7A  43F9 00002262           1166          LEA     MODEW,A1        ; load effective address of MODEW string
00001B80  4E4F                    1167          TRAP    #15             ; print MODEW string
00001B82  6000 0016               1168          BRA     DORA           ; branch to addressing mode parsing
00001B86                          1169  
00001B86  43F9 00002299           1170  DORL    LEA     ORM,A1          ; load effective address of ORM string
00001B8C  4E4F                    1171          TRAP    #15             ; print ORM string
00001B8E  43F9 00002265           1172          LEA     MODEL,A1        ; load effective address of MODEL string
00001B94  4E4F                    1173          TRAP    #15             ; print MODEL string
00001B96  6000 0002               1174          BRA     DORA           ; branch to addressing mode parsing
00001B9A                          1175  
00001B9A  ED5C                    1176  DORA    ROL.W   #6,D4           ; shift D4 left by 6 bits to get addressing mode and register
00001B9C                          1177  
00001B9C  1A04                    1178          MOVE.B  D4,D5           ; move the byte in D4 to D5
00001B9E  0205 0038               1179          ANDI.B  #%111000,D5     ; AND operation to isolate the mode bits
00001BA2  E61D                    1180          ROR.B   #3,D5           ; shift D5 right by 3 bits to get mode
00001BA4  43F9 000021EC           1181          LEA     SM3,A1          ; load effective address of SM3 string
00001BAA  4E4F                    1182          TRAP    #15             ; print space
00001BAC  1C05                    1183          MOVE.B  D5,D6           ; store mode in D6 for further checks
00001BAE                          1184  
00001BAE  0204 0007               1185          ANDI.B  #%111,D4        ; AND operation to isolate the last 3 bits in D4
00001BB2  D839 0000226A           1186          ADD.B   VALD,D4         ; convert register number to ASCII
00001BB8  43F9 0000226A           1187          LEA     VALD,A1         ; load effective address of Dn
00001BBE  4E4F                    1188          TRAP    #15             ; print Dn
00001BC0                          1189  
00001BC0  BC3C 0000               1190          CMP.B   #%000,D6        ; compare mode with Dn
00001BC4  6700 03FA               1191          BEQ     DSEND
00001BC8  BC3C 0002               1192          CMP.B   #%010,D6        ; compare mode with (An)
00001BCC  6700 03F2               1193          BEQ     DSEND
00001BD0  BC3C 0003               1194          CMP.B   #%011,D6        ; compare mode with (An)+
00001BD4  6700 03EA               1195          BEQ     DSEND
00001BD8  BC3C 0004               1196          CMP.B   #%100,D6        ; compare mode with -(An)
00001BDC  6700 03E2               1197          BEQ     DSEND
00001BE0  BC3C 0007               1198          CMP.B   #%111,D6        ; compare mode with (xxx).W or (xxx).L
00001BE4  6700 03DA               1199          BEQ     DSEND
00001BE8  6000 03D6               1200          BRA     DSEND           ; branch to DSEND in case of invalid code
00001BEC                          1201  
00001BEC                          1202  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001BEC                          1203  
00001BEC  4E71                    1204  DS1001  NOP
00001BEE  4E71                    1205  DSUB    NOP
00001BF0                          1206  *print sub
00001BF0  43F9 0000228D           1207          LEA     SUBM,A1
00001BF6  4E4F                    1208          TRAP    #15
00001BF8                          1209  
00001BF8                          1210  *parse dn reg: 3 bits
00001BF8                          1211  *number of the data register involved
00001BF8                          1212  *nums 0-7, paired with below
00001BF8  E75C                    1213          ROL.W   #3,D4       *dn reg num in d1
00001BFA  1E04                    1214          MOVE.B  D4,D7
00001BFC  0207 0007               1215          ANDI.B  #%111,D7
00001C00                          1216          
00001C00  3C47                    1217          MOVE.W  D7,A6       *temporary for storage
00001C02                          1218  
00001C02                          1219  *parse opmode: 3 bits
00001C02                          1220  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001C02                          1221  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001C02                          1222  *invalid: 111, 011
00001C02                          1223  *parse first digit separately
00001C02  E35C                    1224          ROL.W   #1,D4       *addressing mode in d2
00001C04  1E04                    1225          MOVE.B  D4,D7
00001C06  0207 0001               1226          ANDI.B  #%1,D7
00001C0A                          1227          
00001C0A                          1228  *parsing next two digits of size
00001C0A  E55C                    1229          ROL.W   #2,D4       *size in d5
00001C0C  1A04                    1230          MOVE.B  D4,D5
00001C0E  0205 0003               1231          ANDI.B  #%11,D5
00001C12  4EB8 11C2               1232          JSR     SIZE
00001C16  43F9 00002202           1233          LEA     SM7,A1
00001C1C  4E4F                    1234          TRAP    #15
00001C1E                          1235          
00001C1E                          1236  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001C1E  BE3C 0000               1237          CMP.B   #%0,D7       *if 1, then register info printed last
00001C22  6700 0026               1238          BEQ     DSUBEA      *branch to ea before register
00001C26                          1239          
00001C26                          1240  *printing register information
00001C26                          1241  DSUBPRNTREG
00001C26  43F9 0000226A           1242          LEA     VALD,A1
00001C2C  4E4F                    1243          TRAP    #15
00001C2E  320E                    1244          MOVE.W  A6,D1       *retrieving a6 register data
00001C30  103C 0003               1245          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001C34  4E4F                    1246          TRAP    #15         *printing register number
00001C36  103C 000E               1247          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001C3A  BE3C 0000               1248          CMP.B   #%0,D7      *if info finished printing
00001C3E  6700 0380               1249          BEQ     DSEND      *branch to end
00001C42  43F9 0000227C           1250          LEA     COMMA,A1
00001C48  4E4F                    1251          TRAP    #15
00001C4A                          1252  
00001C4A                          1253          
00001C4A                          1254  * parse ea mode: 3 bits
00001C4A                          1255  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001C4A                          1256  *address reg direct not allowed for .B operations
00001C4A                          1257  *no invalid
00001C4A                          1258  DSUBEA
00001C4A  E75C                    1259          ROL.W   #3,D4       *ea mode
00001C4C  1604                    1260          MOVE.B  D4,D3
00001C4E  0203 0007               1261          ANDI.B  #%111,D3
00001C52                          1262  
00001C52                          1263  *parse ea reg: 3 bits
00001C52                          1264  *no invalid: paired with opmode below (nums 0-7)
00001C52                          1265  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001C52  E75C                    1266          ROL.W   #3,D4       *ea mode
00001C54  1C04                    1267          MOVE.B  D4,D6
00001C56  0206 0007               1268          ANDI.B  #%111,D6
00001C5A                          1269          
00001C5A  2803                    1270          MOVE.L  D3,D4   *temporarily using D4 
00001C5C                          1271          
00001C5C                          1272  *comparisons
00001C5C  B67C 0004               1273          CMP     #%100,D3
00001C60  6700 0332               1274          BEQ     DSERR
00001C64  4EB8 120C               1275          JSR     ADDRMODEALL
00001C68  BE3C 0001               1276          CMP.B   #%1,D7      *if info printed
00001C6C  6700 0352               1277          BEQ     DSEND       *end
00001C70  43F9 0000227C           1278          LEA     COMMA,A1
00001C76  4E4F                    1279          TRAP    #15
00001C78  60AC                    1280          BRA     DSUBPRNTREG *check d6 for size of data
00001C7A                          1281  *then take data from d4 and print (?)
00001C7A                          1282  
00001C7A  6000 0344               1283          BRA     DSEND
00001C7E                          1284  
00001C7E                          1285  
00001C7E                          1286  
00001C7E  4E71                    1287  DS1010  NOP
00001C80  6000 033E               1288          BRA     DSEND
00001C84                          1289  
00001C84                          1290          
00001C84                          1291  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C84                          1292  
00001C84  4E71                    1293  DS1011  NOP
00001C86  6000 0338               1294          BRA     DSEND
00001C8A                          1295          
00001C8A                          1296  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C8A                          1297  
00001C8A  4E71                    1298  DS1100  NOP
00001C8C  6000 0332               1299          BRA     DSEND
00001C90                          1300          
00001C90                          1301  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001C90                          1302  
00001C90  4E71                    1303  DS1101  NOP
00001C92                          1304  
00001C92  4E71                    1305  DADD    NOP
00001C94  43F9 00002289           1306          LEA     ADDM,A1
00001C9A  4E4F                    1307          TRAP    #15
00001C9C                          1308          
00001C9C                          1309          *parse dn reg: 3 bits
00001C9C                          1310  *number of the data register involved
00001C9C                          1311  *nums 0-7, paired with below
00001C9C  E75C                    1312          ROL.W   #3,D4       *dn reg num in d7
00001C9E  1E04                    1313          MOVE.B  D4,D7
00001CA0  0207 0007               1314          ANDI.B  #%111,D7
00001CA4                          1315          
00001CA4  3C47                    1316          MOVE.W  D7,A6
00001CA6                          1317  
00001CA6                          1318  *parse opmode: 3 bits
00001CA6                          1319  *Dn - <ea> -> Dn: .B=000, .W=001, .L=010
00001CA6                          1320  *<ea> - <Dn> -> <ea>: .B=100, .W=101, .L=110
00001CA6                          1321  *invalid: 111, 011
00001CA6                          1322  *parse first digit separately
00001CA6  E35C                    1323          ROL.W   #1,D4       *addressing mode in d2
00001CA8  1E04                    1324          MOVE.B  D4,D7
00001CAA  0207 0001               1325          ANDI.B  #%1,D7
00001CAE                          1326          
00001CAE                          1327  *parsing next two digits of size
00001CAE  E55C                    1328          ROL.W   #2,D4       *size in d5
00001CB0  1A04                    1329          MOVE.B  D4,D5
00001CB2  0205 0003               1330          ANDI.B  #%11,D5
00001CB6  BA3C 0003               1331          CMP.B   #%11,D5     *if size is 11, then opcode is ADDA
00001CBA  6700 007C               1332          BEQ     DADDA
00001CBE  4EB8 11C2               1333          JSR     SIZE
00001CC2  43F9 00002202           1334          LEA     SM7,A1
00001CC8  4E4F                    1335          TRAP    #15
00001CCA                          1336          
00001CCA                          1337  *if addressing mode=<ea>-Dn -> <ea> print ea info first
00001CCA  BE3C 0000               1338          CMP.B   #%0,D7       *if 0, then register info printed last
00001CCE  6700 002E               1339          BEQ     DADDEA      *branch to ea before register
00001CD2                          1340          
00001CD2                          1341  *printing register information
00001CD2                          1342  DADDPRNTREG
00001CD2  BA3C 0003               1343          CMP.B   #%11,D5
00001CD6  6700 0058               1344          BEQ     PRINTA
00001CDA  43F9 0000226A           1345          LEA     VALD,A1
00001CE0                          1346  ADDCONT
00001CE0  4E4F                    1347          TRAP    #15
00001CE2  320E                    1348          MOVE.W  A6,D1       *moving reg num to d1 to print
00001CE4  103C 0003               1349          MOVE.B  #3,D0       *moving 3 to d0 to print register number
00001CE8  4E4F                    1350          TRAP    #15         *printing register number
00001CEA  103C 000E               1351          MOVE.B  #14,D0      *replacing 14 in d0 to print strings
00001CEE  BE3C 0000               1352          CMP.B   #%0,D7      *if info finished printing
00001CF2  6700 02CC               1353          BEQ     DSEND      *branch to end
00001CF6  43F9 0000227C           1354          LEA     COMMA,A1
00001CFC  4E4F                    1355          TRAP    #15
00001CFE                          1356  
00001CFE                          1357          
00001CFE                          1358  * parse ea mode: 3 bits
00001CFE                          1359  *Dn000, An001, (An)010, (An)+011, -(An)100, (d16An)101, (d8An,Xn)110, data111
00001CFE                          1360  *address reg direct not allowed for .B operations
00001CFE                          1361  *no invalid
00001CFE                          1362  DADDEA
00001CFE  E75C                    1363          ROL.W   #3,D4       *ea mode
00001D00  1604                    1364          MOVE.B  D4,D3
00001D02  0203 0007               1365          ANDI.B  #%111,D3
00001D06                          1366  
00001D06                          1367  *parse ea reg: 3 bits
00001D06                          1368  *no invalid: paired with opmode below (nums 0-7)
00001D06                          1369  *if mode=111, 000=.W, 001=.L, 100=#<data>
00001D06  E75C                    1370          ROL.W   #3,D4       *ea mode
00001D08  1C04                    1371          MOVE.B  D4,D6
00001D0A  0206 0007               1372          ANDI.B  #%111,D6
00001D0E                          1373          
00001D0E                          1374  *comparisons
00001D0E  B67C 0004               1375          CMP     #%100,D3
00001D12  6700 005A               1376          BEQ     ADDDATACHECK
00001D16                          1377  DATACHECKCONT
00001D16  4EB8 120C               1378          JSR     ADDRMODEALL
00001D1A  BE3C 0001               1379          CMP.B   #%1,D7      *if info printed
00001D1E  6700 02A0               1380          BEQ     DSEND       *end
00001D22  43F9 0000227C           1381          LEA     COMMA,A1
00001D28  4E4F                    1382          TRAP    #15
00001D2A  60A6                    1383          BRA     DADDPRNTREG 
00001D2C                          1384  
00001D2C  6000 0292               1385          BRA     DSEND
00001D30                          1386          
00001D30  43F9 00002268           1387  PRINTA  LEA     VALA,A1
00001D36  60A8                    1388          BRA     ADDCONT
00001D38                          1389  
00001D38                          1390          
00001D38  4E71                    1391  DADDA   NOP
00001D3A  43F9 00002268           1392          LEA     VALA,A1
00001D40  4E4F                    1393          TRAP    #15
00001D42  BE3C 0000               1394          CMP.B   #%0,D7      *for adda, 0=word, 1=longword
00001D46  6600 000C               1395          BNE     ADDAL
00001D4A  43F9 00002262           1396          LEA     MODEW,A1
00001D50  6000 000C               1397          BRA     ADDSIZEEND
00001D54  43F9 00002265           1398  ADDAL   LEA     MODEL,A1
00001D5A  6000 0002               1399          BRA     ADDSIZEEND
00001D5E                          1400  ADDSIZEEND
00001D5E  4E4F                    1401          TRAP    #15
00001D60  43F9 00002202           1402          LEA     SM7,A1
00001D66  4E4F                    1403          TRAP    #15
00001D68  1E3C 0000               1404          MOVE.B  #%0,D7       *set d2 to print adda in correct order: address register always last
00001D6C  6090                    1405          BRA     DADDEA
00001D6E                          1406  ADDDATACHECK
00001D6E  BA3C 0003               1407          CMP.B   #%11,D5
00001D72  6700 0220               1408          BEQ     DSERR
00001D76  609E                    1409          BRA     DATACHECKCONT
00001D78                          1410          
00001D78                          1411          
00001D78                          1412  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001D78                          1413  
00001D78                          1414  DS1110
00001D78  E75C                    1415          ROL.W   #3,D4           * [D2] Reading count
00001D7A  1404                    1416          MOVE.B  D4,D2
00001D7C  0202 0007               1417          ANDI.B  #%111,D2
00001D80                          1418          
00001D80  E35C                    1419          ROL.W   #1,D4           * [D3] Reading direction
00001D82  1604                    1420          MOVE.B  D4,D3
00001D84  0203 0001               1421          ANDI.B  #%1,D3
00001D88                          1422          
00001D88  E55C                    1423          ROL.W   #2,D4           * [D5] Reading size
00001D8A  1A04                    1424          MOVE.B  D4,D5
00001D8C  0205 0003               1425          ANDI.B  #%11,D5
00001D90                          1426          
00001D90  BA3C 0003               1427          CMP.B   #%11,D5   * Start processing code as memory if size is 11
00001D94  6700 00F0               1428          BEQ     DS1110MEM
00001D98                          1429          
00001D98  E35C                    1430          ROL.W   #1,D4           * [D6] Reading count mode
00001D9A  1C04                    1431          MOVE.B  D4,D6
00001D9C  0206 0001               1432          ANDI.B  #%1,D6
00001DA0                          1433          
00001DA0  E55C                    1434          ROL.W   #2,D4           * [D7] reading type of shift
00001DA2  1E04                    1435          MOVE.B  D4,D7
00001DA4  0207 0003               1436          ANDI.B  #%11,D7
00001DA8                          1437          
00001DA8  E75C                    1438          ROL.W   #3,D4           * [D1] reading register
00001DAA  1204                    1439          MOVE.B  D4,D1
00001DAC  0201 0007               1440          ANDI.B  #%111,D1
00001DB0                          1441          
00001DB0  BE3C 0001               1442          CMP.B   #%01,D7   *Determine shift type
00001DB4  6700 008E               1443          BEQ     DLS
00001DB8  BE3C 0000               1444          CMP.B   #%00,D7
00001DBC  6700 0092               1445          BEQ     DAS
00001DC0  BE3C 0003               1446          CMP.B   #%11,D7
00001DC4  6700 0096               1447          BEQ     DRO
00001DC8                          1448          
00001DC8  6000 01F6               1449          BRA     DSEND               *Fallback in case of invalid code
00001DCC                          1450          
00001DCC  48E7 FFFF               1451  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001DD0  4EB9 00001E68           1452          JSR     DS1110SIDE
00001DD6  4CDF FFFF               1453          MOVEM.L (SP)+,A0-A7/D0-D7
00001DDA                          1454          
00001DDA  48E7 FFFF               1455          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
00001DDE  4EB8 11C2               1456          JSR     SIZE
00001DE2  4CDF FFFF               1457          MOVEM.L (SP)+,A0-A7/D0-D7
00001DE6                          1458          
00001DE6  103C 000E               1459          MOVE.B  #14,D0
00001DEA  43F9 000021F5           1460          LEA     SM5,A1
00001DF0  4E4F                    1461          TRAP    #15
00001DF2                          1462          
00001DF2  BA3C 0003               1463          CMP.B   #%11,D5
00001DF6  6700 00B4               1464          BEQ     DS1110MEMA
00001DFA                          1465          
00001DFA  BC3C 0001               1466          CMP.B   #%1,D6
00001DFE  6700 003A               1467          BEQ     DS1110_REG_D
00001E02  6000 002C               1468          BRA     DS1110_REG_I
00001E06                          1469          
00001E06  1C01                    1470  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001E08                          1471          
00001E08  103C 0003               1472          MOVE.B  #3,D0
00001E0C  1202                    1473          MOVE.B  D2,D1
00001E0E  4E4F                    1474          TRAP    #15
00001E10                          1475          
00001E10  103C 000E               1476          MOVE.B  #14,D0
00001E14  43F9 0000227C           1477          LEA     COMMA,A1
00001E1A  4E4F                    1478          TRAP    #15
00001E1C                          1479          
00001E1C  43F9 0000226A           1480          LEA     VALD,A1
00001E22  4E4F                    1481          TRAP    #15
00001E24                          1482          
00001E24  103C 0003               1483          MOVE.B  #3,D0
00001E28  1206                    1484          MOVE.B  D6,D1
00001E2A  4E4F                    1485          TRAP    #15
00001E2C                          1486          
00001E2C  6000 0192               1487          BRA     DSEND
00001E30                          1488          
00001E30                          1489  DS1110_REG_I
00001E30  43F9 0000226C           1490          LEA     VALN,A1
00001E36  4E4F                    1491          TRAP    #15
00001E38  60CC                    1492          BRA     DS1110B
00001E3A                          1493  
00001E3A                          1494  DS1110_REG_D
00001E3A  43F9 0000226A           1495          LEA     VALD,A1
00001E40  4E4F                    1496          TRAP    #15
00001E42  60C2                    1497          BRA     DS1110B       
00001E44                          1498          
00001E44  43F9 000022A0           1499  DLS     LEA     LSM,A1
00001E4A  4E4F                    1500          TRAP    #15
00001E4C  6000 FF7E               1501          BRA     DS1110A
00001E50                          1502          
00001E50  43F9 000022A7           1503  DAS     LEA     ASM,A1
00001E56  4E4F                    1504          TRAP    #15
00001E58  6000 FF72               1505          BRA     DS1110A
00001E5C                          1506          
00001E5C  43F9 000022AE           1507  DRO     LEA     ROM,A1
00001E62  4E4F                    1508          TRAP    #15
00001E64  6000 FF66               1509          BRA     DS1110A
00001E68                          1510          
00001E68                          1511  DS1110SIDE
00001E68  103C 0006               1512          MOVE.B  #6,D0
00001E6C  B63C 0001               1513          CMP.B   #1,D3
00001E70  6700 000C               1514          BEQ     DS1110LSIDE
00001E74  123C 0052               1515          MOVE.B  #82,D1
00001E78  4E4F                    1516          TRAP    #15
00001E7A  6000 0008               1517          BRA     DS1110SIDEEND
00001E7E                          1518  
00001E7E                          1519  DS1110LSIDE
00001E7E  123C 004C               1520          MOVE.B  #76,D1
00001E82  4E4F                    1521          TRAP    #15
00001E84                          1522          
00001E84                          1523  DS1110SIDEEND
00001E84  4E75                    1524          RTS 
00001E86                          1525  
00001E86                          1526  DS1110MEM
00001E86                          1527                                  * Shift type is instead stored in D2
00001E86                          1528          
00001E86  E75C                    1529          ROL.W   #3,D4           * [D6] Reading address mode
00001E88  1C04                    1530          MOVE.B  D4,D6
00001E8A  0206 0007               1531          ANDI.B  #%111,D6
00001E8E                          1532          
00001E8E  E75C                    1533          ROL.W   #3,D4           * [D1] Reading address register
00001E90  1204                    1534          MOVE.B  D4,D1
00001E92  0201 0007               1535          ANDI.B  #%111,D1
00001E96                          1536          
00001E96  B43C 0001               1537          CMP.B   #%01,D2
00001E9A  67A8                    1538          BEQ     DLS
00001E9C  B43C 0000               1539          CMP.B   #%00,D2
00001EA0  67AE                    1540          BEQ     DAS
00001EA2  B43C 0003               1541          CMP.B   #%11,D2
00001EA6  67B4                    1542          BEQ     DRO
00001EA8  6000 0116               1543          BRA     DSEND
00001EAC                          1544          
00001EAC                          1545          
00001EAC                          1546  DS1110MEMA
00001EAC                          1547          
00001EAC  BC3C 0002               1548          CMP.B   #%010,D6
00001EB0  6700 002E               1549          BEQ     DS1110MEM_REG
00001EB4  BC3C 0003               1550          CMP.B   #%011,D6
00001EB8  6700 004C               1551          BEQ     DS1110MEM_INC
00001EBC  BC3C 0004               1552          CMP.B   #%100,D6
00001EC0  6700 006A               1553          BEQ     DS1110MEM_DEC
00001EC4                          1554          
00001EC4  BC3C 0007               1555          CMP.B   #%111,D6
00001EC8  6600 00CA               1556          BNE     DSERR
00001ECC                          1557          
00001ECC  B23C 0000               1558          CMP.B   #%000,D1
00001ED0  6700 0080               1559          BEQ     DS1110MEM_CUSW
00001ED4  B23C 0001               1560          CMP.B   #%001,D1
00001ED8  6700 0096               1561          BEQ     DS1110MEM_CUSL
00001EDC                          1562          
00001EDC  6000 00E2               1563          BRA     DSEND
00001EE0                          1564  
00001EE0                          1565  DS1110MEM_REG
00001EE0  43F9 00002272           1566          LEA     OPENPTR,A1
00001EE6  4E4F                    1567          TRAP    #15
00001EE8                          1568          
00001EE8  43F9 00002268           1569          LEA     VALA,A1
00001EEE  4E4F                    1570          TRAP    #15
00001EF0                          1571          
00001EF0  103C 0003               1572          MOVE.B  #3,D0
00001EF4  4E4F                    1573          TRAP    #15
00001EF6  103C 000E               1574          MOVE.B  #14,D0
00001EFA                          1575          
00001EFA  43F9 00002277           1576          LEA     CLOSEPTR,A1
00001F00  4E4F                    1577          TRAP    #15
00001F02                          1578          
00001F02  6000 00BC               1579          BRA     DSEND
00001F06                          1580  
00001F06                          1581  DS1110MEM_INC
00001F06  43F9 00002272           1582          LEA     OPENPTR,A1
00001F0C  4E4F                    1583          TRAP    #15
00001F0E                          1584          
00001F0E  43F9 00002268           1585          LEA     VALA,A1
00001F14  4E4F                    1586          TRAP    #15
00001F16                          1587          
00001F16  103C 0003               1588          MOVE.B  #3,D0
00001F1A  4E4F                    1589          TRAP    #15
00001F1C  103C 000E               1590          MOVE.B  #14,D0
00001F20                          1591          
00001F20  43F9 00002279           1592          LEA     CLOSEIPTR,A1
00001F26  4E4F                    1593          TRAP    #15
00001F28                          1594          
00001F28  6000 0096               1595          BRA     DSEND
00001F2C                          1596  
00001F2C                          1597  DS1110MEM_DEC
00001F2C  43F9 00002274           1598          LEA     OPENDPTR,A1
00001F32  4E4F                    1599          TRAP    #15
00001F34                          1600          
00001F34  43F9 00002268           1601          LEA     VALA,A1
00001F3A  4E4F                    1602          TRAP    #15
00001F3C                          1603          
00001F3C  103C 0003               1604          MOVE.B  #3,D0
00001F40  4E4F                    1605          TRAP    #15
00001F42  103C 000E               1606          MOVE.B  #14,D0
00001F46                          1607          
00001F46  43F9 00002277           1608          LEA     CLOSEPTR,A1
00001F4C  4E4F                    1609          TRAP    #15
00001F4E                          1610          
00001F4E  6000 0070               1611          BRA     DSEND
00001F52                          1612          
00001F52                          1613  DS1110MEM_CUSW
00001F52  43F9 0000227E           1614          LEA     DOLLAR,A1
00001F58  4E4F                    1615          TRAP    #15
00001F5A  341A                    1616          MOVE.W  (A2)+,D2
00001F5C  48E7 0400               1617          MOVEM.L D5,-(SP)
00001F60  1A3C 0030               1618          MOVE.B  #48,D5
00001F64  4EB8 117A               1619          JSR     HEXOUT
00001F68  4CDF 0020               1620          MOVEM.L (SP)+,D5
00001F6C  6000 0052               1621          BRA     DSEND
00001F70                          1622          
00001F70                          1623  DS1110MEM_CUSL
00001F70  43F9 0000227E           1624          LEA     DOLLAR,A1
00001F76  4E4F                    1625          TRAP    #15
00001F78  241A                    1626          MOVE.L  (A2)+,D2
00001F7A  48E7 0400               1627          MOVEM.L D5,-(SP)
00001F7E  1A3C 0030               1628          MOVE.B  #48,D5
00001F82  4EB8 117A               1629          JSR     HEXOUT
00001F86  4CDF 0020               1630          MOVEM.L (SP)+,D5
00001F8A  6000 0034               1631          BRA     DSEND
00001F8E                          1632          
00001F8E                          1633  
00001F8E                          1634  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001F8E                          1635  
00001F8E  4E71                    1636  DS1111  NOP
00001F90  6000 002E               1637          BRA     DSEND
00001F94                          1638  
00001F94                          1639  *DS Final
00001F94                          1640  *--------------------------------------------------------------------------------------------------
00001F94                          1641  
00001F94  103C 000E               1642  DSERR   MOVE.B  #14,D0
00001F98  43F9 00002211           1643          LEA     ERRM,A1
00001F9E  4E4F                    1644          TRAP    #15
00001FA0  6000 001E               1645          BRA     DSEND
00001FA4                          1646          
00001FA4                          1647  DSERRUNS
00001FA4  103C 000E               1648          MOVE.B  #14,D0
00001FA8  43F9 00002219           1649          LEA     ERRMUNS,A1
00001FAE  4E4F                    1650          TRAP    #15
00001FB0  6000 000E               1651          BRA     DSEND
00001FB4                          1652  
00001FB4                          1653  DSERREA
00001FB4  103C 000E               1654          MOVE.B  #14,D0
00001FB8  43F9 0000223A           1655          LEA     ERRMEA,A1
00001FBE  4E4F                    1656          TRAP    #15
00001FC0                          1657  
00001FC0  4E75                    1658  DSEND   RTS
00001FC2                          1659  
00001FC2  43F9 000021E2           1660  DSEOF   LEA     LB,A1
00001FC8  103C 000E               1661          MOVE.B  #14,D0
00001FCC  4E4F                    1662          TRAP    #15
00001FCE                          1663          
00001FCE  43F9 000020E4           1664          LEA     REST,A1
00001FD4  103C 000E               1665          MOVE.B  #14,D0
00001FD8  4E4F                    1666          TRAP    #15
00001FDA                          1667          
00001FDA  103C 0005               1668          MOVE.B  #5,D0
00001FDE  4E4F                    1669          TRAP    #15
00001FE0                          1670          
00001FE0  B23C 0059               1671          CMP.B   #89,D1
00001FE4  6700 F01A               1672          BEQ     START
00001FE8  B23C 0079               1673          CMP.B   #121,D1
00001FEC  6700 F012               1674          BEQ     START
00001FF0                          1675  
00001FF0  43F9 000021E2           1676  END     LEA     LB,A1
00001FF6  103C 000E               1677          MOVE.B  #14,D0
00001FFA  4E4F                    1678          TRAP    #15
00001FFC                          1679          
00001FFC  43F9 000021E2           1680          LEA     LB,A1
00002002  103C 000E               1681          MOVE.B  #14,D0
00002006  4E4F                    1682          TRAP    #15
00002008                          1683          
00002008  43F9 00002101           1684          LEA     ENDMSG,A1
0000200E  103C 000E               1685          MOVE.B  #14,D0
00002012  4E4F                    1686          TRAP    #15
00002014                          1687          
00002014  43F9 00002129           1688          LEA     AUTHOR,A1
0000201A  4E4F                    1689          TRAP    #15
0000201C                          1690          
0000201C  43F9 000021E2           1691          LEA     LB,A1
00002022  103C 000E               1692          MOVE.B  #14,D0
00002026  4E4F                    1693          TRAP    #15
00002028                          1694          
00002028  103C 0009               1695          MOVE.B  #9,D0
0000202C  4E4F                    1696          TRAP    #15
0000202E                          1697  
0000202E                          1698  *Initialized Variables
0000202E                          1699  *--------------------------------------------------------------------------------------------------
0000202E                          1700  
0000202E  =0000000D               1701  CR      EQU     $0D
0000202E  =0000000A               1702  LF      EQU     $0A
0000202E  =00000009               1703  HT      EQU     $09
0000202E                          1704  
0000202E= 54 68 69 73 20 69 ...   1705  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
000020B6= 45 6E 74 65 72 20 ...   1706  ASTART  DC.B    'Enter start address: $',0
000020CD= 45 6E 74 65 72 20 ...   1707  AEND    DC.B    'Enter end address:   $',0
000020E4= 52 65 73 74 61 72 ...   1708  REST    DC.B    'Restart Disassembler (y/n)? ',0
00002101= 54 68 61 6E 6B 20 ...   1709  ENDMSG  DC.B    'Thank you for using the Disassembler!',CR,LF,0
00002129= 4D 61 64 65 20 62 ...   1710  AUTHOR  DC.B    'Made by the ARM Cortex Companions!',CR,LF,0
0000214E                          1711  
0000214E= 45 52 52 4F 52 3A ...   1712  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00002188= 45 52 52 4F 52 3A ...   1713  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
000021AE= 45 52 52 4F 52 3A ...   1714  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000021E2                          1715  
000021E2= 0D 0A 00                1716  LB      DC.B    CR,LF,0
000021E5                          1717  
000021E5= 09 00                   1718  HTM     DC.B    HT,0
000021E7                          1719  
000021E7= 20 00                   1720  SM1     DC.B    ' ',0
000021E9= 20 20 00                1721  SM2     DC.B    '  ',0
000021EC= 20 20 20 00             1722  SM3     DC.B    '   ',0
000021F0= 20 20 20 20 00          1723  SM4     DC.B    '    ',0
000021F5= 20 20 20 20 20 00       1724  SM5     DC.B    '     ',0
000021FB= 20 20 20 20 20 20 00    1725  SM6     DC.B    '      ',0
00002202= 20 20 20 20 20 20 ...   1726  SM7     DC.B    '       ',0
0000220A                          1727  
0000220A= 54 45 53 54 00          1728  TESTM   DC.B    'TEST',0
0000220F                          1729  
0000220F= 00                      1730  NOTH    DC.B    '',0
00002210= 00                      1731  NOTH2   DC.B    '',0
00002211                          1732  
00002211= 20 2A 45 52 52 4F ...   1733  ERRM    DC.B    ' *ERROR',0
00002219= 20 2A 45 52 52 4F ...   1734  ERRMUNS DC.B    ' *ERROR: Unsupported Instruction',0
0000223A= 20 2A 45 52 52 4F ...   1735  ERRMEA  DC.B    ' *ERROR: Unsupported Addressing Mode',0
0000225F                          1736  
0000225F= 2E 42 00                1737  MODEB   DC.B    '.B',0
00002262= 2E 57 00                1738  MODEW   DC.B    '.W',0
00002265= 2E 4C 00                1739  MODEL   DC.B    '.L',0
00002268                          1740  
00002268= 41 00                   1741  VALA    DC.B    'A',0
0000226A= 44 00                   1742  VALD    DC.B    'D',0
0000226C= 23 00                   1743  VALN    DC.B    '#',0
0000226E= 30 00                   1744  VAL0    DC.B    '0',0
00002270= 51 00                   1745  VALQ    DC.B    'Q',0
00002272                          1746  
00002272= 28 00                   1747  OPENPTR     DC.B    '(',0
00002274= 2D 28 00                1748  OPENDPTR    DC.B    '-(',0
00002277                          1749  
00002277= 29 00                   1750  CLOSEPTR    DC.B    ')',0
00002279= 29 2B 00                1751  CLOSEIPTR   DC.B    ')+',0
0000227C                          1752  
0000227C= 2C 00                   1753  COMMA   DC.B    ',',0
0000227E= 24 00                   1754  DOLLAR  DC.B    '$',0
00002280                          1755  
00002280= 4E 4F 50 00             1756  NOPM    DC.B    'NOP',0
00002284                          1757  
00002284= 4D 4F 56 45 00          1758  MOVEM   DC.B    'MOVE',0
00002289                          1759  
00002289= 41 44 44 00             1760  ADDM    DC.B    'ADD',0
0000228D                          1761  
0000228D= 53 55 42 00             1762  SUBM    DC.B    'SUB',0
00002291                          1763  
00002291= 4C 45 41 00             1764  LEAM    DC.B    'LEA',0
00002295                          1765  
00002295= 41 4E 44 00             1766  ANDM    DC.B    'AND',0
00002299= 4F 52 00                1767  ORM     DC.B    'OR',0
0000229C= 4E 4F 54 00             1768  NOTM    DC.B    'NOT',0
000022A0                          1769  
000022A0= 4C 53 00                1770  LSM    DC.B    'LS',0
000022A3= 4C 53 52 00             1771  LSRM    DC.B    'LSR',0
000022A7= 41 53 00                1772  ASM    DC.B    'AS',0
000022AA= 41 53 52 00             1773  ASRM    DC.B    'ASR',0
000022AE                          1774  
000022AE= 52 4F 00                1775  ROM    DC.B    'RO',0
000022B1= 52 4F 52 00             1776  RORM    DC.B    'ROR',0
000022B5                          1777  
000022B5= 42 47 54 00             1778  BGTM    DC.B    'BGT',0
000022B9= 42 4C 45 00             1779  BLEM    DC.B    'BLE',0
000022BD= 42 45 51 00             1780  BEQM    DC.B    'BEQ',0
000022C1                          1781  
000022C1= 4A 53 52 00             1782  JSRM    DC.B    'JSR',0
000022C5= 52 54 53 00             1783  RTSM    DC.B    'RTS',0
000022C9                          1784  
000022C9= 42 52 41 00             1785  BRAM    DC.B    'BRA',0
000022CD                          1786  
000022CD                          1787  
000022CD                          1788      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1D54
ADDCONT             1CE0
ADDDATACHECK        1D6E
ADDM                2289
ADDRMODEALL         120C
ADDSIZEEND          1D5E
ADREG               1674
ADREGP              168C
AEND                20CD
AM000               120C
AM001               122C
AM010               1254
AM011               1284
AM100               12B4
AM111               12E4
AM111001            1312
AM111100            1338
AMEND               1366
ANDM                2295
ASM                 22A7
ASRM                22AA
ASTART              20B6
AUTHOR              2129
BEQM                22BD
BGTM                22B5
BLEM                22B9
BRAM                22C9
CLOSEIPTR           2279
CLOSEPTR            2277
COMMA               227C
CR                  D
DADD                1C92
DADDA               1D38
DADDEA              1CFE
DADDPRNTREG         1CD2
DADDQ               18C6
DAND                139E
DANDA               1416
DANDB               13DA
DANDL               1402
DANDW               13EE
DAS                 1E50
DATACHECKCONT       1D16
DBEQ                1A72
DBGT                19F6
DBLE                1A32
DBRA                196A
DBRA_16BIT          19B2
DBRA_32BIT          19D4
DISASM              136C
DJSR                16F6
DJSR_CUSL           178E
DJSR_CUSW           1770
DJSR_REG            174A
DLEA                17B8
DLEAP               17EC
DLS                 1E44
DMOVE2              1460
DMOVEA              1504
DMOVEQ              1AB4
DNOP                15BA
DNOT                15C6
DNOTA               1626
DNOTB               15EA
DNOTL               1612
DNOTW               15FE
DOLLAR              227E
DOR                 1B22
DORA                1B9A
DORB                1B5E
DORL                1B86
DORW                1B72
DREG                165C
DRO                 1E5C
DRTS                17AC
DS0                 1376
DS00                138A
DS01                1526
DS010               1544
DS0100              1580
DS0101              18C4
DS011               154E
DS0110              193E
DS0111              1AB2
DS1                 1380
DS10                1530
DS100               1558
DS1000              1B1C
DS1001              1BEC
DS101               1562
DS1010              1C7E
DS1011              1C84
DS11                153A
DS110               156C
DS1100              1C8A
DS1101              1C90
DS111               1576
DS1110              1D78
DS1110A             1DCC
DS1110B             1E06
DS1110LSIDE         1E7E
DS1110MEM           1E86
DS1110MEMA          1EAC
DS1110MEM_CUSL      1F70
DS1110MEM_CUSW      1F52
DS1110MEM_DEC       1F2C
DS1110MEM_INC       1F06
DS1110MEM_REG       1EE0
DS1110SIDE          1E68
DS1110SIDEEND       1E84
DS1110_REG_D        1E3A
DS1110_REG_I        1E30
DS1111              1F8E
DSEND               1FC0
DSEOF               1FC2
DSERR               1F94
DSERREA             1FB4
DSERRUNS            1FA4
DSUB                1BEE
DSUBEA              1C4A
DSUBPRNTREG         1C26
END                 1FF0
ENDMSG              2101
ERRM                2211
ERRMEA              223A
ERRMUNS             2219
EXT                 16D4
EXTW                16EA
HDONE               11C0
HEXOUT              117A
HHEX                1194
HNUM                119C
HSKIP2              11AA
HSKIP3              11BE
HSTEP               1182
HSTEP2              11A0
HT                  9
HTM                 21E5
INTRO               202E
JSR010              1818
JSR111              1848
JSR111001           187A
JSRM                22C1
JSRPRINT2           18A4
LB                  21E2
LEAM                2291
LF                  A
LSM                 22A0
LSRM                22A3
MADREG              16AC
MODEB               225F
MODEL               2265
MODEW               2262
MOVECONT            1484
MOVEERRCHECK        151A
MOVEM               2284
MSDONE              14CA
MSIZE               1484
MSIZEB              14AC
MSIZEL              14C0
MSIZEW              14B6
NOPM                2280
NOTH                220F
NOTH2               2210
NOTM                229C
OPENDPTR            2274
OPENPTR             2272
ORM                 2299
PARSE               1086
PCAPS               10B2
PDONE               10DC
PHEX                10A2
PNUM                10BA
PRINTA              1D30
PSTEP               108E
PSTEP2              10BE
RCONT               1166
READLN              1118
REST                20E4
ROM                 22AE
RORM                22B1
RPAUSE              116E
RSTEP               111E
RTSM                22C5
SDONE               1208
SIZE                11C2
SIZEB               11EA
SIZEL               11FE
SIZEW               11F4
SM1                 21E7
SM2                 21E9
SM3                 21EC
SM4                 21F0
SM5                 21F5
SM6                 21FB
SM7                 2202
SRET                120A
START               1000
STARTER             0
SUBM                228D
TEST                102A
TESTM               220A
VAL0                226E
VALA                2268
VALD                226A
VALN                226C
VALQ                2270
VERR1               10E8
VERR1M              214E
VERR2               10F8
VERR2M              2188
VERR3               1108
VERR3M              21AE
VINPUT              10DE
