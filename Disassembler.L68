00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/29/2023 10:24:51 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: Ben Schipunov contribution to the disassembler
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000                            14  
00001000  43F9 000016A0             15          LEA     INTRO,A1    *Intro text
00001006  103C 000E                 16          MOVE.B  #14,D0
0000100A  4E4F                      17          TRAP    #15
0000100C                            18          
0000100C  43F9 00001728             19          LEA     ASTART,A1   *Input prompt text #1
00001012  4E4F                      20          TRAP    #15
00001014                            21  
00001014  103C 0002                 22          MOVE.B  #2,D0       *String prompt #1
00001018  4E4F                      23          TRAP    #15
0000101A                            24          
0000101A  B27C 0008                 25          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000101E  6E00 00B2                 26          BGT     VERR3
00001022                            27          
00001022  4EB9 00001050             28          JSR     PARSE       *Parse string #1
00001028                            29          
00001028                            30  
00001028  2641                      31          MOVE.L  D1,A3
0000102A                            32          
0000102A  43F9 0000173F             33          LEA     AEND,A1     *Input prompt text #2
00001030  103C 000E                 34          MOVE.B  #14,D0
00001034  4E4F                      35          TRAP    #15
00001036                            36          
00001036  103C 0002                 37          MOVE.B  #2,D0       *String prompt #2
0000103A  4E4F                      38          TRAP    #15
0000103C                            39          
0000103C  B27C 0008                 40          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001040  6E00 0090                 41          BGT     VERR3
00001044                            42          
00001044  4EB9 00001050             43          JSR     PARSE       *Parse string #2
0000104A                            44          
0000104A  2841                      45          MOVE.L  D1,A4
0000104C                            46          
0000104C  6000 005A                 47          BRA     VINPUT      *Verify inputs
00001050                            48          
00001050                            49  *--------------------------------------------------------------------------------------------------
00001050                            50  
00001050                            51  PARSE                       *PARSE: Initialize variables involved in parsing
00001050  123C 0000                 52          MOVE.B  #0,D1       * [D1] parse output
00001054  143C 0008                 53          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
00001058                            54          
00001058                            55  PSTEP                       *PSTEP: Step in parsing for loop
00001058  1019                      56          MOVE.B  (A1)+,D0    *Read next byte from A1
0000105A  B03C 0000                 57          CMP.B   #0,D0       *Check if reached end of string input
0000105E  6700 0046                 58          BEQ     PDONE       *Break the for loop if reached end
00001062  E989                      59          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
00001064  B03C 003A                 60          CMP.B   #58,D0      *Distinguish between letter and number
00001068  6D00 001A                 61          BLT     PNUM        *Handle number
0000106C                            62  
0000106C  0400 0037                 63  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
00001070  0C00 000F                 64          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
00001074  6E00 0006                 65          BGT     PCAPS       *Handle lowercase
00001078  6000 000E                 66          BRA     PSTEP2
0000107C                            67       
0000107C  0400 0020                 68  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
00001080  6000 0006                 69          BRA     PSTEP2
00001084                            70  
00001084  0400 0030                 71  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
00001088                            72          
00001088  0C00 000F                 73  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
0000108C  6E00 0034                 74          BGT     VERR2
00001090  0C00 0000                 75          CMPI.B   #0,D0
00001094  6D00 002C                 76          BLT     VERR2
00001098  D280                      77          ADD.L   D0,D1       *Append hex char to parse output
0000109A  5302                      78          SUBQ.B  #1,D2       *Decrement the counter
0000109C  0C02 0000                 79          CMPI.B   #0,D2      *Compare if we reached max count
000010A0  6700 0004                 80          BEQ     PDONE       *Complete parsing
000010A4  60B2                      81          BRA     PSTEP       *Or else continue loop
000010A6                            82  
000010A6  4E75                      83  PDONE   RTS
000010A8                            84  
000010A8                            85  *--------------------------------------------------------------------------------------------------
000010A8                            86  
000010A8  B9CB                      87  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010AA  6D00 0006                 88          BLT     VERR1
000010AE  6000 0032                 89          BRA     READLN
000010B2                            90  
000010B2  43F9 00001756             91  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010B8  103C 000E                 92          MOVE.B  #14,D0
000010BC  4E4F                      93          TRAP    #15
000010BE  6000 05DA                 94          BRA     END
000010C2                            95  
000010C2  43F9 00001790             96  VERR2   LEA     VERR2M,A1   *Throw range error
000010C8  103C 000E                 97          MOVE.B  #14,D0
000010CC  4E4F                      98          TRAP    #15
000010CE  6000 05CA                 99          BRA     END
000010D2                           100  
000010D2  43F9 000017B6            101  VERR3   LEA     VERR3M,A1   *Throw length error
000010D8  103C 000E                102          MOVE.B  #14,D0
000010DC  4E4F                     103          TRAP    #15
000010DE  6000 05BA                104          BRA     END
000010E2                           105          
000010E2                           106  *--------------------------------------------------------------------------------------------------
000010E2                           107  
000010E2                           108  READLN                              *READLN: Start READLN for loop
000010E2  244B                     109          MOVE.L  A3,A2               *Set current address to start address
000010E4  1A3C 0000                110          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
000010E8                           111  
000010E8                           112  RSTEP                               *RSTEP: 
000010E8  381A                     113          MOVE.W  (A2)+,D4
000010EA  340A                     114          MOVE.W  A2,D2
000010EC  5542                     115          SUBQ.W  #2,D2
000010EE                           116          
000010EE  48E7 0400                117          MOVEM.L D5,-(SP)
000010F2  1A3C 0000                118          MOVE.B  #0,D5
000010F6  4EB9 00001144            119          JSR     HEXOUT              *Run printing operation for HEX address
000010FC  4CDF 0020                120          MOVEM.L (SP)+,D5
00001100                           121          
00001100  43F9 000017F1            122          LEA     SM2,A1              *Horizontal tab indent after printing hex
00001106  103C 000E                123          MOVE.B  #14,D0
0000110A  4E4F                     124          TRAP    #15
0000110C                           125          
0000110C  48E7 7F0F                126          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001110  4EB9 000011D6            127          JSR     DISASM              *Run disassembly for current machine code
00001116  4CDF F0FE                128          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
0000111A                           129          
0000111A  5205                     130          ADDQ.B  #1,D5       *Increment counter by 1
0000111C  BA3C 0020                131          CMP.B   #32,D5      *Check if we reached 32 lines
00001120  6700 0016                132          BEQ     RPAUSE      *Branch to pausing code
00001124                           133          
00001124  43F9 000017EA            134          LEA     LB,A1       *Print line break
0000112A  103C 000E                135          MOVE.B  #14,D0      
0000112E  4E4F                     136          TRAP    #15
00001130                           137          
00001130                           138  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001130  B9CA                     139          CMP.L   A2,A4       *Check if we reached the end address
00001132  6D00 0566                140          BLT     END         *End loop if so
00001136  60B0                     141          BRA     RSTEP       *Or else continue the loop
00001138                           142          
00001138                           143  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
00001138  1A3C 0000                144          MOVE.B  #0,D5       * Reset D5 counter
0000113C  103C 0005                145          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001140  4E4F                     146          TRAP    #15         * Only used for waiting for user to hit ENTER
00001142  60EC                     147          BRA     RCONT       *Continue with READLN loop
00001144                           148  
00001144                           149  *--------------------------------------------------------------------------------------------------
00001144                           150  
00001144                           151  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
00001144  103C 0006                152          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
00001148  163C 0008                153          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
0000114C                           154          
0000114C                           155  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
0000114C  E99A                     156          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
0000114E  2202                     157          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001150  0281 0000000F            158          ANDI.L  #$F,D1      * Filter to the right four bits
00001156  B23C 000A                159          CMP.B   #10,D1      *Distinguish between number and letter
0000115A  6D00 000A                160          BLT     HNUM        *Branch to number handling, or continue to letter handling
0000115E                           161          
0000115E                           162  HHEX                        *HHEX: Handle letters from HEXOUT for loop
0000115E  0601 0037                163          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001162  6000 0006                164          BRA     HSTEP2      *Branch to step 2 of the iteration
00001166                           165  
00001166                           166  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
00001166  0601 0030                167          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
0000116A                           168  
0000116A                           169  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
0000116A  5303                     170          SUBQ.B  #1,D3       *Decrement counter for longword tracking
0000116C                           171          
0000116C  B205                     172          CMP.B   D5,D1
0000116E  6700 0004                173          BEQ     HSKIP2
00001172                           174          
00001172  4E4F                     175          TRAP #15            *Will print the ASCII value stored in D1
00001174  0C03 0000                176  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
00001178  6700 0010                177          BEQ     HDONE       *End loop if done
0000117C                           178          
0000117C  B23C 0030                179          CMP.B   #48,D1
00001180  6700 0006                180          BEQ     HSKIP3
00001184                           181          
00001184  1A3C 0000                182          MOVE.B  #0,D5
00001188                           183          
00001188  60C2                     184  HSKIP3  BRA     HSTEP       *Or else continue loop
0000118A                           185          
0000118A  4E75                     186  HDONE   RTS
0000118C                           187  
0000118C                           188  
0000118C                           189  *--------------------------------------------------------------------------------------------------
0000118C                           190  
0000118C  103C 000E                191  SIZE    MOVE.B  #14,D0
00001190  BA3C 0000                192          CMP.B   #%00,D5
00001194  6700 001E                193          BEQ     SIZEB
00001198  BA3C 0001                194          CMP.B   #%01,D5
0000119C  6700 0020                195          BEQ     SIZEW
000011A0  BA3C 0002                196          CMP.B   #%10,D5
000011A4  6700 0022                197          BEQ     SIZEL
000011A8  BA3C 0003                198          CMP.B   #%11,D5
000011AC  6700 0010                199          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011B0  6000 0022                200          BRA     SRET
000011B4                           201          
000011B4  43F9 00001820            202  SIZEB   LEA     MODEB,A1
000011BA  6000 0016                203          BRA     SDONE
000011BE                           204  
000011BE  43F9 00001823            205  SIZEW   LEA     MODEW,A1
000011C4  6000 000C                206          BRA     SDONE
000011C8                           207  
000011C8  43F9 00001826            208  SIZEL   LEA     MODEL,A1
000011CE  6000 0002                209          BRA     SDONE
000011D2                           210  
000011D2  4E4F                     211  SDONE   TRAP    #15
000011D4                           212  
000011D4  4E75                     213  SRET    RTS
000011D6                           214  
000011D6                           215  *--------------------------------------------------------------------------------------------------
000011D6                           216  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
000011D6                           217  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
000011D6                           218  
000011D6                           219  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
000011D6                           220  
000011D6                           221  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
000011D6                           222  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
000011D6                           223  
000011D6                           224  DISASM                      *DISASM: Disassemble a machine code
000011D6  E34C                     225          LSL.W   #1,D4       * Tier 0 binary search
000011D8  6500 0010                226          BCS     DS1
000011DC  6000 0002                227          BRA     DS0
000011E0                           228  
000011E0                           229  *DS Tier 1 ----------------------------------------------------------------------------------------
000011E0                           230  
000011E0                           231  DS0                         *DS0: Tier 1 binary search for 0 side
000011E0  E34C                     232          LSL.W   #1,D4       
000011E2  6500 002A                233          BCS     DS01
000011E6  6000 000C                234          BRA     DS00
000011EA                           235  
000011EA                           236  DS1                         *DS1: Tier 1 binary search for 1 side
000011EA  E34C                     237          LSL.W   #1,D4       
000011EC  6500 0034                238          BCS     DS11
000011F0  6000 0026                239          BRA     DS10
000011F4                           240  
000011F4                           241  DS00                        *DS00: Disassembly processing for 00 prefix
000011F4  E55C                     242          ROL.W   #2,D4       
000011F6  3A04                     243          MOVE.W  D4,D5
000011F8  0204 0003                244          ANDI.B  #%11,D4
000011FC  0C04 0000                245          CMPI.B  #%00,D4
00001200  6700 0006                246          BEQ     DAND
00001204  6000 0492                247          BRA     DSEND
00001208                           248  
00001208  4E71                     249  DAND    NOP                 *DAND: Disassembly function serving DAND        
0000120A                           250          
0000120A  4E71                     251  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000120C                           252          
0000120C                           253  
0000120C  4E71                     254  DMOVEA  NOP
0000120E                           255  
0000120E                           256  *DS Tier 2 ----------------------------------------------------------------------------------------
0000120E                           257  
0000120E                           258  DS01                        *DS01: Tier 2 binary search for 01 side
0000120E  E34C                     259          LSL.W   #1,D4
00001210  6500 0024                260          BCS     DS011
00001214  6000 0016                261          BRA     DS010
00001218                           262  
00001218                           263  DS10                        *DS10: Tier 2 binary search for 10 side
00001218  E34C                     264          LSL.W   #1,D4
0000121A  6500 002E                265          BCS     DS101
0000121E  6000 0020                266          BRA     DS100
00001222                           267  
00001222                           268  DS11                        *DS11: Tier 2 binary search for 11 side
00001222  E34C                     269          LSL.W   #1,D4
00001224  6500 0038                270          BCS     DS111
00001228  6000 002A                271          BRA     DS110
0000122C                           272  
0000122C                           273  *DS Tier 3 ----------------------------------------------------------------------------------------
0000122C                           274  
0000122C                           275  DS010                       *DS010: Tier 3 binary search for 010 side
0000122C  E34C                     276          LSL.W   #1,D4
0000122E  6500 0138                277          BCS     DS0101
00001232  6000 0034                278          BRA     DS0100
00001236                           279  
00001236                           280  DS011                       *DS011: Tier 3 binary search for 011 side
00001236  E34C                     281          LSL.W   #1,D4
00001238  6500 01F4                282          BCS     DS0111
0000123C  6000 0136                283          BRA     DS0110
00001240                           284  
00001240                           285  DS100                       *DS100: Tier 3 binary search for 100 side
00001240  E34C                     286          LSL.W   #1,D4
00001242  6500 0202                287          BCS     DS1001
00001246  6000 01F2                288          BRA     DS1000
0000124A                           289  
0000124A                           290  DS101                       *DS101: Tier 3 binary search for 101 side
0000124A  E34C                     291          LSL.W   #1,D4
0000124C  6500 020A                292          BCS     DS1011
00001250  6000 0200                293          BRA     DS1010
00001254                           294  
00001254                           295  DS110                       *DS110: Tier 3 binary search for 110 side
00001254  E34C                     296          LSL.W   #1,D4
00001256  6500 020C                297          BCS     DS1101
0000125A  6000 0202                298          BRA     DS1100
0000125E                           299  
0000125E                           300  DS111                       *DS111: Tier 3 binary search for 111 side
0000125E  E34C                     301          LSL.W   #1,D4
00001260  6500 0424                302          BCS     DS1111
00001264  6000 020A                303          BRA     DS1110
00001268                           304  
00001268                           305  *DS Tier 4 ----------------------------------------------------------------------------------------
00001268                           306  
00001268                           307  DS0100                      *DS0100: Processing for 0100 prefix
00001268  0C44 E710                308          CMPI.W  #%1110011100010000,D4
0000126C  6700 0026                309          BEQ     DNOP
00001270  0C44 E750                310          CMPI.W  #%1110011101010000,D4
00001274  6700 00E6                311          BEQ     DRTS
00001278                           312          
00001278  E95C                     313          ROL.W   #4,D4
0000127A  1404                     314          MOVE.B  D4,D2
0000127C  0202 000F                315          ANDI.B  #%1111,D2
00001280                           316          
00001280  B43C 000E                317          CMP.B   #%1110,D2
00001284  6700 0020                318          BEQ     DJSR
00001288                           319          
00001288  B43C 0006                320          CMP.B   #%0110,D2
0000128C  6700 0012                321          BEQ     DNOT
00001290                           322          
00001290  6000 0406                323          BRA     DSEND
00001294                           324  
00001294  43F9 0000183F            325  DNOP    LEA     NOPM,A1
0000129A  4E4F                     326          TRAP    #15
0000129C  6000 03FA                327          BRA     DSEND
000012A0                           328          
000012A0  4E71                     329  DNOT    NOP
000012A2  6000 03F4                330          BRA     DSEND
000012A6                           331          
000012A6  E55C                     332  DJSR    ROL.W   #2,D4
000012A8  1404                     333          MOVE.B  D4,D2
000012AA  0202 0007                334          ANDI.B  #%111,D2
000012AE  0C02 0002                335          CMPI.B  #%10,D2
000012B2  6600 03D8                336          BNE     DSERR
000012B6                           337          
000012B6  43F9 00001880            338          LEA     JSRM,A1
000012BC  4E4F                     339          TRAP    #15
000012BE                           340          
000012BE  43F9 0000180A            341          LEA     SM7,A1
000012C4  4E4F                     342          TRAP    #15
000012C6                           343  
000012C6  E75C                     344          ROL.W   #3,D4       * [D2] address mode
000012C8  1404                     345          MOVE.B  D4,D2
000012CA  0202 0007                346          ANDI.B  #%111,D2
000012CE                           347          
000012CE  E75C                     348          ROL.W   #3,D4       * [D1] address register
000012D0  1204                     349          MOVE.B  D4,D1
000012D2  0201 0007                350          ANDI.B  #%111,D1
000012D6                           351          
000012D6  0C02 0002                352          CMPI.B  #%010,D2
000012DA  6700 001E                353          BEQ     DJSR_REG
000012DE                           354          
000012DE  0C02 0007                355          CMPI.B  #%111,D2
000012E2  6600 03A8                356          BNE     DSERR
000012E6                           357          
000012E6  0C01 0000                358          CMPI.B  #%000,D1
000012EA  6700 0034                359          BEQ     DJSR_CUSW
000012EE                           360          
000012EE  0C01 0001                361          CMPI.B  #%001,D1
000012F2  6700 004A                362          BEQ     DJSR_CUSL
000012F6                           363          
000012F6  6000 03A0                364          BRA     DSEND
000012FA                           365          
000012FA                           366          
000012FA                           367          
000012FA                           368  DJSR_REG        
000012FA  43F9 00001831            369          LEA     OPENPTR,A1
00001300  4E4F                     370          TRAP    #15
00001302                           371          
00001302  43F9 00001829            372          LEA     VALA,A1
00001308  4E4F                     373          TRAP    #15
0000130A                           374          
0000130A  103C 0003                375          MOVE.B  #3,D0
0000130E  4E4F                     376          TRAP    #15
00001310  103C 000E                377          MOVE.B  #14,D0
00001314                           378          
00001314  43F9 00001836            379          LEA     CLOSEPTR,A1
0000131A  4E4F                     380          TRAP    #15
0000131C                           381          
0000131C  6000 037A                382          BRA     DSEND
00001320                           383  
00001320                           384          
00001320                           385  DJSR_CUSW
00001320  43F9 0000183D            386          LEA     DOLLAR,A1
00001326  4E4F                     387          TRAP    #15
00001328  341A                     388          MOVE.W  (A2)+,D2
0000132A  48E7 0400                389          MOVEM.L D5,-(SP)
0000132E  1A3C 0030                390          MOVE.B  #48,D5
00001332  4EB8 1144                391          JSR     HEXOUT
00001336  4CDF 0020                392          MOVEM.L (SP)+,D5
0000133A  6000 035C                393          BRA     DSEND
0000133E                           394  
0000133E                           395  DJSR_CUSL
0000133E  43F9 0000183D            396          LEA     DOLLAR,A1
00001344  4E4F                     397          TRAP    #15
00001346  241A                     398          MOVE.L  (A2)+,D2
00001348  48E7 0400                399          MOVEM.L D5,-(SP)
0000134C  1A3C 0030                400          MOVE.B  #48,D5
00001350  4EB8 1144                401          JSR     HEXOUT
00001354  4CDF 0020                402          MOVEM.L (SP)+,D5
00001358  6000 033E                403          BRA     DSEND
0000135C                           404          
0000135C  43F9 00001884            405  DRTS    LEA     RTSM,A1
00001362  4E4F                     406          TRAP    #15
00001364  6000 0332                407          BRA     DSEND
00001368                           408  
00001368                           409  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001368                           410  
00001368  4E71                     411  DS0101  NOP
0000136A  6000 032C                412          BRA     DSEND
0000136E                           413          
0000136E  4E71                     414  DADDQ   NOP
00001370  6000 0326                415          BRA     DSEND
00001374                           416          
00001374                           417  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001374                           418  
00001374                           419  DS0110  
00001374  E95C                     420          ROL.W   #4,D4   *Get next 4 bits
00001376  1404                     421          MOVE.B  D4,D2   *Copy to D2
00001378  0202 000F                422          ANDI.B  #%1111,D2   *Set all bits to 0 except next 4
0000137C                           423          
0000137C  B43C 0000                424          CMP.B   #%0000,D2   *BRA
00001380  6700 001E                425          BEQ     DBRA
00001384                           426          
00001384  B43C 000E                427          CMP.B   #%1110,D2   *BGT   
00001388  6700 0092                428          BEQ     DBGT
0000138C                           429          
0000138C  B43C 000F                430          CMP.B   #%1111,D2   *BLE   
00001390  6700 0090                431          BEQ     DBLE
00001394                           432          
00001394  B43C 0007                433          CMP.B   #%0111,D2   *BEQ   
00001398  6700 008E                434          BEQ     DBEQ
0000139C                           435          
0000139C  6000 02FA                436          BRA     DSEND
000013A0                           437          
000013A0  43F9 00001888            438  DBRA    LEA     BRAM,A1
000013A6  4E4F                     439          TRAP    #15
000013A8                           440          
000013A8  43F9 0000180A            441          LEA     SM7,A1
000013AE  4E4F                     442          TRAP    #15
000013B0                           443  
000013B0  E15C                     444          ROL.W   #8,D4       * [D1] 8 bit Displacement 
000013B2  1204                     445          MOVE.B  D4,D1
000013B4  0281 00001100            446          ANDI.L  #$1100,D1
000013BA                           447          
000013BA  0C01 0000                448          CMPI.B  #%00000000,D1
000013BE  6700 001C                449          BEQ     DBRA_16BIT  * Byte
000013C2                           450          
000013C2  0C01 00FF                451          CMPI.B  #%11111111,D1
000013C6  6700 0036                452          BEQ     DBRA_32BIT  * Word
000013CA                           453          
000013CA                           454          * 8 Bit Displacement
000013CA  43F9 0000183D            455          LEA     DOLLAR,A1
000013D0  4E4F                     456          TRAP    #15
000013D2                           457          
000013D2  E059                     458          ROR.W #8,D1
000013D4  E059                     459          ROR.W #8,D1
000013D6  E059                     460          ROR.W #8,D1
000013D8                           461  
000013D8                           462          *Displacement is put in D1      
000013D8                           463          
000013D8                           464          
000013D8  6000 02BE                465          BRA     DSEND
000013DC                           466          
000013DC                           467  DBRA_16BIT
000013DC  43F9 0000183D            468          LEA     DOLLAR,A1
000013E2  4E4F                     469          TRAP    #15
000013E4  341A                     470          MOVE.W  (A2)+,D2
000013E6  D44A                     471          ADD.W   A2,D2
000013E8  5842                     472          ADD.W   #4,D2
000013EA  48E7 0400                473          MOVEM.L D5,-(SP)
000013EE  1A3C 0030                474          MOVE.B  #48,D5
000013F2  4EB8 1144                475          JSR     HEXOUT
000013F6  4CDF 0020                476          MOVEM.L (SP)+,D5
000013FA  6000 029C                477          BRA     DSEND
000013FE                           478  
000013FE                           479  DBRA_32BIT
000013FE  43F9 0000183D            480          LEA     DOLLAR,A1
00001404  4E4F                     481          TRAP    #15
00001406  241A                     482          MOVE.L  (A2)+,D2
00001408  48E7 0400                483          MOVEM.L D5,-(SP)
0000140C  1A3C 0030                484          MOVE.B  #48,D5
00001410  4EB8 1144                485          JSR     HEXOUT
00001414  4CDF 0020                486          MOVEM.L (SP)+,D5
00001418  6000 027E                487          BRA     DSEND
0000141C                           488          
0000141C                           489          
0000141C                           490          
0000141C  4E71                     491  DBGT    NOP
0000141E  6000 0278                492          BRA     DSEND
00001422                           493  
00001422  4E71                     494  DBLE    NOP
00001424  6000 0272                495          BRA     DSEND
00001428                           496  
00001428  4E71                     497  DBEQ    NOP
0000142A  6000 026C                498          BRA     DSEND
0000142E                           499  
0000142E                           500  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000142E                           501  
0000142E  4E71                     502  DS0111  NOP
00001430  6000 0266                503          BRA     DSEND
00001434                           504          
00001434  4E71                     505  DMOVEQ  NOP
00001436  6000 0260                506          BRA     DSEND
0000143A                           507          
0000143A                           508  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000143A                           509  
0000143A  4E71                     510  DS1000  NOP
0000143C  6000 025A                511          BRA     DSEND
00001440                           512          
00001440  4E71                     513  DOR     NOP
00001442  6000 0254                514          BRA     DSEND
00001446                           515          
00001446                           516  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001446                           517  
00001446  4E71                     518  DS1001  NOP
00001448  6000 024E                519          BRA     DSEND
0000144C                           520          
0000144C  4E71                     521  DSUB    NOP
0000144E  6000 0248                522          BRA     DSEND
00001452                           523          
00001452                           524  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001452                           525  
00001452  4E71                     526  DS1010  NOP
00001454  6000 0242                527          BRA     DSEND
00001458                           528          
00001458                           529  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001458                           530  
00001458  4E71                     531  DS1011  NOP
0000145A  6000 023C                532          BRA     DSEND
0000145E                           533          
0000145E                           534  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000145E                           535  
0000145E  4E71                     536  DS1100  NOP
00001460  6000 0236                537          BRA     DSEND
00001464                           538          
00001464                           539  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001464                           540  
00001464  4E71                     541  DS1101  NOP
00001466  6000 0230                542          BRA     DSEND
0000146A                           543          
0000146A  4E71                     544  DADDA   NOP
0000146C  6000 022A                545          BRA     DSEND
00001470                           546          
00001470                           547  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001470                           548  
00001470                           549  DS1110
00001470  E75C                     550          ROL.W   #3,D4           * [D2] Reading count
00001472  1404                     551          MOVE.B  D4,D2
00001474  0202 0007                552          ANDI.B  #%111,D2
00001478                           553          
00001478  E35C                     554          ROL.W   #1,D4           * [D3] Reading direction
0000147A  1604                     555          MOVE.B  D4,D3
0000147C  0203 0001                556          ANDI.B  #%1,D3
00001480                           557          
00001480  E55C                     558          ROL.W   #2,D4           * [D5] Reading size
00001482  1A04                     559          MOVE.B  D4,D5
00001484  0205 0003                560          ANDI.B  #%11,D5
00001488                           561          
00001488  BA3C 0003                562          CMP.B   #%11,D5   * Start processing code as memory if size is 11
0000148C  6700 00F0                563          BEQ     DS1110MEM
00001490                           564          
00001490  E35C                     565          ROL.W   #1,D4           * [D6] Reading count mode
00001492  1C04                     566          MOVE.B  D4,D6
00001494  0206 0001                567          ANDI.B  #%1,D6
00001498                           568          
00001498  E55C                     569          ROL.W   #2,D4           * [D7] reading type of shift
0000149A  1E04                     570          MOVE.B  D4,D7
0000149C  0207 0003                571          ANDI.B  #%11,D7
000014A0                           572          
000014A0  E75C                     573          ROL.W   #3,D4           * [D1] reading register
000014A2  1204                     574          MOVE.B  D4,D1
000014A4  0201 0007                575          ANDI.B  #%111,D1
000014A8                           576          
000014A8  BE3C 0001                577          CMP.B   #%01,D7   *Determine shift type
000014AC  6700 008E                578          BEQ     DLS
000014B0  BE3C 0000                579          CMP.B   #%00,D7
000014B4  6700 0092                580          BEQ     DAS
000014B8  BE3C 0003                581          CMP.B   #%11,D7
000014BC  6700 0096                582          BEQ     DRO
000014C0                           583          
000014C0  6000 01D6                584          BRA     DSEND               *Fallback in case of invalid code
000014C4                           585          
000014C4  48E7 FFFF                586  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
000014C8  4EB9 00001560            587          JSR     DS1110SIDE
000014CE  4CDF FFFF                588          MOVEM.L (SP)+,A0-A7/D0-D7
000014D2                           589          
000014D2  48E7 FFFF                590          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
000014D6  4EB8 118C                591          JSR     SIZE
000014DA  4CDF FFFF                592          MOVEM.L (SP)+,A0-A7/D0-D7
000014DE                           593          
000014DE  103C 000E                594          MOVE.B  #14,D0
000014E2  43F9 000017FD            595          LEA     SM5,A1
000014E8  4E4F                     596          TRAP    #15
000014EA                           597          
000014EA  BA3C 0003                598          CMP.B   #%11,D5
000014EE  6700 00B4                599          BEQ     DS1110MEMA
000014F2                           600          
000014F2  BC3C 0001                601          CMP.B   #%1,D6
000014F6  6700 003A                602          BEQ     DS1110_REG_D
000014FA  6000 002C                603          BRA     DS1110_REG_I
000014FE                           604          
000014FE  1C01                     605  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001500                           606          
00001500  103C 0003                607          MOVE.B  #3,D0
00001504  1202                     608          MOVE.B  D2,D1
00001506  4E4F                     609          TRAP    #15
00001508                           610          
00001508  103C 000E                611          MOVE.B  #14,D0
0000150C  43F9 0000183B            612          LEA     COMMA,A1
00001512  4E4F                     613          TRAP    #15
00001514                           614          
00001514  43F9 0000182B            615          LEA     VALD,A1
0000151A  4E4F                     616          TRAP    #15
0000151C                           617          
0000151C  103C 0003                618          MOVE.B  #3,D0
00001520  1206                     619          MOVE.B  D6,D1
00001522  4E4F                     620          TRAP    #15
00001524                           621          
00001524  6000 0172                622          BRA     DSEND
00001528                           623          
00001528                           624  DS1110_REG_I
00001528  43F9 0000182D            625          LEA     VALN,A1
0000152E  4E4F                     626          TRAP    #15
00001530  60CC                     627          BRA     DS1110B
00001532                           628  
00001532                           629  DS1110_REG_D
00001532  43F9 0000182B            630          LEA     VALD,A1
00001538  4E4F                     631          TRAP    #15
0000153A  60C2                     632          BRA     DS1110B       
0000153C                           633          
0000153C  43F9 0000185F            634  DLS     LEA     LSM,A1
00001542  4E4F                     635          TRAP    #15
00001544  6000 FF7E                636          BRA     DS1110A
00001548                           637          
00001548  43F9 00001866            638  DAS     LEA     ASM,A1
0000154E  4E4F                     639          TRAP    #15
00001550  6000 FF72                640          BRA     DS1110A
00001554                           641          
00001554  43F9 0000186D            642  DRO     LEA     ROM,A1
0000155A  4E4F                     643          TRAP    #15
0000155C  6000 FF66                644          BRA     DS1110A
00001560                           645          
00001560                           646  DS1110SIDE
00001560  103C 0006                647          MOVE.B  #6,D0
00001564  B63C 0001                648          CMP.B   #1,D3
00001568  6700 000C                649          BEQ     DS1110LSIDE
0000156C  123C 0052                650          MOVE.B  #82,D1
00001570  4E4F                     651          TRAP    #15
00001572  6000 0008                652          BRA     DS1110SIDEEND
00001576                           653  
00001576                           654  DS1110LSIDE
00001576  123C 004C                655          MOVE.B  #76,D1
0000157A  4E4F                     656          TRAP    #15
0000157C                           657          
0000157C                           658  DS1110SIDEEND
0000157C  4E75                     659          RTS 
0000157E                           660  
0000157E                           661  DS1110MEM
0000157E                           662                                  * Shift type is instead stored in D2
0000157E                           663          
0000157E  E75C                     664          ROL.W   #3,D4           * [D6] Reading address mode
00001580  1C04                     665          MOVE.B  D4,D6
00001582  0206 0007                666          ANDI.B  #%111,D6
00001586                           667          
00001586  E75C                     668          ROL.W   #3,D4           * [D1] Reading address register
00001588  1204                     669          MOVE.B  D4,D1
0000158A  0201 0007                670          ANDI.B  #%111,D1
0000158E                           671          
0000158E  B43C 0001                672          CMP.B   #%01,D2
00001592  67A8                     673          BEQ     DLS
00001594  B43C 0000                674          CMP.B   #%00,D2
00001598  67AE                     675          BEQ     DAS
0000159A  B43C 0003                676          CMP.B   #%11,D2
0000159E  67B4                     677          BEQ     DRO
000015A0  6000 00F6                678          BRA     DSEND
000015A4                           679          
000015A4                           680          
000015A4                           681  DS1110MEMA
000015A4                           682          
000015A4  BC3C 0002                683          CMP.B   #%010,D6
000015A8  6700 002E                684          BEQ     DS1110MEM_REG
000015AC  BC3C 0003                685          CMP.B   #%011,D6
000015B0  6700 004C                686          BEQ     DS1110MEM_INC
000015B4  BC3C 0004                687          CMP.B   #%100,D6
000015B8  6700 006A                688          BEQ     DS1110MEM_DEC
000015BC                           689          
000015BC  BC3C 0007                690          CMP.B   #%111,D6
000015C0  6600 00CA                691          BNE     DSERR
000015C4                           692          
000015C4  B23C 0000                693          CMP.B   #%000,D1
000015C8  6700 0080                694          BEQ     DS1110MEM_CUSW
000015CC  B23C 0001                695          CMP.B   #%001,D1
000015D0  6700 0096                696          BEQ     DS1110MEM_CUSL
000015D4                           697          
000015D4  6000 00C2                698          BRA     DSEND
000015D8                           699  
000015D8                           700  DS1110MEM_REG
000015D8  43F9 00001831            701          LEA     OPENPTR,A1
000015DE  4E4F                     702          TRAP    #15
000015E0                           703          
000015E0  43F9 00001829            704          LEA     VALA,A1
000015E6  4E4F                     705          TRAP    #15
000015E8                           706          
000015E8  103C 0003                707          MOVE.B  #3,D0
000015EC  4E4F                     708          TRAP    #15
000015EE  103C 000E                709          MOVE.B  #14,D0
000015F2                           710          
000015F2  43F9 00001836            711          LEA     CLOSEPTR,A1
000015F8  4E4F                     712          TRAP    #15
000015FA                           713          
000015FA  6000 009C                714          BRA     DSEND
000015FE                           715  
000015FE                           716  DS1110MEM_INC
000015FE  43F9 00001831            717          LEA     OPENPTR,A1
00001604  4E4F                     718          TRAP    #15
00001606                           719          
00001606  43F9 00001829            720          LEA     VALA,A1
0000160C  4E4F                     721          TRAP    #15
0000160E                           722          
0000160E  103C 0003                723          MOVE.B  #3,D0
00001612  4E4F                     724          TRAP    #15
00001614  103C 000E                725          MOVE.B  #14,D0
00001618                           726          
00001618  43F9 00001838            727          LEA     CLOSEIPTR,A1
0000161E  4E4F                     728          TRAP    #15
00001620                           729          
00001620  6000 0076                730          BRA     DSEND
00001624                           731  
00001624                           732  DS1110MEM_DEC
00001624  43F9 00001833            733          LEA     OPENDPTR,A1
0000162A  4E4F                     734          TRAP    #15
0000162C                           735          
0000162C  43F9 00001829            736          LEA     VALA,A1
00001632  4E4F                     737          TRAP    #15
00001634                           738          
00001634  103C 0003                739          MOVE.B  #3,D0
00001638  4E4F                     740          TRAP    #15
0000163A  103C 000E                741          MOVE.B  #14,D0
0000163E                           742          
0000163E  43F9 00001836            743          LEA     CLOSEPTR,A1
00001644  4E4F                     744          TRAP    #15
00001646                           745          
00001646  6000 0050                746          BRA     DSEND
0000164A                           747          
0000164A                           748  DS1110MEM_CUSW
0000164A  43F9 0000183D            749          LEA     DOLLAR,A1
00001650  4E4F                     750          TRAP    #15
00001652  341A                     751          MOVE.W  (A2)+,D2
00001654  48E7 0400                752          MOVEM.L D5,-(SP)
00001658  1A3C 0030                753          MOVE.B  #48,D5
0000165C  4EB8 1144                754          JSR     HEXOUT
00001660  4CDF 0020                755          MOVEM.L (SP)+,D5
00001664  6000 0032                756          BRA     DSEND
00001668                           757          
00001668                           758  DS1110MEM_CUSL
00001668  43F9 0000183D            759          LEA     DOLLAR,A1
0000166E  4E4F                     760          TRAP    #15
00001670  241A                     761          MOVE.L  (A2)+,D2
00001672  48E7 0400                762          MOVEM.L D5,-(SP)
00001676  1A3C 0030                763          MOVE.B  #48,D5
0000167A  4EB8 1144                764          JSR     HEXOUT
0000167E  4CDF 0020                765          MOVEM.L (SP)+,D5
00001682  6000 0014                766          BRA     DSEND
00001686                           767          
00001686                           768  
00001686                           769  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001686                           770  
00001686  4E71                     771  DS1111  NOP
00001688  6000 000E                772          BRA     DSEND
0000168C                           773  
0000168C                           774  *DS Final
0000168C                           775  *--------------------------------------------------------------------------------------------------
0000168C                           776  
0000168C  103C 000E                777  DSERR   MOVE.B  #14,D0
00001690  43F9 00001817            778          LEA     ERRM,A1
00001696  4E4F                     779          TRAP    #15
00001698                           780  
00001698  4E75                     781  DSEND   RTS
0000169A                           782  
0000169A  103C 0009                783  END     MOVE.B  #9,D0
0000169E  4E4F                     784          TRAP    #15
000016A0                           785  
000016A0                           786  *Initialized Variables
000016A0                           787  *--------------------------------------------------------------------------------------------------
000016A0                           788  
000016A0  =0000000D                789  CR      EQU     $0D
000016A0  =0000000A                790  LF      EQU     $0A
000016A0  =00000009                791  HT      EQU     $09
000016A0                           792  
000016A0= 54 68 69 73 20 69 ...    793  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00001728= 45 6E 74 65 72 20 ...    794  ASTART  DC.B    'Enter start address: $',0
0000173F= 45 6E 74 65 72 20 ...    795  AEND    DC.B    'Enter end address:   $',0
00001756                           796  
00001756= 45 52 52 4F 52 3A ...    797  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
00001790= 45 52 52 4F 52 3A ...    798  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
000017B6= 45 52 52 4F 52 3A ...    799  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
000017EA                           800  
000017EA= 0D 0A 00                 801  LB      DC.B    CR,LF,0
000017ED                           802  
000017ED= 09 00                    803  HTM     DC.B    HT,0
000017EF                           804  
000017EF= 20 00                    805  SM1     DC.B    ' ',0
000017F1= 20 20 00                 806  SM2     DC.B    '  ',0
000017F4= 20 20 20 00              807  SM3     DC.B    '   ',0
000017F8= 20 20 20 20 00           808  SM4     DC.B    '    ',0
000017FD= 20 20 20 20 20 00        809  SM5     DC.B    '     ',0
00001803= 20 20 20 20 20 20 00     810  SM6     DC.B    '      ',0
0000180A= 20 20 20 20 20 20 ...    811  SM7     DC.B    '       ',0
00001812                           812  
00001812= 54 45 53 54 00           813  TESTM   DC.B    'TEST',0
00001817                           814  
00001817= 20 20 2A 45 52 52 ...    815  ERRM    DC.B    '  *ERROR',0
00001820                           816  
00001820= 2E 42 00                 817  MODEB   DC.B    '.B',0
00001823= 2E 57 00                 818  MODEW   DC.B    '.W',0
00001826= 2E 4C 00                 819  MODEL   DC.B    '.L',0
00001829                           820  
00001829= 41 00                    821  VALA    DC.B    'A',0
0000182B= 44 00                    822  VALD    DC.B    'D',0
0000182D= 23 00                    823  VALN    DC.B    '#',0
0000182F= 30 00                    824  VAL0    DC.B    '0',0
00001831                           825  
00001831= 28 00                    826  OPENPTR     DC.B    '(',0
00001833= 2D 28 00                 827  OPENDPTR    DC.B    '-(',0
00001836                           828  
00001836= 29 00                    829  CLOSEPTR    DC.B    ')',0
00001838= 29 2B 00                 830  CLOSEIPTR   DC.B    ')+',0
0000183B                           831  
0000183B= 2C 00                    832  COMMA   DC.B    ',',0
0000183D= 24 00                    833  DOLLAR  DC.B    '$',0
0000183F                           834  
0000183F= 4E 4F 50 00              835  NOPM    DC.B    'NOP',0
00001843                           836  
00001843= 4D 4F 56 45 00           837  MOVEM   DC.B    'MOVE',0
00001848                           838  
00001848= 41 44 44 00              839  ADDM    DC.B    'ADD',0
0000184C                           840  
0000184C= 53 55 42 00              841  SUBM    DC.B    'SUB',0
00001850                           842  
00001850= 4C 45 41 00              843  LEAM    DC.B    'LEA',0
00001854                           844  
00001854= 41 4E 44 00              845  ANDM    DC.B    'AND',0
00001858= 4F 52 00                 846  ORM     DC.B    'OR',0
0000185B= 4E 4F 54 00              847  NOTM    DC.B    'NOT',0
0000185F                           848  
0000185F= 4C 53 00                 849  LSM    DC.B    'LS',0
00001862= 4C 53 52 00              850  LSRM    DC.B    'LSR',0
00001866= 41 53 00                 851  ASM    DC.B    'AS',0
00001869= 41 53 52 00              852  ASRM    DC.B    'ASR',0
0000186D                           853  
0000186D= 52 4F 00                 854  ROM    DC.B    'RO',0
00001870= 52 4F 52 00              855  RORM    DC.B    'ROR',0
00001874                           856  
00001874= 42 47 54 00              857  BGTM    DC.B    'BGT',0
00001878= 42 4C 45 00              858  BLEM    DC.B    'BLE',0
0000187C= 42 45 51 00              859  BEQM    DC.B    'BEQ',0
00001880                           860  
00001880= 4A 53 52 00              861  JSRM    DC.B    'JSR',0
00001884= 52 54 53 00              862  RTSM    DC.B    'RTS',0
00001888                           863  
00001888= 42 52 41 00              864  BRAM    DC.B    'BRA',0
0000188C                           865  
0000188C                           866  
0000188C                           867      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDM                1848
AEND                173F
ANDM                1854
ASM                 1866
ASRM                1869
ASTART              1728
BEQM                187C
BGTM                1874
BLEM                1878
BRAM                1888
CLOSEIPTR           1838
CLOSEPTR            1836
COMMA               183B
CR                  D
DADDA               146A
DADDQ               136E
DAND                1208
DAS                 1548
DBEQ                1428
DBGT                141C
DBLE                1422
DBRA                13A0
DBRA_16BIT          13DC
DBRA_32BIT          13FE
DISASM              11D6
DJSR                12A6
DJSR_CUSL           133E
DJSR_CUSW           1320
DJSR_REG            12FA
DLS                 153C
DMOVE2              120A
DMOVEA              120C
DMOVEQ              1434
DNOP                1294
DNOT                12A0
DOLLAR              183D
DOR                 1440
DRO                 1554
DRTS                135C
DS0                 11E0
DS00                11F4
DS01                120E
DS010               122C
DS0100              1268
DS0101              1368
DS011               1236
DS0110              1374
DS0111              142E
DS1                 11EA
DS10                1218
DS100               1240
DS1000              143A
DS1001              1446
DS101               124A
DS1010              1452
DS1011              1458
DS11                1222
DS110               1254
DS1100              145E
DS1101              1464
DS111               125E
DS1110              1470
DS1110A             14C4
DS1110B             14FE
DS1110LSIDE         1576
DS1110MEM           157E
DS1110MEMA          15A4
DS1110MEM_CUSL      1668
DS1110MEM_CUSW      164A
DS1110MEM_DEC       1624
DS1110MEM_INC       15FE
DS1110MEM_REG       15D8
DS1110SIDE          1560
DS1110SIDEEND       157C
DS1110_REG_D        1532
DS1110_REG_I        1528
DS1111              1686
DSEND               1698
DSERR               168C
DSUB                144C
END                 169A
ERRM                1817
HDONE               118A
HEXOUT              1144
HHEX                115E
HNUM                1166
HSKIP2              1174
HSKIP3              1188
HSTEP               114C
HSTEP2              116A
HT                  9
HTM                 17ED
INTRO               16A0
JSRM                1880
LB                  17EA
LEAM                1850
LF                  A
LSM                 185F
LSRM                1862
MODEB               1820
MODEL               1826
MODEW               1823
MOVEM               1843
NOPM                183F
NOTM                185B
OPENDPTR            1833
OPENPTR             1831
ORM                 1858
PARSE               1050
PCAPS               107C
PDONE               10A6
PHEX                106C
PNUM                1084
PSTEP               1058
PSTEP2              1088
RCONT               1130
READLN              10E2
ROM                 186D
RORM                1870
RPAUSE              1138
RSTEP               10E8
RTSM                1884
SDONE               11D2
SIZE                118C
SIZEB               11B4
SIZEL               11C8
SIZEW               11BE
SM1                 17EF
SM2                 17F1
SM3                 17F4
SM4                 17F8
SM5                 17FD
SM6                 1803
SM7                 180A
SRET                11D4
START               1000
STARTER             0
SUBM                184C
TESTM               1812
VAL0                182F
VALA                1829
VALD                182B
VALN                182D
VERR1               10B2
VERR1M              1756
VERR2               10C2
VERR2M              1790
VERR3               10D2
VERR3M              17B6
VINPUT              10A8
