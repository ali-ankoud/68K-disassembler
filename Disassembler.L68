00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/26/2023 12:22:30 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassembler Snippet
00000000                             3  * Written by : ARM Cortex Companions
00000000                             4  * Date       : 5/15/2023
00000000                             5  * Description: Ben Schipunov contribution to the disassembler
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  STARTER
00001000                             9          ORG     $1000       *Start at $1000
00001000                            10          
00001000                            11  *-------------------------------------------------------------------------------------------------- 
00001000                            12         
00001000                            13  START                       *START: Start code
00001000                            14  
00001000  43F9 000015F8             15          LEA     INTRO,A1    *Intro text
00001006  103C 000E                 16          MOVE.B  #14,D0
0000100A  4E4F                      17          TRAP    #15
0000100C                            18          
0000100C  43F9 00001680             19          LEA     ASTART,A1   *Input prompt text #1
00001012  4E4F                      20          TRAP    #15
00001014                            21  
00001014  103C 0002                 22          MOVE.B  #2,D0       *String prompt #1
00001018  4E4F                      23          TRAP    #15
0000101A                            24          
0000101A  B27C 0008                 25          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
0000101E  6E00 00B2                 26          BGT     VERR3
00001022                            27          
00001022  4EB9 00001050             28          JSR     PARSE       *Parse string #1
00001028                            29          
00001028                            30  
00001028  2641                      31          MOVE.L  D1,A3
0000102A                            32          
0000102A  43F9 00001697             33          LEA     AEND,A1     *Input prompt text #2
00001030  103C 000E                 34          MOVE.B  #14,D0
00001034  4E4F                      35          TRAP    #15
00001036                            36          
00001036  103C 0002                 37          MOVE.B  #2,D0       *String prompt #2
0000103A  4E4F                      38          TRAP    #15
0000103C                            39          
0000103C  B27C 0008                 40          CMP.W   #8,D1       *Throw error if length is greater than 8 (length stored in D1)
00001040  6E00 0090                 41          BGT     VERR3
00001044                            42          
00001044  4EB9 00001050             43          JSR     PARSE       *Parse string #2
0000104A                            44          
0000104A  2841                      45          MOVE.L  D1,A4
0000104C                            46          
0000104C  6000 005A                 47          BRA     VINPUT      *Verify inputs
00001050                            48          
00001050                            49  *--------------------------------------------------------------------------------------------------
00001050                            50  
00001050                            51  PARSE                       *PARSE: Initialize variables involved in parsing
00001050  123C 0000                 52          MOVE.B  #0,D1       * [D1] parse output
00001054  143C 0008                 53          MOVE.B  #8,D2       * [D2] max letter counter (size of longword)
00001058                            54          
00001058                            55  PSTEP                       *PSTEP: Step in parsing for loop
00001058  1019                      56          MOVE.B  (A1)+,D0    *Read next byte from A1
0000105A  B03C 0000                 57          CMP.B   #0,D0       *Check if reached end of string input
0000105E  6700 0046                 58          BEQ     PDONE       *Break the for loop if reached end
00001062  E989                      59          LSL.L   #4,D1       *Logical shift left by 4 bits to insert next hex character
00001064  B03C 003A                 60          CMP.B   #58,D0      *Distinguish between letter and number
00001068  6D00 001A                 61          BLT     PNUM        *Handle number
0000106C                            62  
0000106C  0400 0037                 63  PHEX    SUBI.B   #55,D0     *ASCII value subtracted by 55 to match hex value
00001070  0C00 000F                 64          CMPI.B   #15,D0     *Check if ASCII is high for lowercase values
00001074  6E00 0006                 65          BGT     PCAPS       *Handle lowercase
00001078  6000 000E                 66          BRA     PSTEP2
0000107C                            67       
0000107C  0400 0020                 68  PCAPS   SUBI.B   #32,D0     *32 is difference between uppercase and lowercase ASCII
00001080  6000 0006                 69          BRA     PSTEP2
00001084                            70  
00001084  0400 0030                 71  PNUM    SUB.B   #48,D0      *ASCII value subtracted by 48 to match hex value
00001088                            72          
00001088  0C00 000F                 73  PSTEP2  CMPI.B   #15,D0     *If D0 is not in between 0 and 15 inclusively, throw an error
0000108C  6E00 0034                 74          BGT     VERR2
00001090  0C00 0000                 75          CMPI.B   #0,D0
00001094  6D00 002C                 76          BLT     VERR2
00001098  D280                      77          ADD.L   D0,D1       *Append hex char to parse output
0000109A  5302                      78          SUBQ.B  #1,D2       *Decrement the counter
0000109C  0C02 0000                 79          CMPI.B   #0,D2      *Compare if we reached max count
000010A0  6700 0004                 80          BEQ     PDONE       *Complete parsing
000010A4  60B2                      81          BRA     PSTEP       *Or else continue loop
000010A6                            82  
000010A6  4E75                      83  PDONE   RTS
000010A8                            84  
000010A8                            85  *--------------------------------------------------------------------------------------------------
000010A8                            86  
000010A8  B9CB                      87  VINPUT  CMP.L   A3,A4       *Verify input from parsing
000010AA  6D00 0006                 88          BLT     VERR1
000010AE  6000 0032                 89          BRA     READLN
000010B2                            90  
000010B2  43F9 000016AE             91  VERR1   LEA     VERR1M,A1   *Throw parsing error
000010B8  103C 000E                 92          MOVE.B  #14,D0
000010BC  4E4F                      93          TRAP    #15
000010BE  6000 0532                 94          BRA     END
000010C2                            95  
000010C2  43F9 000016E8             96  VERR2   LEA     VERR2M,A1   *Throw range error
000010C8  103C 000E                 97          MOVE.B  #14,D0
000010CC  4E4F                      98          TRAP    #15
000010CE  6000 0522                 99          BRA     END
000010D2                           100  
000010D2  43F9 0000170E            101  VERR3   LEA     VERR3M,A1   *Throw length error
000010D8  103C 000E                102          MOVE.B  #14,D0
000010DC  4E4F                     103          TRAP    #15
000010DE  6000 0512                104          BRA     END
000010E2                           105          
000010E2                           106  *--------------------------------------------------------------------------------------------------
000010E2                           107  
000010E2                           108  READLN                              *READLN: Start READLN for loop
000010E2  244B                     109          MOVE.L  A3,A2               *Set current address to start address
000010E4  1A3C 0000                110          MOVE.B  #0,D5               * [D5] Initialize counter to 32 (# lines to pause the screen)
000010E8                           111  
000010E8                           112  RSTEP                               *RSTEP: 
000010E8  381A                     113          MOVE.W  (A2)+,D4
000010EA  340A                     114          MOVE.W  A2,D2
000010EC  5542                     115          SUBQ.W  #2,D2
000010EE                           116          
000010EE  48E7 0400                117          MOVEM.L D5,-(SP)
000010F2  1A3C 0000                118          MOVE.B  #0,D5
000010F6  4EB9 00001144            119          JSR     HEXOUT              *Run printing operation for HEX address
000010FC  4CDF 0020                120          MOVEM.L (SP)+,D5
00001100                           121          
00001100  43F9 00001749            122          LEA     SM2,A1              *Horizontal tab indent after printing hex
00001106  103C 000E                123          MOVE.B  #14,D0
0000110A  4E4F                     124          TRAP    #15
0000110C                           125          
0000110C  48E7 7F0F                126          MOVEM.L A4-A7/D1-D7,-(SP)   *Store data to stack
00001110  4EB9 000011D6            127          JSR     DISASM              *Run disassembly for current machine code
00001116  4CDF F0FE                128          MOVEM.L (SP)+,A4-A7/D1-D7   *Recall data from stack
0000111A                           129          
0000111A  5205                     130          ADDQ.B  #1,D5       *Increment counter by 1
0000111C  BA3C 0020                131          CMP.B   #32,D5      *Check if we reached 32 lines
00001120  6700 0016                132          BEQ     RPAUSE      *Branch to pausing code
00001124                           133          
00001124  43F9 00001742            134          LEA     LB,A1       *Print line break
0000112A  103C 000E                135          MOVE.B  #14,D0      
0000112E  4E4F                     136          TRAP    #15
00001130                           137          
00001130                           138  RCONT                       *RCONT: Used to continue off of the RPAUSE label after a pause in the printing
00001130  B9CA                     139          CMP.L   A2,A4       *Check if we reached the end address
00001132  6D00 04BE                140          BLT     END         *End loop if so
00001136  60B0                     141          BRA     RSTEP       *Or else continue the loop
00001138                           142          
00001138                           143  RPAUSE                      *RPAUSE: Used to pause printing at the end of the screen and wait for ENTER to be pressed
00001138  1A3C 0000                144          MOVE.B  #0,D5       * Reset D5 counter
0000113C  103C 0005                145          MOVE.B  #5,D0       * [D0] Trap task #5: Character prompt
00001140  4E4F                     146          TRAP    #15         * Only used for waiting for user to hit ENTER
00001142  60EC                     147          BRA     RCONT       *Continue with READLN loop
00001144                           148  
00001144                           149  *--------------------------------------------------------------------------------------------------
00001144                           150  
00001144                           151  HEXOUT                      *HEXOUT: Prints a value in hexadecimal
00001144  103C 0006                152          MOVE.B  #6,D0       * [D0] Trap task #6: Print character (will apply to all trap operations involved)
00001148  163C 0008                153          MOVE.B  #8,D3       * [D3] Decrementing counter to keep track length of longword
0000114C                           154          
0000114C                           155  HSTEP                       *HSTEP: An iteration in the HEXOUT for loop
0000114C  E99A                     156          ROL.L   #4,D2       *Rotational shift left by 4 bits to bring the first hex character to the other side
0000114E  2202                     157          MOVE.L  D2,D1       * [D1] Used for the AND operation to filter to the right four bits
00001150  0281 0000000F            158          ANDI.L  #$F,D1      * Filter to the right four bits
00001156  B23C 000A                159          CMP.B   #10,D1      *Distinguish between number and letter
0000115A  6D00 000A                160          BLT     HNUM        *Branch to number handling, or continue to letter handling
0000115E                           161          
0000115E                           162  HHEX                        *HHEX: Handle letters from HEXOUT for loop
0000115E  0601 0037                163          ADDI.B  #55,D1      *Increment decimal value by 55 to match corresponding ASCII
00001162  6000 0006                164          BRA     HSTEP2      *Branch to step 2 of the iteration
00001166                           165  
00001166                           166  HNUM                        *HNUM: Handle numbers from HEXOUT for loop
00001166  0601 0030                167          ADDI.B  #48,D1      *Increment decimal value by 55 to match corresponding ASCII
0000116A                           168  
0000116A                           169  HSTEP2                      *HSTEP2: 2nd part of an iteration from the HEXOUT for loop
0000116A  5303                     170          SUBQ.B  #1,D3       *Decrement counter for longword tracking
0000116C                           171          
0000116C  B205                     172          CMP.B   D5,D1
0000116E  6700 0004                173          BEQ     HSKIP2
00001172                           174          
00001172  4E4F                     175          TRAP #15            *Will print the ASCII value stored in D1
00001174  0C03 0000                176  HSKIP2  CMPI.B  #0,D3       *Check if we reached 8 characters for a longword
00001178  6700 0010                177          BEQ     HDONE       *End loop if done
0000117C                           178          
0000117C  B23C 0030                179          CMP.B   #48,D1
00001180  6700 0006                180          BEQ     HSKIP3
00001184                           181          
00001184  1A3C 0000                182          MOVE.B  #0,D5
00001188                           183          
00001188  60C2                     184  HSKIP3  BRA     HSTEP       *Or else continue loop
0000118A                           185          
0000118A  4E75                     186  HDONE   RTS
0000118C                           187  
0000118C                           188  
0000118C                           189  *--------------------------------------------------------------------------------------------------
0000118C                           190  
0000118C  103C 000E                191  SIZE    MOVE.B  #14,D0
00001190  BA3C 0000                192          CMP.B   #%00,D5
00001194  6700 001E                193          BEQ     SIZEB
00001198  BA3C 0001                194          CMP.B   #%01,D5
0000119C  6700 0020                195          BEQ     SIZEW
000011A0  BA3C 0002                196          CMP.B   #%10,D5
000011A4  6700 0022                197          BEQ     SIZEL
000011A8  BA3C 0003                198          CMP.B   #%11,D5
000011AC  6700 0010                199          BEQ     SIZEW       *Assume WORD type on memory pointer things
000011B0  6000 0022                200          BRA     SRET
000011B4                           201          
000011B4  43F9 00001778            202  SIZEB   LEA     MODEB,A1
000011BA  6000 0016                203          BRA     SDONE
000011BE                           204  
000011BE  43F9 0000177B            205  SIZEW   LEA     MODEW,A1
000011C4  6000 000C                206          BRA     SDONE
000011C8                           207  
000011C8  43F9 0000177E            208  SIZEL   LEA     MODEL,A1
000011CE  6000 0002                209          BRA     SDONE
000011D2                           210  
000011D2  4E4F                     211  SDONE   TRAP    #15
000011D4                           212  
000011D4  4E75                     213  SRET    RTS
000011D6                           214  
000011D6                           215  *--------------------------------------------------------------------------------------------------
000011D6                           216  *Each machine code iterated through will be in D4. You can use all data registers as there will be a stack pointer involved
000011D6                           217  *You will kind of have to locate the label for the first 4 bits of the machine code. There is a special case where the prefix of 000 can be variable with the size parameter
000011D6                           218  
000011D6                           219  *During the processing of each machine code, we skip the first four bits as they have been passed through during the searching system. The exception to this is two bits for machine codes that start with 00.
000011D6                           220  
000011D6                           221  *CODING INSTRUCTIONS: You should not touch D0 as we want to keep it as the trap task. If for any reason you have to touch D0, make sure you set it back to #14 for printing the strings.
000011D6                           222  *Some codes take up an extra length, and while the iterator goes through each word by default, you can manually increment the pointer within the disassembly
000011D6                           223  
000011D6                           224  DISASM                      *DISASM: Disassemble a machine code
000011D6  E34C                     225          LSL.W   #1,D4       * Tier 0 binary search
000011D8  6500 0010                226          BCS     DS1
000011DC  6000 0002                227          BRA     DS0
000011E0                           228  
000011E0                           229  *DS Tier 1 ----------------------------------------------------------------------------------------
000011E0                           230  
000011E0                           231  DS0                         *DS0: Tier 1 binary search for 0 side
000011E0  E34C                     232          LSL.W   #1,D4       
000011E2  6500 002A                233          BCS     DS01
000011E6  6000 000C                234          BRA     DS00
000011EA                           235  
000011EA                           236  DS1                         *DS1: Tier 1 binary search for 1 side
000011EA  E34C                     237          LSL.W   #1,D4       
000011EC  6500 0034                238          BCS     DS11
000011F0  6000 0026                239          BRA     DS10
000011F4                           240  
000011F4                           241  DS00                        *DS00: Disassembly processing for 00 prefix
000011F4  E55C                     242          ROL.W   #2,D4       
000011F6  3A04                     243          MOVE.W  D4,D5
000011F8  0204 0003                244          ANDI.B  #%11,D4
000011FC  0C04 0000                245          CMPI.B  #%00,D4
00001200  6700 0006                246          BEQ     DAND
00001204  6000 03EA                247          BRA     DSEND
00001208                           248  
00001208  4E71                     249  DAND    NOP                 *DAND: Disassembly function serving DAND        
0000120A                           250          
0000120A  4E71                     251  DMOVE2  NOP                 *DMOVE2: Disassembly function serving MOVE and MOVEA
0000120C                           252          
0000120C                           253  
0000120C  4E71                     254  DMOVEA  NOP
0000120E                           255  
0000120E                           256  *DS Tier 2 ----------------------------------------------------------------------------------------
0000120E                           257  
0000120E                           258  DS01                        *DS01: Tier 2 binary search for 01 side
0000120E  E34C                     259          LSL.W   #1,D4
00001210  6500 0024                260          BCS     DS011
00001214  6000 0016                261          BRA     DS010
00001218                           262  
00001218                           263  DS10                        *DS10: Tier 2 binary search for 10 side
00001218  E34C                     264          LSL.W   #1,D4
0000121A  6500 002E                265          BCS     DS101
0000121E  6000 0020                266          BRA     DS100
00001222                           267  
00001222                           268  DS11                        *DS11: Tier 2 binary search for 11 side
00001222  E34C                     269          LSL.W   #1,D4
00001224  6500 0038                270          BCS     DS111
00001228  6000 002A                271          BRA     DS110
0000122C                           272  
0000122C                           273  *DS Tier 3 ----------------------------------------------------------------------------------------
0000122C                           274  
0000122C                           275  DS010                       *DS010: Tier 3 binary search for 010 side
0000122C  E34C                     276          LSL.W   #1,D4
0000122E  6500 0138                277          BCS     DS0101
00001232  6000 0034                278          BRA     DS0100
00001236                           279  
00001236                           280  DS011                       *DS011: Tier 3 binary search for 011 side
00001236  E34C                     281          LSL.W   #1,D4
00001238  6500 014C                282          BCS     DS0111
0000123C  6000 0136                283          BRA     DS0110
00001240                           284  
00001240                           285  DS100                       *DS100: Tier 3 binary search for 100 side
00001240  E34C                     286          LSL.W   #1,D4
00001242  6500 015A                287          BCS     DS1001
00001246  6000 014A                288          BRA     DS1000
0000124A                           289  
0000124A                           290  DS101                       *DS101: Tier 3 binary search for 101 side
0000124A  E34C                     291          LSL.W   #1,D4
0000124C  6500 0162                292          BCS     DS1011
00001250  6000 0158                293          BRA     DS1010
00001254                           294  
00001254                           295  DS110                       *DS110: Tier 3 binary search for 110 side
00001254  E34C                     296          LSL.W   #1,D4
00001256  6500 0164                297          BCS     DS1101
0000125A  6000 015A                298          BRA     DS1100
0000125E                           299  
0000125E                           300  DS111                       *DS111: Tier 3 binary search for 111 side
0000125E  E34C                     301          LSL.W   #1,D4
00001260  6500 037C                302          BCS     DS1111
00001264  6000 0162                303          BRA     DS1110
00001268                           304  
00001268                           305  *DS Tier 4 ----------------------------------------------------------------------------------------
00001268                           306  
00001268                           307  DS0100                      *DS0100: Processing for 0100 prefix
00001268  0C44 E710                308          CMPI.W  #%1110011100010000,D4
0000126C  6700 0026                309          BEQ     DNOP
00001270  0C44 E750                310          CMPI.W  #%1110011101010000,D4
00001274  6700 00E6                311          BEQ     DRTS
00001278                           312          
00001278  E95C                     313          ROL.W   #4,D4
0000127A  1404                     314          MOVE.B  D4,D2
0000127C  0202 000F                315          ANDI.B  #%1111,D2
00001280                           316          
00001280  B43C 000E                317          CMP.B   #%1110,D2
00001284  6700 0020                318          BEQ     DJSR
00001288                           319          
00001288  B43C 0006                320          CMP.B   #%0110,D2
0000128C  6700 0012                321          BEQ     DNOT
00001290                           322          
00001290  6000 035E                323          BRA     DSEND
00001294                           324  
00001294  43F9 00001795            325  DNOP    LEA     NOPM,A1
0000129A  4E4F                     326          TRAP    #15
0000129C  6000 0352                327          BRA     DSEND
000012A0                           328          
000012A0  4E71                     329  DNOT    NOP
000012A2  6000 034C                330          BRA     DSEND
000012A6                           331          
000012A6  E55C                     332  DJSR    ROL.W   #2,D4
000012A8  1404                     333          MOVE.B  D4,D2
000012AA  0202 0007                334          ANDI.B  #%111,D2
000012AE  0C02 0002                335          CMPI.B  #%10,D2
000012B2  6600 0330                336          BNE     DSERR
000012B6                           337          
000012B6  43F9 000017D6            338          LEA     JSRM,A1
000012BC  4E4F                     339          TRAP    #15
000012BE                           340          
000012BE  43F9 00001762            341          LEA     SM7,A1
000012C4  4E4F                     342          TRAP    #15
000012C6                           343  
000012C6  E75C                     344          ROL.W   #3,D4       * [D2] address mode
000012C8  1404                     345          MOVE.B  D4,D2
000012CA  0202 0007                346          ANDI.B  #%111,D2
000012CE                           347          
000012CE  E75C                     348          ROL.W   #3,D4       * [D1] address register
000012D0  1204                     349          MOVE.B  D4,D1
000012D2  0201 0007                350          ANDI.B  #%111,D1
000012D6                           351          
000012D6  0C02 0002                352          CMPI.B  #%010,D2
000012DA  6700 001E                353          BEQ     DJSR_REG
000012DE                           354          
000012DE  0C02 0007                355          CMPI.B  #%111,D2
000012E2  6600 0300                356          BNE     DSERR
000012E6                           357          
000012E6  0C01 0000                358          CMPI.B  #%000,D1
000012EA  6700 0034                359          BEQ     DJSR_CUSW
000012EE                           360          
000012EE  0C01 0001                361          CMPI.B  #%001,D1
000012F2  6700 004A                362          BEQ     DJSR_CUSL
000012F6                           363          
000012F6  6000 02F8                364          BRA     DSEND
000012FA                           365          
000012FA                           366          
000012FA                           367          
000012FA                           368  DJSR_REG        
000012FA  43F9 00001787            369          LEA     OPENPTR,A1
00001300  4E4F                     370          TRAP    #15
00001302                           371          
00001302  43F9 00001781            372          LEA     VALA,A1
00001308  4E4F                     373          TRAP    #15
0000130A                           374          
0000130A  103C 0003                375          MOVE.B  #3,D0
0000130E  4E4F                     376          TRAP    #15
00001310  103C 000E                377          MOVE.B  #14,D0
00001314                           378          
00001314  43F9 0000178C            379          LEA     CLOSEPTR,A1
0000131A  4E4F                     380          TRAP    #15
0000131C                           381          
0000131C  6000 02D2                382          BRA     DSEND
00001320                           383  
00001320                           384          
00001320                           385  DJSR_CUSW
00001320  43F9 00001793            386          LEA     DOLLAR,A1
00001326  4E4F                     387          TRAP    #15
00001328  341A                     388          MOVE.W  (A2)+,D2
0000132A  48E7 0400                389          MOVEM.L D5,-(SP)
0000132E  1A3C 0030                390          MOVE.B  #48,D5
00001332  4EB8 1144                391          JSR     HEXOUT
00001336  4CDF 0020                392          MOVEM.L (SP)+,D5
0000133A  6000 02B4                393          BRA     DSEND
0000133E                           394  
0000133E                           395  DJSR_CUSL
0000133E  43F9 00001793            396          LEA     DOLLAR,A1
00001344  4E4F                     397          TRAP    #15
00001346  241A                     398          MOVE.L  (A2)+,D2
00001348  48E7 0400                399          MOVEM.L D5,-(SP)
0000134C  1A3C 0030                400          MOVE.B  #48,D5
00001350  4EB8 1144                401          JSR     HEXOUT
00001354  4CDF 0020                402          MOVEM.L (SP)+,D5
00001358  6000 0296                403          BRA     DSEND
0000135C                           404          
0000135C  43F9 000017DA            405  DRTS    LEA     RTSM,A1
00001362  4E4F                     406          TRAP    #15
00001364  6000 028A                407          BRA     DSEND
00001368                           408  
00001368                           409  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001368                           410  
00001368  4E71                     411  DS0101  NOP
0000136A  6000 0284                412          BRA     DSEND
0000136E                           413          
0000136E  4E71                     414  DADDQ   NOP
00001370  6000 027E                415          BRA     DSEND
00001374                           416          
00001374                           417  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001374                           418  
00001374  4E71                     419  DS0110  NOP
00001376  6000 0278                420          BRA     DSEND
0000137A                           421          
0000137A  4E71                     422  DBCC    NOP
0000137C  6000 0272                423          BRA     DSEND
00001380                           424          
00001380  4E71                     425  DBRA    NOP
00001382  6000 026C                426          BRA     DSEND
00001386                           427          
00001386                           428  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001386                           429  
00001386  4E71                     430  DS0111  NOP
00001388  6000 0266                431          BRA     DSEND
0000138C                           432          
0000138C  4E71                     433  DMOVEQ  NOP
0000138E  6000 0260                434          BRA     DSEND
00001392                           435          
00001392                           436  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
00001392                           437  
00001392  4E71                     438  DS1000  NOP
00001394  6000 025A                439          BRA     DSEND
00001398                           440          
00001398  4E71                     441  DOR     NOP
0000139A  6000 0254                442          BRA     DSEND
0000139E                           443          
0000139E                           444  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
0000139E                           445  
0000139E  4E71                     446  DS1001  NOP
000013A0  6000 024E                447          BRA     DSEND
000013A4                           448          
000013A4  4E71                     449  DSUB    NOP
000013A6  6000 0248                450          BRA     DSEND
000013AA                           451          
000013AA                           452  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000013AA                           453  
000013AA  4E71                     454  DS1010  NOP
000013AC  6000 0242                455          BRA     DSEND
000013B0                           456          
000013B0                           457  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000013B0                           458  
000013B0  4E71                     459  DS1011  NOP
000013B2  6000 023C                460          BRA     DSEND
000013B6                           461          
000013B6                           462  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000013B6                           463  
000013B6  4E71                     464  DS1100  NOP
000013B8  6000 0236                465          BRA     DSEND
000013BC                           466          
000013BC                           467  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000013BC                           468  
000013BC  4E71                     469  DS1101  NOP
000013BE  6000 0230                470          BRA     DSEND
000013C2                           471          
000013C2  4E71                     472  DADDA   NOP
000013C4  6000 022A                473          BRA     DSEND
000013C8                           474          
000013C8                           475  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000013C8                           476  
000013C8                           477  DS1110
000013C8  E75C                     478          ROL.W   #3,D4           * [D2] Reading count
000013CA  1404                     479          MOVE.B  D4,D2
000013CC  0202 0007                480          ANDI.B  #%111,D2
000013D0                           481          
000013D0  E35C                     482          ROL.W   #1,D4           * [D3] Reading direction
000013D2  1604                     483          MOVE.B  D4,D3
000013D4  0203 0001                484          ANDI.B  #%1,D3
000013D8                           485          
000013D8  E55C                     486          ROL.W   #2,D4           * [D5] Reading size
000013DA  1A04                     487          MOVE.B  D4,D5
000013DC  0205 0003                488          ANDI.B  #%11,D5
000013E0                           489          
000013E0  BA3C 0003                490          CMP.B   #%11,D5   * Start processing code as memory if size is 11
000013E4  6700 00F0                491          BEQ     DS1110MEM
000013E8                           492          
000013E8  E35C                     493          ROL.W   #1,D4           * [D6] Reading count mode
000013EA  1C04                     494          MOVE.B  D4,D6
000013EC  0206 0001                495          ANDI.B  #%1,D6
000013F0                           496          
000013F0  E55C                     497          ROL.W   #2,D4           * [D7] reading type of shift
000013F2  1E04                     498          MOVE.B  D4,D7
000013F4  0207 0003                499          ANDI.B  #%11,D7
000013F8                           500          
000013F8  E75C                     501          ROL.W   #3,D4           * [D1] reading register
000013FA  1204                     502          MOVE.B  D4,D1
000013FC  0201 0007                503          ANDI.B  #%111,D1
00001400                           504          
00001400  BE3C 0001                505          CMP.B   #%01,D7   *Determine shift type
00001404  6700 008E                506          BEQ     DLS
00001408  BE3C 0000                507          CMP.B   #%00,D7
0000140C  6700 0092                508          BEQ     DAS
00001410  BE3C 0003                509          CMP.B   #%11,D7
00001414  6700 0096                510          BEQ     DRO
00001418                           511          
00001418  6000 01D6                512          BRA     DSEND               *Fallback in case of invalid code
0000141C                           513          
0000141C  48E7 FFFF                514  DS1110A MOVEM.L A0-A7/D0-D7,-(SP)   *Print shift direction
00001420  4EB9 000014B8            515          JSR     DS1110SIDE
00001426  4CDF FFFF                516          MOVEM.L (SP)+,A0-A7/D0-D7
0000142A                           517          
0000142A  48E7 FFFF                518          MOVEM.L A0-A7/D0-D7,-(SP)   *Print size
0000142E  4EB8 118C                519          JSR     SIZE
00001432  4CDF FFFF                520          MOVEM.L (SP)+,A0-A7/D0-D7
00001436                           521          
00001436  103C 000E                522          MOVE.B  #14,D0
0000143A  43F9 00001755            523          LEA     SM5,A1
00001440  4E4F                     524          TRAP    #15
00001442                           525          
00001442  BA3C 0003                526          CMP.B   #%11,D5
00001446  6700 00B4                527          BEQ     DS1110MEMA
0000144A                           528          
0000144A  BC3C 0001                529          CMP.B   #%1,D6
0000144E  6700 003A                530          BEQ     DS1110_REG_D
00001452  6000 002C                531          BRA     DS1110_REG_I
00001456                           532          
00001456  1C01                     533  DS1110B MOVE.B  D1,D6               *We ned D1 for trap task so since we're done using D6, we put D1 into D6 temporarily
00001458                           534          
00001458  103C 0003                535          MOVE.B  #3,D0
0000145C  1202                     536          MOVE.B  D2,D1
0000145E  4E4F                     537          TRAP    #15
00001460                           538          
00001460  103C 000E                539          MOVE.B  #14,D0
00001464  43F9 00001791            540          LEA     COMMA,A1
0000146A  4E4F                     541          TRAP    #15
0000146C                           542          
0000146C  43F9 00001783            543          LEA     VALD,A1
00001472  4E4F                     544          TRAP    #15
00001474                           545          
00001474  103C 0003                546          MOVE.B  #3,D0
00001478  1206                     547          MOVE.B  D6,D1
0000147A  4E4F                     548          TRAP    #15
0000147C                           549          
0000147C  6000 0172                550          BRA     DSEND
00001480                           551          
00001480                           552  DS1110_REG_I
00001480  43F9 00001785            553          LEA     VALN,A1
00001486  4E4F                     554          TRAP    #15
00001488  60CC                     555          BRA     DS1110B
0000148A                           556  
0000148A                           557  DS1110_REG_D
0000148A  43F9 00001783            558          LEA     VALD,A1
00001490  4E4F                     559          TRAP    #15
00001492  60C2                     560          BRA     DS1110B       
00001494                           561          
00001494  43F9 000017B5            562  DLS     LEA     LSM,A1
0000149A  4E4F                     563          TRAP    #15
0000149C  6000 FF7E                564          BRA     DS1110A
000014A0                           565          
000014A0  43F9 000017BC            566  DAS     LEA     ASM,A1
000014A6  4E4F                     567          TRAP    #15
000014A8  6000 FF72                568          BRA     DS1110A
000014AC                           569          
000014AC  43F9 000017C3            570  DRO     LEA     ROM,A1
000014B2  4E4F                     571          TRAP    #15
000014B4  6000 FF66                572          BRA     DS1110A
000014B8                           573          
000014B8                           574  DS1110SIDE
000014B8  103C 0006                575          MOVE.B  #6,D0
000014BC  B63C 0001                576          CMP.B   #1,D3
000014C0  6700 000C                577          BEQ     DS1110LSIDE
000014C4  123C 0052                578          MOVE.B  #82,D1
000014C8  4E4F                     579          TRAP    #15
000014CA  6000 0008                580          BRA     DS1110SIDEEND
000014CE                           581  
000014CE                           582  DS1110LSIDE
000014CE  123C 004C                583          MOVE.B  #76,D1
000014D2  4E4F                     584          TRAP    #15
000014D4                           585          
000014D4                           586  DS1110SIDEEND
000014D4  4E75                     587          RTS 
000014D6                           588  
000014D6                           589  DS1110MEM
000014D6                           590                                  * Shift type is instead stored in D2
000014D6                           591          
000014D6  E75C                     592          ROL.W   #3,D4           * [D6] Reading address mode
000014D8  1C04                     593          MOVE.B  D4,D6
000014DA  0206 0007                594          ANDI.B  #%111,D6
000014DE                           595          
000014DE  E75C                     596          ROL.W   #3,D4           * [D1] Reading address register
000014E0  1204                     597          MOVE.B  D4,D1
000014E2  0201 0007                598          ANDI.B  #%111,D1
000014E6                           599          
000014E6  B43C 0001                600          CMP.B   #%01,D2
000014EA  67A8                     601          BEQ     DLS
000014EC  B43C 0000                602          CMP.B   #%00,D2
000014F0  67AE                     603          BEQ     DAS
000014F2  B43C 0003                604          CMP.B   #%11,D2
000014F6  67B4                     605          BEQ     DRO
000014F8  6000 00F6                606          BRA     DSEND
000014FC                           607          
000014FC                           608          
000014FC                           609  DS1110MEMA
000014FC                           610          
000014FC  BC3C 0002                611          CMP.B   #%010,D6
00001500  6700 002E                612          BEQ     DS1110MEM_REG
00001504  BC3C 0003                613          CMP.B   #%011,D6
00001508  6700 004C                614          BEQ     DS1110MEM_INC
0000150C  BC3C 0004                615          CMP.B   #%100,D6
00001510  6700 006A                616          BEQ     DS1110MEM_DEC
00001514                           617          
00001514  BC3C 0007                618          CMP.B   #%111,D6
00001518  6600 00CA                619          BNE     DSERR
0000151C                           620          
0000151C  B23C 0000                621          CMP.B   #%000,D1
00001520  6700 0080                622          BEQ     DS1110MEM_CUSW
00001524  B23C 0001                623          CMP.B   #%001,D1
00001528  6700 0096                624          BEQ     DS1110MEM_CUSL
0000152C                           625          
0000152C  6000 00C2                626          BRA     DSEND
00001530                           627  
00001530                           628  DS1110MEM_REG
00001530  43F9 00001787            629          LEA     OPENPTR,A1
00001536  4E4F                     630          TRAP    #15
00001538                           631          
00001538  43F9 00001781            632          LEA     VALA,A1
0000153E  4E4F                     633          TRAP    #15
00001540                           634          
00001540  103C 0003                635          MOVE.B  #3,D0
00001544  4E4F                     636          TRAP    #15
00001546  103C 000E                637          MOVE.B  #14,D0
0000154A                           638          
0000154A  43F9 0000178C            639          LEA     CLOSEPTR,A1
00001550  4E4F                     640          TRAP    #15
00001552                           641          
00001552  6000 009C                642          BRA     DSEND
00001556                           643  
00001556                           644  DS1110MEM_INC
00001556  43F9 00001787            645          LEA     OPENPTR,A1
0000155C  4E4F                     646          TRAP    #15
0000155E                           647          
0000155E  43F9 00001781            648          LEA     VALA,A1
00001564  4E4F                     649          TRAP    #15
00001566                           650          
00001566  103C 0003                651          MOVE.B  #3,D0
0000156A  4E4F                     652          TRAP    #15
0000156C  103C 000E                653          MOVE.B  #14,D0
00001570                           654          
00001570  43F9 0000178E            655          LEA     CLOSEIPTR,A1
00001576  4E4F                     656          TRAP    #15
00001578                           657          
00001578  6000 0076                658          BRA     DSEND
0000157C                           659  
0000157C                           660  DS1110MEM_DEC
0000157C  43F9 00001789            661          LEA     OPENDPTR,A1
00001582  4E4F                     662          TRAP    #15
00001584                           663          
00001584  43F9 00001781            664          LEA     VALA,A1
0000158A  4E4F                     665          TRAP    #15
0000158C                           666          
0000158C  103C 0003                667          MOVE.B  #3,D0
00001590  4E4F                     668          TRAP    #15
00001592  103C 000E                669          MOVE.B  #14,D0
00001596                           670          
00001596  43F9 0000178C            671          LEA     CLOSEPTR,A1
0000159C  4E4F                     672          TRAP    #15
0000159E                           673          
0000159E  6000 0050                674          BRA     DSEND
000015A2                           675          
000015A2                           676  DS1110MEM_CUSW
000015A2  43F9 00001793            677          LEA     DOLLAR,A1
000015A8  4E4F                     678          TRAP    #15
000015AA  341A                     679          MOVE.W  (A2)+,D2
000015AC  48E7 0400                680          MOVEM.L D5,-(SP)
000015B0  1A3C 0030                681          MOVE.B  #48,D5
000015B4  4EB8 1144                682          JSR     HEXOUT
000015B8  4CDF 0020                683          MOVEM.L (SP)+,D5
000015BC  6000 0032                684          BRA     DSEND
000015C0                           685          
000015C0                           686  DS1110MEM_CUSL
000015C0  43F9 00001793            687          LEA     DOLLAR,A1
000015C6  4E4F                     688          TRAP    #15
000015C8  241A                     689          MOVE.L  (A2)+,D2
000015CA  48E7 0400                690          MOVEM.L D5,-(SP)
000015CE  1A3C 0030                691          MOVE.B  #48,D5
000015D2  4EB8 1144                692          JSR     HEXOUT
000015D6  4CDF 0020                693          MOVEM.L (SP)+,D5
000015DA  6000 0014                694          BRA     DSEND
000015DE                           695          
000015DE                           696  
000015DE                           697  * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
000015DE                           698  
000015DE  4E71                     699  DS1111  NOP
000015E0  6000 000E                700          BRA     DSEND
000015E4                           701  
000015E4                           702  *DS Final
000015E4                           703  *--------------------------------------------------------------------------------------------------
000015E4                           704  
000015E4  103C 000E                705  DSERR   MOVE.B  #14,D0
000015E8  43F9 0000176F            706          LEA     ERRM,A1
000015EE  4E4F                     707          TRAP    #15
000015F0                           708  
000015F0  4E75                     709  DSEND   RTS
000015F2                           710  
000015F2  103C 0009                711  END     MOVE.B  #9,D0
000015F6  4E4F                     712          TRAP    #15
000015F8                           713  
000015F8                           714  *Initialized Variables
000015F8                           715  *--------------------------------------------------------------------------------------------------
000015F8                           716  
000015F8  =0000000D                717  CR      EQU     $0D
000015F8  =0000000A                718  LF      EQU     $0A
000015F8  =00000009                719  HT      EQU     $09
000015F8                           720  
000015F8= 54 68 69 73 20 69 ...    721  INTRO   DC.B    'This is a program that will disassemble machine code stored in memory!',CR,LF,'Inputs are read as hex form of longword size (up to 8 chars)!',CR,LF,0
00001680= 45 6E 74 65 72 20 ...    722  ASTART  DC.B    'Enter start address: $',0
00001697= 45 6E 74 65 72 20 ...    723  AEND    DC.B    'Enter end address:   $',0
000016AE                           724  
000016AE= 45 52 52 4F 52 3A ...    725  VERR1M  DC.B    'ERROR: End address must not be less than start address!',CR,LF,0
000016E8= 45 52 52 4F 52 3A ...    726  VERR2M  DC.B    'ERROR: Invalid characters in input!',CR,LF,0
0000170E= 45 52 52 4F 52 3A ...    727  VERR3M  DC.B    'ERROR: Input cannot be greater than 8 characters!',CR,LF,0
00001742                           728  
00001742= 0D 0A 00                 729  LB      DC.B    CR,LF,0
00001745                           730  
00001745= 09 00                    731  HTM     DC.B    HT,0
00001747                           732  
00001747= 20 00                    733  SM1     DC.B    ' ',0
00001749= 20 20 00                 734  SM2     DC.B    '  ',0
0000174C= 20 20 20 00              735  SM3     DC.B    '   ',0
00001750= 20 20 20 20 00           736  SM4     DC.B    '    ',0
00001755= 20 20 20 20 20 00        737  SM5     DC.B    '     ',0
0000175B= 20 20 20 20 20 20 00     738  SM6     DC.B    '      ',0
00001762= 20 20 20 20 20 20 ...    739  SM7     DC.B    '       ',0
0000176A                           740  
0000176A= 54 45 53 54 00           741  TESTM   DC.B    'TEST',0
0000176F                           742  
0000176F= 20 20 2A 45 52 52 ...    743  ERRM    DC.B    '  *ERROR',0
00001778                           744  
00001778= 2E 42 00                 745  MODEB   DC.B    '.B',0
0000177B= 2E 57 00                 746  MODEW   DC.B    '.W',0
0000177E= 2E 4C 00                 747  MODEL   DC.B    '.L',0
00001781                           748  
00001781= 41 00                    749  VALA    DC.B    'A',0
00001783= 44 00                    750  VALD    DC.B    'D',0
00001785= 23 00                    751  VALN    DC.B    '#',0
00001787                           752  
00001787= 28 00                    753  OPENPTR     DC.B    '(',0
00001789= 2D 28 00                 754  OPENDPTR    DC.B    '-(',0
0000178C                           755  
0000178C= 29 00                    756  CLOSEPTR    DC.B    ')',0
0000178E= 29 2B 00                 757  CLOSEIPTR   DC.B    ')+',0
00001791                           758  
00001791= 2C 00                    759  COMMA   DC.B    ',',0
00001793= 24 00                    760  DOLLAR  DC.B    '$',0
00001795                           761  
00001795= 4E 4F 50 00              762  NOPM    DC.B    'NOP',0
00001799                           763  
00001799= 4D 4F 56 45 00           764  MOVEM   DC.B    'MOVE',0
0000179E                           765  
0000179E= 41 44 44 00              766  ADDM    DC.B    'ADD',0
000017A2                           767  
000017A2= 53 55 42 00              768  SUBM    DC.B    'SUB',0
000017A6                           769  
000017A6= 4C 45 41 00              770  LEAM    DC.B    'LEA',0
000017AA                           771  
000017AA= 41 4E 44 00              772  ANDM    DC.B    'AND',0
000017AE= 4F 52 00                 773  ORM     DC.B    'OR',0
000017B1= 4E 4F 54 00              774  NOTM    DC.B    'NOT',0
000017B5                           775  
000017B5= 4C 53 00                 776  LSM    DC.B    'LS',0
000017B8= 4C 53 52 00              777  LSRM    DC.B    'LSR',0
000017BC= 41 53 00                 778  ASM    DC.B    'AS',0
000017BF= 41 53 52 00              779  ASRM    DC.B    'ASR',0
000017C3                           780  
000017C3= 52 4F 00                 781  ROM    DC.B    'RO',0
000017C6= 52 4F 52 00              782  RORM    DC.B    'ROR',0
000017CA                           783  
000017CA= 42 47 54 00              784  BGTM    DC.B    'BGT',0
000017CE= 42 4C 45 00              785  BLEM    DC.B    'BLE',0
000017D2= 42 45 51 00              786  BEQM    DC.B    'BEQ',0
000017D6                           787  
000017D6= 4A 53 52 00              788  JSRM    DC.B    'JSR',0
000017DA= 52 54 53 00              789  RTSM    DC.B    'RTS',0
000017DE                           790  
000017DE= 42 52 41 00              791  BRAM    DC.B    'BRA',0
000017E2                           792  
000017E2                           793  
000017E2                           794      END    START        ; last line of so

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDM                179E
AEND                1697
ANDM                17AA
ASM                 17BC
ASRM                17BF
ASTART              1680
BEQM                17D2
BGTM                17CA
BLEM                17CE
BRAM                17DE
CLOSEIPTR           178E
CLOSEPTR            178C
COMMA               1791
CR                  D
DADDA               13C2
DADDQ               136E
DAND                1208
DAS                 14A0
DBCC                137A
DBRA                1380
DISASM              11D6
DJSR                12A6
DJSR_CUSL           133E
DJSR_CUSW           1320
DJSR_REG            12FA
DLS                 1494
DMOVE2              120A
DMOVEA              120C
DMOVEQ              138C
DNOP                1294
DNOT                12A0
DOLLAR              1793
DOR                 1398
DRO                 14AC
DRTS                135C
DS0                 11E0
DS00                11F4
DS01                120E
DS010               122C
DS0100              1268
DS0101              1368
DS011               1236
DS0110              1374
DS0111              1386
DS1                 11EA
DS10                1218
DS100               1240
DS1000              1392
DS1001              139E
DS101               124A
DS1010              13AA
DS1011              13B0
DS11                1222
DS110               1254
DS1100              13B6
DS1101              13BC
DS111               125E
DS1110              13C8
DS1110A             141C
DS1110B             1456
DS1110LSIDE         14CE
DS1110MEM           14D6
DS1110MEMA          14FC
DS1110MEM_CUSL      15C0
DS1110MEM_CUSW      15A2
DS1110MEM_DEC       157C
DS1110MEM_INC       1556
DS1110MEM_REG       1530
DS1110SIDE          14B8
DS1110SIDEEND       14D4
DS1110_REG_D        148A
DS1110_REG_I        1480
DS1111              15DE
DSEND               15F0
DSERR               15E4
DSUB                13A4
END                 15F2
ERRM                176F
HDONE               118A
HEXOUT              1144
HHEX                115E
HNUM                1166
HSKIP2              1174
HSKIP3              1188
HSTEP               114C
HSTEP2              116A
HT                  9
HTM                 1745
INTRO               15F8
JSRM                17D6
LB                  1742
LEAM                17A6
LF                  A
LSM                 17B5
LSRM                17B8
MODEB               1778
MODEL               177E
MODEW               177B
MOVEM               1799
NOPM                1795
NOTM                17B1
OPENDPTR            1789
OPENPTR             1787
ORM                 17AE
PARSE               1050
PCAPS               107C
PDONE               10A6
PHEX                106C
PNUM                1084
PSTEP               1058
PSTEP2              1088
RCONT               1130
READLN              10E2
ROM                 17C3
RORM                17C6
RPAUSE              1138
RSTEP               10E8
RTSM                17DA
SDONE               11D2
SIZE                118C
SIZEB               11B4
SIZEL               11C8
SIZEW               11BE
SM1                 1747
SM2                 1749
SM3                 174C
SM4                 1750
SM5                 1755
SM6                 175B
SM7                 1762
SRET                11D4
START               1000
STARTER             0
SUBM                17A2
TESTM               176A
VALA                1781
VALD                1783
VALN                1785
VERR1               10B2
VERR1M              16AE
VERR2               10C2
VERR2M              16E8
VERR3               10D2
VERR3M              170E
VINPUT              10A8
